{"version":3,"file":"hdwallet.js","sources":["../lib.esm/info.js","../lib.esm/exceptions.js","../node_modules/@noble/hashes/esm/crypto.js","../node_modules/@noble/hashes/esm/utils.js","../lib.esm/utils.js","../lib.esm/consts.js","../node_modules/@noble/hashes/esm/hmac.js","../node_modules/@taichunmin/crc/dist/mjs/index.mjs","../node_modules/@noble/hashes/esm/_md.js","../node_modules/@noble/hashes/esm/_u64.js","../node_modules/@noble/hashes/esm/sha2.js","../node_modules/@noble/hashes/esm/sha3.js","../node_modules/@noble/hashes/esm/_blake.js","../node_modules/@noble/hashes/esm/blake2.js","../node_modules/@noble/hashes/esm/pbkdf2.js","../node_modules/@noble/hashes/esm/legacy.js","../node_modules/@stablelib/binary/lib/binary.js","../node_modules/@stablelib/wipe/lib/wipe.js","../node_modules/@stablelib/chacha/lib/chacha.js","../node_modules/@stablelib/constant-time/lib/constant-time.js","../node_modules/@stablelib/poly1305/lib/poly1305.js","../node_modules/@stablelib/chacha20poly1305/lib/chacha20poly1305.js","../lib.esm/crypto.js","../lib.esm/cryptocurrencies/cryptocurrency.js","../lib.esm/slip44.js","../lib.esm/eccs/point.js","../lib.esm/eccs/public-key.js","../lib.esm/eccs/private-key.js","../lib.esm/eccs/ecc.js","../node_modules/@noble/curves/esm/utils.js","../node_modules/@noble/curves/esm/abstract/modular.js","../node_modules/@noble/curves/esm/abstract/curve.js","../node_modules/@noble/curves/esm/abstract/edwards.js","../node_modules/@noble/curves/esm/ed25519.js","../lib.esm/eccs/slip10/ed25519/point.js","../lib.esm/eccs/slip10/ed25519/public-key.js","../lib.esm/eccs/slip10/ed25519/private-key.js","../lib.esm/eccs/slip10/ed25519/index.js","../lib.esm/eccs/slip10/ed25519/blake2b/point.js","../lib.esm/eccs/slip10/ed25519/blake2b/public-key.js","../node_modules/blakejs/util.js","../node_modules/blakejs/blake2b.js","../node_modules/tweetnacl-blake2b/nacl-fast.js","../lib.esm/eccs/slip10/ed25519/blake2b/private-key.js","../lib.esm/eccs/slip10/ed25519/blake2b/index.js","../lib.esm/eccs/slip10/ed25519/monero/point.js","../lib.esm/eccs/slip10/ed25519/monero/public-key.js","../lib.esm/libs/ed25519-utils.js","../lib.esm/eccs/slip10/ed25519/monero/private-key.js","../lib.esm/eccs/slip10/ed25519/monero/index.js","../node_modules/@noble/curves/esm/abstract/weierstrass.js","../node_modules/@noble/curves/esm/_shortw_utils.js","../node_modules/@noble/curves/esm/nist.js","../node_modules/@noble/curves/esm/p256.js","../lib.esm/eccs/slip10/nist256p1/point.js","../lib.esm/eccs/slip10/nist256p1/public-key.js","../lib.esm/eccs/slip10/nist256p1/private-key.js","../lib.esm/eccs/slip10/nist256p1/index.js","../node_modules/@noble/curves/esm/secp256k1.js","../lib.esm/eccs/slip10/secp256k1/point.js","../lib.esm/eccs/slip10/secp256k1/public-key.js","../lib.esm/eccs/slip10/secp256k1/private-key.js","../lib.esm/eccs/slip10/secp256k1/index.js","../lib.esm/eccs/kholaw/ed25519/point.js","../lib.esm/eccs/kholaw/ed25519/public-key.js","../lib.esm/eccs/kholaw/ed25519/private-key.js","../lib.esm/eccs/kholaw/ed25519/index.js","../lib.esm/eccs/index.js","../lib.esm/cryptocurrencies/adcoin.js","../lib.esm/cryptocurrencies/akashnetwork.js","../lib.esm/cryptocurrencies/algorand.js","../lib.esm/cryptocurrencies/anon.js","../lib.esm/cryptocurrencies/aptos.js","../lib.esm/cryptocurrencies/arbitum.js","../lib.esm/cryptocurrencies/argoneum.js","../lib.esm/cryptocurrencies/artax.js","../lib.esm/cryptocurrencies/aryacoin.js","../lib.esm/cryptocurrencies/asiacoin.js","../lib.esm/cryptocurrencies/auroracoin.js","../lib.esm/cryptocurrencies/avalanche.js","../lib.esm/cryptocurrencies/avian.js","../lib.esm/cryptocurrencies/axe.js","../lib.esm/cryptocurrencies/axelar.js","../lib.esm/cryptocurrencies/bandprotocol.js","../lib.esm/cryptocurrencies/bata.js","../lib.esm/cryptocurrencies/beetlecoin.js","../lib.esm/cryptocurrencies/belacoin.js","../lib.esm/cryptocurrencies/binance.js","../lib.esm/cryptocurrencies/bitcloud.js","../lib.esm/cryptocurrencies/bitcoin.js","../lib.esm/cryptocurrencies/bitcoinatom.js","../lib.esm/cryptocurrencies/bitcoincash.js","../lib.esm/cryptocurrencies/bitcoincashslp.js","../lib.esm/cryptocurrencies/bitcoingold.js","../lib.esm/cryptocurrencies/bitcoingreen.js","../lib.esm/cryptocurrencies/bitcoinplus.js","../lib.esm/cryptocurrencies/bitcoinprivate.js","../lib.esm/cryptocurrencies/bitcoinsv.js","../lib.esm/cryptocurrencies/bitcoinz.js","../lib.esm/cryptocurrencies/bitcore.js","../lib.esm/cryptocurrencies/bitsend.js","../lib.esm/cryptocurrencies/blackcoin.js","../lib.esm/cryptocurrencies/blocknode.js","../lib.esm/cryptocurrencies/blockstamp.js","../lib.esm/cryptocurrencies/bolivarcoin.js","../lib.esm/cryptocurrencies/britcoin.js","../lib.esm/cryptocurrencies/canadaecoin.js","../lib.esm/cryptocurrencies/cannacoin.js","../lib.esm/cryptocurrencies/cardano.js","../lib.esm/cryptocurrencies/celo.js","../lib.esm/cryptocurrencies/chihuahua.js","../lib.esm/cryptocurrencies/clams.js","../lib.esm/cryptocurrencies/clubcoin.js","../lib.esm/cryptocurrencies/compcoin.js","../lib.esm/cryptocurrencies/cosmos.js","../lib.esm/cryptocurrencies/cpuchain.js","../lib.esm/cryptocurrencies/cranepay.js","../lib.esm/cryptocurrencies/crave.js","../lib.esm/cryptocurrencies/dash.js","../lib.esm/cryptocurrencies/deeponion.js","../lib.esm/cryptocurrencies/defcoin.js","../lib.esm/cryptocurrencies/denarius.js","../lib.esm/cryptocurrencies/diamond.js","../lib.esm/cryptocurrencies/digibyte.js","../lib.esm/cryptocurrencies/digitalcoin.js","../lib.esm/cryptocurrencies/divi.js","../lib.esm/cryptocurrencies/dogecoin.js","../lib.esm/cryptocurrencies/dydx.js","../lib.esm/cryptocurrencies/ecash.js","../lib.esm/cryptocurrencies/ecoin.js","../lib.esm/cryptocurrencies/edrcoin.js","../lib.esm/cryptocurrencies/egulden.js","../lib.esm/cryptocurrencies/einsteinium.js","../lib.esm/cryptocurrencies/elastos.js","../lib.esm/cryptocurrencies/energi.js","../lib.esm/cryptocurrencies/eos.js","../lib.esm/cryptocurrencies/ergo.js","../lib.esm/cryptocurrencies/ethereum.js","../lib.esm/cryptocurrencies/europecoin.js","../lib.esm/cryptocurrencies/evrmore.js","../lib.esm/cryptocurrencies/exclusivecoin.js","../lib.esm/cryptocurrencies/fantom.js","../lib.esm/cryptocurrencies/feathercoin.js","../lib.esm/cryptocurrencies/fetchai.js","../lib.esm/cryptocurrencies/filecoin.js","../lib.esm/cryptocurrencies/firo.js","../lib.esm/cryptocurrencies/firstcoin.js","../lib.esm/cryptocurrencies/fix.js","../lib.esm/cryptocurrencies/flashcoin.js","../lib.esm/cryptocurrencies/flux.js","../lib.esm/cryptocurrencies/foxdcoin.js","../lib.esm/cryptocurrencies/fujicoin.js","../lib.esm/cryptocurrencies/gamecredits.js","../lib.esm/cryptocurrencies/gcrcoin.js","../lib.esm/cryptocurrencies/gobyte.js","../lib.esm/cryptocurrencies/gridcoin.js","../lib.esm/cryptocurrencies/groestlcoin.js","../lib.esm/cryptocurrencies/gulden.js","../lib.esm/cryptocurrencies/harmony.js","../lib.esm/cryptocurrencies/helleniccoin.js","../lib.esm/cryptocurrencies/hempcoin.js","../lib.esm/cryptocurrencies/horizen.js","../lib.esm/cryptocurrencies/huobitoken.js","../lib.esm/cryptocurrencies/hush.js","../lib.esm/cryptocurrencies/icon.js","../lib.esm/cryptocurrencies/injective.js","../lib.esm/cryptocurrencies/insanecoin.js","../lib.esm/cryptocurrencies/internetofpeople.js","../lib.esm/cryptocurrencies/irisnet.js","../lib.esm/cryptocurrencies/ixcoin.js","../lib.esm/cryptocurrencies/jumbucks.js","../lib.esm/cryptocurrencies/kava.js","../lib.esm/cryptocurrencies/kobocoin.js","../lib.esm/cryptocurrencies/komodo.js","../lib.esm/cryptocurrencies/landcoin.js","../lib.esm/cryptocurrencies/lbrycredits.js","../lib.esm/cryptocurrencies/linx.js","../lib.esm/cryptocurrencies/litecoin.js","../lib.esm/cryptocurrencies/litecoincash.js","../lib.esm/cryptocurrencies/litecoinz.js","../lib.esm/cryptocurrencies/lkrcoin.js","../lib.esm/cryptocurrencies/lynx.js","../lib.esm/cryptocurrencies/mazacoin.js","../lib.esm/cryptocurrencies/megacoin.js","../lib.esm/cryptocurrencies/metis.js","../lib.esm/cryptocurrencies/minexcoin.js","../lib.esm/cryptocurrencies/monacoin.js","../lib.esm/cryptocurrencies/monero.js","../lib.esm/cryptocurrencies/monk.js","../lib.esm/cryptocurrencies/multiversx.js","../lib.esm/cryptocurrencies/myriadcoin.js","../lib.esm/cryptocurrencies/namecoin.js","../lib.esm/cryptocurrencies/nano.js","../lib.esm/cryptocurrencies/navcoin.js","../lib.esm/cryptocurrencies/near.js","../lib.esm/cryptocurrencies/neblio.js","../lib.esm/cryptocurrencies/neo.js","../lib.esm/cryptocurrencies/neoscoin.js","../lib.esm/cryptocurrencies/neurocoin.js","../lib.esm/cryptocurrencies/neutron.js","../lib.esm/cryptocurrencies/newyorkcoin.js","../lib.esm/cryptocurrencies/ninechronicles.js","../lib.esm/cryptocurrencies/nix.js","../lib.esm/cryptocurrencies/novacoin.js","../lib.esm/cryptocurrencies/nubits.js","../lib.esm/cryptocurrencies/nushares.js","../lib.esm/cryptocurrencies/okcash.js","../lib.esm/cryptocurrencies/oktchain.js","../lib.esm/cryptocurrencies/omni.js","../lib.esm/cryptocurrencies/onix.js","../lib.esm/cryptocurrencies/ontology.js","../lib.esm/cryptocurrencies/optimism.js","../lib.esm/cryptocurrencies/osmosis.js","../lib.esm/cryptocurrencies/particl.js","../lib.esm/cryptocurrencies/peercoin.js","../lib.esm/cryptocurrencies/pesobit.js","../lib.esm/cryptocurrencies/phore.js","../lib.esm/cryptocurrencies/pinetwork.js","../lib.esm/cryptocurrencies/pinkcoin.js","../lib.esm/cryptocurrencies/pivx.js","../lib.esm/cryptocurrencies/polygon.js","../lib.esm/cryptocurrencies/poswcoin.js","../lib.esm/cryptocurrencies/potcoin.js","../lib.esm/cryptocurrencies/projectcoin.js","../lib.esm/cryptocurrencies/putincoin.js","../lib.esm/cryptocurrencies/qtum.js","../lib.esm/cryptocurrencies/rapids.js","../lib.esm/cryptocurrencies/ravencoin.js","../lib.esm/cryptocurrencies/reddcoin.js","../lib.esm/cryptocurrencies/ripple.js","../lib.esm/cryptocurrencies/ritocoin.js","../lib.esm/cryptocurrencies/rsk.js","../lib.esm/cryptocurrencies/rubycoin.js","../lib.esm/cryptocurrencies/safecoin.js","../lib.esm/cryptocurrencies/saluscoin.js","../lib.esm/cryptocurrencies/scribe.js","../lib.esm/cryptocurrencies/secret.js","../lib.esm/cryptocurrencies/shadowcash.js","../lib.esm/cryptocurrencies/shentu.js","../lib.esm/cryptocurrencies/slimcoin.js","../lib.esm/cryptocurrencies/smileycoin.js","../lib.esm/cryptocurrencies/solana.js","../lib.esm/cryptocurrencies/solarcoin.js","../lib.esm/cryptocurrencies/stafi.js","../lib.esm/cryptocurrencies/stash.js","../lib.esm/cryptocurrencies/stellar.js","../lib.esm/cryptocurrencies/stratis.js","../lib.esm/cryptocurrencies/sugarchain.js","../lib.esm/cryptocurrencies/sui.js","../lib.esm/cryptocurrencies/syscoin.js","../lib.esm/cryptocurrencies/terra.js","../lib.esm/cryptocurrencies/tezos.js","../lib.esm/cryptocurrencies/theta.js","../lib.esm/cryptocurrencies/thoughtai.js","../lib.esm/cryptocurrencies/toacoin.js","../lib.esm/cryptocurrencies/tron.js","../lib.esm/cryptocurrencies/twins.js","../lib.esm/cryptocurrencies/ultimatesecurecash.js","../lib.esm/cryptocurrencies/unobtanium.js","../lib.esm/cryptocurrencies/vcash.js","../lib.esm/cryptocurrencies/vechain.js","../lib.esm/cryptocurrencies/verge.js","../lib.esm/cryptocurrencies/vertcoin.js","../lib.esm/cryptocurrencies/viacoin.js","../lib.esm/cryptocurrencies/vivo.js","../lib.esm/cryptocurrencies/voxels.js","../lib.esm/cryptocurrencies/vpncoin.js","../lib.esm/cryptocurrencies/wagerr.js","../lib.esm/cryptocurrencies/whitecoin.js","../lib.esm/cryptocurrencies/wincoin.js","../lib.esm/cryptocurrencies/xinfin.js","../lib.esm/cryptocurrencies/xuez.js","../lib.esm/cryptocurrencies/ycash.js","../lib.esm/cryptocurrencies/zcash.js","../lib.esm/cryptocurrencies/zclassic.js","../lib.esm/cryptocurrencies/zetacoin.js","../lib.esm/cryptocurrencies/zilliqa.js","../lib.esm/cryptocurrencies/zoobc.js","../lib.esm/cryptocurrencies/index.js","../lib.esm/entropies/entropy.js","../lib.esm/entropies/algorand.js","../lib.esm/entropies/bip39.js","../lib.esm/entropies/electrum/v1.js","../lib.esm/entropies/electrum/v2.js","../lib.esm/entropies/monero.js","../lib.esm/entropies/index.js","../lib.esm/mnemonics/mnemonic.js","../lib.esm/mnemonics/algorand/wordlists/english.js","../lib.esm/mnemonics/algorand/mnemonic.js","../lib.esm/mnemonics/bip39/wordlists/chinese-simplified.js","../lib.esm/mnemonics/bip39/wordlists/chinese-traditional.js","../lib.esm/mnemonics/bip39/wordlists/czech.js","../lib.esm/mnemonics/bip39/wordlists/english.js","../lib.esm/mnemonics/bip39/wordlists/french.js","../lib.esm/mnemonics/bip39/wordlists/italian.js","../lib.esm/mnemonics/bip39/wordlists/japanese.js","../lib.esm/mnemonics/bip39/wordlists/korean.js","../lib.esm/mnemonics/bip39/wordlists/portuguese.js","../lib.esm/mnemonics/bip39/wordlists/russian.js","../lib.esm/mnemonics/bip39/wordlists/spanish.js","../lib.esm/mnemonics/bip39/wordlists/turkish.js","../lib.esm/mnemonics/bip39/mnemonic.js","../lib.esm/mnemonics/electrum/v1/wordlists/english.js","../lib.esm/mnemonics/electrum/v1/mnemonic.js","../lib.esm/mnemonics/electrum/v2/wordlists/chinese-simplified.js","../lib.esm/mnemonics/electrum/v2/wordlists/english.js","../lib.esm/mnemonics/electrum/v2/wordlists/portuguese.js","../lib.esm/mnemonics/electrum/v2/wordlists/spanish.js","../lib.esm/mnemonics/electrum/v2/mnemonic.js","../lib.esm/mnemonics/monero/wordlists/chinese-simplified.js","../lib.esm/mnemonics/monero/wordlists/dutch.js","../lib.esm/mnemonics/monero/wordlists/english.js","../lib.esm/mnemonics/monero/wordlists/french.js","../lib.esm/mnemonics/monero/wordlists/german.js","../lib.esm/mnemonics/monero/wordlists/italian.js","../lib.esm/mnemonics/monero/wordlists/japanese.js","../lib.esm/mnemonics/monero/wordlists/portuguese.js","../lib.esm/mnemonics/monero/wordlists/russian.js","../lib.esm/mnemonics/monero/wordlists/spanish.js","../lib.esm/mnemonics/monero/mnemonic.js","../lib.esm/mnemonics/index.js","../lib.esm/seeds/seed.js","../lib.esm/seeds/algorand.js","../lib.esm/seeds/bip39.js","../node_modules/cbor2/lib/constants.js","../node_modules/cbor2/lib/tag.js","../node_modules/cbor2/lib/box.js","../node_modules/cbor2/lib/utils.js","../node_modules/cbor2/lib/typeEncoderMap.js","../node_modules/cbor2/lib/sorts.js","../node_modules/cbor2/lib/writer.js","../node_modules/cbor2/lib/float.js","../node_modules/@cto.af/wtf8/lib/errors.js","../node_modules/@cto.af/wtf8/lib/const.js","../node_modules/@cto.af/wtf8/lib/decode.js","../node_modules/@cto.af/wtf8/lib/encode.js","../node_modules/cbor2/lib/encoder.js","../node_modules/cbor2/lib/options.js","../node_modules/cbor2/lib/simple.js","../node_modules/cbor2/lib/decodeStream.js","../node_modules/cbor2/lib/container.js","../node_modules/cbor2/lib/diagnostic.js","../node_modules/cbor2/lib/comment.js","../node_modules/cbor2/lib/types.js","../node_modules/cbor2/lib/decoder.js","../lib.esm/seeds/cardano.js","../lib.esm/seeds/electrum/v1.js","../lib.esm/seeds/electrum/v2.js","../lib.esm/seeds/monero.js","../lib.esm/seeds/index.js","../lib.esm/derivations/derivation.js","../lib.esm/derivations/custom.js","../lib.esm/derivations/bip44.js","../lib.esm/derivations/bip49.js","../lib.esm/derivations/bip84.js","../lib.esm/derivations/bip86.js","../lib.esm/derivations/cip1852.js","../lib.esm/derivations/electrum.js","../lib.esm/derivations/monero.js","../lib.esm/derivations/hdw.js","../lib.esm/derivations/index.js","../lib.esm/hds/hd.js","../lib.esm/addresses/address.js","../lib.esm/libs/base58.js","../lib.esm/addresses/p2pkh.js","../lib.esm/addresses/p2sh.js","../lib.esm/libs/segwit-bech32.js","../lib.esm/addresses/p2tr.js","../lib.esm/addresses/p2wpkh.js","../lib.esm/addresses/p2wpkh-in-p2sh.js","../lib.esm/addresses/p2wsh.js","../lib.esm/addresses/p2wsh-in-p2sh.js","../lib.esm/addresses/ethereum.js","../lib.esm/libs/bech32.js","../lib.esm/addresses/cosmos.js","../lib.esm/addresses/xinfin.js","../lib.esm/addresses/tron.js","../lib.esm/addresses/ripple.js","../node_modules/base32.js/base32.js","../lib.esm/libs/base32.js","../lib.esm/addresses/filecoin.js","../lib.esm/addresses/avalanche.js","../lib.esm/addresses/eos.js","../lib.esm/addresses/ergo.js","../lib.esm/addresses/icon.js","../lib.esm/addresses/okt-chain.js","../lib.esm/addresses/harmony.js","../lib.esm/addresses/zilliqa.js","../lib.esm/addresses/injective.js","../lib.esm/addresses/cardano.js","../lib.esm/addresses/monero.js","../lib.esm/addresses/nano.js","../lib.esm/addresses/neo.js","../lib.esm/addresses/algorand.js","../lib.esm/addresses/multiversx.js","../lib.esm/addresses/solana.js","../lib.esm/addresses/stellar.js","../lib.esm/addresses/tezos.js","../lib.esm/addresses/sui.js","../lib.esm/addresses/aptos.js","../lib.esm/addresses/near.js","../lib.esm/addresses/index.js","../lib.esm/wif.js","../lib.esm/keys.js","../lib.esm/hds/bip32.js","../lib.esm/hds/bip44.js","../lib.esm/hds/bip49.js","../lib.esm/hds/bip84.js","../lib.esm/hds/bip141.js","../lib.esm/hds/bip86.js","../lib.esm/hds/cardano.js","../lib.esm/hds/electrum/v1.js","../lib.esm/hds/electrum/v2.js","../lib.esm/hds/monero.js","../lib.esm/hds/index.js","../lib.esm/hdwallet.js","../lib.esm/index.js"],"sourcesContent":["// SPDX-License-Identifier: MIT\nexport const __name__ = 'hdwallet';\nexport const __version__ = '1.0.0-beta.0';\nexport const __license__ = 'MIT';\nexport const __author__ = 'Meheret Tesfaye Batu';\nexport const __email__ = 'meherett.batu@gmail.com';\nexport const __documentation__ = 'https://hdwallet.readthedocs.com';\nexport const __description__ = 'A complete Hierarchical Deterministic (HD) Wallet generator for 200+ cryptocurrencies, built with TypeScript.';\nexport const __url__ = 'https://hdwallet.io';\nexport const __source__ = 'https://github.com/hdwallet-io/hdwallet.js';\nexport const __changelog__ = `${__source__}/blob/master/CHANGELOG.md`;\nexport const __tracker__ = `${__source__}/issues`;\nexport const __keywords__ = [\n    'ecc', 'kholaw', 'slip10', 'ed25519', 'nist256p1', 'secp256k1',\n    'hd', 'bip32', 'bip44', 'bip49', 'bip84', 'bip86', 'bip141', 'monero', 'cardano',\n    'entropy', 'mnemonic', 'seed', 'bip39', 'algorand', 'electrum',\n    'cryptocurrencies', 'bitcoin', 'ethereum', 'cryptography', 'cli', 'cip1852'\n];\nexport const __websites__ = [\n    'https://talonlab.org',\n    'https://talonlab.gitbook.io/hdwallet',\n    __documentation__,\n    'https://hdwallet.online',\n    'https://hd.wallet',\n    __url__\n];\n//# sourceMappingURL=info.js.map","// SPDX-License-Identifier: MIT\nexport class BaseError extends Error {\n    constructor(message, options) {\n        if ((options?.expected || options?.got) && options?.detail) {\n            super(`${message}, (expected: ${options?.expected} | got: ${options?.got}) ${options?.detail}`);\n        }\n        else if (options?.expected || options?.got) {\n            super(`${message}, (expected: ${options?.expected} | got: ${options?.got})`);\n        }\n        else if (options?.detail) {\n            super(`${message} ${options?.detail}`);\n        }\n        else {\n            super(`${message}`);\n        }\n    }\n}\nexport class TypeError extends BaseError {\n}\nexport class EntropyError extends BaseError {\n}\nexport class MnemonicError extends BaseError {\n}\nexport class SeedError extends BaseError {\n}\nexport class ECCError extends BaseError {\n}\nexport class ExtendedKeyError extends BaseError {\n}\nexport class XPrivateKeyError extends BaseError {\n}\nexport class XPublicKeyError extends BaseError {\n}\nexport class PrivateKeyError extends BaseError {\n}\nexport class WIFError extends BaseError {\n}\nexport class PublicKeyError extends BaseError {\n}\nexport class ChecksumError extends BaseError {\n}\nexport class SemanticError extends BaseError {\n}\nexport class NetworkError extends BaseError {\n}\nexport class AddressError extends BaseError {\n}\nexport class CryptocurrencyError extends BaseError {\n}\nexport class SymbolError extends BaseError {\n}\nexport class HDError extends BaseError {\n}\nexport class DerivationError extends BaseError {\n}\n//# sourceMappingURL=exceptions.js.map","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n/** Checks if something is Uint8Array. Be careful: nodejs Buffer will return true. */\nexport function isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n/** Asserts something is positive integer. */\nexport function anumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error('positive integer expected, got ' + n);\n}\n/** Asserts something is Uint8Array. */\nexport function abytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n/** Asserts something is hash */\nexport function ahash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.createHasher');\n    anumber(h.outputLen);\n    anumber(h.blockLen);\n}\n/** Asserts a hash instance has not been destroyed / finished */\nexport function aexists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\n/** Asserts output is properly-sized byte array */\nexport function aoutput(out, instance) {\n    abytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error('digestInto() expects output buffer of length at least ' + min);\n    }\n}\n/** Cast u8 / u16 / u32 to u8. */\nexport function u8(arr) {\n    return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** Cast u8 / u16 / u32 to u32. */\nexport function u32(arr) {\n    return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n/** Zeroize a byte array. Warning: JS provides no guarantees. */\nexport function clean(...arrays) {\n    for (let i = 0; i < arrays.length; i++) {\n        arrays[i].fill(0);\n    }\n}\n/** Create DataView of an array for easy byte-level manipulation. */\nexport function createView(arr) {\n    return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** The rotate right (circular right shift) operation for uint32 */\nexport function rotr(word, shift) {\n    return (word << (32 - shift)) | (word >>> shift);\n}\n/** The rotate left (circular left shift) operation for uint32 */\nexport function rotl(word, shift) {\n    return (word << shift) | ((word >>> (32 - shift)) >>> 0);\n}\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexport const isLE = /* @__PURE__ */ (() => new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n/** The byte swap operation for uint32 */\nexport function byteSwap(word) {\n    return (((word << 24) & 0xff000000) |\n        ((word << 8) & 0xff0000) |\n        ((word >>> 8) & 0xff00) |\n        ((word >>> 24) & 0xff));\n}\n/** Conditionally byte swap if on a big-endian platform */\nexport const swap8IfBE = isLE\n    ? (n) => n\n    : (n) => byteSwap(n);\n/** @deprecated */\nexport const byteSwapIfBE = swap8IfBE;\n/** In place byte swap for Uint32Array */\nexport function byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n    return arr;\n}\nexport const swap32IfBE = isLE\n    ? (u) => u\n    : byteSwap32;\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\nconst hasHexBuiltin = /* @__PURE__ */ (() => \n// @ts-ignore\ntypeof Uint8Array.from([]).toHex === 'function' && typeof Uint8Array.fromHex === 'function')();\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * Convert byte array to hex string. Uses built-in function, when available.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // @ts-ignore\n    if (hasHexBuiltin)\n        return bytes.toHex();\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };\nfunction asciiToBase16(ch) {\n    if (ch >= asciis._0 && ch <= asciis._9)\n        return ch - asciis._0; // '2' => 50-48\n    if (ch >= asciis.A && ch <= asciis.F)\n        return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n    if (ch >= asciis.a && ch <= asciis.f)\n        return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n    return;\n}\n/**\n * Convert hex string to byte array. Uses built-in function, when available.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // @ts-ignore\n    if (hasHexBuiltin)\n        return Uint8Array.fromHex(hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n    }\n    return array;\n}\n/**\n * There is no setImmediate in browser and setTimeout is slow.\n * Call of async fn will return Promise, which will be fullfiled only on\n * next scheduler queue processing step and this is exactly what we need.\n */\nexport const nextTick = async () => { };\n/** Returns control to thread each 'tick' ms to avoid blocking. */\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * Converts string to bytes using UTF8 encoding.\n * @example utf8ToBytes('abc') // Uint8Array.from([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error('string expected');\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Converts bytes to string using UTF8 encoding.\n * @example bytesToUtf8(Uint8Array.from([97, 98, 99])) // 'abc'\n */\nexport function bytesToUtf8(bytes) {\n    return new TextDecoder().decode(bytes);\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/**\n * Helper for KDFs: consumes uint8array or string.\n * When string is passed, does utf8 decoding, using TextDecoder.\n */\nexport function kdfInputToBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/** Copies several Uint8Arrays into one. */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n        throw new Error('options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\n/** For runtime check if class implements interface */\nexport class Hash {\n}\n/** Wraps hash function, creating an interface on top of it */\nexport function createHasher(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function createOptHasher(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function createXOFer(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport const wrapConstructor = createHasher;\nexport const wrapConstructorWithOpts = createOptHasher;\nexport const wrapXOFConstructorWithOpts = createXOFer;\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    // Legacy Node.js compatibility\n    if (crypto && typeof crypto.randomBytes === 'function') {\n        return Uint8Array.from(crypto.randomBytes(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","// SPDX-License-Identifier: MIT\nimport { randomBytes as nobleRandomBytes } from '@noble/hashes/utils';\nimport { TypeError, DerivationError } from './exceptions';\nexport function getBytes(data, encoding = 'hex') {\n    if (data == null) {\n        return new Uint8Array();\n    }\n    // Already a Uint8Array?\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    // Array of numbers?\n    if (Array.isArray(data)) {\n        return new Uint8Array(data);\n    }\n    // From here on: data is a string\n    const str = data;\n    switch (encoding) {\n        case 'hex': {\n            // Strip optional 0x/0X\n            let s = str.startsWith('0x') || str.startsWith('0X') ? str.slice(2) : str;\n            // Pad odd length\n            if (s.length % 2 === 1)\n                s = '0' + s;\n            // Split into byte-pairs and parse\n            return Uint8Array.from(s.match(/.{1,2}/g).map(b => parseInt(b, 16)));\n        }\n        case 'utf8':\n            return new TextEncoder().encode(str);\n        case 'base64':\n            // atob → binary-string → map char codes\n            return Uint8Array.from(atob(str), c => c.charCodeAt(0));\n        default:\n            throw new Error(`Unsupported encoding: ${encoding}`);\n    }\n}\nexport function toBuffer(input, encoding = 'utf8') {\n    if (typeof input === 'string') {\n        switch (encoding) {\n            case 'utf8':\n                // UTF-8 encode a string\n                return new TextEncoder().encode(input);\n            case 'base64':\n                // atob gives a binary‐string; map char→byte\n                return Uint8Array.from(atob(input), c => c.charCodeAt(0));\n            case 'hex':\n                // split every two hex digits → parse → byte\n                return Uint8Array.from(input.match(/.{1,2}/g).map(byte => parseInt(byte, 16)));\n            default:\n                throw new Error(`Unsupported encoding: ${encoding}`);\n        }\n    }\n    // If it's already an ArrayBuffer or TypedArray\n    if (input instanceof ArrayBuffer) {\n        return new Uint8Array(input);\n    }\n    if (ArrayBuffer.isView(input)) {\n        return new Uint8Array(input.buffer, input.byteOffset, input.byteLength);\n    }\n    // Fallback: try Array-like (e.g. number[])\n    return Uint8Array.from(input);\n}\nexport function hexToBytes(hex) {\n    const normalized = hex.startsWith('0x') ? hex.slice(2) : hex;\n    if (normalized.length % 2 !== 0) {\n        throw new Error(`Invalid hex string length: ${normalized.length}`);\n    }\n    const bytes = new Uint8Array(normalized.length / 2);\n    for (let i = 0; i < bytes.length; i++) {\n        bytes[i] = parseInt(normalized.substr(i * 2, 2), 16);\n    }\n    return bytes;\n}\nexport function bytesToHex(bytes, prefix = false) {\n    const hex = Array.from(bytes)\n        .map(b => b.toString(16).padStart(2, '0'))\n        .join('');\n    return prefix ? `0x${hex}` : hex;\n}\nexport function bytesToString(data) {\n    if (data == null ||\n        (typeof data === 'string' && data.length === 0) ||\n        (data instanceof Uint8Array && data.length === 0)) {\n        return '';\n    }\n    if (typeof data === 'string') {\n        // If it’s a valid even-length hex string (0–9, A–F, a–f), return it lowercased:\n        if (data.length % 2 === 0 && /^[0-9A-Fa-f]+$/.test(data)) {\n            return data.toLowerCase();\n        }\n        // Otherwise treat `data` as UTF-8 text: encode to Uint8Array then to hex\n        const encoder = new TextEncoder();\n        const bytes = encoder.encode(data);\n        return bytesToHex(bytes);\n    }\n    // Uint8Array case: just convert those bytes to hex\n    return bytesToHex(data);\n}\nexport function randomBytes(len) {\n    if (!Number.isInteger(len) || len <= 0) {\n        throw new Error('randomBytes: length must be a positive integer');\n    }\n    return nobleRandomBytes(len);\n}\nexport function bytesToInteger(bytes, littleEndian = false) {\n    // if little-endian, reverse into a new array\n    const data = littleEndian\n        ? bytes.slice().reverse()\n        : bytes;\n    return data.reduce((acc, b) => (acc << BigInt(8)) + BigInt(b), BigInt(0));\n}\nexport function ensureString(data) {\n    if (data instanceof Uint8Array) {\n        return new TextDecoder().decode(data);\n    }\n    if (typeof data === 'string') {\n        return data;\n    }\n    throw new TypeError('Invalid value for string');\n}\nexport function stringToInteger(data) {\n    let buf;\n    if (typeof data === 'string') {\n        // treat string as hex (even-length hex string)\n        buf = hexToBytes(data);\n    }\n    else {\n        buf = data;\n    }\n    let val = BigInt(0);\n    for (let i = 0; i < buf.length; i++) {\n        val = (val << BigInt(8)) + BigInt(buf[i]);\n    }\n    return val;\n}\nexport function equalBytes(a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i])\n            return false;\n    }\n    return true;\n}\nexport function integerToBytes(value, length, endianness = 'big') {\n    // coerce to BigInt without using 0n\n    let val = typeof value === 'number' ? BigInt(value) : value;\n    if (val < BigInt(0)) {\n        throw new Error(`Cannot convert negative integers: ${val}`);\n    }\n    // build big-endian array\n    const bytes = [];\n    const ZERO = BigInt(0);\n    const SHIFT = BigInt(8);\n    const MASK = BigInt(0xff);\n    while (val > ZERO) {\n        // val & 0xffn  →  val & MASK\n        bytes.unshift(Number(val & MASK));\n        // val >>= 8n   →  val = val >> SHIFT\n        val = val >> SHIFT;\n    }\n    if (bytes.length === 0) {\n        bytes.push(0);\n    }\n    // pad/truncate\n    if (length !== undefined) {\n        if (bytes.length > length) {\n            throw new Error(`Integer too large to fit in ${length} bytes`);\n        }\n        while (bytes.length < length) {\n            bytes.unshift(0);\n        }\n    }\n    const result = new Uint8Array(bytes);\n    return endianness === 'little' ? result.reverse() : result;\n}\nexport function concatBytes(...chunks) {\n    const totalLength = chunks.reduce((sum, arr) => sum + arr.length, 0);\n    const result = new Uint8Array(totalLength);\n    let offset = 0;\n    for (const chunk of chunks) {\n        result.set(chunk, offset);\n        offset += chunk.length;\n    }\n    return result;\n}\nexport function bytesToBinaryString(data, zeroPadBits = 0) {\n    const bits = Array.from(data)\n        .map((b) => b.toString(2).padStart(8, '0'))\n        .join('');\n    return bits.length < zeroPadBits ? bits.padStart(zeroPadBits, '0') : bits;\n}\nexport function binaryStringToInteger(data) {\n    const bin = typeof data === 'string'\n        ? data\n        : bytesToBinaryString(data);\n    const clean = bin.trim();\n    return BigInt('0b' + clean);\n}\nexport function integerToBinaryString(data, zeroPadBits = 0) {\n    const big = typeof data === 'bigint' ? data : BigInt(data);\n    const bits = big.toString(2);\n    return bits.length < zeroPadBits\n        ? bits.padStart(zeroPadBits, '0')\n        : bits;\n}\nexport function binaryStringToBytes(data, zeroPadByteLen = 0) {\n    const bits = typeof data === 'string'\n        ? data.trim()\n        : bytesToBinaryString(data);\n    const bitLen = bits.length;\n    const val = BigInt('0b' + bits);\n    let hex = val.toString(16);\n    if (hex.length % 2 === 1) {\n        hex = '0' + hex;\n    }\n    const byteLen = zeroPadByteLen > 0\n        ? zeroPadByteLen\n        : Math.ceil(bitLen / 8);\n    const expectedHexLen = byteLen * 2;\n    if (hex.length < expectedHexLen) {\n        hex = hex.padStart(expectedHexLen, '0');\n    }\n    return hexToBytes(hex);\n}\nexport function isAllEqual(...inputs) {\n    if (inputs.length < 2)\n        return true;\n    const getTag = (v) => {\n        if (typeof v === 'string')\n            return 'string';\n        if (typeof v === 'number')\n            return 'number';\n        if (typeof v === 'boolean')\n            return 'boolean';\n        if (Array.isArray(v)) {\n            if (v.every(i => typeof i === 'number'))\n                return 'array:number';\n            if (v.every(i => typeof i === 'string'))\n                return 'array:string';\n            if (v.every(i => typeof i === 'boolean'))\n                return 'array:boolean';\n            return 'array:unknown';\n        }\n        if (v instanceof Uint8Array)\n            return 'uint8array';\n        if (v instanceof ArrayBuffer)\n            return 'arraybuffer';\n        if (ArrayBuffer.isView(v))\n            return 'view';\n        return 'unknown';\n    };\n    const firstTag = getTag(inputs[0]);\n    if (firstTag === 'unknown' || firstTag === 'array:unknown')\n        return false;\n    for (const v of inputs.slice(1)) {\n        if (getTag(v) !== firstTag)\n            return false;\n    }\n    if (firstTag === 'string' || firstTag === 'number' || firstTag === 'boolean') {\n        const first = inputs[0];\n        return inputs.every(v => v === first);\n    }\n    if (firstTag.startsWith('array:')) {\n        const firstArr = inputs[0];\n        const len = firstArr.length;\n        return inputs.slice(1).every(item => {\n            const arr = item;\n            if (arr.length !== len)\n                return false;\n            for (let i = 0; i < len; i++) {\n                if (arr[i] !== firstArr[i])\n                    return false;\n            }\n            return true;\n        });\n    }\n    const normalize = (v) => {\n        if (v instanceof Uint8Array)\n            return v;\n        if (v instanceof ArrayBuffer)\n            return new Uint8Array(v);\n        return new Uint8Array(v.buffer, v.byteOffset, v.byteLength);\n    };\n    const firstArr = normalize(inputs[0]);\n    const len = firstArr.byteLength;\n    return inputs.slice(1).every(item => {\n        const arr = normalize(item);\n        if (arr.byteLength !== len)\n            return false;\n        for (let i = 0; i < len; i++) {\n            if (arr[i] !== firstArr[i])\n                return false;\n        }\n        return true;\n    });\n}\nexport function generatePassphrase(length = 32) {\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    const bytes = randomBytes(length);\n    let result = '';\n    for (let i = 0; i < length; i++) {\n        result += chars[bytes[i] % chars.length];\n    }\n    return result;\n}\nexport function getHmac(eccName) {\n    const encoder = new TextEncoder();\n    if ([\n        'Kholaw-Ed25519', 'SLIP10-Ed25519', 'SLIP10-Ed25519-Blake2b', 'SLIP10-Ed25519-Monero',\n    ].includes(eccName)) {\n        return encoder.encode('ed25519 seed');\n    }\n    else if (eccName === 'SLIP10-Nist256p1') {\n        return encoder.encode('Nist256p1 seed');\n    }\n    else if (eccName === 'SLIP10-Secp256k1') {\n        return encoder.encode('Bitcoin seed');\n    }\n    throw new DerivationError('Unknown ECC name');\n}\nexport function excludeKeys(nested, keys) {\n    const out = {};\n    const keySet = new Set(keys); // optional optimization\n    for (const [k, v] of Object.entries(nested)) {\n        const normKey = k.replace(/-/g, '_');\n        if (keySet.has(normKey))\n            continue;\n        if (v &&\n            typeof v === 'object' &&\n            !Array.isArray(v) &&\n            !(v instanceof Uint8Array) &&\n            !(v instanceof Uint8Array)) {\n            out[k] = excludeKeys(v, keys);\n        }\n        else {\n            out[k] = v;\n        }\n    }\n    return out;\n}\nexport function pathToIndexes(path) {\n    if (path === 'm' || path === 'm/')\n        return [];\n    if (!path.startsWith('m/')) {\n        throw new DerivationError(`Bad path format, expected 'm/0'/0', got '${path}'`);\n    }\n    return path\n        .slice(2)\n        .split('/')\n        .map(i => i.endsWith(\"'\")\n        ? parseInt(i.slice(0, -1), 10) + 0x80000000\n        : parseInt(i, 10));\n}\nexport function indexesToPath(indexes) {\n    return ('m' +\n        indexes\n            .map(i => i & 0x80000000\n            ? `/${(i & ~0x80000000).toString()}'`\n            : `/${i.toString()}`)\n            .join(''));\n}\nexport function normalizeIndex(index, hardened = false) {\n    if (typeof index === 'number') {\n        if (index < 0)\n            throw new DerivationError(`Bad index: ${index}`);\n        return [index, hardened];\n    }\n    if (typeof index === 'string') {\n        const m = index.match(/^(\\d+)(?:-(\\d+))?$/);\n        if (!m) {\n            throw new DerivationError(`Bad index format, got '${index}'`);\n        }\n        const from = parseInt(m[1], 10);\n        const to = m[2] ? parseInt(m[2], 10) : undefined;\n        if (to === undefined)\n            return [from, hardened];\n        if (from > to) {\n            throw new DerivationError(`Range start ${from} > end ${to}`);\n        }\n        return [from, to, hardened];\n    }\n    if (Array.isArray(index)) {\n        const [a, b] = index;\n        if (index.length !== 2 || typeof a !== 'number' || typeof b !== 'number') {\n            throw new DerivationError(`Bad index tuple: ${JSON.stringify(index)}`);\n        }\n        if (a < 0 || b < 0) {\n            throw new DerivationError(`Negative in tuple: ${index}`);\n        }\n        if (a > b) {\n            throw new DerivationError(`Range start ${a} > end ${b}`);\n        }\n        return [a, b, hardened];\n    }\n    throw new DerivationError(`Invalid index instance, got ${typeof index}`);\n}\nexport function normalizeDerivation(path, indexes) {\n    let _path = 'm';\n    const _indexes = [];\n    const _deriv = [];\n    if (indexes && path) {\n        throw new DerivationError('Provide either path or indexes, not both');\n    }\n    if (indexes) {\n        path = indexesToPath(indexes);\n    }\n    if (!path || path === 'm' || path === 'm/') {\n        return [`${_path}/`, _indexes, _deriv];\n    }\n    if (!path.startsWith('m/')) {\n        throw new DerivationError(`Bad path format, got '${path}'`);\n    }\n    for (const seg of path.slice(2).split('/')) {\n        const hardened = seg.endsWith(\"'\");\n        const core = hardened ? seg.slice(0, -1) : seg;\n        const parts = core.split('-').map(x => parseInt(x, 10));\n        if (parts.length === 2) {\n            const [from, to] = parts;\n            if (from > to) {\n                throw new DerivationError(`Range start ${from} > end ${to}`);\n            }\n            _deriv.push([from, to, hardened]);\n            _indexes.push(to + (hardened ? 0x80000000 : 0));\n            _path += hardened ? `/${to}'` : `/${to}`;\n        }\n        else {\n            const idx = parts[0];\n            _deriv.push([idx, hardened]);\n            _indexes.push(idx + (hardened ? 0x80000000 : 0));\n            _path += hardened ? `/${idx}'` : `/${idx}`;\n        }\n    }\n    return [_path, _indexes, _deriv];\n}\nexport function indexTupleToInteger(idx) {\n    if (idx.length === 2) {\n        const [i, h] = idx;\n        return i + (h ? 0x80000000 : 0);\n    }\n    else {\n        const [from, to, h] = idx;\n        return to + (h ? 0x80000000 : 0);\n    }\n}\nexport function indexTupleToString(idx) {\n    if (idx.length === 2) {\n        const [i, h] = idx;\n        return `${i}${h ? \"'\" : ''}`;\n    }\n    else {\n        const [from, to, h] = idx;\n        return `${from}-${to}${h ? \"'\" : ''}`;\n    }\n}\nexport function indexStringToTuple(i) {\n    const hardened = i.endsWith(\"'\");\n    const num = parseInt(hardened ? i.slice(0, -1) : i, 10);\n    return [num, hardened];\n}\nexport function xor(a, b) {\n    if (a.length !== b.length)\n        throw new DerivationError('Uint8Arrays must match length for XOR');\n    return getBytes(a.map((x, i) => x ^ b[i]));\n}\nexport function addNoCarry(a, b) {\n    if (a.length !== b.length)\n        throw new DerivationError('Uint8Arrays must match length for addNoCarry');\n    return getBytes(a.map((x, i) => (x + b[i]) & 0xff));\n}\nexport function multiplyScalarNoCarry(data, scalar) {\n    return getBytes(data.map(x => (x * scalar) & 0xff));\n}\nexport function isBitsSet(value, bitNum) {\n    return (value & (1 << bitNum)) !== 0;\n}\nexport function areBitsSet(value, mask) {\n    return (value & mask) !== 0;\n}\nexport function setBit(value, bitNum) {\n    return value | (1 << bitNum);\n}\nexport function setBits(value, mask) {\n    return value | mask;\n}\nexport function resetBit(value, bitNum) {\n    return value & ~(1 << bitNum);\n}\nexport function resetBits(value, mask) {\n    return value & ~mask;\n}\nexport function bytesReverse(data) {\n    return getBytes(data).reverse();\n}\nexport function convertBits(data, fromBits, toBits) {\n    const input = Array.isArray(data) ? data : Array.from(data);\n    const maxVal = (1 << toBits) - 1;\n    let acc = 0;\n    let bits = 0;\n    const out = [];\n    for (const val of input) {\n        if (val < 0 || val >> fromBits) {\n            return null;\n        }\n        acc |= val << bits;\n        bits += fromBits;\n        while (bits >= toBits) {\n            out.push(acc & maxVal);\n            acc >>= toBits;\n            bits -= toBits;\n        }\n    }\n    if (bits > 0) {\n        out.push(acc & maxVal);\n    }\n    return out;\n}\nexport function bytesChunkToWords(bytesChunk, wordsList, endianness) {\n    const len = BigInt(wordsList.length);\n    let chunkNum = bytesToInteger(new Uint8Array(bytesChunk), endianness !== 'big');\n    const i1 = Number(chunkNum % len);\n    const i2 = Number(((chunkNum / len) + BigInt(i1)) % len);\n    const i3 = Number(((chunkNum / len / len) + BigInt(i2)) % len);\n    return [wordsList[i1], wordsList[i2], wordsList[i3]];\n}\nexport function wordsToBytesChunk(w1, w2, w3, wordsList, endianness) {\n    const len = BigInt(wordsList.length);\n    const idxMap = new Map(wordsList.map((w, i) => [w, BigInt(i)]));\n    const i1 = idxMap.get(w1);\n    const i2 = idxMap.get(w2);\n    const i3 = idxMap.get(w3);\n    const chunk = i1 + len * ((i2 - i1 + len) % len) + len * len * ((i3 - i2 + len) % len);\n    const u8 = integerToBytes(chunk, 4, endianness);\n    return getBytes(u8);\n}\nexport function toCamelCase(input) {\n    return input.toLowerCase().replace(/-([a-z])/g, (_, char) => char.toUpperCase());\n}\nexport function ensureTypeMatch(instanceOrClass, expectedType, options = {}) {\n    const tryMatch = (type) => {\n        if (type === 'any')\n            return true;\n        if (type === 'null')\n            return instanceOrClass === null;\n        if (type === 'array')\n            return Array.isArray(instanceOrClass);\n        if (typeof type === 'string')\n            return typeof instanceOrClass === type;\n        if (typeof type === 'function') {\n            if (typeof instanceOrClass === 'function') {\n                let proto = instanceOrClass;\n                while (proto && proto !== Function.prototype) {\n                    if (proto === type)\n                        return true;\n                    proto = Object.getPrototypeOf(proto);\n                }\n                return false;\n            }\n            return options.strict\n                ? instanceOrClass?.constructor === type\n                : instanceOrClass instanceof type;\n        }\n        return false;\n    };\n    const allExpectedTypes = [expectedType, ...(options.otherTypes || [])];\n    const matched = allExpectedTypes.find(tryMatch);\n    if (!matched && (options.errorClass || options.otherTypes)) {\n        const expectedNames = allExpectedTypes.map((type) => typeof type === 'function' ? type.name : String(type));\n        const gotName = typeof instanceOrClass === 'function'\n            ? instanceOrClass.name\n            : instanceOrClass?.constructor?.name ?? typeof instanceOrClass;\n        if (options.errorClass) {\n            throw new options.errorClass(`Invalid type`, {\n                expected: expectedNames, got: gotName\n            });\n        }\n        else {\n            throw new TypeError(`Invalid type`, {\n                expected: expectedNames, got: gotName\n            });\n        }\n    }\n    return matched && options.errorClass ? instanceOrClass : {\n        value: instanceOrClass, isValid: tryMatch(expectedType)\n    };\n}\n//# sourceMappingURL=utils.js.map","// SPDX-License-Identifier: MIT\nimport { NetworkError } from './exceptions';\nimport { integerToBytes, bytesToInteger } from './utils';\nexport class NestedNamespace {\n    constructor(data) {\n        if (data instanceof Set) {\n            data.forEach(item => {\n                this[item] = item;\n            });\n        }\n        else if (Array.isArray(data)) {\n            data.forEach(item => {\n                if (item != null && typeof item === 'object' && !Array.isArray(item)) {\n                    Object.entries(item).forEach(([key, value]) => {\n                        this[key] = (value != null && typeof value === 'object')\n                            ? new NestedNamespace(value)\n                            : value;\n                    });\n                }\n                else {\n                    this[item] = item;\n                }\n            });\n        }\n        else {\n            Object.entries(data).forEach(([key, value]) => {\n                this[key] = (value != null && typeof value === 'object')\n                    ? new NestedNamespace(value)\n                    : value;\n            });\n        }\n    }\n}\nexport const SLIP10_ED25519_CONST = {\n    PRIVATE_KEY_BYTE_LENGTH: 32,\n    PUBLIC_KEY_PREFIX: integerToBytes(0x00),\n    PUBLIC_KEY_BYTE_LENGTH: 32\n};\nexport const KHOLAW_ED25519_CONST = {\n    ...SLIP10_ED25519_CONST,\n    PRIVATE_KEY_BYTE_LENGTH: 64\n};\nexport const SLIP10_SECP256K1_CONST = {\n    POINT_COORDINATE_BYTE_LENGTH: 32,\n    PRIVATE_KEY_BYTE_LENGTH: 32,\n    PRIVATE_KEY_UNCOMPRESSED_PREFIX: 0x00,\n    PRIVATE_KEY_COMPRESSED_PREFIX: 0x01,\n    PUBLIC_KEY_UNCOMPRESSED_PREFIX: integerToBytes(0x04),\n    PUBLIC_KEY_COMPRESSED_BYTE_LENGTH: 33,\n    PUBLIC_KEY_UNCOMPRESSED_BYTE_LENGTH: 65,\n    CHECKSUM_BYTE_LENGTH: 4\n};\nexport class Info extends NestedNamespace {\n    SOURCE_CODE;\n    WHITEPAPER;\n    WEBSITES;\n    constructor(data) {\n        super(data);\n    }\n}\nexport class WitnessVersions extends NestedNamespace {\n    getWitnessVersion(address) {\n        return this[address.toUpperCase()];\n    }\n}\nexport class Entropies extends NestedNamespace {\n    isEntropy(entropy) {\n        return this.getEntropies().includes(entropy);\n    }\n    getEntropies() {\n        return Object.values(this);\n    }\n}\nexport class Mnemonics extends NestedNamespace {\n    isMnemonic(mnemonic) {\n        return this.getMnemonics().includes(mnemonic);\n    }\n    getMnemonics() {\n        return Object.values(this);\n    }\n}\nexport class Seeds extends NestedNamespace {\n    isSeed(seed) {\n        return this.getSeeds().includes(seed);\n    }\n    getSeeds() {\n        return Object.values(this);\n    }\n}\nexport class HDs extends NestedNamespace {\n    isHD(hd) {\n        return this.getHDS().includes(hd);\n    }\n    getHDS() {\n        return Object.values(this);\n    }\n}\nexport class Addresses extends NestedNamespace {\n    isAddress(address) {\n        return this.getAddresses().includes(address);\n    }\n    getAddresses() {\n        return Object.values(this);\n    }\n    length() {\n        return this.getAddresses().length;\n    }\n}\nexport class AddressTypes extends NestedNamespace {\n    isAddressType(addressType) {\n        return this.getAddressTypes().includes(addressType);\n    }\n    getAddressTypes() {\n        return Object.values(this);\n    }\n}\nexport class AddressPrefixes extends NestedNamespace {\n    isAddressPrefix(addressPrefix) {\n        return this.getAddressPrefixes().includes(addressPrefix);\n    }\n    getAddressPrefixes() {\n        return Object.values(this);\n    }\n}\nexport class Networks extends NestedNamespace {\n    isNetwork(network) {\n        return this.getNetworks().includes(network.toLowerCase());\n    }\n    getNetworks() {\n        return Object.keys(this).map(k => k.toLowerCase());\n    }\n    getNetwork(network) {\n        if (!this.isNetwork(network)) {\n            throw new NetworkError(`${network} network is not available`);\n        }\n        return this[network.toUpperCase()];\n    }\n}\nexport class Params extends NestedNamespace {\n}\nexport class ExtendedKeyVersions extends NestedNamespace {\n    isVersion(version) {\n        return Object.values(this).includes(Number(bytesToInteger(version)));\n    }\n    getVersions() {\n        return Object.keys(this).map(k => k.toLowerCase().replace(/_/g, '-'));\n    }\n    getVersion(name) {\n        return this[name.toUpperCase().replace(/-/g, '_')];\n    }\n    getName(version) {\n        const intVer = bytesToInteger(version);\n        return Object.entries(this).find(([, v]) => v === intVer)?.[0];\n    }\n}\nexport class XPrivateKeyVersions extends ExtendedKeyVersions {\n}\nexport class XPublicKeyVersions extends ExtendedKeyVersions {\n}\nexport class PUBLIC_KEY_TYPES {\n    static UNCOMPRESSED = 'uncompressed';\n    static COMPRESSED = 'compressed';\n    static getTypes() {\n        return [this.UNCOMPRESSED, this.COMPRESSED];\n    }\n}\nexport class WIF_TYPES {\n    static WIF = 'wif';\n    static WIF_COMPRESSED = 'wif-compressed';\n    static getTypes() {\n        return [this.WIF, this.WIF_COMPRESSED];\n    }\n}\nexport class SEMANTICS {\n    static P2WPKH = 'p2wpkh';\n    static P2WPKH_IN_P2SH = 'p2wpkh-in-p2sh';\n    static P2WSH = 'p2wsh';\n    static P2WSH_IN_P2SH = 'p2wsh-in-p2sh';\n    static getTypes() {\n        return [this.P2WPKH, this.P2WPKH_IN_P2SH, this.P2WSH, this.P2WSH_IN_P2SH];\n    }\n}\nexport class MODES {\n    static STANDARD = 'standard';\n    static SEGWIT = 'segwit';\n    static getTypes() {\n        return [this.STANDARD, this.SEGWIT];\n    }\n}\n//# sourceMappingURL=consts.js.map","/**\n * HMAC: RFC2104 message authentication code.\n * @module\n */\nimport { abytes, aexists, ahash, clean, Hash, toBytes } from \"./utils.js\";\nexport class HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        ahash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        clean(pad);\n    }\n    update(buf) {\n        aexists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        aexists(this);\n        abytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    clone() {\n        return this._cloneInto();\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n * @example\n * import { hmac } from '@noble/hashes/hmac';\n * import { sha256 } from '@noble/hashes/sha2';\n * const mac1 = hmac(sha256, 'key', 'message');\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","function y0(B){let D=typeof B;return B!=null&&(D===\"object\"||D===\"function\")}function A(B,D,F){if(!y0(B)||!Array.isArray(D)||D.length<1)return B;let r=B;for(let t of D.slice(0,-1))y0(r[t])||(r[t]={}),r=r[t];return r[D.at(-1)]=F,B}var C=new Uint8Array(1),x=new Uint16Array(1),E=new Uint32Array(1);var U0=new Uint8Array([0,7,14,9,28,27,18,21,56,63,54,49,36,35,42,45,112,119,126,121,108,107,98,101,72,79,70,65,84,83,90,93,224,231,238,233,252,251,242,245,216,223,214,209,196,195,202,205,144,151,158,153,140,139,130,133,168,175,166,161,180,179,186,189,199,192,201,206,219,220,213,210,255,248,241,246,227,228,237,234,183,176,185,190,171,172,165,162,143,136,129,134,147,148,157,154,39,32,41,46,59,60,53,50,31,24,17,22,3,4,13,10,87,80,89,94,75,76,69,66,111,104,97,102,115,116,125,122,137,142,135,128,149,146,155,156,177,182,191,184,173,170,163,164,249,254,247,240,229,226,235,236,193,198,207,200,221,218,211,212,105,110,103,96,117,114,123,124,81,86,95,88,77,74,67,68,25,30,23,16,5,2,11,12,33,38,47,40,61,58,51,52,78,73,64,71,82,85,92,91,118,113,120,127,106,109,100,99,62,57,48,55,34,37,44,43,6,1,8,15,26,29,20,19,174,169,160,167,178,181,188,187,150,145,152,159,138,141,132,131,222,217,208,215,194,197,204,203,230,225,232,239,250,253,244,243]);function n(B=new Uint8Array,D=0){C[0]=D;for(let F of B)C[0]=U0[C[0]^F];return C[0]}var d0=new Uint8Array([0,47,94,113,188,147,226,205,87,120,9,38,235,196,181,154,174,129,240,223,18,61,76,99,249,214,167,136,69,106,27,52,115,92,45,2,207,224,145,190,36,11,122,85,152,183,198,233,221,242,131,172,97,78,63,16,138,165,212,251,54,25,104,71,230,201,184,151,90,117,4,43,177,158,239,192,13,34,83,124,72,103,22,57,244,219,170,133,31,48,65,110,163,140,253,210,149,186,203,228,41,6,119,88,194,237,156,179,126,81,32,15,59,20,101,74,135,168,217,246,108,67,50,29,208,255,142,161,227,204,189,146,95,112,1,46,180,155,234,197,8,39,86,121,77,98,19,60,241,222,175,128,26,53,68,107,166,137,248,215,144,191,206,225,44,3,114,93,199,232,153,182,123,84,37,10,62,17,96,79,130,173,220,243,105,70,55,24,213,250,139,164,5,42,91,116,185,150,231,200,82,125,12,35,238,193,176,159,171,132,245,218,23,56,73,102,252,211,162,141,64,111,30,49,118,89,40,7,202,229,148,187,33,14,127,80,157,178,195,236,216,247,134,169,100,75,58,21,143,160,209,254,51,28,109,66]);function c(B=new Uint8Array,D=0){C[0]=D^255;for(let F of B)C[0]=d0[C[0]^F];return C[0]^255}var h0=new Uint8Array([0,107,214,189,103,12,177,218,206,165,24,115,169,194,127,20,87,60,129,234,48,91,230,141,153,242,79,36,254,149,40,67,174,197,120,19,201,162,31,116,96,11,182,221,7,108,209,186,249,146,47,68,158,245,72,35,55,92,225,138,80,59,134,237,151,252,65,42,240,155,38,77,89,50,143,228,62,85,232,131,192,171,22,125,167,204,113,26,14,101,216,179,105,2,191,212,57,82,239,132,94,53,136,227,247,156,33,74,144,251,70,45,110,5,184,211,9,98,223,180,160,203,118,29,199,172,17,122,229,142,51,88,130,233,84,63,43,64,253,150,76,39,154,241,178,217,100,15,213,190,3,104,124,23,170,193,27,112,205,166,75,32,157,246,44,71,250,145,133,238,83,56,226,137,52,95,28,119,202,161,123,16,173,198,210,185,4,111,181,222,99,8,114,25,164,207,21,126,195,168,188,215,106,1,219,176,13,102,37,78,243,152,66,41,148,255,235,128,61,86,140,231,90,49,220,183,10,97,187,208,109,6,18,121,196,175,117,30,163,200,139,224,93,54,236,135,58,81,69,46,147,248,34,73,244,159]);function e(B=new Uint8Array,D=0){C[0]=D;for(let F of B)C[0]=h0[C[0]^F];return C[0]}var w0=new Uint8Array([0,7,14,9,28,27,18,21,56,63,54,49,36,35,42,45,112,119,126,121,108,107,98,101,72,79,70,65,84,83,90,93,224,231,238,233,252,251,242,245,216,223,214,209,196,195,202,205,144,151,158,153,140,139,130,133,168,175,166,161,180,179,186,189,199,192,201,206,219,220,213,210,255,248,241,246,227,228,237,234,183,176,185,190,171,172,165,162,143,136,129,134,147,148,157,154,39,32,41,46,59,60,53,50,31,24,17,22,3,4,13,10,87,80,89,94,75,76,69,66,111,104,97,102,115,116,125,122,137,142,135,128,149,146,155,156,177,182,191,184,173,170,163,164,249,254,247,240,229,226,235,236,193,198,207,200,221,218,211,212,105,110,103,96,117,114,123,124,81,86,95,88,77,74,67,68,25,30,23,16,5,2,11,12,33,38,47,40,61,58,51,52,78,73,64,71,82,85,92,91,118,113,120,127,106,109,100,99,62,57,48,55,34,37,44,43,6,1,8,15,26,29,20,19,174,169,160,167,178,181,188,187,150,145,152,159,138,141,132,131,222,217,208,215,194,197,204,203,230,225,232,239,250,253,244,243]);function o(B=new Uint8Array,D=44){C[0]=D;for(let F of B)C[0]=w0[C[0]^F];return C[0]}var T0=new Uint8Array([0,155,173,54,193,90,108,247,25,130,180,47,216,67,117,238,50,169,159,4,243,104,94,197,43,176,134,29,234,113,71,220,100,255,201,82,165,62,8,147,125,230,208,75,188,39,17,138,86,205,251,96,151,12,58,161,79,212,226,121,142,21,35,184,200,83,101,254,9,146,164,63,209,74,124,231,16,139,189,38,250,97,87,204,59,160,150,13,227,120,78,213,34,185,143,20,172,55,1,154,109,246,192,91,181,46,24,131,116,239,217,66,158,5,51,168,95,196,242,105,135,28,42,177,70,221,235,112,11,144,166,61,202,81,103,252,18,137,191,36,211,72,126,229,57,162,148,15,248,99,85,206,32,187,141,22,225,122,76,215,111,244,194,89,174,53,3,152,118,237,219,64,183,44,26,129,93,198,240,107,156,7,49,170,68,223,233,114,133,30,40,179,195,88,110,245,2,153,175,52,218,65,119,236,27,128,182,45,241,106,92,199,48,171,157,6,232,115,69,222,41,178,132,31,167,60,10,145,102,253,203,80,190,37,19,136,127,228,210,73,149,14,56,163,84,207,249,98,140,23,33,186,77,214,224,123]);function a(B=new Uint8Array,D=255){C[0]=D;for(let F of B)C[0]=T0[C[0]^F];return C[0]}var O0=new Uint8Array([0,114,228,150,241,131,21,103,219,169,63,77,42,88,206,188,143,253,107,25,126,12,154,232,84,38,176,194,165,215,65,51,39,85,195,177,214,164,50,64,252,142,24,106,13,127,233,155,168,218,76,62,89,43,189,207,115,1,151,229,130,240,102,20,78,60,170,216,191,205,91,41,149,231,113,3,100,22,128,242,193,179,37,87,48,66,212,166,26,104,254,140,235,153,15,125,105,27,141,255,152,234,124,14,178,192,86,36,67,49,167,213,230,148,2,112,23,101,243,129,61,79,217,171,204,190,40,90,156,238,120,10,109,31,137,251,71,53,163,209,182,196,82,32,19,97,247,133,226,144,6,116,200,186,44,94,57,75,221,175,187,201,95,45,74,56,174,220,96,18,132,246,145,227,117,7,52,70,208,162,197,183,33,83,239,157,11,121,30,108,250,136,210,160,54,68,35,81,199,181,9,123,237,159,248,138,28,110,93,47,185,203,172,222,72,58,134,244,98,16,119,5,147,225,245,135,17,99,4,118,224,146,46,92,202,184,223,173,59,73,122,8,158,236,139,249,111,29,161,211,69,55,80,34,180,198]);function i(B=new Uint8Array,D=0){C[0]=D;for(let F of B)C[0]=O0[C[0]^F];return C[0]}var L0=new Uint8Array([0,213,127,170,254,43,129,84,41,252,86,131,215,2,168,125,82,135,45,248,172,121,211,6,123,174,4,209,133,80,250,47,164,113,219,14,90,143,37,240,141,88,242,39,115,166,12,217,246,35,137,92,8,221,119,162,223,10,160,117,33,244,94,139,157,72,226,55,99,182,28,201,180,97,203,30,74,159,53,224,207,26,176,101,49,228,78,155,230,51,153,76,24,205,103,178,57,236,70,147,199,18,184,109,16,197,111,186,238,59,145,68,107,190,20,193,149,64,234,63,66,151,61,232,188,105,195,22,239,58,144,69,17,196,110,187,198,19,185,108,56,237,71,146,189,104,194,23,67,150,60,233,148,65,235,62,106,191,21,192,75,158,52,225,181,96,202,31,98,183,29,200,156,73,227,54,25,204,102,179,231,50,152,77,48,229,79,154,206,27,177,100,114,167,13,216,140,89,243,38,91,142,36,241,165,112,218,15,32,245,95,138,222,11,161,116,9,220,118,163,247,34,136,93,214,3,169,124,40,253,87,130,255,42,128,85,1,212,126,171,132,81,251,46,122,175,5,208,173,120,210,7,83,134,44,249]);function u(B=new Uint8Array,D=0){C[0]=D;for(let F of B)C[0]=L0[C[0]^F];return C[0]}var g0=new Uint8Array([0,100,200,172,225,133,41,77,179,215,123,31,82,54,154,254,23,115,223,187,246,146,62,90,164,192,108,8,69,33,141,233,46,74,230,130,207,171,7,99,157,249,85,49,124,24,180,208,57,93,241,149,216,188,16,116,138,238,66,38,107,15,163,199,92,56,148,240,189,217,117,17,239,139,39,67,14,106,198,162,75,47,131,231,170,206,98,6,248,156,48,84,25,125,209,181,114,22,186,222,147,247,91,63,193,165,9,109,32,68,232,140,101,1,173,201,132,224,76,40,214,178,30,122,55,83,255,155,184,220,112,20,89,61,145,245,11,111,195,167,234,142,34,70,175,203,103,3,78,42,134,226,28,120,212,176,253,153,53,81,150,242,94,58,119,19,191,219,37,65,237,137,196,160,12,104,129,229,73,45,96,4,168,204,50,86,250,158,211,183,27,127,228,128,44,72,5,97,205,169,87,51,159,251,182,210,126,26,243,151,59,95,18,118,218,190,64,36,136,236,161,197,105,13,202,174,2,102,43,79,227,135,121,29,177,213,152,252,80,52,221,185,21,113,60,88,244,144,110,10,166,194,143,235,71,35]);function f(B=new Uint8Array,D=255){C[0]=D;for(let F of B)C[0]=g0[C[0]^F];return C[0]}var j0=new Uint8Array([0,29,58,39,116,105,78,83,232,245,210,207,156,129,166,187,205,208,247,234,185,164,131,158,37,56,31,2,81,76,107,118,135,154,189,160,243,238,201,212,111,114,85,72,27,6,33,60,74,87,112,109,62,35,4,25,162,191,152,133,214,203,236,241,19,14,41,52,103,122,93,64,251,230,193,220,143,146,181,168,222,195,228,249,170,183,144,141,54,43,12,17,66,95,120,101,148,137,174,179,224,253,218,199,124,97,70,91,8,21,50,47,89,68,99,126,45,48,23,10,177,172,139,150,197,216,255,226,38,59,28,1,82,79,104,117,206,211,244,233,186,167,128,157,235,246,209,204,159,130,165,184,3,30,57,36,119,106,77,80,161,188,155,134,213,200,239,242,73,84,115,110,61,32,7,26,108,113,86,75,24,5,34,63,132,153,190,163,240,237,202,215,53,40,15,18,65,92,123,102,221,192,231,250,169,180,147,142,248,229,194,223,140,145,182,171,16,13,42,55,100,121,94,67,178,175,136,149,198,219,252,225,90,71,96,125,46,51,20,9,127,98,69,88,11,22,49,44,151,138,173,176,227,254,217,196]);function m(B=new Uint8Array,D=0){C[0]=D;for(let F of B)C[0]=j0[C[0]^F];return C[0]}var P0=new Uint8Array([0,73,146,219,109,36,255,182,218,147,72,1,183,254,37,108,253,180,111,38,144,217,2,75,39,110,181,252,74,3,216,145,179,250,33,104,222,151,76,5,105,32,251,178,4,77,150,223,78,7,220,149,35,106,177,248,148,221,6,79,249,176,107,34,47,102,189,244,66,11,208,153,245,188,103,46,152,209,10,67,210,155,64,9,191,246,45,100,8,65,154,211,101,44,247,190,156,213,14,71,241,184,99,42,70,15,212,157,43,98,185,240,97,40,243,186,12,69,158,215,187,242,41,96,214,159,68,13,94,23,204,133,51,122,161,232,132,205,22,95,233,160,123,50,163,234,49,120,206,135,92,21,121,48,235,162,20,93,134,207,237,164,127,54,128,201,18,91,55,126,165,236,90,19,200,129,16,89,130,203,125,52,239,166,202,131,88,17,167,238,53,124,113,56,227,170,28,85,142,199,171,226,57,112,198,143,84,29,140,197,30,87,225,168,115,58,86,31,196,141,59,114,169,224,194,139,80,25,175,230,61,116,24,81,138,195,117,60,231,174,63,118,173,228,82,27,192,137,229,172,119,62,136,193,26,83]);function s(B=new Uint8Array,D=255){C[0]=D^255;for(let F of B)C[0]=P0[C[0]^F];return C[0]^255}var Y0=new Uint8Array([0,29,58,39,116,105,78,83,232,245,210,207,156,129,166,187,205,208,247,234,185,164,131,158,37,56,31,2,81,76,107,118,135,154,189,160,243,238,201,212,111,114,85,72,27,6,33,60,74,87,112,109,62,35,4,25,162,191,152,133,214,203,236,241,19,14,41,52,103,122,93,64,251,230,193,220,143,146,181,168,222,195,228,249,170,183,144,141,54,43,12,17,66,95,120,101,148,137,174,179,224,253,218,199,124,97,70,91,8,21,50,47,89,68,99,126,45,48,23,10,177,172,139,150,197,216,255,226,38,59,28,1,82,79,104,117,206,211,244,233,186,167,128,157,235,246,209,204,159,130,165,184,3,30,57,36,119,106,77,80,161,188,155,134,213,200,239,242,73,84,115,110,61,32,7,26,108,113,86,75,24,5,34,63,132,153,190,163,240,237,202,215,53,40,15,18,65,92,123,102,221,192,231,250,169,180,147,142,248,229,194,223,140,145,182,171,16,13,42,55,100,121,94,67,178,175,136,149,198,219,252,225,90,71,96,125,46,51,20,9,127,98,69,88,11,22,49,44,151,138,173,176,227,254,217,196]);function b(B=new Uint8Array,D=255){C[0]=D;for(let F of B)C[0]=Y0[C[0]^F];return C[0]}var _0=new Uint8Array([0,29,58,39,116,105,78,83,232,245,210,207,156,129,166,187,205,208,247,234,185,164,131,158,37,56,31,2,81,76,107,118,135,154,189,160,243,238,201,212,111,114,85,72,27,6,33,60,74,87,112,109,62,35,4,25,162,191,152,133,214,203,236,241,19,14,41,52,103,122,93,64,251,230,193,220,143,146,181,168,222,195,228,249,170,183,144,141,54,43,12,17,66,95,120,101,148,137,174,179,224,253,218,199,124,97,70,91,8,21,50,47,89,68,99,126,45,48,23,10,177,172,139,150,197,216,255,226,38,59,28,1,82,79,104,117,206,211,244,233,186,167,128,157,235,246,209,204,159,130,165,184,3,30,57,36,119,106,77,80,161,188,155,134,213,200,239,242,73,84,115,110,61,32,7,26,108,113,86,75,24,5,34,63,132,153,190,163,240,237,202,215,53,40,15,18,65,92,123,102,221,192,231,250,169,180,147,142,248,229,194,223,140,145,182,171,16,13,42,55,100,121,94,67,178,175,136,149,198,219,252,225,90,71,96,125,46,51,20,9,127,98,69,88,11,22,49,44,151,138,173,176,227,254,217,196]);function l(B=new Uint8Array,D=253){C[0]=D;for(let F of B)C[0]=_0[C[0]^F];return C[0]}var k0=new Uint8Array([0,7,14,9,28,27,18,21,56,63,54,49,36,35,42,45,112,119,126,121,108,107,98,101,72,79,70,65,84,83,90,93,224,231,238,233,252,251,242,245,216,223,214,209,196,195,202,205,144,151,158,153,140,139,130,133,168,175,166,161,180,179,186,189,199,192,201,206,219,220,213,210,255,248,241,246,227,228,237,234,183,176,185,190,171,172,165,162,143,136,129,134,147,148,157,154,39,32,41,46,59,60,53,50,31,24,17,22,3,4,13,10,87,80,89,94,75,76,69,66,111,104,97,102,115,116,125,122,137,142,135,128,149,146,155,156,177,182,191,184,173,170,163,164,249,254,247,240,229,226,235,236,193,198,207,200,221,218,211,212,105,110,103,96,117,114,123,124,81,86,95,88,77,74,67,68,25,30,23,16,5,2,11,12,33,38,47,40,61,58,51,52,78,73,64,71,82,85,92,91,118,113,120,127,106,109,100,99,62,57,48,55,34,37,44,43,6,1,8,15,26,29,20,19,174,169,160,167,178,181,188,187,150,145,152,159,138,141,132,131,222,217,208,215,194,197,204,203,230,225,232,239,250,253,244,243]);function p(B=new Uint8Array,D=85){C[0]=D^85;for(let F of B)C[0]=k0[C[0]^F];return C[0]^85}var q0=new Uint8Array([0,19,38,53,76,95,106,121,152,139,190,173,212,199,242,225,189,174,155,136,241,226,215,196,37,54,3,16,105,122,79,92,247,228,209,194,187,168,157,142,111,124,73,90,35,48,5,22,74,89,108,127,6,21,32,51,210,193,244,231,158,141,184,171,99,112,69,86,47,60,9,26,251,232,221,206,183,164,145,130,222,205,248,235,146,129,180,167,70,85,96,115,10,25,44,63,148,135,178,161,216,203,254,237,12,31,42,57,64,83,102,117,41,58,15,28,101,118,67,80,177,162,151,132,253,238,219,200,198,213,224,243,138,153,172,191,94,77,120,107,18,1,52,39,123,104,93,78,55,36,17,2,227,240,197,214,175,188,137,154,49,34,23,4,125,110,91,72,169,186,143,156,229,246,195,208,140,159,170,185,192,211,230,245,20,7,50,33,88,75,126,109,165,182,131,144,233,250,207,220,61,46,27,8,113,98,87,68,24,11,62,45,84,71,114,97,128,147,166,181,204,223,234,249,82,65,116,103,30,13,56,43,202,217,236,255,134,149,160,179,239,252,201,218,163,176,133,150,119,100,81,66,59,40,29,14]);function y(B=new Uint8Array,D=170){C[0]=D;for(let F of B)C[0]=q0[C[0]^F];return C[0]}var v0=new Uint8Array([0,29,58,39,116,105,78,83,232,245,210,207,156,129,166,187,205,208,247,234,185,164,131,158,37,56,31,2,81,76,107,118,135,154,189,160,243,238,201,212,111,114,85,72,27,6,33,60,74,87,112,109,62,35,4,25,162,191,152,133,214,203,236,241,19,14,41,52,103,122,93,64,251,230,193,220,143,146,181,168,222,195,228,249,170,183,144,141,54,43,12,17,66,95,120,101,148,137,174,179,224,253,218,199,124,97,70,91,8,21,50,47,89,68,99,126,45,48,23,10,177,172,139,150,197,216,255,226,38,59,28,1,82,79,104,117,206,211,244,233,186,167,128,157,235,246,209,204,159,130,165,184,3,30,57,36,119,106,77,80,161,188,155,134,213,200,239,242,73,84,115,110,61,32,7,26,108,113,86,75,24,5,34,63,132,153,190,163,240,237,202,215,53,40,15,18,65,92,123,102,221,192,231,250,169,180,147,142,248,229,194,223,140,145,182,171,16,13,42,55,100,121,94,67,178,175,136,149,198,219,252,225,90,71,96,125,46,51,20,9,127,98,69,88,11,22,49,44,151,138,173,176,227,254,217,196]);function U(B=new Uint8Array,D=199){C[0]=D;for(let F of B)C[0]=v0[C[0]^F];return C[0]}var z0=new Uint8Array([0,94,188,226,97,63,221,131,194,156,126,32,163,253,31,65,157,195,33,127,252,162,64,30,95,1,227,189,62,96,130,220,35,125,159,193,66,28,254,160,225,191,93,3,128,222,60,98,190,224,2,92,223,129,99,61,124,34,192,158,29,67,161,255,70,24,250,164,39,121,155,197,132,218,56,102,229,187,89,7,219,133,103,57,186,228,6,88,25,71,165,251,120,38,196,154,101,59,217,135,4,90,184,230,167,249,27,69,198,152,122,36,248,166,68,26,153,199,37,123,58,100,134,216,91,5,231,185,140,210,48,110,237,179,81,15,78,16,242,172,47,113,147,205,17,79,173,243,112,46,204,146,211,141,111,49,178,236,14,80,175,241,19,77,206,144,114,44,109,51,209,143,12,82,176,238,50,108,142,208,83,13,239,177,240,174,76,18,145,207,45,115,202,148,118,40,171,245,23,73,8,86,180,234,105,55,213,139,87,9,235,181,54,104,138,212,149,203,41,119,244,170,72,22,233,183,85,11,136,214,52,106,43,117,151,201,74,20,246,168,116,42,200,150,21,75,169,247,182,232,10,84,215,137,107,53]);function d(B=new Uint8Array,D=0){C[0]=D;for(let F of B)C[0]=z0[C[0]^F];return C[0]}var R0=new Uint8Array([0,49,98,83,196,245,166,151,185,136,219,234,125,76,31,46,67,114,33,16,135,182,229,212,250,203,152,169,62,15,92,109,134,183,228,213,66,115,32,17,63,14,93,108,251,202,153,168,197,244,167,150,1,48,99,82,124,77,30,47,184,137,218,235,61,12,95,110,249,200,155,170,132,181,230,215,64,113,34,19,126,79,28,45,186,139,216,233,199,246,165,148,3,50,97,80,187,138,217,232,127,78,29,44,2,51,96,81,198,247,164,149,248,201,154,171,60,13,94,111,65,112,35,18,133,180,231,214,122,75,24,41,190,143,220,237,195,242,161,144,7,54,101,84,57,8,91,106,253,204,159,174,128,177,226,211,68,117,38,23,252,205,158,175,56,9,90,107,69,116,39,22,129,176,227,210,191,142,221,236,123,74,25,40,6,55,100,85,194,243,160,145,71,118,37,20,131,178,225,208,254,207,156,173,58,11,88,105,4,53,102,87,192,241,162,147,189,140,223,238,121,72,27,42,193,240,163,146,5,52,103,86,120,73,26,43,188,141,222,239,130,179,224,209,70,119,36,21,59,10,89,104,255,206,157,172]);function h(B=new Uint8Array,D=255){C[0]=D;for(let F of B)C[0]=R0[C[0]^F];return C[0]}var G0=new Uint8Array([0,47,94,113,188,147,226,205,87,120,9,38,235,196,181,154,174,129,240,223,18,61,76,99,249,214,167,136,69,106,27,52,115,92,45,2,207,224,145,190,36,11,122,85,152,183,198,233,221,242,131,172,97,78,63,16,138,165,212,251,54,25,104,71,230,201,184,151,90,117,4,43,177,158,239,192,13,34,83,124,72,103,22,57,244,219,170,133,31,48,65,110,163,140,253,210,149,186,203,228,41,6,119,88,194,237,156,179,126,81,32,15,59,20,101,74,135,168,217,246,108,67,50,29,208,255,142,161,227,204,189,146,95,112,1,46,180,155,234,197,8,39,86,121,77,98,19,60,241,222,175,128,26,53,68,107,166,137,248,215,144,191,206,225,44,3,114,93,199,232,153,182,123,84,37,10,62,17,96,79,130,173,220,243,105,70,55,24,213,250,139,164,5,42,91,116,185,150,231,200,82,125,12,35,238,193,176,159,171,132,245,218,23,56,73,102,252,211,162,141,64,111,30,49,118,89,40,7,202,229,148,187,33,14,127,80,157,178,195,236,216,247,134,169,100,75,58,21,143,160,209,254,51,28,109,66]);function w(B=new Uint8Array,D=0){C[0]=D;for(let F of B)C[0]=G0[C[0]^F];return C[0]}var H0=new Uint8Array([0,145,227,114,7,150,228,117,14,159,237,124,9,152,234,123,28,141,255,110,27,138,248,105,18,131,241,96,21,132,246,103,56,169,219,74,63,174,220,77,54,167,213,68,49,160,210,67,36,181,199,86,35,178,192,81,42,187,201,88,45,188,206,95,112,225,147,2,119,230,148,5,126,239,157,12,121,232,154,11,108,253,143,30,107,250,136,25,98,243,129,16,101,244,134,23,72,217,171,58,79,222,172,61,70,215,165,52,65,208,162,51,84,197,183,38,83,194,176,33,90,203,185,40,93,204,190,47,224,113,3,146,231,118,4,149,238,127,13,156,233,120,10,155,252,109,31,142,251,106,24,137,242,99,17,128,245,100,22,135,216,73,59,170,223,78,60,173,214,71,53,164,209,64,50,163,196,85,39,182,195,82,32,177,202,91,41,184,205,92,46,191,144,1,115,226,151,6,116,229,158,15,125,236,153,8,122,235,140,29,111,254,139,26,104,249,130,19,97,240,133,20,102,247,168,57,75,218,175,62,76,221,166,55,69,212,161,48,66,211,180,37,87,198,179,34,80,193,186,43,89,200,189,44,94,207]);function T(B=new Uint8Array,D=255){C[0]=D;for(let F of B)C[0]=H0[C[0]^F];return C[0]}var I0=new Uint8Array([0,29,58,39,116,105,78,83,232,245,210,207,156,129,166,187,205,208,247,234,185,164,131,158,37,56,31,2,81,76,107,118,135,154,189,160,243,238,201,212,111,114,85,72,27,6,33,60,74,87,112,109,62,35,4,25,162,191,152,133,214,203,236,241,19,14,41,52,103,122,93,64,251,230,193,220,143,146,181,168,222,195,228,249,170,183,144,141,54,43,12,17,66,95,120,101,148,137,174,179,224,253,218,199,124,97,70,91,8,21,50,47,89,68,99,126,45,48,23,10,177,172,139,150,197,216,255,226,38,59,28,1,82,79,104,117,206,211,244,233,186,167,128,157,235,246,209,204,159,130,165,184,3,30,57,36,119,106,77,80,161,188,155,134,213,200,239,242,73,84,115,110,61,32,7,26,108,113,86,75,24,5,34,63,132,153,190,163,240,237,202,215,53,40,15,18,65,92,123,102,221,192,231,250,169,180,147,142,248,229,194,223,140,145,182,171,16,13,42,55,100,121,94,67,178,175,136,149,198,219,252,225,90,71,96,125,46,51,20,9,127,98,69,88,11,22,49,44,151,138,173,176,227,254,217,196]);function O(B=new Uint8Array,D=0){C[0]=D^255;for(let F of B)C[0]=I0[C[0]^F];return C[0]^255}var J0=new Uint8Array([0,208,19,195,38,246,53,229,76,156,95,143,106,186,121,169,152,72,139,91,190,110,173,125,212,4,199,23,242,34,225,49,131,83,144,64,165,117,182,102,207,31,220,12,233,57,250,42,27,203,8,216,61,237,46,254,87,135,68,148,113,161,98,178,181,101,166,118,147,67,128,80,249,41,234,58,223,15,204,28,45,253,62,238,11,219,24,200,97,177,114,162,71,151,84,132,54,230,37,245,16,192,3,211,122,170,105,185,92,140,79,159,174,126,189,109,136,88,155,75,226,50,241,33,196,20,215,7,217,9,202,26,255,47,236,60,149,69,134,86,179,99,160,112,65,145,82,130,103,183,116,164,13,221,30,206,43,251,56,232,90,138,73,153,124,172,111,191,22,198,5,213,48,224,35,243,194,18,209,1,228,52,247,39,142,94,157,77,168,120,187,107,108,188,127,175,74,154,89,137,32,240,51,227,6,214,21,197,244,36,231,55,210,2,193,17,184,104,171,123,158,78,141,93,239,63,252,44,201,25,218,10,163,115,176,96,133,85,150,70,119,167,100,180,81,129,66,146,59,235,40,248,29,205,14,222]);function L(B=new Uint8Array,D=0){C[0]=D;for(let F of B)C[0]=J0[C[0]^F];return C[0]}var K0=new Uint16Array([0,4489,8978,12955,17956,22445,25910,29887,35912,40385,44890,48851,51820,56293,59774,63735,4225,264,13203,8730,22181,18220,30135,25662,40137,36160,49115,44626,56045,52068,63999,59510,8450,12427,528,5017,26406,30383,17460,21949,44362,48323,36440,40913,60270,64231,51324,55797,12675,8202,4753,792,30631,26158,21685,17724,48587,44098,40665,36688,64495,60006,55549,51572,16900,21389,24854,28831,1056,5545,10034,14011,52812,57285,60766,64727,34920,39393,43898,47859,21125,17164,29079,24606,5281,1320,14259,9786,57037,53060,64991,60502,39145,35168,48123,43634,25350,29327,16404,20893,9506,13483,1584,6073,61262,65223,52316,56789,43370,47331,35448,39921,29575,25102,20629,16668,13731,9258,5809,1848,65487,60998,56541,52564,47595,43106,39673,35696,33800,38273,42778,46739,49708,54181,57662,61623,2112,6601,11090,15067,20068,24557,28022,31999,38025,34048,47003,42514,53933,49956,61887,57398,6337,2376,15315,10842,24293,20332,32247,27774,42250,46211,34328,38801,58158,62119,49212,53685,10562,14539,2640,7129,28518,32495,19572,24061,46475,41986,38553,34576,62383,57894,53437,49460,14787,10314,6865,2904,32743,28270,23797,19836,50700,55173,58654,62615,32808,37281,41786,45747,19012,23501,26966,30943,3168,7657,12146,16123,54925,50948,62879,58390,37033,33056,46011,41522,23237,19276,31191,26718,7393,3432,16371,11898,59150,63111,50204,54677,41258,45219,33336,37809,27462,31439,18516,23005,11618,15595,3696,8185,63375,58886,54429,50452,45483,40994,37561,33584,31687,27214,22741,18780,15843,11370,7921,3960]);function g(B=new Uint8Array,D=25443){x[0]=D;for(let F of B)x[0]=K0[(x[0]^F)&255]^x[0]>>>8;return x[0]}var M0=new Uint16Array([0,49345,49537,320,49921,960,640,49729,50689,1728,1920,51009,1280,50625,50305,1088,52225,3264,3456,52545,3840,53185,52865,3648,2560,51905,52097,2880,51457,2496,2176,51265,55297,6336,6528,55617,6912,56257,55937,6720,7680,57025,57217,8e3,56577,7616,7296,56385,5120,54465,54657,5440,55041,6080,5760,54849,53761,4800,4992,54081,4352,53697,53377,4160,61441,12480,12672,61761,13056,62401,62081,12864,13824,63169,63361,14144,62721,13760,13440,62529,15360,64705,64897,15680,65281,16320,16e3,65089,64001,15040,15232,64321,14592,63937,63617,14400,10240,59585,59777,10560,60161,11200,10880,59969,60929,11968,12160,61249,11520,60865,60545,11328,58369,9408,9600,58689,9984,59329,59009,9792,8704,58049,58241,9024,57601,8640,8320,57409,40961,24768,24960,41281,25344,41921,41601,25152,26112,42689,42881,26432,42241,26048,25728,42049,27648,44225,44417,27968,44801,28608,28288,44609,43521,27328,27520,43841,26880,43457,43137,26688,30720,47297,47489,31040,47873,31680,31360,47681,48641,32448,32640,48961,32e3,48577,48257,31808,46081,29888,30080,46401,30464,47041,46721,30272,29184,45761,45953,29504,45313,29120,28800,45121,20480,37057,37249,20800,37633,21440,21120,37441,38401,22208,22400,38721,21760,38337,38017,21568,39937,23744,23936,40257,24320,40897,40577,24128,23040,39617,39809,23360,39169,22976,22656,38977,34817,18624,18816,35137,19200,35777,35457,19008,19968,36545,36737,20288,36097,19904,19584,35905,17408,33985,34177,17728,34561,18368,18048,34369,33281,17088,17280,33601,16640,33217,32897,16448]);function j(B=new Uint8Array,D=0){x[0]=D;for(let F of B)x[0]=M0[(x[0]^F)&255]^x[0]>>>8;return x[0]}var N0=new Uint16Array([0,4129,8258,12387,16516,20645,24774,28903,33032,37161,41290,45419,49548,53677,57806,61935,4657,528,12915,8786,21173,17044,29431,25302,37689,33560,45947,41818,54205,50076,62463,58334,9314,13379,1056,5121,25830,29895,17572,21637,42346,46411,34088,38153,58862,62927,50604,54669,13907,9842,5649,1584,30423,26358,22165,18100,46939,42874,38681,34616,63455,59390,55197,51132,18628,22757,26758,30887,2112,6241,10242,14371,51660,55789,59790,63919,35144,39273,43274,47403,23285,19156,31415,27286,6769,2640,14899,10770,56317,52188,64447,60318,39801,35672,47931,43802,27814,31879,19684,23749,11298,15363,3168,7233,60846,64911,52716,56781,44330,48395,36200,40265,32407,28342,24277,20212,15891,11826,7761,3696,65439,61374,57309,53244,48923,44858,40793,36728,37256,33193,45514,41451,53516,49453,61774,57711,4224,161,12482,8419,20484,16421,28742,24679,33721,37784,41979,46042,49981,54044,58239,62302,689,4752,8947,13010,16949,21012,25207,29270,46570,42443,38312,34185,62830,58703,54572,50445,13538,9411,5280,1153,29798,25671,21540,17413,42971,47098,34713,38840,59231,63358,50973,55100,9939,14066,1681,5808,26199,30326,17941,22068,55628,51565,63758,59695,39368,35305,47498,43435,22596,18533,30726,26663,6336,2273,14466,10403,52093,56156,60223,64286,35833,39896,43963,48026,19061,23124,27191,31254,2801,6864,10931,14994,64814,60687,56684,52557,48554,44427,40424,36297,31782,27655,23652,19525,15522,11395,7392,3265,61215,65342,53085,57212,44955,49082,36825,40952,28183,32310,20053,24180,11923,16050,3793,7920]);function P(B=new Uint8Array,D=7439){x[0]=D;for(let F of B)x[0]=N0[x[0]>>>8^F]^x[0]<<8;return x[0]}var Q0=new Uint16Array([0,32773,32783,10,32795,30,20,32785,32819,54,60,32825,40,32813,32807,34,32867,102,108,32873,120,32893,32887,114,80,32853,32863,90,32843,78,68,32833,32963,198,204,32969,216,32989,32983,210,240,33013,33023,250,33003,238,228,32993,160,32933,32943,170,32955,190,180,32945,32915,150,156,32921,136,32909,32903,130,33155,390,396,33161,408,33181,33175,402,432,33205,33215,442,33195,430,420,33185,480,33253,33263,490,33275,510,500,33265,33235,470,476,33241,456,33229,33223,450,320,33093,33103,330,33115,350,340,33105,33139,374,380,33145,360,33133,33127,354,33059,294,300,33065,312,33085,33079,306,272,33045,33055,282,33035,270,260,33025,33539,774,780,33545,792,33565,33559,786,816,33589,33599,826,33579,814,804,33569,864,33637,33647,874,33659,894,884,33649,33619,854,860,33625,840,33613,33607,834,960,33733,33743,970,33755,990,980,33745,33779,1014,1020,33785,1e3,33773,33767,994,33699,934,940,33705,952,33725,33719,946,912,33685,33695,922,33675,910,900,33665,640,33413,33423,650,33435,670,660,33425,33459,694,700,33465,680,33453,33447,674,33507,742,748,33513,760,33533,33527,754,720,33493,33503,730,33483,718,708,33473,33347,582,588,33353,600,33373,33367,594,624,33397,33407,634,33387,622,612,33377,544,33317,33327,554,33339,574,564,33329,33299,534,540,33305,520,33293,33287,514]);function Y(B=new Uint8Array,D=0){x[0]=D;for(let F of B)x[0]=Q0[x[0]>>>8^F]^x[0]<<8;return x[0]}var S0=new Uint16Array([0,4129,8258,12387,16516,20645,24774,28903,33032,37161,41290,45419,49548,53677,57806,61935,4657,528,12915,8786,21173,17044,29431,25302,37689,33560,45947,41818,54205,50076,62463,58334,9314,13379,1056,5121,25830,29895,17572,21637,42346,46411,34088,38153,58862,62927,50604,54669,13907,9842,5649,1584,30423,26358,22165,18100,46939,42874,38681,34616,63455,59390,55197,51132,18628,22757,26758,30887,2112,6241,10242,14371,51660,55789,59790,63919,35144,39273,43274,47403,23285,19156,31415,27286,6769,2640,14899,10770,56317,52188,64447,60318,39801,35672,47931,43802,27814,31879,19684,23749,11298,15363,3168,7233,60846,64911,52716,56781,44330,48395,36200,40265,32407,28342,24277,20212,15891,11826,7761,3696,65439,61374,57309,53244,48923,44858,40793,36728,37256,33193,45514,41451,53516,49453,61774,57711,4224,161,12482,8419,20484,16421,28742,24679,33721,37784,41979,46042,49981,54044,58239,62302,689,4752,8947,13010,16949,21012,25207,29270,46570,42443,38312,34185,62830,58703,54572,50445,13538,9411,5280,1153,29798,25671,21540,17413,42971,47098,34713,38840,59231,63358,50973,55100,9939,14066,1681,5808,26199,30326,17941,22068,55628,51565,63758,59695,39368,35305,47498,43435,22596,18533,30726,26663,6336,2273,14466,10403,52093,56156,60223,64286,35833,39896,43963,48026,19061,23124,27191,31254,2801,6864,10931,14994,64814,60687,56684,52557,48554,44427,40424,36297,31782,27655,23652,19525,15522,11395,7392,3265,61215,65342,53085,57212,44955,49082,36825,40952,28183,32310,20053,24180,11923,16050,3793,7920]);function _(B=new Uint8Array,D=65535){x[0]=D;for(let F of B)x[0]=S0[x[0]>>>8^F]^x[0]<<8;return x[0]}var V0=new Uint16Array([0,51303,22697,37070,45394,31029,59899,8604,43715,25252,62058,14861,7057,54262,17208,35679,40417,21894,50504,3375,11443,58580,29722,48253,14114,65349,28555,42988,34416,19991,57049,5822,62373,15298,43788,25451,17143,35472,6750,53817,22886,37121,463,51624,59444,8275,45213,30970,28228,42531,14061,65162,57110,6001,34751,20440,50311,3296,39982,21577,30165,48562,11644,58651,12077,59210,30596,49123,40575,22040,50902,3761,34286,19849,56647,5408,13500,64731,27669,42098,45772,31403,60005,8706,926,52217,23351,37712,6159,53352,16550,35009,43357,24890,61940,14739,56456,5359,33825,19526,28122,42429,13683,64788,30283,48684,12002,59013,50969,3966,40880,22487,16745,35086,6592,53671,61499,14428,43154,24821,60330,9165,45827,31588,23288,37535,593,51766,24154,38461,1779,52884,61192,10095,47009,32710,62617,15614,44080,25687,17867,36268,7522,54533,50107,3036,39698,21365,29417,47758,10816,57895,27e3,41247,12753,63926,55338,4173,32899,18660,44543,26008,62806,15665,7341,54474,17412,35939,1852,53083,24469,38898,46702,32265,61127,9888,12318,63609,26807,41168,33100,18731,55781,4482,39645,21178,49780,2579,11151,58344,29478,47937,29047,47376,10718,57785,49189,2114,39052,20715,56244,5075,33565,19322,27366,41601,12879,64040,60566,9457,46143,31832,24004,38307,1389,52490,18005,36402,7932,54939,63239,16224,44974,26569,33490,19125,55931,4636,13184,64487,27433,41806,10257,57462,28856,47327,39235,20772,49642,2445,7987,55124,18330,36861,44641,26118,63176,16047,46576,32151,60761,9534,1186,52421,23563,37996]);function k(B=new Uint8Array,D=65535){x[0]=D;for(let F of B)x[0]=V0[x[0]>>>8^F]^x[0]<<8;return x[0]}var W0=new Uint16Array([0,32773,32783,10,32795,30,20,32785,32819,54,60,32825,40,32813,32807,34,32867,102,108,32873,120,32893,32887,114,80,32853,32863,90,32843,78,68,32833,32963,198,204,32969,216,32989,32983,210,240,33013,33023,250,33003,238,228,32993,160,32933,32943,170,32955,190,180,32945,32915,150,156,32921,136,32909,32903,130,33155,390,396,33161,408,33181,33175,402,432,33205,33215,442,33195,430,420,33185,480,33253,33263,490,33275,510,500,33265,33235,470,476,33241,456,33229,33223,450,320,33093,33103,330,33115,350,340,33105,33139,374,380,33145,360,33133,33127,354,33059,294,300,33065,312,33085,33079,306,272,33045,33055,282,33035,270,260,33025,33539,774,780,33545,792,33565,33559,786,816,33589,33599,826,33579,814,804,33569,864,33637,33647,874,33659,894,884,33649,33619,854,860,33625,840,33613,33607,834,960,33733,33743,970,33755,990,980,33745,33779,1014,1020,33785,1e3,33773,33767,994,33699,934,940,33705,952,33725,33719,946,912,33685,33695,922,33675,910,900,33665,640,33413,33423,650,33435,670,660,33425,33459,694,700,33465,680,33453,33447,674,33507,742,748,33513,760,33533,33527,754,720,33493,33503,730,33483,718,708,33473,33347,582,588,33353,600,33373,33367,594,624,33397,33407,634,33387,622,612,33377,544,33317,33327,554,33339,574,564,33329,33299,534,540,33305,520,33293,33287,514]);function q(B=new Uint8Array,D=65535){x[0]=D;for(let F of B)x[0]=W0[x[0]>>>8^F]^x[0]<<8;return x[0]}var X0=new Uint16Array([0,32773,32783,10,32795,30,20,32785,32819,54,60,32825,40,32813,32807,34,32867,102,108,32873,120,32893,32887,114,80,32853,32863,90,32843,78,68,32833,32963,198,204,32969,216,32989,32983,210,240,33013,33023,250,33003,238,228,32993,160,32933,32943,170,32955,190,180,32945,32915,150,156,32921,136,32909,32903,130,33155,390,396,33161,408,33181,33175,402,432,33205,33215,442,33195,430,420,33185,480,33253,33263,490,33275,510,500,33265,33235,470,476,33241,456,33229,33223,450,320,33093,33103,330,33115,350,340,33105,33139,374,380,33145,360,33133,33127,354,33059,294,300,33065,312,33085,33079,306,272,33045,33055,282,33035,270,260,33025,33539,774,780,33545,792,33565,33559,786,816,33589,33599,826,33579,814,804,33569,864,33637,33647,874,33659,894,884,33649,33619,854,860,33625,840,33613,33607,834,960,33733,33743,970,33755,990,980,33745,33779,1014,1020,33785,1e3,33773,33767,994,33699,934,940,33705,952,33725,33719,946,912,33685,33695,922,33675,910,900,33665,640,33413,33423,650,33435,670,660,33425,33459,694,700,33465,680,33453,33447,674,33507,742,748,33513,760,33533,33527,754,720,33493,33503,730,33483,718,708,33473,33347,582,588,33353,600,33373,33367,594,624,33397,33407,634,33387,622,612,33377,544,33317,33327,554,33339,574,564,33329,33299,534,540,33305,520,33293,33287,514]);function v(B=new Uint8Array,D=32781){x[0]=D;for(let F of B)x[0]=X0[x[0]>>>8^F]^x[0]<<8;return x[0]}var Z0=new Uint16Array([0,1417,2834,3739,5668,5037,7478,6335,11336,10689,10074,8915,14956,16357,12670,13559,22672,23833,21378,22027,20148,19261,17830,16431,29912,29009,32714,31299,25340,26485,27118,27751,45344,46249,47666,49083,42756,41613,44054,43423,40296,39137,38522,37875,35660,36549,32862,34263,59824,60473,58018,59179,65428,64029,62598,61711,50680,49265,52970,52067,54236,54869,55502,56647,26569,25152,27867,26962,29165,29796,31487,32630,19329,19976,16531,17690,23973,22572,22199,21310,16217,15056,13387,12738,10621,11508,8815,10214,4881,5784,6147,7562,1333,188,3623,2990,55017,54112,56827,55410,49357,50500,52191,52822,64161,65320,61875,62522,60549,59660,59287,57886,36473,35824,34155,32994,39005,40404,37711,38598,41521,42936,43299,44202,46101,45468,48903,47758,53138,51739,50304,49417,55734,56383,53924,55085,58330,58963,59592,60737,62974,61559,65260,64357,38658,37515,39952,39321,33062,33967,35380,36797,47946,48835,45144,46545,44398,43239,42620,41973,32434,31547,30112,28713,26774,27935,25476,26125,21242,22387,23016,23649,17630,16727,20428,19013,9762,9131,11568,10425,12294,13711,15124,16029,2666,4067,376,1265,7246,6599,5980,4821,43099,44498,41801,42688,48767,48118,46445,45284,33811,33178,36609,35464,37431,38846,39205,40108,61643,62786,64473,65104,59119,58214,60925,59508,56451,55562,55185,53784,51879,53038,49589,50236,6523,7410,4713,6112,3935,2774,1101,452,13619,12474,15905,15272,8983,9886,10245,11660,16875,17506,19193,20336,22479,21062,23773,22868,28067,26666,26289,25400,31623,32270,28821,29980]);function z(B=new Uint8Array,D=1){x[0]=D^1;for(let F of B)x[0]=Z0[x[0]>>>8^F]^x[0]<<8;return x[0]^1}var $0=new Uint16Array([0,1417,2834,3739,5668,5037,7478,6335,11336,10689,10074,8915,14956,16357,12670,13559,22672,23833,21378,22027,20148,19261,17830,16431,29912,29009,32714,31299,25340,26485,27118,27751,45344,46249,47666,49083,42756,41613,44054,43423,40296,39137,38522,37875,35660,36549,32862,34263,59824,60473,58018,59179,65428,64029,62598,61711,50680,49265,52970,52067,54236,54869,55502,56647,26569,25152,27867,26962,29165,29796,31487,32630,19329,19976,16531,17690,23973,22572,22199,21310,16217,15056,13387,12738,10621,11508,8815,10214,4881,5784,6147,7562,1333,188,3623,2990,55017,54112,56827,55410,49357,50500,52191,52822,64161,65320,61875,62522,60549,59660,59287,57886,36473,35824,34155,32994,39005,40404,37711,38598,41521,42936,43299,44202,46101,45468,48903,47758,53138,51739,50304,49417,55734,56383,53924,55085,58330,58963,59592,60737,62974,61559,65260,64357,38658,37515,39952,39321,33062,33967,35380,36797,47946,48835,45144,46545,44398,43239,42620,41973,32434,31547,30112,28713,26774,27935,25476,26125,21242,22387,23016,23649,17630,16727,20428,19013,9762,9131,11568,10425,12294,13711,15124,16029,2666,4067,376,1265,7246,6599,5980,4821,43099,44498,41801,42688,48767,48118,46445,45284,33811,33178,36609,35464,37431,38846,39205,40108,61643,62786,64473,65104,59119,58214,60925,59508,56451,55562,55185,53784,51879,53038,49589,50236,6523,7410,4713,6112,3935,2774,1101,452,13619,12474,15905,15272,8983,9886,10245,11660,16875,17506,19193,20336,22479,21062,23773,22868,28067,26666,26289,25400,31623,32270,28821,29980]);function R(B=new Uint8Array,D=0){x[0]=D;for(let F of B)x[0]=$0[x[0]>>>8^F]^x[0]<<8;return x[0]}var xx=new Uint16Array([0,13918,27836,23266,55672,61222,46532,33690,65417,51671,37685,42347,9969,4271,19021,31763,45675,33845,57047,59529,27411,23885,1967,12785,19938,31676,8542,5888,38042,41668,63526,52856,10671,8177,17683,29517,61655,50825,40043,43573,54822,57464,47770,36036,3934,14592,25570,21948,39876,44442,63352,49446,17084,29922,11776,6238,25677,21011,2289,16047,48437,35691,53641,59351,21342,25856,16354,2492,35366,48248,59034,53444,44247,39561,49259,63029,30127,17393,6419,12109,57653,55147,36233,48087,14413,3603,21745,25263,7868,10466,29184,17502,51140,61850,43896,40230,31473,19631,5709,8211,41865,38359,53045,63851,34168,45862,59844,57242,23552,27230,12476,1762,51354,65220,42022,37496,4578,10172,32094,19200,14099,333,23471,28145,61035,55349,33495,46217,42684,37090,51712,64606,32708,18842,4984,9510,22837,28523,13705,983,32845,46611,60657,55983,5335,8841,30827,20021,52655,64497,41235,38733,60254,56576,34786,45500,12838,1144,24218,26820,36627,47437,58287,54769,22123,24629,15063,3209,28826,18116,7206,10872,43490,40892,50526,62208,15736,2854,20932,26522,58368,53854,35004,48866,49905,62639,44621,38931,7049,11735,30517,16747,62946,50108,39262,44800,11418,6852,16422,30328,2667,15413,26327,20617,54035,58701,49071,35313,18313,29143,11061,7531,40689,43183,62029,50195,47104,36446,54460,58082,24952,22310,3524,15258,56397,59923,45297,34479,1333,13163,27017,24535,9156,5530,20344,31014,64188,52450,38400,41054,28198,22648,666,13508,46942,33024,56290,60860,37295,42993,64787,52045,18647,32393,9323,4661]);function G(B=new Uint8Array,D=65535){x[0]=D^65535;for(let F of B)x[0]=xx[(x[0]^F)&255]^x[0]>>>8;return x[0]^65535}var Bx=new Uint16Array([0,15717,31434,18351,62868,51441,36702,45627,54861,60200,44167,37346,9177,7868,22803,25718,37375,44186,60213,54864,25707,22798,7841,9156,18354,31447,15736,29,45606,36675,51436,62857,7835,9214,25681,22836,60175,54890,37317,44192,51414,62899,45596,36729,15682,39,18312,31469,36708,45569,62894,51403,31472,18325,58,15711,22825,25676,9187,7814,44221,37336,54903,60178,15670,83,18428,31385,51362,62919,45672,36621,60283,54814,37297,44244,7919,9098,25637,22848,44233,37292,54787,60262,22877,25656,9111,7922,31364,18401,78,15659,36624,45685,62938,51391,9133,7880,22887,25602,54841,60252,44275,37270,62944,51333,36650,45647,116,15633,31422,18395,45650,36663,51352,62973,18374,31395,15628,105,25631,22906,7893,9136,37259,44270,60225,54820,31340,18185,166,15811,36856,45725,62770,51287,44065,37188,55019,60302,22965,25808,9087,7706,60307,55030,37209,44092,7687,9058,25805,22952,15838,187,18196,31345,51274,62767,45696,36837,25847,22930,7741,9048,37219,44038,60329,54988,45754,36831,51312,62741,18222,31307,15844,129,62728,51309,36802,45735,156,15865,31318,18227,9029,7712,22927,25834,54993,60340,44059,37246,18266,31295,15760,245,45774,36779,51204,62817,37143,44146,60381,54968,25731,23014,7753,9004,54949,60352,44143,37130,9009,7764,23035,25758,232,15757,31266,18247,62844,51225,36790,45779,22977,25764,8971,7790,44117,37168,54943,60410,36748,45801,62790,51235,31256,18301,210,15799,51262,62811,45812,36753,15786,207,18272,31237,7795,8982,25785,23004,60391,54914,37165,44104]);function H(B=new Uint8Array,D=65535){x[0]=D^65535;for(let F of B)x[0]=Bx[x[0]>>>8^F]^x[0]<<8;return x[0]^65535}var Dx=new Uint16Array([0,4129,8258,12387,16516,20645,24774,28903,33032,37161,41290,45419,49548,53677,57806,61935,4657,528,12915,8786,21173,17044,29431,25302,37689,33560,45947,41818,54205,50076,62463,58334,9314,13379,1056,5121,25830,29895,17572,21637,42346,46411,34088,38153,58862,62927,50604,54669,13907,9842,5649,1584,30423,26358,22165,18100,46939,42874,38681,34616,63455,59390,55197,51132,18628,22757,26758,30887,2112,6241,10242,14371,51660,55789,59790,63919,35144,39273,43274,47403,23285,19156,31415,27286,6769,2640,14899,10770,56317,52188,64447,60318,39801,35672,47931,43802,27814,31879,19684,23749,11298,15363,3168,7233,60846,64911,52716,56781,44330,48395,36200,40265,32407,28342,24277,20212,15891,11826,7761,3696,65439,61374,57309,53244,48923,44858,40793,36728,37256,33193,45514,41451,53516,49453,61774,57711,4224,161,12482,8419,20484,16421,28742,24679,33721,37784,41979,46042,49981,54044,58239,62302,689,4752,8947,13010,16949,21012,25207,29270,46570,42443,38312,34185,62830,58703,54572,50445,13538,9411,5280,1153,29798,25671,21540,17413,42971,47098,34713,38840,59231,63358,50973,55100,9939,14066,1681,5808,26199,30326,17941,22068,55628,51565,63758,59695,39368,35305,47498,43435,22596,18533,30726,26663,6336,2273,14466,10403,52093,56156,60223,64286,35833,39896,43963,48026,19061,23124,27191,31254,2801,6864,10931,14994,64814,60687,56684,52557,48554,44427,40424,36297,31782,27655,23652,19525,15522,11395,7392,3265,61215,65342,53085,57212,44955,49082,36825,40952,28183,32310,20053,24180,11923,16050,3793,7920]);function I(B=new Uint8Array,D=0){x[0]=D^65535;for(let F of B)x[0]=Dx[x[0]>>>8^F]^x[0]<<8;return x[0]^65535}var Fx=new Uint16Array([0,4129,8258,12387,16516,20645,24774,28903,33032,37161,41290,45419,49548,53677,57806,61935,4657,528,12915,8786,21173,17044,29431,25302,37689,33560,45947,41818,54205,50076,62463,58334,9314,13379,1056,5121,25830,29895,17572,21637,42346,46411,34088,38153,58862,62927,50604,54669,13907,9842,5649,1584,30423,26358,22165,18100,46939,42874,38681,34616,63455,59390,55197,51132,18628,22757,26758,30887,2112,6241,10242,14371,51660,55789,59790,63919,35144,39273,43274,47403,23285,19156,31415,27286,6769,2640,14899,10770,56317,52188,64447,60318,39801,35672,47931,43802,27814,31879,19684,23749,11298,15363,3168,7233,60846,64911,52716,56781,44330,48395,36200,40265,32407,28342,24277,20212,15891,11826,7761,3696,65439,61374,57309,53244,48923,44858,40793,36728,37256,33193,45514,41451,53516,49453,61774,57711,4224,161,12482,8419,20484,16421,28742,24679,33721,37784,41979,46042,49981,54044,58239,62302,689,4752,8947,13010,16949,21012,25207,29270,46570,42443,38312,34185,62830,58703,54572,50445,13538,9411,5280,1153,29798,25671,21540,17413,42971,47098,34713,38840,59231,63358,50973,55100,9939,14066,1681,5808,26199,30326,17941,22068,55628,51565,63758,59695,39368,35305,47498,43435,22596,18533,30726,26663,6336,2273,14466,10403,52093,56156,60223,64286,35833,39896,43963,48026,19061,23124,27191,31254,2801,6864,10931,14994,64814,60687,56684,52557,48554,44427,40424,36297,31782,27655,23652,19525,15522,11395,7392,3265,61215,65342,53085,57212,44955,49082,36825,40952,28183,32310,20053,24180,11923,16050,3793,7920]);function J(B=new Uint8Array,D=65535){x[0]=D^65535;for(let F of B)x[0]=Fx[x[0]>>>8^F]^x[0]<<8;return x[0]^65535}var Ax=new Uint16Array([0,4489,8978,12955,17956,22445,25910,29887,35912,40385,44890,48851,51820,56293,59774,63735,4225,264,13203,8730,22181,18220,30135,25662,40137,36160,49115,44626,56045,52068,63999,59510,8450,12427,528,5017,26406,30383,17460,21949,44362,48323,36440,40913,60270,64231,51324,55797,12675,8202,4753,792,30631,26158,21685,17724,48587,44098,40665,36688,64495,60006,55549,51572,16900,21389,24854,28831,1056,5545,10034,14011,52812,57285,60766,64727,34920,39393,43898,47859,21125,17164,29079,24606,5281,1320,14259,9786,57037,53060,64991,60502,39145,35168,48123,43634,25350,29327,16404,20893,9506,13483,1584,6073,61262,65223,52316,56789,43370,47331,35448,39921,29575,25102,20629,16668,13731,9258,5809,1848,65487,60998,56541,52564,47595,43106,39673,35696,33800,38273,42778,46739,49708,54181,57662,61623,2112,6601,11090,15067,20068,24557,28022,31999,38025,34048,47003,42514,53933,49956,61887,57398,6337,2376,15315,10842,24293,20332,32247,27774,42250,46211,34328,38801,58158,62119,49212,53685,10562,14539,2640,7129,28518,32495,19572,24061,46475,41986,38553,34576,62383,57894,53437,49460,14787,10314,6865,2904,32743,28270,23797,19836,50700,55173,58654,62615,32808,37281,41786,45747,19012,23501,26966,30943,3168,7657,12146,16123,54925,50948,62879,58390,37033,33056,46011,41522,23237,19276,31191,26718,7393,3432,16371,11898,59150,63111,50204,54677,41258,45219,33336,37809,27462,31439,18516,23005,11618,15595,3696,8185,63375,58886,54429,50452,45483,40994,37561,33584,31687,27214,22741,18780,15843,11370,7921,3960]);function K(B=new Uint8Array,D=60369){x[0]=D^3011;for(let F of B)x[0]=Ax[(x[0]^F)&255]^x[0]>>>8;return x[0]^3011}var Cx=new Uint16Array([0,4489,8978,12955,17956,22445,25910,29887,35912,40385,44890,48851,51820,56293,59774,63735,4225,264,13203,8730,22181,18220,30135,25662,40137,36160,49115,44626,56045,52068,63999,59510,8450,12427,528,5017,26406,30383,17460,21949,44362,48323,36440,40913,60270,64231,51324,55797,12675,8202,4753,792,30631,26158,21685,17724,48587,44098,40665,36688,64495,60006,55549,51572,16900,21389,24854,28831,1056,5545,10034,14011,52812,57285,60766,64727,34920,39393,43898,47859,21125,17164,29079,24606,5281,1320,14259,9786,57037,53060,64991,60502,39145,35168,48123,43634,25350,29327,16404,20893,9506,13483,1584,6073,61262,65223,52316,56789,43370,47331,35448,39921,29575,25102,20629,16668,13731,9258,5809,1848,65487,60998,56541,52564,47595,43106,39673,35696,33800,38273,42778,46739,49708,54181,57662,61623,2112,6601,11090,15067,20068,24557,28022,31999,38025,34048,47003,42514,53933,49956,61887,57398,6337,2376,15315,10842,24293,20332,32247,27774,42250,46211,34328,38801,58158,62119,49212,53685,10562,14539,2640,7129,28518,32495,19572,24061,46475,41986,38553,34576,62383,57894,53437,49460,14787,10314,6865,2904,32743,28270,23797,19836,50700,55173,58654,62615,32808,37281,41786,45747,19012,23501,26966,30943,3168,7657,12146,16123,54925,50948,62879,58390,37033,33056,46011,41522,23237,19276,31191,26718,7393,3432,16371,11898,59150,63111,50204,54677,41258,45219,33336,37809,27462,31439,18516,23005,11618,15595,3696,8185,63375,58886,54429,50452,45483,40994,37561,33584,31687,27214,22741,18780,15843,11370,7921,3960]);function M(B=new Uint8Array,D=0){x[0]=D;for(let F of B)x[0]=Cx[(x[0]^F)&255]^x[0]>>>8;return x[0]}var Ex=new Uint16Array([0,28515,57030,45477,53999,48524,3113,25418,51901,42462,5243,31512,6226,30513,50836,43511,64025,38266,9439,19388,10486,18325,63024,39251,12452,24519,61026,33025,57931,36136,15501,21486,39761,62514,17815,10996,18878,9949,38776,63515,20972,16015,36650,57417,33539,60512,24005,12966,24904,3627,49038,53485,45991,56516,28001,514,44021,50326,30003,6736,31002,5753,42972,51391,22977,13986,34567,59492,35630,58445,21992,14987,37756,64543,19898,8921,16787,12016,40789,61494,41944,52411,32030,4733,28983,7764,45041,49298,26981,1542,47011,55488,48010,54505,25932,2607,49808,44531,7254,29493,4223,32540,52921,41434,2093,26446,55019,47496,56002,46497,1028,27495,14473,22506,58959,35116,60006,34053,13472,23491,62004,40279,11506,17297,8411,20408,65053,37246,45954,56545,27972,551,24941,3598,49067,53448,31039,5724,43001,51354,43984,50355,29974,6773,18843,9976,38749,63550,39796,62487,17842,10961,33574,60485,24032,12931,20937,16042,36623,57452,10451,18352,62997,39286,64060,38239,9466,19353,57966,36109,15528,21451,12417,24546,60999,33060,53962,48553,3084,25455,37,28486,57059,45440,6263,30484,50865,43474,51864,42491,5214,31549,59971,34080,13445,23526,14508,22479,58986,35081,8446,20381,65080,37211,61969,40306,11479,17332,4186,32569,52892,41471,49845,44502,7283,29456,56039,46468,1057,27458,2056,26475,54990,47533,28946,7793,45012,49335,41981,52382,32059,4696,48047,54476,25961,2570,26944,1571,46982,55525,35595,58472,21965,15022,23012,13959,34594,59457,16822,11989,40816,61459,37721,64570,19871,8956]);function N(B=new Uint8Array,D=0){x[0]=D;for(let F of B)x[0]=Ex[x[0]>>>8^F]^x[0]<<8;return x[0]}var rx=new Uint16Array([0,22837,45674,60255,15841,25812,36747,54974,31682,8951,51624,37021,17955,7958,62537,44412,63364,44721,17902,7387,51813,37712,30735,8506,35910,54643,15916,26393,45479,59538,973,23288,46653,61192,1111,23906,35804,53993,14774,24707,52735,38090,32661,9888,61470,43307,17012,6977,16825,6284,62419,43750,31832,9581,52786,38663,14971,25422,34833,53540,1946,24239,46576,60613,13647,27770,34597,56848,2222,20891,47812,58353,20109,6072,64743,42450,29548,10841,49414,38963,49867,39934,28833,10644,65322,42527,19776,5237,47369,57404,2915,21078,34024,56797,13954,28599,33650,55879,12568,26669,48787,59302,3321,21964,63664,41349,19162,5103,50513,40036,30523,11790,29942,11715,50844,40873,18711,4130,64381,41544,3892,22017,48478,58475,13013,27616,32959,55690,27294,13227,55540,33217,22399,3658,58645,48160,4444,18537,41782,64003,11453,30088,40663,51170,40218,50223,12144,30277,41211,63950,4753,19364,59096,49133,21682,3463,56121,33292,26963,12390,56483,34198,28361,14332,57666,47223,21288,2589,42849,65108,5387,19518,39552,50101,10474,29151,11047,29202,39245,49272,5830,20467,42156,64921,20709,2512,57999,48058,27908,13361,57198,34395,24529,1764,60859,46222,25136,15109,53338,35183,9235,32038,38521,53068,6642,16583,43928,62125,43093,61792,6719,17162,38324,52353,10206,32491,54167,35490,25085,14536,61046,46915,23580,1321,59884,45273,23430,691,54285,36152,26215,16210,37422,51995,8260,31089,45007,63226,7589,17552,7784,18269,44034,62775,9097,31420,37347,51414,26026,15519,55232,36597,22603,382,59937,45844]);function Q(B=new Uint8Array,D=65535){x[0]=D;for(let F of B)x[0]=rx[x[0]>>>8^F]^x[0]<<8;return x[0]}var tx=new Uint16Array([0,49345,49537,320,49921,960,640,49729,50689,1728,1920,51009,1280,50625,50305,1088,52225,3264,3456,52545,3840,53185,52865,3648,2560,51905,52097,2880,51457,2496,2176,51265,55297,6336,6528,55617,6912,56257,55937,6720,7680,57025,57217,8e3,56577,7616,7296,56385,5120,54465,54657,5440,55041,6080,5760,54849,53761,4800,4992,54081,4352,53697,53377,4160,61441,12480,12672,61761,13056,62401,62081,12864,13824,63169,63361,14144,62721,13760,13440,62529,15360,64705,64897,15680,65281,16320,16e3,65089,64001,15040,15232,64321,14592,63937,63617,14400,10240,59585,59777,10560,60161,11200,10880,59969,60929,11968,12160,61249,11520,60865,60545,11328,58369,9408,9600,58689,9984,59329,59009,9792,8704,58049,58241,9024,57601,8640,8320,57409,40961,24768,24960,41281,25344,41921,41601,25152,26112,42689,42881,26432,42241,26048,25728,42049,27648,44225,44417,27968,44801,28608,28288,44609,43521,27328,27520,43841,26880,43457,43137,26688,30720,47297,47489,31040,47873,31680,31360,47681,48641,32448,32640,48961,32e3,48577,48257,31808,46081,29888,30080,46401,30464,47041,46721,30272,29184,45761,45953,29504,45313,29120,28800,45121,20480,37057,37249,20800,37633,21440,21120,37441,38401,22208,22400,38721,21760,38337,38017,21568,39937,23744,23936,40257,24320,40897,40577,24128,23040,39617,39809,23360,39169,22976,22656,38977,34817,18624,18816,35137,19200,35777,35457,19008,19968,36545,36737,20288,36097,19904,19584,35905,17408,33985,34177,17728,34561,18368,18048,34369,33281,17088,17280,33601,16640,33217,32897,16448]);function S(B=new Uint8Array,D=65535){x[0]=D^65535;for(let F of B)x[0]=tx[(x[0]^F)&255]^x[0]>>>8;return x[0]^65535}var nx=new Uint16Array([0,4489,8978,12955,17956,22445,25910,29887,35912,40385,44890,48851,51820,56293,59774,63735,4225,264,13203,8730,22181,18220,30135,25662,40137,36160,49115,44626,56045,52068,63999,59510,8450,12427,528,5017,26406,30383,17460,21949,44362,48323,36440,40913,60270,64231,51324,55797,12675,8202,4753,792,30631,26158,21685,17724,48587,44098,40665,36688,64495,60006,55549,51572,16900,21389,24854,28831,1056,5545,10034,14011,52812,57285,60766,64727,34920,39393,43898,47859,21125,17164,29079,24606,5281,1320,14259,9786,57037,53060,64991,60502,39145,35168,48123,43634,25350,29327,16404,20893,9506,13483,1584,6073,61262,65223,52316,56789,43370,47331,35448,39921,29575,25102,20629,16668,13731,9258,5809,1848,65487,60998,56541,52564,47595,43106,39673,35696,33800,38273,42778,46739,49708,54181,57662,61623,2112,6601,11090,15067,20068,24557,28022,31999,38025,34048,47003,42514,53933,49956,61887,57398,6337,2376,15315,10842,24293,20332,32247,27774,42250,46211,34328,38801,58158,62119,49212,53685,10562,14539,2640,7129,28518,32495,19572,24061,46475,41986,38553,34576,62383,57894,53437,49460,14787,10314,6865,2904,32743,28270,23797,19836,50700,55173,58654,62615,32808,37281,41786,45747,19012,23501,26966,30943,3168,7657,12146,16123,54925,50948,62879,58390,37033,33056,46011,41522,23237,19276,31191,26718,7393,3432,16371,11898,59150,63111,50204,54677,41258,45219,33336,37809,27462,31439,18516,23005,11618,15595,3696,8185,63375,58886,54429,50452,45483,40994,37561,33584,31687,27214,22741,18780,15843,11370,7921,3960]);function V(B=new Uint8Array,D=65535){x[0]=D;for(let F of B)x[0]=nx[(x[0]^F)&255]^x[0]>>>8;return x[0]}var cx=new Uint16Array([0,49345,49537,320,49921,960,640,49729,50689,1728,1920,51009,1280,50625,50305,1088,52225,3264,3456,52545,3840,53185,52865,3648,2560,51905,52097,2880,51457,2496,2176,51265,55297,6336,6528,55617,6912,56257,55937,6720,7680,57025,57217,8e3,56577,7616,7296,56385,5120,54465,54657,5440,55041,6080,5760,54849,53761,4800,4992,54081,4352,53697,53377,4160,61441,12480,12672,61761,13056,62401,62081,12864,13824,63169,63361,14144,62721,13760,13440,62529,15360,64705,64897,15680,65281,16320,16e3,65089,64001,15040,15232,64321,14592,63937,63617,14400,10240,59585,59777,10560,60161,11200,10880,59969,60929,11968,12160,61249,11520,60865,60545,11328,58369,9408,9600,58689,9984,59329,59009,9792,8704,58049,58241,9024,57601,8640,8320,57409,40961,24768,24960,41281,25344,41921,41601,25152,26112,42689,42881,26432,42241,26048,25728,42049,27648,44225,44417,27968,44801,28608,28288,44609,43521,27328,27520,43841,26880,43457,43137,26688,30720,47297,47489,31040,47873,31680,31360,47681,48641,32448,32640,48961,32e3,48577,48257,31808,46081,29888,30080,46401,30464,47041,46721,30272,29184,45761,45953,29504,45313,29120,28800,45121,20480,37057,37249,20800,37633,21440,21120,37441,38401,22208,22400,38721,21760,38337,38017,21568,39937,23744,23936,40257,24320,40897,40577,24128,23040,39617,39809,23360,39169,22976,22656,38977,34817,18624,18816,35137,19200,35777,35457,19008,19968,36545,36737,20288,36097,19904,19584,35905,17408,33985,34177,17728,34561,18368,18048,34369,33281,17088,17280,33601,16640,33217,32897,16448]);function W(B=new Uint8Array,D=65535){x[0]=D;for(let F of B)x[0]=cx[(x[0]^F)&255]^x[0]>>>8;return x[0]}var ex=new Uint16Array([0,13732,27464,24300,54928,58164,48600,34940,3329,14501,26185,21485,56209,60981,45273,34173,6658,12198,29002,17646,52370,63798,42970,37502,5891,8871,31819,18927,49555,62519,43739,40831,13316,416,24396,27368,58004,55088,35292,48248,14597,3233,21069,26601,61333,55857,34013,45433,11782,7074,17742,28906,63638,52530,37854,42618,8967,5795,18511,32235,62871,49203,40671,43899,26632,23980,832,14052,48792,35644,54736,57460,25865,20653,3649,15333,45977,34365,55505,60789,29194,18350,6466,11494,42138,37182,53202,64118,32523,19119,5187,8679,43419,39999,49875,63351,23564,27048,14148,736,35484,48952,57812,54384,20749,25769,14917,4065,34717,45625,60629,55665,17934,29610,11590,6370,37022,42298,64470,52850,19215,32427,8263,5603,40351,43067,63191,50035,53264,58804,47960,36604,1664,13092,28104,22636,56593,59573,46681,33789,2945,15909,24777,21869,51730,65462,41306,38142,7298,10534,30666,17006,50963,62135,44123,39423,4483,9255,31435,20335,58388,53680,36700,47864,12932,1824,22988,27752,59669,56497,33373,47097,16261,2593,21709,24937,65046,52146,38238,41210,10374,7458,17358,30314,62231,50867,39007,44539,9607,4131,20175,31595,47128,36284,54096,59124,28296,23340,1472,12388,46361,32957,56913,60405,25481,22061,2241,15717,41498,38846,51538,64758,29834,16686,8130,10854,44827,39615,50259,61943,31115,19503,4803,10087,35868,47544,59220,54e3,23180,28456,12740,1120,33053,46265,59989,57329,22413,25129,15557,2401,38430,41914,64854,51442,16526,29994,11206,7778,39711,44731,61527,50675,19855,30763,9927,4963]);function X(B=new Uint8Array,D=65535){x[0]=D;for(let F of B)x[0]=ex[(x[0]^F)&255]^x[0]>>>8;return x[0]}var ox=new Uint16Array([0,22837,45674,60255,15841,25812,36747,54974,31682,8951,51624,37021,17955,7958,62537,44412,63364,44721,17902,7387,51813,37712,30735,8506,35910,54643,15916,26393,45479,59538,973,23288,46653,61192,1111,23906,35804,53993,14774,24707,52735,38090,32661,9888,61470,43307,17012,6977,16825,6284,62419,43750,31832,9581,52786,38663,14971,25422,34833,53540,1946,24239,46576,60613,13647,27770,34597,56848,2222,20891,47812,58353,20109,6072,64743,42450,29548,10841,49414,38963,49867,39934,28833,10644,65322,42527,19776,5237,47369,57404,2915,21078,34024,56797,13954,28599,33650,55879,12568,26669,48787,59302,3321,21964,63664,41349,19162,5103,50513,40036,30523,11790,29942,11715,50844,40873,18711,4130,64381,41544,3892,22017,48478,58475,13013,27616,32959,55690,27294,13227,55540,33217,22399,3658,58645,48160,4444,18537,41782,64003,11453,30088,40663,51170,40218,50223,12144,30277,41211,63950,4753,19364,59096,49133,21682,3463,56121,33292,26963,12390,56483,34198,28361,14332,57666,47223,21288,2589,42849,65108,5387,19518,39552,50101,10474,29151,11047,29202,39245,49272,5830,20467,42156,64921,20709,2512,57999,48058,27908,13361,57198,34395,24529,1764,60859,46222,25136,15109,53338,35183,9235,32038,38521,53068,6642,16583,43928,62125,43093,61792,6719,17162,38324,52353,10206,32491,54167,35490,25085,14536,61046,46915,23580,1321,59884,45273,23430,691,54285,36152,26215,16210,37422,51995,8260,31089,45007,63226,7589,17552,7784,18269,44034,62775,9097,31420,37347,51414,26026,15519,55232,36597,22603,382,59937,45844]);function Z(B=new Uint8Array,D=0){x[0]=D;for(let F of B)x[0]=ox[x[0]>>>8^F]^x[0]<<8;return x[0]}var ax=new Uint16Array([0,30043,60086,40941,41015,54636,19073,16346,13621,16494,57219,43736,38146,57433,32692,2799,27242,7985,32988,62855,51805,48902,8427,21936,24415,10756,46569,49330,65384,35379,5598,24709,54484,41359,15970,19257,29923,440,40533,60174,57825,38074,2903,32268,16854,13453,43872,56891,48830,52197,21512,8531,7817,27602,62527,33124,35723,65232,24893,5222,11196,24295,49418,46161,56563,43432,13893,17182,31940,2463,38514,58153,59846,40093,880,30251,18929,15530,41799,54812,46745,50114,23599,10612,5806,25589,64536,35139,33708,63223,26906,7233,9115,22208,51501,48246,2087,32124,58001,38858,43024,56651,17062,14333,15634,18505,55204,41727,40229,59518,30611,712,25165,5910,35067,64928,49786,46881,10444,23959,22392,8739,48590,51349,63311,33300,7673,26786,52413,47590,9739,21328,27786,6609,34364,62311,63880,36051,4926,26213,22975,11492,45833,50770,42711,54156,19553,14650,1760,29627,60502,39181,37858,59065,31060,3087,13269,18062,55651,44088,6249,27954,62175,34692,47198,52485,21224,10163,11612,22535,51178,45745,36203,63536,26589,4742,29187,1880,39093,60910,53812,42863,14466,19929,18230,12909,44416,55515,59137,37466,3511,30956,4174,25877,64248,36771,45177,50466,23247,12180,9595,20512,53197,47766,34124,61463,28666,6817,31268,3967,37010,58825,55827,44872,12453,17918,20241,14922,42407,53500,61222,39549,1424,28875,50330,45505,11820,23415,25773,4598,36379,64320,61871,34036,6937,28226,20888,9411,47918,52853,44784,56235,17478,12573,3783,31644,58481,37162,39877,61086,29043,1064,15346,20137,53572,42015]);function $(B=new Uint8Array,D=0){x[0]=D;for(let F of B)x[0]=ax[x[0]>>>8^F]^x[0]<<8;return x[0]}var ix=new Uint16Array([0,4489,8978,12955,17956,22445,25910,29887,35912,40385,44890,48851,51820,56293,59774,63735,4225,264,13203,8730,22181,18220,30135,25662,40137,36160,49115,44626,56045,52068,63999,59510,8450,12427,528,5017,26406,30383,17460,21949,44362,48323,36440,40913,60270,64231,51324,55797,12675,8202,4753,792,30631,26158,21685,17724,48587,44098,40665,36688,64495,60006,55549,51572,16900,21389,24854,28831,1056,5545,10034,14011,52812,57285,60766,64727,34920,39393,43898,47859,21125,17164,29079,24606,5281,1320,14259,9786,57037,53060,64991,60502,39145,35168,48123,43634,25350,29327,16404,20893,9506,13483,1584,6073,61262,65223,52316,56789,43370,47331,35448,39921,29575,25102,20629,16668,13731,9258,5809,1848,65487,60998,56541,52564,47595,43106,39673,35696,33800,38273,42778,46739,49708,54181,57662,61623,2112,6601,11090,15067,20068,24557,28022,31999,38025,34048,47003,42514,53933,49956,61887,57398,6337,2376,15315,10842,24293,20332,32247,27774,42250,46211,34328,38801,58158,62119,49212,53685,10562,14539,2640,7129,28518,32495,19572,24061,46475,41986,38553,34576,62383,57894,53437,49460,14787,10314,6865,2904,32743,28270,23797,19836,50700,55173,58654,62615,32808,37281,41786,45747,19012,23501,26966,30943,3168,7657,12146,16123,54925,50948,62879,58390,37033,33056,46011,41522,23237,19276,31191,26718,7393,3432,16371,11898,59150,63111,50204,54677,41258,45219,33336,37809,27462,31439,18516,23005,11618,15595,3696,8185,63375,58886,54429,50452,45483,40994,37561,33584,31687,27214,22741,18780,15843,11370,7921,3960]);function x0(B=new Uint8Array,D=50578){x[0]=D;for(let F of B)x[0]=ix[(x[0]^F)&255]^x[0]>>>8;return x[0]}var ux=new Uint16Array([0,7631,15262,9809,30524,27379,19618,20845,61048,62391,54758,51241,39236,33931,41690,48917,49471,56560,64161,59246,46595,43980,36253,36946,12103,12936,5337,2326,22651,17844,25573,32298,40881,33406,42031,47584,59533,62786,54035,52956,29129,27654,19031,22424,1781,6970,15723,8356,24206,17217,25872,30943,10674,13437,4652,4067,45302,44345,35688,38567,51146,55813,64596,57755,8877,16226,6451,1276,21905,18526,28175,29632,52437,53530,63307,60036,48105,42534,32887,40376,58258,65117,55308,50627,38062,35169,44848,45823,3562,4133,13940,11195,31446,26393,16712,23687,48412,41171,34434,39757,51744,55279,61886,60529,21348,20139,26874,30005,9304,14743,8134,521,31779,25068,18365,23154,2847,5840,12417,11598,37467,36756,43461,46090,58727,63656,57081,49974,17754,22677,32452,25355,12902,12201,2552,5175,43810,46829,37052,36211,56350,49617,59264,64079,33893,39338,49147,41524,62297,61078,51399,54536,27165,30674,20867,19532,7457,238,9919,15216,56043,50980,57717,64698,44503,45080,38473,35718,13459,10588,3853,4802,17327,24160,30769,26110,7124,1563,8266,15749,27880,28967,22390,19129,62892,59491,52786,54269,33424,40799,47374,42177,26615,31288,23657,16806,4299,3332,11093,13978,35215,37952,45585,45022,65203,58236,50477,55522,42696,47879,40278,32921,53748,52283,60010,63397,18608,21887,29486,28385,16268,8771,1042,6621,63558,58761,50136,56855,36730,37557,46308,43307,5694,3057,11680,12399,24834,31949,23196,18259,14713,9398,743,7976,20037,21386,30171,26644,55041,51918,60575,61776,41021,48626,39843,34412]);function B0(B=new Uint8Array,D=0){x[0]=D^65535;for(let F of B)x[0]=ux[x[0]>>>8^F]^x[0]<<8;return x[0]^65535}var fx=new Uint16Array([0,4489,8978,12955,17956,22445,25910,29887,35912,40385,44890,48851,51820,56293,59774,63735,4225,264,13203,8730,22181,18220,30135,25662,40137,36160,49115,44626,56045,52068,63999,59510,8450,12427,528,5017,26406,30383,17460,21949,44362,48323,36440,40913,60270,64231,51324,55797,12675,8202,4753,792,30631,26158,21685,17724,48587,44098,40665,36688,64495,60006,55549,51572,16900,21389,24854,28831,1056,5545,10034,14011,52812,57285,60766,64727,34920,39393,43898,47859,21125,17164,29079,24606,5281,1320,14259,9786,57037,53060,64991,60502,39145,35168,48123,43634,25350,29327,16404,20893,9506,13483,1584,6073,61262,65223,52316,56789,43370,47331,35448,39921,29575,25102,20629,16668,13731,9258,5809,1848,65487,60998,56541,52564,47595,43106,39673,35696,33800,38273,42778,46739,49708,54181,57662,61623,2112,6601,11090,15067,20068,24557,28022,31999,38025,34048,47003,42514,53933,49956,61887,57398,6337,2376,15315,10842,24293,20332,32247,27774,42250,46211,34328,38801,58158,62119,49212,53685,10562,14539,2640,7129,28518,32495,19572,24061,46475,41986,38553,34576,62383,57894,53437,49460,14787,10314,6865,2904,32743,28270,23797,19836,50700,55173,58654,62615,32808,37281,41786,45747,19012,23501,26966,30943,3168,7657,12146,16123,54925,50948,62879,58390,37033,33056,46011,41522,23237,19276,31191,26718,7393,3432,16371,11898,59150,63111,50204,54677,41258,45219,33336,37809,27462,31439,18516,23005,11618,15595,3696,8185,63375,58886,54429,50452,45483,40994,37561,33584,31687,27214,22741,18780,15843,11370,7921,3960]);function D0(B=new Uint8Array,D=21837){x[0]=D;for(let F of B)x[0]=fx[(x[0]^F)&255]^x[0]>>>8;return x[0]}var mx=new Uint16Array([0,35767,40153,5998,45573,14770,11996,42347,61373,25610,29540,63699,23992,54799,49505,19158,21709,57210,51220,17315,59080,28031,31249,61862,47984,12487,10153,44062,2421,33474,38316,7707,43418,8749,13635,48884,7071,36904,34630,3313,17959,52624,56062,20809,62498,32661,26875,58188,64855,30432,24974,59961,20306,50405,54155,22588,4842,39261,36403,1412,41199,11096,15414,46977,55427,21300,17498,53229,27270,57649,63071,32232,14142,48265,44007,8272,34107,3724,6626,37461,35918,2041,4247,39712,15947,46588,41618,10533,25587,59460,65322,29853,53750,23105,19759,50840,28953,64174,60864,26231,49948,18603,24517,54386,40612,5395,637,35274,11425,42774,45176,15311,9684,44643,47373,12986,38865,7270,2824,32959,51817,16862,22192,56583,30828,62427,58549,28418,15025,45318,42600,11743,34996,771,5229,40922,54540,24251,18901,49762,26377,60606,64464,28775,28284,58827,62117,30994,56441,22478,16544,51991,33217,2678,7448,38575,13252,47219,44829,9386,37675,6300,4082,33861,8494,43673,48631,13888,31894,63265,57423,27640,52883,17700,21066,55805,51174,19537,23359,53384,30179,65108,59706,25229,10331,41964,46210,16181,39518,4585,1671,36144,57906,27013,32491,62812,20535,56192,52462,18265,3471,34360,37206,6881,49034,13373,9043,43236,46847,15688,10790,41361,1274,36685,38947,5012,22850,54005,50587,20012,60231,24816,30622,64553,19368,49183,55153,23750,63917,29210,25972,61123,42005,12194,14540,45947,5648,40359,35529,382,8037,38098,33724,2059,44384,9943,12729,47630,61656,31599,27649,59318,17117,51562,56836,21939]);function F0(B=new Uint8Array,D=0){x[0]=D;for(let F of B)x[0]=mx[x[0]>>>8^F]^x[0]<<8;return x[0]}var sx=new Uint16Array([0,41111,57785,16686,25573,50034,33372,8907,51146,26461,9843,34532,42031,1208,17814,58625,12035,36756,52922,28205,19686,60529,44383,3528,59593,18526,2416,43495,35628,11195,27285,51714,24070,65169,49087,7976,15843,40308,56410,31949,39372,14683,30837,55522,64041,23230,7056,47879,28933,53650,37052,12331,4832,45687,62297,21454,46799,5720,22390,63457,54570,30141,13459,37892,48140,7323,23989,64802,57321,32638,15952,40647,31686,56145,39551,15080,6179,47284,63898,22797,37647,13208,29366,53793,61674,20605,4435,45508,21701,62546,46460,5611,14112,38839,54937,30222,57866,17053,947,41764,33263,8568,24662,49345,9664,34135,50297,25838,17957,59058,42908,1803,52489,28062,11440,35879,44780,3707,20309,61378,2755,43604,60282,19437,26918,51633,34975,10248,55439,30744,14646,39329,47978,7165,23251,64068,8005,49106,65276,24171,31904,56375,40217,15758,63372,22299,5685,46754,37993,13566,30160,54599,12358,37073,53759,29032,21411,62260,45594,4749,34441,9758,26416,51111,58732,17915,1237,42050,16707,57812,41210,109,8870,33329,49951,25480,43402,2333,18483,59556,51823,27384,11222,35649,28224,52951,36857,12142,3493,44338,60444,19595,25731,50196,34106,9645,1894,42993,59103,17992,41801,990,17136,57959,49324,24635,8469,33154,19328,60183,43577,2734,10341,35058,51676,26955,35914,11485,28147,52580,61359,20280,3606,44673,14981,39442,56124,31659,22880,63991,47321,6222,64847,24024,7414,48225,40618,15933,32531,57220,5510,46353,62527,21672,30307,55028,38874,14157,53836,29403,13301,37730,45481,4414,20496,61575]);function A0(B=new Uint8Array,D=0){x[0]=D;for(let F of B)x[0]=sx[x[0]>>>8^F]^x[0]<<8;return x[0]}var bx=new Uint16Array([0,4489,8978,12955,17956,22445,25910,29887,35912,40385,44890,48851,51820,56293,59774,63735,4225,264,13203,8730,22181,18220,30135,25662,40137,36160,49115,44626,56045,52068,63999,59510,8450,12427,528,5017,26406,30383,17460,21949,44362,48323,36440,40913,60270,64231,51324,55797,12675,8202,4753,792,30631,26158,21685,17724,48587,44098,40665,36688,64495,60006,55549,51572,16900,21389,24854,28831,1056,5545,10034,14011,52812,57285,60766,64727,34920,39393,43898,47859,21125,17164,29079,24606,5281,1320,14259,9786,57037,53060,64991,60502,39145,35168,48123,43634,25350,29327,16404,20893,9506,13483,1584,6073,61262,65223,52316,56789,43370,47331,35448,39921,29575,25102,20629,16668,13731,9258,5809,1848,65487,60998,56541,52564,47595,43106,39673,35696,33800,38273,42778,46739,49708,54181,57662,61623,2112,6601,11090,15067,20068,24557,28022,31999,38025,34048,47003,42514,53933,49956,61887,57398,6337,2376,15315,10842,24293,20332,32247,27774,42250,46211,34328,38801,58158,62119,49212,53685,10562,14539,2640,7129,28518,32495,19572,24061,46475,41986,38553,34576,62383,57894,53437,49460,14787,10314,6865,2904,32743,28270,23797,19836,50700,55173,58654,62615,32808,37281,41786,45747,19012,23501,26966,30943,3168,7657,12146,16123,54925,50948,62879,58390,37033,33056,46011,41522,23237,19276,31191,26718,7393,3432,16371,11898,59150,63111,50204,54677,41258,45219,33336,37809,27462,31439,18516,23005,11618,15595,3696,8185,63375,58886,54429,50452,45483,40994,37561,33584,31687,27214,22741,18780,15843,11370,7921,3960]);function C0(B=new Uint8Array,D=14225){x[0]=D;for(let F of B)x[0]=bx[(x[0]^F)&255]^x[0]>>>8;return x[0]}var lx=new Uint16Array([0,49345,49537,320,49921,960,640,49729,50689,1728,1920,51009,1280,50625,50305,1088,52225,3264,3456,52545,3840,53185,52865,3648,2560,51905,52097,2880,51457,2496,2176,51265,55297,6336,6528,55617,6912,56257,55937,6720,7680,57025,57217,8e3,56577,7616,7296,56385,5120,54465,54657,5440,55041,6080,5760,54849,53761,4800,4992,54081,4352,53697,53377,4160,61441,12480,12672,61761,13056,62401,62081,12864,13824,63169,63361,14144,62721,13760,13440,62529,15360,64705,64897,15680,65281,16320,16e3,65089,64001,15040,15232,64321,14592,63937,63617,14400,10240,59585,59777,10560,60161,11200,10880,59969,60929,11968,12160,61249,11520,60865,60545,11328,58369,9408,9600,58689,9984,59329,59009,9792,8704,58049,58241,9024,57601,8640,8320,57409,40961,24768,24960,41281,25344,41921,41601,25152,26112,42689,42881,26432,42241,26048,25728,42049,27648,44225,44417,27968,44801,28608,28288,44609,43521,27328,27520,43841,26880,43457,43137,26688,30720,47297,47489,31040,47873,31680,31360,47681,48641,32448,32640,48961,32e3,48577,48257,31808,46081,29888,30080,46401,30464,47041,46721,30272,29184,45761,45953,29504,45313,29120,28800,45121,20480,37057,37249,20800,37633,21440,21120,37441,38401,22208,22400,38721,21760,38337,38017,21568,39937,23744,23936,40257,24320,40897,40577,24128,23040,39617,39809,23360,39169,22976,22656,38977,34817,18624,18816,35137,19200,35777,35457,19008,19968,36545,36737,20288,36097,19904,19584,35905,17408,33985,34177,17728,34561,18368,18048,34369,33281,17088,17280,33601,16640,33217,32897,16448]);function E0(B=new Uint8Array,D=0){x[0]=D^65535;for(let F of B)x[0]=lx[(x[0]^F)&255]^x[0]>>>8;return x[0]^65535}var px=new Uint16Array([0,4489,8978,12955,17956,22445,25910,29887,35912,40385,44890,48851,51820,56293,59774,63735,4225,264,13203,8730,22181,18220,30135,25662,40137,36160,49115,44626,56045,52068,63999,59510,8450,12427,528,5017,26406,30383,17460,21949,44362,48323,36440,40913,60270,64231,51324,55797,12675,8202,4753,792,30631,26158,21685,17724,48587,44098,40665,36688,64495,60006,55549,51572,16900,21389,24854,28831,1056,5545,10034,14011,52812,57285,60766,64727,34920,39393,43898,47859,21125,17164,29079,24606,5281,1320,14259,9786,57037,53060,64991,60502,39145,35168,48123,43634,25350,29327,16404,20893,9506,13483,1584,6073,61262,65223,52316,56789,43370,47331,35448,39921,29575,25102,20629,16668,13731,9258,5809,1848,65487,60998,56541,52564,47595,43106,39673,35696,33800,38273,42778,46739,49708,54181,57662,61623,2112,6601,11090,15067,20068,24557,28022,31999,38025,34048,47003,42514,53933,49956,61887,57398,6337,2376,15315,10842,24293,20332,32247,27774,42250,46211,34328,38801,58158,62119,49212,53685,10562,14539,2640,7129,28518,32495,19572,24061,46475,41986,38553,34576,62383,57894,53437,49460,14787,10314,6865,2904,32743,28270,23797,19836,50700,55173,58654,62615,32808,37281,41786,45747,19012,23501,26966,30943,3168,7657,12146,16123,54925,50948,62879,58390,37033,33056,46011,41522,23237,19276,31191,26718,7393,3432,16371,11898,59150,63111,50204,54677,41258,45219,33336,37809,27462,31439,18516,23005,11618,15595,3696,8185,63375,58886,54429,50452,45483,40994,37561,33584,31687,27214,22741,18780,15843,11370,7921,3960]);function r0(B=new Uint8Array,D=0){x[0]=D^65535;for(let F of B)x[0]=px[(x[0]^F)&255]^x[0]>>>8;return x[0]^65535}var yx=new Uint16Array([0,4129,8258,12387,16516,20645,24774,28903,33032,37161,41290,45419,49548,53677,57806,61935,4657,528,12915,8786,21173,17044,29431,25302,37689,33560,45947,41818,54205,50076,62463,58334,9314,13379,1056,5121,25830,29895,17572,21637,42346,46411,34088,38153,58862,62927,50604,54669,13907,9842,5649,1584,30423,26358,22165,18100,46939,42874,38681,34616,63455,59390,55197,51132,18628,22757,26758,30887,2112,6241,10242,14371,51660,55789,59790,63919,35144,39273,43274,47403,23285,19156,31415,27286,6769,2640,14899,10770,56317,52188,64447,60318,39801,35672,47931,43802,27814,31879,19684,23749,11298,15363,3168,7233,60846,64911,52716,56781,44330,48395,36200,40265,32407,28342,24277,20212,15891,11826,7761,3696,65439,61374,57309,53244,48923,44858,40793,36728,37256,33193,45514,41451,53516,49453,61774,57711,4224,161,12482,8419,20484,16421,28742,24679,33721,37784,41979,46042,49981,54044,58239,62302,689,4752,8947,13010,16949,21012,25207,29270,46570,42443,38312,34185,62830,58703,54572,50445,13538,9411,5280,1153,29798,25671,21540,17413,42971,47098,34713,38840,59231,63358,50973,55100,9939,14066,1681,5808,26199,30326,17941,22068,55628,51565,63758,59695,39368,35305,47498,43435,22596,18533,30726,26663,6336,2273,14466,10403,52093,56156,60223,64286,35833,39896,43963,48026,19061,23124,27191,31254,2801,6864,10931,14994,64814,60687,56684,52557,48554,44427,40424,36297,31782,27655,23652,19525,15522,11395,7392,3265,61215,65342,53085,57212,44955,49082,36825,40952,28183,32310,20053,24180,11923,16050,3793,7920]);function t0(B=new Uint8Array,D=0){x[0]=D;for(let F of B)x[0]=yx[x[0]>>>8^F]^x[0]<<8;return x[0]}var Ux=new Uint32Array([0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117]);function n0(B=new Uint8Array,D=0){E[0]=D^4294967295;for(let F of B)E[0]=Ux[(E[0]^F)&255]^E[0]>>>8;return(E[0]^4294967295)>>>0}var dx=new Uint32Array([0,814026741,1628053482,1368330271,3256106964,4069601313,2736660542,2476421067,362157559,622008834,1956383261,1142490600,3615631907,3876005334,3062379977,2249013820,724315118,464069659,1244017668,2057518065,3912766522,3653049295,2284981200,3099001893,1052392985,239022572,1605378547,1865756166,4239262157,3425373752,2644778535,2904625618,1448630236,1725782057,928139318,131549123,2488035336,2764662781,4115036130,3317921815,1137590827,1934314974,583294401,306270772,2178579967,2975822346,3771752981,3495259616,2104785970,1307669447,478045144,754674733,3210757094,2414169107,3731512332,4008662009,1759668677,1483171376,166229551,963475930,2868270609,2591250916,3422308859,4219029006,2897260472,2620760141,3451564114,4248813479,1856278636,1579261849,263098246,1059815539,3106323023,2309207482,3626804645,3903433296,2066908571,1270319726,439917169,717067652,2275181654,3071904675,3868629948,3591607369,1166588802,1963832439,612541544,336047005,2450166177,2727321172,4076899915,3280306622,1344188021,1620812160,823439775,26328682,4209571940,3396204433,2615338894,2875713659,956090288,142198853,1509349466,1769199535,4018072979,3757826662,2390028921,3203530124,761975367,502259122,1281412525,2095432280,3519337354,3779189887,2966342752,2152448917,332459102,592831403,1926951860,1113586753,3293759101,4107782536,2774063511,2514343522,105314729,918812252,1733092931,1472850358,3370071343,4166662874,2849319621,2572166448,181078779,978191630,1807815953,1531189988,3712557272,3989581613,3158523698,2361798855,526196492,802689273,2119631078,1322389267,3824361153,3547730228,2197356843,2994474718,568795413,291647200,1089289983,1885876490,4133817142,3336570051,2540639452,2817137449,879834338,83114775,1434135304,1711154429,2659672819,2919394566,4287462681,3473437420,1553161511,1813402322,1033454285,219958584,2333177604,3147069681,3927664878,3667814171,1225083088,2038449957,672094010,411719887,3047901469,2234402536,3567343351,3827587330,2009036489,1195014460,380987683,640706262,2688376042,2427999007,3241624320,4054994165,1646879550,1387031755,52657364,866546465,1685035671,1424659810,90539389,903907976,2793121091,2533272246,3346119337,4160009564,1912180576,1098678421,284397706,544644991,3018698932,2204680001,3538399070,3798114475,1329836409,2143731340,776580755,516727142,2371325613,3184689496,3965555015,3705183922,1523950734,1783671675,1004518244,190493841,2562825050,2823066799,4190864560,3377367877,842517835,45269694,1396560545,1673059668,4028887711,3232169322,2435444085,2712461952,664918204,388290377,1185662806,1982777507,3853903720,3576752285,2227173506,3023763319,421258917,698280272,2014443855,1217722042,3675249009,3951744644,3120940699,2323695982,210629458,1007221927,1837624504,1560470349,3466185862,4263297907,2945700716,2669075609]);function c0(B=new Uint8Array,D=0){E[0]=D^4294967295;for(let F of B)E[0]=dx[(E[0]^F)&255]^E[0]>>>8;return(E[0]^4294967295)>>>0}var hx=new Uint32Array([0,79764919,159529838,222504665,319059676,398814059,445009330,507990021,638119352,583659535,797628118,726387553,890018660,835552979,1015980042,944750013,1276238704,1221641927,1167319070,1095957929,1595256236,1540665371,1452775106,1381403509,1780037320,1859660671,1671105958,1733955601,2031960084,2111593891,1889500026,1952343757,2552477408,2632100695,2443283854,2506133561,2334638140,2414271883,2191915858,2254759653,3190512472,3135915759,3081330742,3009969537,2905550212,2850959411,2762807018,2691435357,3560074640,3505614887,3719321342,3648080713,3342211916,3287746299,3467911202,3396681109,4063920168,4143685023,4223187782,4286162673,3779000052,3858754371,3904687514,3967668269,881225847,809987520,1023691545,969234094,662832811,591600412,771767749,717299826,311336399,374308984,453813921,533576470,25881363,88864420,134795389,214552010,2023205639,2086057648,1897238633,1976864222,1804852699,1867694188,1645340341,1724971778,1587496639,1516133128,1461550545,1406951526,1302016099,1230646740,1142491917,1087903418,2896545431,2825181984,2770861561,2716262478,3215044683,3143675388,3055782693,3001194130,2326604591,2389456536,2200899649,2280525302,2578013683,2640855108,2418763421,2498394922,3769900519,3832873040,3912640137,3992402750,4088425275,4151408268,4197601365,4277358050,3334271071,3263032808,3476998961,3422541446,3585640067,3514407732,3694837229,3640369242,1762451694,1842216281,1619975040,1682949687,2047383090,2127137669,1938468188,2001449195,1325665622,1271206113,1183200824,1111960463,1543535498,1489069629,1434599652,1363369299,622672798,568075817,748617968,677256519,907627842,853037301,1067152940,995781531,51762726,131386257,177728840,240578815,269590778,349224269,429104020,491947555,4046411278,4126034873,4172115296,4234965207,3794477266,3874110821,3953728444,4016571915,3609705398,3555108353,3735388376,3664026991,3290680682,3236090077,3449943556,3378572211,3174993278,3120533705,3032266256,2961025959,2923101090,2868635157,2813903052,2742672763,2604032198,2683796849,2461293480,2524268063,2284983834,2364738477,2175806836,2238787779,1569362073,1498123566,1409854455,1355396672,1317987909,1246755826,1192025387,1137557660,2072149281,2135122070,1912620623,1992383480,1753615357,1816598090,1627664531,1707420964,295390185,358241886,404320391,483945776,43990325,106832002,186451547,266083308,932423249,861060070,1041341759,986742920,613929101,542559546,756411363,701822548,3316196985,3244833742,3425377559,3370778784,3601682597,3530312978,3744426955,3689838204,3819031489,3881883254,3928223919,4007849240,4037393693,4100235434,4180117107,4259748804,2310601993,2373574846,2151335527,2231098320,2596047829,2659030626,2470359227,2550115596,2947551409,2876312838,2788305887,2733848168,3165939309,3094707162,3040238851,2985771188]);function e0(B=new Uint8Array,D=0){E[0]=D^4294967295;for(let F of B)E[0]=hx[E[0]>>>24^F]^E[0]<<8;return(E[0]^4294967295)>>>0}var wx=new Uint32Array([0,4067132163,3778769143,324072436,3348797215,904991772,648144872,3570033899,2329499855,2024987596,1809983544,2575936315,1296289744,3207089363,2893594407,1578318884,274646895,3795141740,4049975192,51262619,3619967088,632279923,922689671,3298075524,2592579488,1760304291,2075979607,2312596564,1562183871,2943781820,3156637768,1313733451,549293790,3537243613,3246849577,871202090,3878099393,357341890,102525238,4101499445,2858735121,1477399826,1264559846,3107202533,1845379342,2677391885,2361733625,2125378298,820201905,3263744690,3520608582,598981189,4151959214,85089709,373468761,3827903834,3124367742,1213305469,1526817161,2842354314,2107672161,2412447074,2627466902,1861252501,1098587580,3004210879,2688576843,1378610760,2262928035,1955203488,1742404180,2511436119,3416409459,969524848,714683780,3639785095,205050476,4266873199,3976438427,526918040,1361435347,2739821008,2954799652,1114974503,2529119692,1691668175,2005155131,2247081528,3690758684,697762079,986182379,3366744552,476452099,3993867776,4250756596,255256311,1640403810,2477592673,2164122517,1922457750,2791048317,1412925310,1197962378,3037525897,3944729517,427051182,170179418,4165941337,746937522,3740196785,3451792453,1070968646,1905808397,2213795598,2426610938,1657317369,3053634322,1147748369,1463399397,2773627110,4215344322,153784257,444234805,3893493558,1021025245,3467647198,3722505002,797665321,2197175160,1889384571,1674398607,2443626636,1164749927,3070701412,2757221520,1446797203,137323447,4198817972,3910406976,461344835,3484808360,1037989803,781091935,3705997148,2460548119,1623424788,1939049696,2180517859,1429367560,2807687179,3020495871,1180866812,410100952,3927582683,4182430767,186734380,3756733383,763408580,1053836080,3434856499,2722870694,1344288421,1131464017,2971354706,1708204729,2545590714,2229949006,1988219213,680717673,3673779818,3383336350,1002577565,4010310262,493091189,238226049,4233660802,2987750089,1082061258,1395524158,2705686845,1972364758,2279892693,2494862625,1725896226,952904198,3399985413,3656866545,731699698,4283874585,222117402,510512622,3959836397,3280807620,837199303,582374963,3504198960,68661723,4135334616,3844915500,390545967,1230274059,3141532936,2825850620,1510247935,2395924756,2091215383,1878366691,2644384480,3553878443,565732008,854102364,3229815391,340358836,3861050807,4117890627,119113024,1493875044,2875275879,3090270611,1247431312,2660249211,1828433272,2141937292,2378227087,3811616794,291187481,34330861,4032846830,615137029,3603020806,3314634738,939183345,1776939221,2609017814,2295496738,2058945313,2926798794,1545135305,1330124605,3173225534,4084100981,17165430,307568514,3762199681,888469610,3332340585,3587147933,665062302,2042050490,2346497209,2559330125,1793573966,3190661285,1279665062,1595330642,2910671697]);function o0(B=new Uint8Array,D=0){E[0]=D^4294967295;for(let F of B)E[0]=wx[(E[0]^F)&255]^E[0]>>>8;return(E[0]^4294967295)>>>0}var Tx=new Uint32Array([0,2425422081,2434859521,28312320,2453734401,47187200,56624640,2482046721,2491484161,68159744,94374400,2503019265,113249280,2521894145,2548108801,124784384,2566983681,160436480,136319488,2561741569,188748800,2614170881,2590053889,183506688,226498560,2635143425,2627803649,204479232,2680232961,256908544,249568768,2658213633,2181111809,311435520,320872960,2209424129,272638976,2161190145,2170627585,300951296,377497600,2249271553,2275486209,389032704,2227252225,340798720,367013376,2238787329,452997120,2341548289,2317431297,447755008,2302751745,433075456,408958464,2297509633,2407610369,521156864,513817088,2385591041,499137536,2370911489,2363571713,477118208,3019980801,613433600,622871040,3048293121,641745920,3067168001,3076605441,670058240,545277952,2953922817,2980137473,556813056,2999012353,575687936,601902592,3010547457,754995200,3180417281,3156300289,749753088,3208729601,802182400,778065408,3203487489,3112261633,688937216,681597440,3090242305,734026752,3142671617,3135331841,712007424,905994240,2794545409,2803982849,934306560,2755748865,886072576,895510016,2784061185,2726389761,839936256,866150912,2737924865,817916928,2689690881,2715905537,829452032,2936107009,1066430720,1042313728,2930864897,1027634176,2916185345,2892068353,1022392064,998275072,2870049025,2862709249,976255744,2848029697,961576192,954236416,2826010369,3623976961,1217429760,1226867200,3652289281,1245742080,3671164161,3680601601,1274054400,1283491840,3692136705,3718351361,1295026944,3737226241,1313901824,1340116480,3748761345,1090555904,3515977985,3491860993,1085313792,3544290305,1137743104,1113626112,3539048193,3582040065,1158715648,1151375872,3560020737,1203805184,3612450049,3605110273,1181785856,1509990400,3398541569,3407979009,1538302720,3359745025,1490068736,1499506176,3388057345,3464603649,1578150144,1604364800,3476138753,1556130816,3427904769,3454119425,1567665920,3271667713,1401991424,1377874432,3266425601,1363194880,3251746049,3227629057,1357952768,1468053504,3339827457,3332487681,1446034176,3317808129,1431354624,1424014848,3295788801,1811988480,4237410561,4246848001,1840300800,4265722881,1859175680,1868613120,4294035201,4169254913,1745930496,1772145152,4180790017,1791020032,4199664897,4225879553,1802555136,4110536705,1703989504,1679872512,4105294593,1732301824,4157723905,4133606913,1727059712,1635833856,4044478721,4037138945,1613814528,4089568257,1666243840,1658904064,4067548929,3993100289,2123424e3,2132861440,4021412609,2084627456,3973178625,3982616065,2112939776,2055268352,3927042305,3953256961,2066803456,3905022977,2018569472,2044784128,3916558081,1996550144,3885101313,3860984321,1991308032,3846304769,1976628480,1952511488,3841062657,3816945665,1930492160,1923152384,3794926337,1908472832,3780246785,3772907009,1886453504]);function a0(B=new Uint8Array,D=0){E[0]=D;for(let F of B)E[0]=Tx[(E[0]^F)&255]^E[0]>>>8;return E[0]}var Ox=new Uint32Array([0,735957071,1471914142,2087088337,2943828284,2225770867,4174176674,3541119469,4141685331,3707816476,2707864269,2327538306,1504336751,1920437024,236059633,634137534,1166650509,1851030722,305269779,972020828,3942575537,3240312318,3175435567,2526584160,3008673502,2559141521,3840874048,3476211215,472119266,939403181,1268275068,1615169331,2333301018,2697890133,3702061444,4151650763,610539558,263833705,1944041656,1476552951,2110669641,1444123398,712369111,27800472,3535340149,4184134202,2231542507,2933879460,3466261911,3846645208,2569098505,3002893638,1642968235,1244685540,911610933,495699066,944238532,328875915,1878806362,1143054101,2536550136,3169681079,3230338662,3948338729,3189058079,2512976464,3920530049,3262339790,291662627,985643884,1188678589,1828985842,1221079116,1662377987,527667410,883835037,3888083312,3429015871,2953105902,2614690209,4221339282,3493943005,2888246796,2281371203,1424738222,2134251489,55600944,680376191,222403777,647777422,1526348895,1898441744,2721504765,2313883058,4119690595,3729829164,889615109,517710666,1656607643,1231029204,2591109689,2980897398,3452605095,3860284136,3285936470,3892754713,2489371080,3216841095,1823221866,1198651429,991398132,281696443,1888477064,1532104647,657751830,216641369,3757612724,4096085755,2286108202,2745101925,2253571547,2911835540,3521733957,4197758218,690324711,49829032,2124293241,1430516790,3558460437,4291042394,2208459915,2826943684,2070842665,1353932134,752168375,118029816,583325254,152634889,1971287768,1587717783,2377357178,2792245045,3657971684,4057327531,2442158232,3125653719,3324755974,3992326217,1055334820,356184555,1767670074,1115771253,1733130955,1284549252,821484117,455805466,3359259639,3823627192,2676071273,3025947430,1594529039,1960265024,145831313,594339294,4034778163,3684697212,2814801069,2350621922,2849476444,2181717779,4268502978,3585212301,111201888,763174447,1360752382,2059845297,444807554,828303821,1295554844,1726302547,3052697790,2653530353,3796883488,3381790831,3965592529,3347313566,3152380751,2419610368,1126785773,1760866978,345162355,1062146620,1779230218,1104229957,1035421332,376084187,3313215286,4003886969,2462058408,3105740775,2631007321,3071028246,3412745415,3770125448,866565477,410742058,1679629819,1338035636,797264519,72915656,2017389081,1407400534,2163346363,2872040436,3611929381,4237589354,3646443732,4068835483,2397302858,2772312069,1982796264,1576190375,563392886,172581177,3776954128,3401740127,3064209294,2642005953,1315503660,1706372707,433282738,839814909,398632259,1008694540,1081673181,1805964690,3098928255,2473079856,4010689761,3302200494,2761298845,2404107218,4079858435,3639632716,199316129,540836590,1549464127,2005344880,1380649422,2039929217,99658064,774732063,4248586482,3605108925,2861033580,2170173475]);function i0(B=new Uint8Array,D=0){E[0]=D^4294967295;for(let F of B)E[0]=Ox[(E[0]^F)&255]^E[0]>>>8;return(E[0]^4294967295)>>>0}var Lx=new Uint32Array([0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117]);function u0(B=new Uint8Array,D=4294967295){E[0]=D;for(let F of B)E[0]=Lx[(E[0]^F)&255]^E[0]>>>8;return E[0]}var gx=new Uint32Array([0,2526397642,4215814601,1843264771,552846287,3060139781,3686529542,1294876364,1105692574,3614589780,3132079703,742029981,1628718161,4152459419,2589752728,214546770,2211385148,358271990,2022127349,3994219071,2738670835,900270137,1484059962,3470864880,3257436322,1421692008,962638187,2952099233,3806022509,1951305639,429093540,2399581806,3523063333,1198025455,716543980,3156235046,4044254698,1738254624,172381219,2631110889,2417633723,110095729,1800540274,4257731768,2968119924,645672638,1268896701,3711178615,1379049753,3299304915,2843384016,1072651290,1925276374,3830752796,2307480351,521969621,332736135,2235621965,3902611278,2114509700,858187080,2779980162,3362708609,1593514059,1972956183,3809290461,2396050910,407179540,1433087960,3288263442,2921534993,951505627,880765833,2733289283,3476509248,1503827594,344762438,2182704268,4022636943,2035373381,4132954923,1623336929,220191458,2609520168,3601080548,1077011502,770447661,3145326055,3081790645,556114047,1291345276,3664615862,2537793402,30827440,1812700851,4204681849,2758099506,854623992,1596816379,3384327985,2224456189,302204215,2145302580,3914038526,3850552748,1930887526,516619365,2287941807,3312518755,1407500969,1043939242,2829908832,665472270,2973731268,3705828551,1249357837,123309761,2446084619,4229019400,1787065282,1716374160,4040691290,2634412889,194000787,1186859359,3492531605,3187028118,727970908,3945912366,2107907300,276423143,2263622957,3418495969,1566039851,814359080,2787108578,2866175920,1011063674,1369335417,3339428531,2317720703,481319093,1903011254,3891814780,1761531666,4268430296,2478239451,86190609,1208816861,3734556695,3007655188,634448350,689524876,3213661254,3528550725,1153740175,166368067,2675922825,4070746762,1681354304,986478091,2891559617,3246673858,1460767496,440382916,2359980302,3782708237,2011318471,2066477461,3988665695,2154023004,385223830,1540895322,3444438672,2693794707,906350425,3104012599,798408189,1112228094,3571352628,2582690552,258309682,1656259377,4096608251,4175756969,1852914275,61654880,2503541674,3625401702,1317206444,593429679,3049963621,2661889081,138211571,1709247984,4084517178,3193632758,684667708,1158860351,3548842741,3746476967,1239119725,604408430,2995998372,4290605160,1764275362,83184033,2455801195,493239045,2348023759,3861775052,1891354118,1033238730,2868919296,3336421635,1346897353,1552006299,3390339153,2815001938,828129688,2087878484,3941055390,2268743325,296714839,1330944540,3653328598,3021775829,579430175,1873238483,4180843801,2498715674,41592016,246619522,2552682824,4126876747,1668210817,776003149,3100973703,3574130564,1134371662,3432748320,1510887914,936619241,2705745955,3966260975,2063438373,388001574,2176166892,2373718718,468309620,1983130487,3768709053,2911883633,991565243,1455941816,3226610802]);function f0(B=new Uint8Array,D=4294967295){E[0]=D;for(let F of B)E[0]=gx[(E[0]^F)&255]^E[0]>>>8;return E[0]}var jx=new Uint32Array([0,79764919,159529838,222504665,319059676,398814059,445009330,507990021,638119352,583659535,797628118,726387553,890018660,835552979,1015980042,944750013,1276238704,1221641927,1167319070,1095957929,1595256236,1540665371,1452775106,1381403509,1780037320,1859660671,1671105958,1733955601,2031960084,2111593891,1889500026,1952343757,2552477408,2632100695,2443283854,2506133561,2334638140,2414271883,2191915858,2254759653,3190512472,3135915759,3081330742,3009969537,2905550212,2850959411,2762807018,2691435357,3560074640,3505614887,3719321342,3648080713,3342211916,3287746299,3467911202,3396681109,4063920168,4143685023,4223187782,4286162673,3779000052,3858754371,3904687514,3967668269,881225847,809987520,1023691545,969234094,662832811,591600412,771767749,717299826,311336399,374308984,453813921,533576470,25881363,88864420,134795389,214552010,2023205639,2086057648,1897238633,1976864222,1804852699,1867694188,1645340341,1724971778,1587496639,1516133128,1461550545,1406951526,1302016099,1230646740,1142491917,1087903418,2896545431,2825181984,2770861561,2716262478,3215044683,3143675388,3055782693,3001194130,2326604591,2389456536,2200899649,2280525302,2578013683,2640855108,2418763421,2498394922,3769900519,3832873040,3912640137,3992402750,4088425275,4151408268,4197601365,4277358050,3334271071,3263032808,3476998961,3422541446,3585640067,3514407732,3694837229,3640369242,1762451694,1842216281,1619975040,1682949687,2047383090,2127137669,1938468188,2001449195,1325665622,1271206113,1183200824,1111960463,1543535498,1489069629,1434599652,1363369299,622672798,568075817,748617968,677256519,907627842,853037301,1067152940,995781531,51762726,131386257,177728840,240578815,269590778,349224269,429104020,491947555,4046411278,4126034873,4172115296,4234965207,3794477266,3874110821,3953728444,4016571915,3609705398,3555108353,3735388376,3664026991,3290680682,3236090077,3449943556,3378572211,3174993278,3120533705,3032266256,2961025959,2923101090,2868635157,2813903052,2742672763,2604032198,2683796849,2461293480,2524268063,2284983834,2364738477,2175806836,2238787779,1569362073,1498123566,1409854455,1355396672,1317987909,1246755826,1192025387,1137557660,2072149281,2135122070,1912620623,1992383480,1753615357,1816598090,1627664531,1707420964,295390185,358241886,404320391,483945776,43990325,106832002,186451547,266083308,932423249,861060070,1041341759,986742920,613929101,542559546,756411363,701822548,3316196985,3244833742,3425377559,3370778784,3601682597,3530312978,3744426955,3689838204,3819031489,3881883254,3928223919,4007849240,4037393693,4100235434,4180117107,4259748804,2310601993,2373574846,2151335527,2231098320,2596047829,2659030626,2470359227,2550115596,2947551409,2876312838,2788305887,2733848168,3165939309,3094707162,3040238851,2985771188]);function m0(B=new Uint8Array,D=4294967295){E[0]=D;for(let F of B)E[0]=jx[E[0]>>>24^F]^E[0]<<8;return E[0]}var Px=new Uint32Array([0,79764919,159529838,222504665,319059676,398814059,445009330,507990021,638119352,583659535,797628118,726387553,890018660,835552979,1015980042,944750013,1276238704,1221641927,1167319070,1095957929,1595256236,1540665371,1452775106,1381403509,1780037320,1859660671,1671105958,1733955601,2031960084,2111593891,1889500026,1952343757,2552477408,2632100695,2443283854,2506133561,2334638140,2414271883,2191915858,2254759653,3190512472,3135915759,3081330742,3009969537,2905550212,2850959411,2762807018,2691435357,3560074640,3505614887,3719321342,3648080713,3342211916,3287746299,3467911202,3396681109,4063920168,4143685023,4223187782,4286162673,3779000052,3858754371,3904687514,3967668269,881225847,809987520,1023691545,969234094,662832811,591600412,771767749,717299826,311336399,374308984,453813921,533576470,25881363,88864420,134795389,214552010,2023205639,2086057648,1897238633,1976864222,1804852699,1867694188,1645340341,1724971778,1587496639,1516133128,1461550545,1406951526,1302016099,1230646740,1142491917,1087903418,2896545431,2825181984,2770861561,2716262478,3215044683,3143675388,3055782693,3001194130,2326604591,2389456536,2200899649,2280525302,2578013683,2640855108,2418763421,2498394922,3769900519,3832873040,3912640137,3992402750,4088425275,4151408268,4197601365,4277358050,3334271071,3263032808,3476998961,3422541446,3585640067,3514407732,3694837229,3640369242,1762451694,1842216281,1619975040,1682949687,2047383090,2127137669,1938468188,2001449195,1325665622,1271206113,1183200824,1111960463,1543535498,1489069629,1434599652,1363369299,622672798,568075817,748617968,677256519,907627842,853037301,1067152940,995781531,51762726,131386257,177728840,240578815,269590778,349224269,429104020,491947555,4046411278,4126034873,4172115296,4234965207,3794477266,3874110821,3953728444,4016571915,3609705398,3555108353,3735388376,3664026991,3290680682,3236090077,3449943556,3378572211,3174993278,3120533705,3032266256,2961025959,2923101090,2868635157,2813903052,2742672763,2604032198,2683796849,2461293480,2524268063,2284983834,2364738477,2175806836,2238787779,1569362073,1498123566,1409854455,1355396672,1317987909,1246755826,1192025387,1137557660,2072149281,2135122070,1912620623,1992383480,1753615357,1816598090,1627664531,1707420964,295390185,358241886,404320391,483945776,43990325,106832002,186451547,266083308,932423249,861060070,1041341759,986742920,613929101,542559546,756411363,701822548,3316196985,3244833742,3425377559,3370778784,3601682597,3530312978,3744426955,3689838204,3819031489,3881883254,3928223919,4007849240,4037393693,4100235434,4180117107,4259748804,2310601993,2373574846,2151335527,2231098320,2596047829,2659030626,2470359227,2550115596,2947551409,2876312838,2788305887,2733848168,3165939309,3094707162,3040238851,2985771188]);function s0(B=new Uint8Array,D=4294967295){E[0]=D^4294967295;for(let F of B)E[0]=Px[E[0]>>>24^F]^E[0]<<8;return(E[0]^4294967295)>>>0}var Yx=new Uint32Array([0,2168537515,2210644733,42107734,2261173329,126322170,84215468,2219067143,2362231049,227379362,252644340,2387495519,168430936,2336967923,2311704485,143166990,2564346809,429494802,454758724,2589610223,505288680,2673825347,2648560917,480023742,336861872,2505399067,2547505229,378968550,2463293153,328441674,286333980,2421185975,2968577753,833726322,858989604,2993841551,909517448,3078054691,3052789877,884253150,1010577360,3179114107,3221220653,1052683398,3137006465,1002154538,960047484,3094898903,673723744,2842260683,2884368285,715830838,2934894897,800043162,757937100,2892788327,2766470249,631619010,656883348,2791735103,572667960,2741205395,2715941573,547404654,3768618009,1642188210,1667452644,3793882959,1717979208,3878095331,3852831413,1692715806,1819034896,3979150523,4021258221,1861142086,3937042753,1810612458,1768506300,3894936087,2021154720,4181270027,4223376733,2063260918,4273904625,2147474010,2105366796,4231796903,4105475753,1979045634,2004309076,4130739711,1920094968,4080210771,4054945797,1894830510,1347447488,3507563371,3549669437,1389554070,3600199313,1473769274,1431661676,3558092231,3701253065,1574822498,1600086324,3726516383,1515874200,3675989555,3650725221,1490609358,3364403577,1237973202,1263238020,3389667887,1313766696,3473882243,3448618965,1288502910,1145335920,3305451995,3347559053,1187443494,3263345697,1136915850,1094809308,3221239671,1073764761,3242268722,3284376420,1115871951,3334905288,1200086115,1157979957,3292798622,3435958416,1301139771,1326404205,3461223366,1242191041,3410695530,3385431612,1216927639,3638069792,1503251339,1528514781,3663333750,1579044465,3747549146,3722284172,1553780007,1410614057,3579118210,3621224916,1452720255,3537012600,1402193619,1360086405,3494904878,4042309440,1907490539,1932754365,4067572758,1983281937,4151786170,4126521836,1958017095,2084337225,4252841954,4294948020,2126443807,4210733592,2075915187,2033807589,4168626510,1747479801,3915984210,3958091268,1789587375,4008618152,1873799427,1831692885,3966512126,3840189936,1705370715,1730635533,3865454246,1646420385,3814924298,3789661020,1621156599,2694894976,568431659,593696637,2720159446,644223441,2804371578,2779108140,618959495,745282697,2905431330,2947538548,787390431,2863323352,736860531,694753829,2821217166,947390009,3107538834,3149644996,989496687,3200172648,1073710019,1031602325,3158065470,3031748400,905285275,930549197,3057011814,846334817,3006483146,2981218716,821069879,273691481,2433839858,2475946404,315797519,2526476040,400012963,357905909,2484368478,2627533392,501070843,526334125,2652797190,442121729,2602270634,2577005820,416857431,2290671840,164208971,189473309,2315936694,240002225,2400150810,2374886988,214738919,71576041,2231724098,2273831700,113683135,2189618616,63155219,21049157,2147512046]);function b0(B=new Uint8Array,D=0){E[0]=D;for(let F of B)E[0]=Yx[E[0]>>>24^F]^E[0]<<8;return E[0]}var _x=new Uint32Array([0,79764919,159529838,222504665,319059676,398814059,445009330,507990021,638119352,583659535,797628118,726387553,890018660,835552979,1015980042,944750013,1276238704,1221641927,1167319070,1095957929,1595256236,1540665371,1452775106,1381403509,1780037320,1859660671,1671105958,1733955601,2031960084,2111593891,1889500026,1952343757,2552477408,2632100695,2443283854,2506133561,2334638140,2414271883,2191915858,2254759653,3190512472,3135915759,3081330742,3009969537,2905550212,2850959411,2762807018,2691435357,3560074640,3505614887,3719321342,3648080713,3342211916,3287746299,3467911202,3396681109,4063920168,4143685023,4223187782,4286162673,3779000052,3858754371,3904687514,3967668269,881225847,809987520,1023691545,969234094,662832811,591600412,771767749,717299826,311336399,374308984,453813921,533576470,25881363,88864420,134795389,214552010,2023205639,2086057648,1897238633,1976864222,1804852699,1867694188,1645340341,1724971778,1587496639,1516133128,1461550545,1406951526,1302016099,1230646740,1142491917,1087903418,2896545431,2825181984,2770861561,2716262478,3215044683,3143675388,3055782693,3001194130,2326604591,2389456536,2200899649,2280525302,2578013683,2640855108,2418763421,2498394922,3769900519,3832873040,3912640137,3992402750,4088425275,4151408268,4197601365,4277358050,3334271071,3263032808,3476998961,3422541446,3585640067,3514407732,3694837229,3640369242,1762451694,1842216281,1619975040,1682949687,2047383090,2127137669,1938468188,2001449195,1325665622,1271206113,1183200824,1111960463,1543535498,1489069629,1434599652,1363369299,622672798,568075817,748617968,677256519,907627842,853037301,1067152940,995781531,51762726,131386257,177728840,240578815,269590778,349224269,429104020,491947555,4046411278,4126034873,4172115296,4234965207,3794477266,3874110821,3953728444,4016571915,3609705398,3555108353,3735388376,3664026991,3290680682,3236090077,3449943556,3378572211,3174993278,3120533705,3032266256,2961025959,2923101090,2868635157,2813903052,2742672763,2604032198,2683796849,2461293480,2524268063,2284983834,2364738477,2175806836,2238787779,1569362073,1498123566,1409854455,1355396672,1317987909,1246755826,1192025387,1137557660,2072149281,2135122070,1912620623,1992383480,1753615357,1816598090,1627664531,1707420964,295390185,358241886,404320391,483945776,43990325,106832002,186451547,266083308,932423249,861060070,1041341759,986742920,613929101,542559546,756411363,701822548,3316196985,3244833742,3425377559,3370778784,3601682597,3530312978,3744426955,3689838204,3819031489,3881883254,3928223919,4007849240,4037393693,4100235434,4180117107,4259748804,2310601993,2373574846,2151335527,2231098320,2596047829,2659030626,2470359227,2550115596,2947551409,2876312838,2788305887,2733848168,3165939309,3094707162,3040238851,2985771188]);function l0(B=new Uint8Array,D=1379029042){E[0]=D;for(let F of B)E[0]=_x[E[0]>>>24^F]^E[0]<<8;return E[0]}var kx=new Uint32Array([0,175,350,497,700,531,994,845,1400,1495,1062,1161,1988,1899,1690,1589,2800,2655,2990,2817,2124,2275,2322,2493,3976,3879,3798,3705,3380,3483,3178,3269,5600,5455,5310,5137,5980,6131,5634,5805,4248,4151,4550,4457,4644,4747,4986,5077,7952,8127,7758,7905,7596,7427,7410,7261,6760,6855,6966,7065,6356,6267,6538,6437,11200,11119,10910,10801,10620,10707,10274,10381,11960,11799,12262,12105,11268,11435,11610,11765,8496,8607,8302,8385,9100,8995,8914,8829,9288,9447,9494,9657,9972,9819,10154,9989,15904,16015,16254,16337,15516,15411,15810,15725,15192,15351,14854,15017,14820,14667,14522,14357,13520,13439,13710,13601,13932,14019,14130,14237,12712,12551,12534,12377,13076,13243,12874,13029,22400,22319,22238,22129,21820,21907,21602,21709,21240,21079,21414,21257,20548,20715,20762,20917,23920,24031,23598,23681,24524,24419,24210,24125,22536,22695,22870,23033,23220,23067,23530,23365,16992,17103,17214,17297,16604,16499,16770,16685,18200,18359,17990,18153,17828,17675,17658,17493,18576,18495,18894,18785,18988,19075,19314,19421,19944,19783,19638,19481,20308,20475,19978,20133,31808,31983,32030,32177,32508,32339,32674,32525,31032,31127,30822,30921,31620,31531,31450,31349,30384,30239,30702,30529,29708,29859,30034,30205,29640,29543,29334,29241,29044,29147,28714,28805,27040,26895,26878,26705,27420,27571,27202,27373,27864,27767,28038,27945,28260,28363,28474,28565,25424,25599,25102,25249,25068,24899,24754,24605,26152,26247,26486,26585,25748,25659,26058,25957]);function p0(B=new Uint8Array,D=0){E[0]=D;for(let F of B)E[0]=kx[E[0]>>>24^F]^E[0]<<8;return E[0]}export{g as crc16a,j as crc16arc,P as crc16augccitt,Y as crc16buypass,_ as crc16ccittfalse,k as crc16cdma2000,q as crc16cms,v as crc16dds110,z as crc16dectr,R as crc16dectx,G as crc16dnp,H as crc16en13757,I as crc16genibus,J as crc16gsm,K as crc16iclass,M as crc16kermit,N as crc16lj1200,Q as crc16m17,S as crc16maxim,V as crc16mcrf4xx,W as crc16modbus,X as crc16nrsc5,Z as crc16opensafetya,$ as crc16opensafetyb,x0 as crc16philips,B0 as crc16profibus,D0 as crc16riello,F0 as crc16t10dif,A0 as crc16teledisk,C0 as crc16tms37157,E0 as crc16usb,r0 as crc16x25,t0 as crc16xmodem,n0 as crc32,c0 as crc32autosar,e0 as crc32bzip2,o0 as crc32c,a0 as crc32cdromedc,i0 as crc32d,u0 as crc32jamcrc,f0 as crc32mef,m0 as crc32mpeg2,s0 as crc32posix,b0 as crc32q,l0 as crc32sata,p0 as crc32xfer,n as crc8,c as crc8autosar,e as crc8bluetooth,o as crc8cardx,a as crc8cdma2000,i as crc8darc,u as crc8dvbs2,f as crc8ebu,m as crc8gsma,s as crc8gsmb,b as crc8hitag,l as crc8icode,p as crc8itu,y as crc8legic,U as crc8mad,d as crc8maxim,h as crc8nrsc5,w as crc8opensafety,T as crc8rohc,O as crc8saej1850,L as crc8wcdma};\n","/**\n * Internal Merkle-Damgard hash utils.\n * @module\n */\nimport { Hash, abytes, aexists, aoutput, clean, createView, toBytes } from \"./utils.js\";\n/** Polyfill for Safari 14. https://caniuse.com/mdn-javascript_builtins_dataview_setbiguint64 */\nexport function setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n/** Choice: a ? b : c */\nexport function Chi(a, b, c) {\n    return (a & b) ^ (~a & c);\n}\n/** Majority function, true if any two inputs is true. */\nexport function Maj(a, b, c) {\n    return (a & b) ^ (a & c) ^ (b & c);\n}\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport class HashMD extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        aexists(this);\n        data = toBytes(data);\n        abytes(data);\n        const { view, buffer, blockLen } = this;\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        aexists(this);\n        aoutput(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        clean(this.buffer.subarray(pos));\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.destroyed = destroyed;\n        to.finished = finished;\n        to.length = length;\n        to.pos = pos;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n    clone() {\n        return this._cloneInto();\n    }\n}\n/**\n * Initial SHA-2 state: fractional parts of square roots of first 16 primes 2..53.\n * Check out `test/misc/sha2-gen-iv.js` for recomputation guide.\n */\n/** Initial SHA256 state. Bits 0..32 of frac part of sqrt of primes 2..19 */\nexport const SHA256_IV = /* @__PURE__ */ Uint32Array.from([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19,\n]);\n/** Initial SHA224 state. Bits 32..64 of frac part of sqrt of primes 23..53 */\nexport const SHA224_IV = /* @__PURE__ */ Uint32Array.from([\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4,\n]);\n/** Initial SHA384 state. Bits 0..64 of frac part of sqrt of primes 23..53 */\nexport const SHA384_IV = /* @__PURE__ */ Uint32Array.from([\n    0xcbbb9d5d, 0xc1059ed8, 0x629a292a, 0x367cd507, 0x9159015a, 0x3070dd17, 0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31, 0x8eb44a87, 0x68581511, 0xdb0c2e0d, 0x64f98fa7, 0x47b5481d, 0xbefa4fa4,\n]);\n/** Initial SHA512 state. Bits 0..64 of frac part of sqrt of primes 2..19 */\nexport const SHA512_IV = /* @__PURE__ */ Uint32Array.from([\n    0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b, 0x3c6ef372, 0xfe94f82b, 0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1, 0x9b05688c, 0x2b3e6c1f, 0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19, 0x137e2179,\n]);\n//# sourceMappingURL=_md.js.map","/**\n * Internal helpers for u64. BigUint64Array is too slow as per 2025, so we implement it using Uint32Array.\n * @todo re-check https://issues.chromium.org/issues/42212588\n * @module\n */\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    const len = lst.length;\n    let Ah = new Uint32Array(len);\n    let Al = new Uint32Array(len);\n    for (let i = 0; i < len; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { add, add3H, add3L, add4H, add4L, add5H, add5L, fromBig, rotlBH, rotlBL, rotlSH, rotlSL, rotr32H, rotr32L, rotrBH, rotrBL, rotrSH, rotrSL, shrSH, shrSL, split, toBig };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","/**\n * SHA2 hash function. A.k.a. sha256, sha384, sha512, sha512_224, sha512_256.\n * SHA256 is the fastest hash implementable in JS, even faster than Blake3.\n * Check out [RFC 4634](https://datatracker.ietf.org/doc/html/rfc4634) and\n * [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n */\nimport { Chi, HashMD, Maj, SHA224_IV, SHA256_IV, SHA384_IV, SHA512_IV } from \"./_md.js\";\nimport * as u64 from \"./_u64.js\";\nimport { clean, createHasher, rotr } from \"./utils.js\";\n/**\n * Round constants:\n * First 32 bits of fractional parts of the cube roots of the first 64 primes 2..311)\n */\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ Uint32Array.from([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n/** Reusable temporary buffer. \"W\" comes straight from spec. */\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nexport class SHA256 extends HashMD {\n    constructor(outputLen = 32) {\n        super(64, outputLen, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = SHA256_IV[0] | 0;\n        this.B = SHA256_IV[1] | 0;\n        this.C = SHA256_IV[2] | 0;\n        this.D = SHA256_IV[3] | 0;\n        this.E = SHA256_IV[4] | 0;\n        this.F = SHA256_IV[5] | 0;\n        this.G = SHA256_IV[6] | 0;\n        this.H = SHA256_IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        clean(SHA256_W);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        clean(this.buffer);\n    }\n}\nexport class SHA224 extends SHA256 {\n    constructor() {\n        super(28);\n        this.A = SHA224_IV[0] | 0;\n        this.B = SHA224_IV[1] | 0;\n        this.C = SHA224_IV[2] | 0;\n        this.D = SHA224_IV[3] | 0;\n        this.E = SHA224_IV[4] | 0;\n        this.F = SHA224_IV[5] | 0;\n        this.G = SHA224_IV[6] | 0;\n        this.H = SHA224_IV[7] | 0;\n    }\n}\n// SHA2-512 is slower than sha256 in js because u64 operations are slow.\n// Round contants\n// First 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409\n// prettier-ignore\nconst K512 = /* @__PURE__ */ (() => u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\nconst SHA512_Kh = /* @__PURE__ */ (() => K512[0])();\nconst SHA512_Kl = /* @__PURE__ */ (() => K512[1])();\n// Reusable temporary buffers\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends HashMD {\n    constructor(outputLen = 64) {\n        super(128, outputLen, 16, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = SHA512_IV[0] | 0;\n        this.Al = SHA512_IV[1] | 0;\n        this.Bh = SHA512_IV[2] | 0;\n        this.Bl = SHA512_IV[3] | 0;\n        this.Ch = SHA512_IV[4] | 0;\n        this.Cl = SHA512_IV[5] | 0;\n        this.Dh = SHA512_IV[6] | 0;\n        this.Dl = SHA512_IV[7] | 0;\n        this.Eh = SHA512_IV[8] | 0;\n        this.El = SHA512_IV[9] | 0;\n        this.Fh = SHA512_IV[10] | 0;\n        this.Fl = SHA512_IV[11] | 0;\n        this.Gh = SHA512_IV[12] | 0;\n        this.Gl = SHA512_IV[13] | 0;\n        this.Hh = SHA512_IV[14] | 0;\n        this.Hl = SHA512_IV[15] | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        clean(SHA512_W_H, SHA512_W_L);\n    }\n    destroy() {\n        clean(this.buffer);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nexport class SHA384 extends SHA512 {\n    constructor() {\n        super(48);\n        this.Ah = SHA384_IV[0] | 0;\n        this.Al = SHA384_IV[1] | 0;\n        this.Bh = SHA384_IV[2] | 0;\n        this.Bl = SHA384_IV[3] | 0;\n        this.Ch = SHA384_IV[4] | 0;\n        this.Cl = SHA384_IV[5] | 0;\n        this.Dh = SHA384_IV[6] | 0;\n        this.Dl = SHA384_IV[7] | 0;\n        this.Eh = SHA384_IV[8] | 0;\n        this.El = SHA384_IV[9] | 0;\n        this.Fh = SHA384_IV[10] | 0;\n        this.Fl = SHA384_IV[11] | 0;\n        this.Gh = SHA384_IV[12] | 0;\n        this.Gl = SHA384_IV[13] | 0;\n        this.Hh = SHA384_IV[14] | 0;\n        this.Hl = SHA384_IV[15] | 0;\n    }\n}\n/**\n * Truncated SHA512/256 and SHA512/224.\n * SHA512_IV is XORed with 0xa5a5a5a5a5a5a5a5, then used as \"intermediary\" IV of SHA512/t.\n * Then t hashes string to produce result IV.\n * See `test/misc/sha2-gen-iv.js`.\n */\n/** SHA512/224 IV */\nconst T224_IV = /* @__PURE__ */ Uint32Array.from([\n    0x8c3d37c8, 0x19544da2, 0x73e19966, 0x89dcd4d6, 0x1dfab7ae, 0x32ff9c82, 0x679dd514, 0x582f9fcf,\n    0x0f6d2b69, 0x7bd44da8, 0x77e36f73, 0x04c48942, 0x3f9d85a8, 0x6a1d36c8, 0x1112e6ad, 0x91d692a1,\n]);\n/** SHA512/256 IV */\nconst T256_IV = /* @__PURE__ */ Uint32Array.from([\n    0x22312194, 0xfc2bf72c, 0x9f555fa3, 0xc84c64c2, 0x2393b86b, 0x6f53b151, 0x96387719, 0x5940eabd,\n    0x96283ee2, 0xa88effe3, 0xbe5e1e25, 0x53863992, 0x2b0199fc, 0x2c85b8aa, 0x0eb72ddc, 0x81c52ca2,\n]);\nexport class SHA512_224 extends SHA512 {\n    constructor() {\n        super(28);\n        this.Ah = T224_IV[0] | 0;\n        this.Al = T224_IV[1] | 0;\n        this.Bh = T224_IV[2] | 0;\n        this.Bl = T224_IV[3] | 0;\n        this.Ch = T224_IV[4] | 0;\n        this.Cl = T224_IV[5] | 0;\n        this.Dh = T224_IV[6] | 0;\n        this.Dl = T224_IV[7] | 0;\n        this.Eh = T224_IV[8] | 0;\n        this.El = T224_IV[9] | 0;\n        this.Fh = T224_IV[10] | 0;\n        this.Fl = T224_IV[11] | 0;\n        this.Gh = T224_IV[12] | 0;\n        this.Gl = T224_IV[13] | 0;\n        this.Hh = T224_IV[14] | 0;\n        this.Hl = T224_IV[15] | 0;\n    }\n}\nexport class SHA512_256 extends SHA512 {\n    constructor() {\n        super(32);\n        this.Ah = T256_IV[0] | 0;\n        this.Al = T256_IV[1] | 0;\n        this.Bh = T256_IV[2] | 0;\n        this.Bl = T256_IV[3] | 0;\n        this.Ch = T256_IV[4] | 0;\n        this.Cl = T256_IV[5] | 0;\n        this.Dh = T256_IV[6] | 0;\n        this.Dl = T256_IV[7] | 0;\n        this.Eh = T256_IV[8] | 0;\n        this.El = T256_IV[9] | 0;\n        this.Fh = T256_IV[10] | 0;\n        this.Fl = T256_IV[11] | 0;\n        this.Gh = T256_IV[12] | 0;\n        this.Gl = T256_IV[13] | 0;\n        this.Hh = T256_IV[14] | 0;\n        this.Hl = T256_IV[15] | 0;\n    }\n}\n/**\n * SHA2-256 hash function from RFC 4634.\n *\n * It is the fastest JS hash, even faster than Blake3.\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n */\nexport const sha256 = /* @__PURE__ */ createHasher(() => new SHA256());\n/** SHA2-224 hash function from RFC 4634 */\nexport const sha224 = /* @__PURE__ */ createHasher(() => new SHA224());\n/** SHA2-512 hash function from RFC 4634. */\nexport const sha512 = /* @__PURE__ */ createHasher(() => new SHA512());\n/** SHA2-384 hash function from RFC 4634. */\nexport const sha384 = /* @__PURE__ */ createHasher(() => new SHA384());\n/**\n * SHA2-512/256 \"truncated\" hash function, with improved resistance to length extension attacks.\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\n */\nexport const sha512_256 = /* @__PURE__ */ createHasher(() => new SHA512_256());\n/**\n * SHA2-512/224 \"truncated\" hash function, with improved resistance to length extension attacks.\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\n */\nexport const sha512_224 = /* @__PURE__ */ createHasher(() => new SHA512_224());\n//# sourceMappingURL=sha2.js.map","/**\n * SHA3 (keccak) hash function, based on a new \"Sponge function\" design.\n * Different from older hashes, the internal state is bigger than output size.\n *\n * Check out [FIPS-202](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf),\n * [Website](https://keccak.team/keccak.html),\n * [the differences between SHA-3 and Keccak](https://crypto.stackexchange.com/questions/15727/what-are-the-key-differences-between-the-draft-sha-3-standard-and-the-keccak-sub).\n *\n * Check out `sha3-addons` module for cSHAKE, k12, and others.\n * @module\n */\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from \"./_u64.js\";\n// prettier-ignore\nimport { abytes, aexists, anumber, aoutput, clean, createHasher, createXOFer, Hash, swap32IfBE, toBytes, u32 } from \"./utils.js\";\n// No __PURE__ annotations in sha3 header:\n// EVERYTHING is in fact used on every export.\n// Various per round constants calculations\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nconst SHA3_PI = [];\nconst SHA3_ROTL = [];\nconst _SHA3_IOTA = [];\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst IOTAS = split(_SHA3_IOTA, true);\nconst SHA3_IOTA_H = IOTAS[0];\nconst SHA3_IOTA_L = IOTAS[1];\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n/** `keccakf1600` internal function, additionally allows to adjust round count. */\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    clean(B);\n}\n/** Keccak sponge function. */\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        this.enableXOF = false;\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        // Can be passed from user as dkLen\n        anumber(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        // 0 < blockLen < 200\n        if (!(0 < blockLen && blockLen < 200))\n            throw new Error('only keccak-f1600 function is supported');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    clone() {\n        return this._cloneInto();\n    }\n    keccak() {\n        swap32IfBE(this.state32);\n        keccakP(this.state32, this.rounds);\n        swap32IfBE(this.state32);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        aexists(this);\n        data = toBytes(data);\n        abytes(data);\n        const { blockLen, state } = this;\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        aexists(this, false);\n        abytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        anumber(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        aoutput(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        clean(this.state);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => createHasher(() => new Keccak(blockLen, suffix, outputLen));\n/** SHA3-224 hash function. */\nexport const sha3_224 = /* @__PURE__ */ (() => gen(0x06, 144, 224 / 8))();\n/** SHA3-256 hash function. Different from keccak-256. */\nexport const sha3_256 = /* @__PURE__ */ (() => gen(0x06, 136, 256 / 8))();\n/** SHA3-384 hash function. */\nexport const sha3_384 = /* @__PURE__ */ (() => gen(0x06, 104, 384 / 8))();\n/** SHA3-512 hash function. */\nexport const sha3_512 = /* @__PURE__ */ (() => gen(0x06, 72, 512 / 8))();\n/** keccak-224 hash function. */\nexport const keccak_224 = /* @__PURE__ */ (() => gen(0x01, 144, 224 / 8))();\n/** keccak-256 hash function. Different from SHA3-256. */\nexport const keccak_256 = /* @__PURE__ */ (() => gen(0x01, 136, 256 / 8))();\n/** keccak-384 hash function. */\nexport const keccak_384 = /* @__PURE__ */ (() => gen(0x01, 104, 384 / 8))();\n/** keccak-512 hash function. */\nexport const keccak_512 = /* @__PURE__ */ (() => gen(0x01, 72, 512 / 8))();\nconst genShake = (suffix, blockLen, outputLen) => createXOFer((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\n/** SHAKE128 XOF with 128-bit security. */\nexport const shake128 = /* @__PURE__ */ (() => genShake(0x1f, 168, 128 / 8))();\n/** SHAKE256 XOF with 256-bit security. */\nexport const shake256 = /* @__PURE__ */ (() => genShake(0x1f, 136, 256 / 8))();\n//# sourceMappingURL=sha3.js.map","/**\n * Internal helpers for blake hash.\n * @module\n */\nimport { rotr } from \"./utils.js\";\n/**\n * Internal blake variable.\n * For BLAKE2b, the two extra permutations for rounds 10 and 11 are SIGMA[10..11] = SIGMA[0..1].\n */\n// prettier-ignore\nexport const BSIGMA = /* @__PURE__ */ Uint8Array.from([\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n    14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n    11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n    7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n    9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n    2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n    12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n    13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n    6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n    10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0,\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n    14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n    // Blake1, unused in others\n    11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n    7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n    9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n    2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n]);\n// Mixing function G splitted in two halfs\nexport function G1s(a, b, c, d, x) {\n    a = (a + b + x) | 0;\n    d = rotr(d ^ a, 16);\n    c = (c + d) | 0;\n    b = rotr(b ^ c, 12);\n    return { a, b, c, d };\n}\nexport function G2s(a, b, c, d, x) {\n    a = (a + b + x) | 0;\n    d = rotr(d ^ a, 8);\n    c = (c + d) | 0;\n    b = rotr(b ^ c, 7);\n    return { a, b, c, d };\n}\n//# sourceMappingURL=_blake.js.map","/**\n * blake2b (64-bit) & blake2s (8 to 32-bit) hash functions.\n * b could have been faster, but there is no fast u64 in js, so s is 1.5x faster.\n * @module\n */\nimport { BSIGMA, G1s, G2s } from \"./_blake.js\";\nimport { SHA256_IV } from \"./_md.js\";\nimport * as u64 from \"./_u64.js\";\n// prettier-ignore\nimport { abytes, aexists, anumber, aoutput, clean, createOptHasher, Hash, swap32IfBE, swap8IfBE, toBytes, u32 } from \"./utils.js\";\n// Same as SHA512_IV, but swapped endianness: LE instead of BE. iv[1] is iv[0], etc.\nconst B2B_IV = /* @__PURE__ */ Uint32Array.from([\n    0xf3bcc908, 0x6a09e667, 0x84caa73b, 0xbb67ae85, 0xfe94f82b, 0x3c6ef372, 0x5f1d36f1, 0xa54ff53a,\n    0xade682d1, 0x510e527f, 0x2b3e6c1f, 0x9b05688c, 0xfb41bd6b, 0x1f83d9ab, 0x137e2179, 0x5be0cd19,\n]);\n// Temporary buffer\nconst BBUF = /* @__PURE__ */ new Uint32Array(32);\n// Mixing function G splitted in two halfs\nfunction G1b(a, b, c, d, msg, x) {\n    // NOTE: V is LE here\n    const Xl = msg[x], Xh = msg[x + 1]; // prettier-ignore\n    let Al = BBUF[2 * a], Ah = BBUF[2 * a + 1]; // prettier-ignore\n    let Bl = BBUF[2 * b], Bh = BBUF[2 * b + 1]; // prettier-ignore\n    let Cl = BBUF[2 * c], Ch = BBUF[2 * c + 1]; // prettier-ignore\n    let Dl = BBUF[2 * d], Dh = BBUF[2 * d + 1]; // prettier-ignore\n    // v[a] = (v[a] + v[b] + x) | 0;\n    let ll = u64.add3L(Al, Bl, Xl);\n    Ah = u64.add3H(ll, Ah, Bh, Xh);\n    Al = ll | 0;\n    // v[d] = rotr(v[d] ^ v[a], 32)\n    ({ Dh, Dl } = { Dh: Dh ^ Ah, Dl: Dl ^ Al });\n    ({ Dh, Dl } = { Dh: u64.rotr32H(Dh, Dl), Dl: u64.rotr32L(Dh, Dl) });\n    // v[c] = (v[c] + v[d]) | 0;\n    ({ h: Ch, l: Cl } = u64.add(Ch, Cl, Dh, Dl));\n    // v[b] = rotr(v[b] ^ v[c], 24)\n    ({ Bh, Bl } = { Bh: Bh ^ Ch, Bl: Bl ^ Cl });\n    ({ Bh, Bl } = { Bh: u64.rotrSH(Bh, Bl, 24), Bl: u64.rotrSL(Bh, Bl, 24) });\n    (BBUF[2 * a] = Al), (BBUF[2 * a + 1] = Ah);\n    (BBUF[2 * b] = Bl), (BBUF[2 * b + 1] = Bh);\n    (BBUF[2 * c] = Cl), (BBUF[2 * c + 1] = Ch);\n    (BBUF[2 * d] = Dl), (BBUF[2 * d + 1] = Dh);\n}\nfunction G2b(a, b, c, d, msg, x) {\n    // NOTE: V is LE here\n    const Xl = msg[x], Xh = msg[x + 1]; // prettier-ignore\n    let Al = BBUF[2 * a], Ah = BBUF[2 * a + 1]; // prettier-ignore\n    let Bl = BBUF[2 * b], Bh = BBUF[2 * b + 1]; // prettier-ignore\n    let Cl = BBUF[2 * c], Ch = BBUF[2 * c + 1]; // prettier-ignore\n    let Dl = BBUF[2 * d], Dh = BBUF[2 * d + 1]; // prettier-ignore\n    // v[a] = (v[a] + v[b] + x) | 0;\n    let ll = u64.add3L(Al, Bl, Xl);\n    Ah = u64.add3H(ll, Ah, Bh, Xh);\n    Al = ll | 0;\n    // v[d] = rotr(v[d] ^ v[a], 16)\n    ({ Dh, Dl } = { Dh: Dh ^ Ah, Dl: Dl ^ Al });\n    ({ Dh, Dl } = { Dh: u64.rotrSH(Dh, Dl, 16), Dl: u64.rotrSL(Dh, Dl, 16) });\n    // v[c] = (v[c] + v[d]) | 0;\n    ({ h: Ch, l: Cl } = u64.add(Ch, Cl, Dh, Dl));\n    // v[b] = rotr(v[b] ^ v[c], 63)\n    ({ Bh, Bl } = { Bh: Bh ^ Ch, Bl: Bl ^ Cl });\n    ({ Bh, Bl } = { Bh: u64.rotrBH(Bh, Bl, 63), Bl: u64.rotrBL(Bh, Bl, 63) });\n    (BBUF[2 * a] = Al), (BBUF[2 * a + 1] = Ah);\n    (BBUF[2 * b] = Bl), (BBUF[2 * b + 1] = Bh);\n    (BBUF[2 * c] = Cl), (BBUF[2 * c + 1] = Ch);\n    (BBUF[2 * d] = Dl), (BBUF[2 * d + 1] = Dh);\n}\nfunction checkBlake2Opts(outputLen, opts = {}, keyLen, saltLen, persLen) {\n    anumber(keyLen);\n    if (outputLen < 0 || outputLen > keyLen)\n        throw new Error('outputLen bigger than keyLen');\n    const { key, salt, personalization } = opts;\n    if (key !== undefined && (key.length < 1 || key.length > keyLen))\n        throw new Error('key length must be undefined or 1..' + keyLen);\n    if (salt !== undefined && salt.length !== saltLen)\n        throw new Error('salt must be undefined or ' + saltLen);\n    if (personalization !== undefined && personalization.length !== persLen)\n        throw new Error('personalization must be undefined or ' + persLen);\n}\n/** Class, from which others are subclassed. */\nexport class BLAKE2 extends Hash {\n    constructor(blockLen, outputLen) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        this.length = 0;\n        this.pos = 0;\n        anumber(blockLen);\n        anumber(outputLen);\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.buffer = new Uint8Array(blockLen);\n        this.buffer32 = u32(this.buffer);\n    }\n    update(data) {\n        aexists(this);\n        data = toBytes(data);\n        abytes(data);\n        // Main difference with other hashes: there is flag for last block,\n        // so we cannot process current block before we know that there\n        // is the next one. This significantly complicates logic and reduces ability\n        // to do zero-copy processing\n        const { blockLen, buffer, buffer32 } = this;\n        const len = data.length;\n        const offset = data.byteOffset;\n        const buf = data.buffer;\n        for (let pos = 0; pos < len;) {\n            // If buffer is full and we still have input (don't process last block, same as blake2s)\n            if (this.pos === blockLen) {\n                swap32IfBE(buffer32);\n                this.compress(buffer32, 0, false);\n                swap32IfBE(buffer32);\n                this.pos = 0;\n            }\n            const take = Math.min(blockLen - this.pos, len - pos);\n            const dataOffset = offset + pos;\n            // full block && aligned to 4 bytes && not last in input\n            if (take === blockLen && !(dataOffset % 4) && pos + take < len) {\n                const data32 = new Uint32Array(buf, dataOffset, Math.floor((len - pos) / 4));\n                swap32IfBE(data32);\n                for (let pos32 = 0; pos + blockLen < len; pos32 += buffer32.length, pos += blockLen) {\n                    this.length += blockLen;\n                    this.compress(data32, pos32, false);\n                }\n                swap32IfBE(data32);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            this.length += take;\n            pos += take;\n        }\n        return this;\n    }\n    digestInto(out) {\n        aexists(this);\n        aoutput(out, this);\n        const { pos, buffer32 } = this;\n        this.finished = true;\n        // Padding\n        clean(this.buffer.subarray(pos));\n        swap32IfBE(buffer32);\n        this.compress(buffer32, 0, true);\n        swap32IfBE(buffer32);\n        const out32 = u32(out);\n        this.get().forEach((v, i) => (out32[i] = swap8IfBE(v)));\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        const { buffer, length, finished, destroyed, outputLen, pos } = this;\n        to || (to = new this.constructor({ dkLen: outputLen }));\n        to.set(...this.get());\n        to.buffer.set(buffer);\n        to.destroyed = destroyed;\n        to.finished = finished;\n        to.length = length;\n        to.pos = pos;\n        // @ts-ignore\n        to.outputLen = outputLen;\n        return to;\n    }\n    clone() {\n        return this._cloneInto();\n    }\n}\nexport class BLAKE2b extends BLAKE2 {\n    constructor(opts = {}) {\n        const olen = opts.dkLen === undefined ? 64 : opts.dkLen;\n        super(128, olen);\n        // Same as SHA-512, but LE\n        this.v0l = B2B_IV[0] | 0;\n        this.v0h = B2B_IV[1] | 0;\n        this.v1l = B2B_IV[2] | 0;\n        this.v1h = B2B_IV[3] | 0;\n        this.v2l = B2B_IV[4] | 0;\n        this.v2h = B2B_IV[5] | 0;\n        this.v3l = B2B_IV[6] | 0;\n        this.v3h = B2B_IV[7] | 0;\n        this.v4l = B2B_IV[8] | 0;\n        this.v4h = B2B_IV[9] | 0;\n        this.v5l = B2B_IV[10] | 0;\n        this.v5h = B2B_IV[11] | 0;\n        this.v6l = B2B_IV[12] | 0;\n        this.v6h = B2B_IV[13] | 0;\n        this.v7l = B2B_IV[14] | 0;\n        this.v7h = B2B_IV[15] | 0;\n        checkBlake2Opts(olen, opts, 64, 16, 16);\n        let { key, personalization, salt } = opts;\n        let keyLength = 0;\n        if (key !== undefined) {\n            key = toBytes(key);\n            keyLength = key.length;\n        }\n        this.v0l ^= this.outputLen | (keyLength << 8) | (0x01 << 16) | (0x01 << 24);\n        if (salt !== undefined) {\n            salt = toBytes(salt);\n            const slt = u32(salt);\n            this.v4l ^= swap8IfBE(slt[0]);\n            this.v4h ^= swap8IfBE(slt[1]);\n            this.v5l ^= swap8IfBE(slt[2]);\n            this.v5h ^= swap8IfBE(slt[3]);\n        }\n        if (personalization !== undefined) {\n            personalization = toBytes(personalization);\n            const pers = u32(personalization);\n            this.v6l ^= swap8IfBE(pers[0]);\n            this.v6h ^= swap8IfBE(pers[1]);\n            this.v7l ^= swap8IfBE(pers[2]);\n            this.v7h ^= swap8IfBE(pers[3]);\n        }\n        if (key !== undefined) {\n            // Pad to blockLen and update\n            const tmp = new Uint8Array(this.blockLen);\n            tmp.set(key);\n            this.update(tmp);\n        }\n    }\n    // prettier-ignore\n    get() {\n        let { v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h } = this;\n        return [v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h];\n    }\n    // prettier-ignore\n    set(v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h) {\n        this.v0l = v0l | 0;\n        this.v0h = v0h | 0;\n        this.v1l = v1l | 0;\n        this.v1h = v1h | 0;\n        this.v2l = v2l | 0;\n        this.v2h = v2h | 0;\n        this.v3l = v3l | 0;\n        this.v3h = v3h | 0;\n        this.v4l = v4l | 0;\n        this.v4h = v4h | 0;\n        this.v5l = v5l | 0;\n        this.v5h = v5h | 0;\n        this.v6l = v6l | 0;\n        this.v6h = v6h | 0;\n        this.v7l = v7l | 0;\n        this.v7h = v7h | 0;\n    }\n    compress(msg, offset, isLast) {\n        this.get().forEach((v, i) => (BBUF[i] = v)); // First half from state.\n        BBUF.set(B2B_IV, 16); // Second half from IV.\n        let { h, l } = u64.fromBig(BigInt(this.length));\n        BBUF[24] = B2B_IV[8] ^ l; // Low word of the offset.\n        BBUF[25] = B2B_IV[9] ^ h; // High word.\n        // Invert all bits for last block\n        if (isLast) {\n            BBUF[28] = ~BBUF[28];\n            BBUF[29] = ~BBUF[29];\n        }\n        let j = 0;\n        const s = BSIGMA;\n        for (let i = 0; i < 12; i++) {\n            G1b(0, 4, 8, 12, msg, offset + 2 * s[j++]);\n            G2b(0, 4, 8, 12, msg, offset + 2 * s[j++]);\n            G1b(1, 5, 9, 13, msg, offset + 2 * s[j++]);\n            G2b(1, 5, 9, 13, msg, offset + 2 * s[j++]);\n            G1b(2, 6, 10, 14, msg, offset + 2 * s[j++]);\n            G2b(2, 6, 10, 14, msg, offset + 2 * s[j++]);\n            G1b(3, 7, 11, 15, msg, offset + 2 * s[j++]);\n            G2b(3, 7, 11, 15, msg, offset + 2 * s[j++]);\n            G1b(0, 5, 10, 15, msg, offset + 2 * s[j++]);\n            G2b(0, 5, 10, 15, msg, offset + 2 * s[j++]);\n            G1b(1, 6, 11, 12, msg, offset + 2 * s[j++]);\n            G2b(1, 6, 11, 12, msg, offset + 2 * s[j++]);\n            G1b(2, 7, 8, 13, msg, offset + 2 * s[j++]);\n            G2b(2, 7, 8, 13, msg, offset + 2 * s[j++]);\n            G1b(3, 4, 9, 14, msg, offset + 2 * s[j++]);\n            G2b(3, 4, 9, 14, msg, offset + 2 * s[j++]);\n        }\n        this.v0l ^= BBUF[0] ^ BBUF[16];\n        this.v0h ^= BBUF[1] ^ BBUF[17];\n        this.v1l ^= BBUF[2] ^ BBUF[18];\n        this.v1h ^= BBUF[3] ^ BBUF[19];\n        this.v2l ^= BBUF[4] ^ BBUF[20];\n        this.v2h ^= BBUF[5] ^ BBUF[21];\n        this.v3l ^= BBUF[6] ^ BBUF[22];\n        this.v3h ^= BBUF[7] ^ BBUF[23];\n        this.v4l ^= BBUF[8] ^ BBUF[24];\n        this.v4h ^= BBUF[9] ^ BBUF[25];\n        this.v5l ^= BBUF[10] ^ BBUF[26];\n        this.v5h ^= BBUF[11] ^ BBUF[27];\n        this.v6l ^= BBUF[12] ^ BBUF[28];\n        this.v6h ^= BBUF[13] ^ BBUF[29];\n        this.v7l ^= BBUF[14] ^ BBUF[30];\n        this.v7h ^= BBUF[15] ^ BBUF[31];\n        clean(BBUF);\n    }\n    destroy() {\n        this.destroyed = true;\n        clean(this.buffer32);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\n/**\n * Blake2b hash function. 64-bit. 1.5x slower than blake2s in JS.\n * @param msg - message that would be hashed\n * @param opts - dkLen output length, key for MAC mode, salt, personalization\n */\nexport const blake2b = /* @__PURE__ */ createOptHasher((opts) => new BLAKE2b(opts));\n// prettier-ignore\nexport function compress(s, offset, msg, rounds, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15) {\n    let j = 0;\n    for (let i = 0; i < rounds; i++) {\n        ({ a: v0, b: v4, c: v8, d: v12 } = G1s(v0, v4, v8, v12, msg[offset + s[j++]]));\n        ({ a: v0, b: v4, c: v8, d: v12 } = G2s(v0, v4, v8, v12, msg[offset + s[j++]]));\n        ({ a: v1, b: v5, c: v9, d: v13 } = G1s(v1, v5, v9, v13, msg[offset + s[j++]]));\n        ({ a: v1, b: v5, c: v9, d: v13 } = G2s(v1, v5, v9, v13, msg[offset + s[j++]]));\n        ({ a: v2, b: v6, c: v10, d: v14 } = G1s(v2, v6, v10, v14, msg[offset + s[j++]]));\n        ({ a: v2, b: v6, c: v10, d: v14 } = G2s(v2, v6, v10, v14, msg[offset + s[j++]]));\n        ({ a: v3, b: v7, c: v11, d: v15 } = G1s(v3, v7, v11, v15, msg[offset + s[j++]]));\n        ({ a: v3, b: v7, c: v11, d: v15 } = G2s(v3, v7, v11, v15, msg[offset + s[j++]]));\n        ({ a: v0, b: v5, c: v10, d: v15 } = G1s(v0, v5, v10, v15, msg[offset + s[j++]]));\n        ({ a: v0, b: v5, c: v10, d: v15 } = G2s(v0, v5, v10, v15, msg[offset + s[j++]]));\n        ({ a: v1, b: v6, c: v11, d: v12 } = G1s(v1, v6, v11, v12, msg[offset + s[j++]]));\n        ({ a: v1, b: v6, c: v11, d: v12 } = G2s(v1, v6, v11, v12, msg[offset + s[j++]]));\n        ({ a: v2, b: v7, c: v8, d: v13 } = G1s(v2, v7, v8, v13, msg[offset + s[j++]]));\n        ({ a: v2, b: v7, c: v8, d: v13 } = G2s(v2, v7, v8, v13, msg[offset + s[j++]]));\n        ({ a: v3, b: v4, c: v9, d: v14 } = G1s(v3, v4, v9, v14, msg[offset + s[j++]]));\n        ({ a: v3, b: v4, c: v9, d: v14 } = G2s(v3, v4, v9, v14, msg[offset + s[j++]]));\n    }\n    return { v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15 };\n}\nconst B2S_IV = SHA256_IV;\nexport class BLAKE2s extends BLAKE2 {\n    constructor(opts = {}) {\n        const olen = opts.dkLen === undefined ? 32 : opts.dkLen;\n        super(64, olen);\n        // Internal state, same as SHA-256\n        this.v0 = B2S_IV[0] | 0;\n        this.v1 = B2S_IV[1] | 0;\n        this.v2 = B2S_IV[2] | 0;\n        this.v3 = B2S_IV[3] | 0;\n        this.v4 = B2S_IV[4] | 0;\n        this.v5 = B2S_IV[5] | 0;\n        this.v6 = B2S_IV[6] | 0;\n        this.v7 = B2S_IV[7] | 0;\n        checkBlake2Opts(olen, opts, 32, 8, 8);\n        let { key, personalization, salt } = opts;\n        let keyLength = 0;\n        if (key !== undefined) {\n            key = toBytes(key);\n            keyLength = key.length;\n        }\n        this.v0 ^= this.outputLen | (keyLength << 8) | (0x01 << 16) | (0x01 << 24);\n        if (salt !== undefined) {\n            salt = toBytes(salt);\n            const slt = u32(salt);\n            this.v4 ^= swap8IfBE(slt[0]);\n            this.v5 ^= swap8IfBE(slt[1]);\n        }\n        if (personalization !== undefined) {\n            personalization = toBytes(personalization);\n            const pers = u32(personalization);\n            this.v6 ^= swap8IfBE(pers[0]);\n            this.v7 ^= swap8IfBE(pers[1]);\n        }\n        if (key !== undefined) {\n            // Pad to blockLen and update\n            abytes(key);\n            const tmp = new Uint8Array(this.blockLen);\n            tmp.set(key);\n            this.update(tmp);\n        }\n    }\n    get() {\n        const { v0, v1, v2, v3, v4, v5, v6, v7 } = this;\n        return [v0, v1, v2, v3, v4, v5, v6, v7];\n    }\n    // prettier-ignore\n    set(v0, v1, v2, v3, v4, v5, v6, v7) {\n        this.v0 = v0 | 0;\n        this.v1 = v1 | 0;\n        this.v2 = v2 | 0;\n        this.v3 = v3 | 0;\n        this.v4 = v4 | 0;\n        this.v5 = v5 | 0;\n        this.v6 = v6 | 0;\n        this.v7 = v7 | 0;\n    }\n    compress(msg, offset, isLast) {\n        const { h, l } = u64.fromBig(BigInt(this.length));\n        // prettier-ignore\n        const { v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15 } = compress(BSIGMA, offset, msg, 10, this.v0, this.v1, this.v2, this.v3, this.v4, this.v5, this.v6, this.v7, B2S_IV[0], B2S_IV[1], B2S_IV[2], B2S_IV[3], l ^ B2S_IV[4], h ^ B2S_IV[5], isLast ? ~B2S_IV[6] : B2S_IV[6], B2S_IV[7]);\n        this.v0 ^= v0 ^ v8;\n        this.v1 ^= v1 ^ v9;\n        this.v2 ^= v2 ^ v10;\n        this.v3 ^= v3 ^ v11;\n        this.v4 ^= v4 ^ v12;\n        this.v5 ^= v5 ^ v13;\n        this.v6 ^= v6 ^ v14;\n        this.v7 ^= v7 ^ v15;\n    }\n    destroy() {\n        this.destroyed = true;\n        clean(this.buffer32);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\n/**\n * Blake2s hash function. Focuses on 8-bit to 32-bit platforms. 1.5x faster than blake2b in JS.\n * @param msg - message that would be hashed\n * @param opts - dkLen output length, key for MAC mode, salt, personalization\n */\nexport const blake2s = /* @__PURE__ */ createOptHasher((opts) => new BLAKE2s(opts));\n//# sourceMappingURL=blake2.js.map","/**\n * PBKDF (RFC 2898). Can be used to create a key from password and salt.\n * @module\n */\nimport { hmac } from \"./hmac.js\";\n// prettier-ignore\nimport { ahash, anumber, asyncLoop, checkOpts, clean, createView, Hash, kdfInputToBytes } from \"./utils.js\";\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash, _password, _salt, _opts) {\n    ahash(hash);\n    const opts = checkOpts({ dkLen: 32, asyncTick: 10 }, _opts);\n    const { c, dkLen, asyncTick } = opts;\n    anumber(c);\n    anumber(dkLen);\n    anumber(asyncTick);\n    if (c < 1)\n        throw new Error('iterations (c) should be >= 1');\n    const password = kdfInputToBytes(_password);\n    const salt = kdfInputToBytes(_salt);\n    // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n    const DK = new Uint8Array(dkLen);\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    const PRF = hmac.create(hash, password);\n    const PRFSalt = PRF._cloneInto().update(salt);\n    return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\nfunction pbkdf2Output(PRF, PRFSalt, DK, prfW, u) {\n    PRF.destroy();\n    PRFSalt.destroy();\n    if (prfW)\n        prfW.destroy();\n    clean(u);\n    return DK;\n}\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n * @example\n * const key = pbkdf2(sha256, 'password', 'salt', { dkLen: 32, c: Math.pow(2, 18) });\n */\nexport function pbkdf2(hash, password, salt, opts) {\n    const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = createView(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        for (let ui = 1; ui < c; ui++) {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        }\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function. Async version.\n * @example\n * await pbkdf2Async(sha256, 'password', 'salt', { dkLen: 32, c: 500_000 });\n */\nexport async function pbkdf2Async(hash, password, salt, opts) {\n    const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = createView(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        await asyncLoop(c - 1, asyncTick, () => {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        });\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n//# sourceMappingURL=pbkdf2.js.map","/**\n\nSHA1 (RFC 3174), MD5 (RFC 1321) and RIPEMD160 (RFC 2286) legacy, weak hash functions.\nDon't use them in a new protocol. What \"weak\" means:\n\n- Collisions can be made with 2^18 effort in MD5, 2^60 in SHA1, 2^80 in RIPEMD160.\n- No practical pre-image attacks (only theoretical, 2^123.4)\n- HMAC seems kinda ok: https://datatracker.ietf.org/doc/html/rfc6151\n * @module\n */\nimport { Chi, HashMD, Maj } from \"./_md.js\";\nimport { clean, createHasher, rotl } from \"./utils.js\";\n/** Initial SHA1 state */\nconst SHA1_IV = /* @__PURE__ */ Uint32Array.from([\n    0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0,\n]);\n// Reusable temporary buffer\nconst SHA1_W = /* @__PURE__ */ new Uint32Array(80);\n/** SHA1 legacy hash class. */\nexport class SHA1 extends HashMD {\n    constructor() {\n        super(64, 20, 8, false);\n        this.A = SHA1_IV[0] | 0;\n        this.B = SHA1_IV[1] | 0;\n        this.C = SHA1_IV[2] | 0;\n        this.D = SHA1_IV[3] | 0;\n        this.E = SHA1_IV[4] | 0;\n    }\n    get() {\n        const { A, B, C, D, E } = this;\n        return [A, B, C, D, E];\n    }\n    set(A, B, C, D, E) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n    }\n    process(view, offset) {\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA1_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 80; i++)\n            SHA1_W[i] = rotl(SHA1_W[i - 3] ^ SHA1_W[i - 8] ^ SHA1_W[i - 14] ^ SHA1_W[i - 16], 1);\n        // Compression function main loop, 80 rounds\n        let { A, B, C, D, E } = this;\n        for (let i = 0; i < 80; i++) {\n            let F, K;\n            if (i < 20) {\n                F = Chi(B, C, D);\n                K = 0x5a827999;\n            }\n            else if (i < 40) {\n                F = B ^ C ^ D;\n                K = 0x6ed9eba1;\n            }\n            else if (i < 60) {\n                F = Maj(B, C, D);\n                K = 0x8f1bbcdc;\n            }\n            else {\n                F = B ^ C ^ D;\n                K = 0xca62c1d6;\n            }\n            const T = (rotl(A, 5) + F + E + K + SHA1_W[i]) | 0;\n            E = D;\n            D = C;\n            C = rotl(B, 30);\n            B = A;\n            A = T;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        this.set(A, B, C, D, E);\n    }\n    roundClean() {\n        clean(SHA1_W);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0);\n        clean(this.buffer);\n    }\n}\n/** SHA1 (RFC 3174) legacy hash function. It was cryptographically broken. */\nexport const sha1 = /* @__PURE__ */ createHasher(() => new SHA1());\n/** Per-round constants */\nconst p32 = /* @__PURE__ */ Math.pow(2, 32);\nconst K = /* @__PURE__ */ Array.from({ length: 64 }, (_, i) => Math.floor(p32 * Math.abs(Math.sin(i + 1))));\n/** md5 initial state: same as sha1, but 4 u32 instead of 5. */\nconst MD5_IV = /* @__PURE__ */ SHA1_IV.slice(0, 4);\n// Reusable temporary buffer\nconst MD5_W = /* @__PURE__ */ new Uint32Array(16);\n/** MD5 legacy hash class. */\nexport class MD5 extends HashMD {\n    constructor() {\n        super(64, 16, 8, true);\n        this.A = MD5_IV[0] | 0;\n        this.B = MD5_IV[1] | 0;\n        this.C = MD5_IV[2] | 0;\n        this.D = MD5_IV[3] | 0;\n    }\n    get() {\n        const { A, B, C, D } = this;\n        return [A, B, C, D];\n    }\n    set(A, B, C, D) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n    }\n    process(view, offset) {\n        for (let i = 0; i < 16; i++, offset += 4)\n            MD5_W[i] = view.getUint32(offset, true);\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D } = this;\n        for (let i = 0; i < 64; i++) {\n            let F, g, s;\n            if (i < 16) {\n                F = Chi(B, C, D);\n                g = i;\n                s = [7, 12, 17, 22];\n            }\n            else if (i < 32) {\n                F = Chi(D, B, C);\n                g = (5 * i + 1) % 16;\n                s = [5, 9, 14, 20];\n            }\n            else if (i < 48) {\n                F = B ^ C ^ D;\n                g = (3 * i + 5) % 16;\n                s = [4, 11, 16, 23];\n            }\n            else {\n                F = C ^ (B | ~D);\n                g = (7 * i) % 16;\n                s = [6, 10, 15, 21];\n            }\n            F = F + A + K[i] + MD5_W[g];\n            A = D;\n            D = C;\n            C = B;\n            B = B + rotl(F, s[i % 4]);\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        this.set(A, B, C, D);\n    }\n    roundClean() {\n        clean(MD5_W);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0);\n        clean(this.buffer);\n    }\n}\n/**\n * MD5 (RFC 1321) legacy hash function. It was cryptographically broken.\n * MD5 architecture is similar to SHA1, with some differences:\n * - Reduced output length: 16 bytes (128 bit) instead of 20\n * - 64 rounds, instead of 80\n * - Little-endian: could be faster, but will require more code\n * - Non-linear index selection: huge speed-up for unroll\n * - Per round constants: more memory accesses, additional speed-up for unroll\n */\nexport const md5 = /* @__PURE__ */ createHasher(() => new MD5());\n// RIPEMD-160\nconst Rho160 = /* @__PURE__ */ Uint8Array.from([\n    7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n]);\nconst Id160 = /* @__PURE__ */ (() => Uint8Array.from(new Array(16).fill(0).map((_, i) => i)))();\nconst Pi160 = /* @__PURE__ */ (() => Id160.map((i) => (9 * i + 5) % 16))();\nconst idxLR = /* @__PURE__ */ (() => {\n    const L = [Id160];\n    const R = [Pi160];\n    const res = [L, R];\n    for (let i = 0; i < 4; i++)\n        for (let j of res)\n            j.push(j[i].map((k) => Rho160[k]));\n    return res;\n})();\nconst idxL = /* @__PURE__ */ (() => idxLR[0])();\nconst idxR = /* @__PURE__ */ (() => idxLR[1])();\n// const [idxL, idxR] = idxLR;\nconst shifts160 = /* @__PURE__ */ [\n    [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],\n    [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],\n    [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],\n    [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],\n    [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],\n].map((i) => Uint8Array.from(i));\nconst shiftsL160 = /* @__PURE__ */ idxL.map((idx, i) => idx.map((j) => shifts160[i][j]));\nconst shiftsR160 = /* @__PURE__ */ idxR.map((idx, i) => idx.map((j) => shifts160[i][j]));\nconst Kl160 = /* @__PURE__ */ Uint32Array.from([\n    0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e,\n]);\nconst Kr160 = /* @__PURE__ */ Uint32Array.from([\n    0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000,\n]);\n// It's called f() in spec.\nfunction ripemd_f(group, x, y, z) {\n    if (group === 0)\n        return x ^ y ^ z;\n    if (group === 1)\n        return (x & y) | (~x & z);\n    if (group === 2)\n        return (x | ~y) ^ z;\n    if (group === 3)\n        return (x & z) | (y & ~z);\n    return x ^ (y | ~z);\n}\n// Reusable temporary buffer\nconst BUF_160 = /* @__PURE__ */ new Uint32Array(16);\nexport class RIPEMD160 extends HashMD {\n    constructor() {\n        super(64, 20, 8, true);\n        this.h0 = 0x67452301 | 0;\n        this.h1 = 0xefcdab89 | 0;\n        this.h2 = 0x98badcfe | 0;\n        this.h3 = 0x10325476 | 0;\n        this.h4 = 0xc3d2e1f0 | 0;\n    }\n    get() {\n        const { h0, h1, h2, h3, h4 } = this;\n        return [h0, h1, h2, h3, h4];\n    }\n    set(h0, h1, h2, h3, h4) {\n        this.h0 = h0 | 0;\n        this.h1 = h1 | 0;\n        this.h2 = h2 | 0;\n        this.h3 = h3 | 0;\n        this.h4 = h4 | 0;\n    }\n    process(view, offset) {\n        for (let i = 0; i < 16; i++, offset += 4)\n            BUF_160[i] = view.getUint32(offset, true);\n        // prettier-ignore\n        let al = this.h0 | 0, ar = al, bl = this.h1 | 0, br = bl, cl = this.h2 | 0, cr = cl, dl = this.h3 | 0, dr = dl, el = this.h4 | 0, er = el;\n        // Instead of iterating 0 to 80, we split it into 5 groups\n        // And use the groups in constants, functions, etc. Much simpler\n        for (let group = 0; group < 5; group++) {\n            const rGroup = 4 - group;\n            const hbl = Kl160[group], hbr = Kr160[group]; // prettier-ignore\n            const rl = idxL[group], rr = idxR[group]; // prettier-ignore\n            const sl = shiftsL160[group], sr = shiftsR160[group]; // prettier-ignore\n            for (let i = 0; i < 16; i++) {\n                const tl = (rotl(al + ripemd_f(group, bl, cl, dl) + BUF_160[rl[i]] + hbl, sl[i]) + el) | 0;\n                al = el, el = dl, dl = rotl(cl, 10) | 0, cl = bl, bl = tl; // prettier-ignore\n            }\n            // 2 loops are 10% faster\n            for (let i = 0; i < 16; i++) {\n                const tr = (rotl(ar + ripemd_f(rGroup, br, cr, dr) + BUF_160[rr[i]] + hbr, sr[i]) + er) | 0;\n                ar = er, er = dr, dr = rotl(cr, 10) | 0, cr = br, br = tr; // prettier-ignore\n            }\n        }\n        // Add the compressed chunk to the current hash value\n        this.set((this.h1 + cl + dr) | 0, (this.h2 + dl + er) | 0, (this.h3 + el + ar) | 0, (this.h4 + al + br) | 0, (this.h0 + bl + cr) | 0);\n    }\n    roundClean() {\n        clean(BUF_160);\n    }\n    destroy() {\n        this.destroyed = true;\n        clean(this.buffer);\n        this.set(0, 0, 0, 0, 0);\n    }\n}\n/**\n * RIPEMD-160 - a legacy hash function from 1990s.\n * * https://homes.esat.kuleuven.be/~bosselae/ripemd160.html\n * * https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf\n */\nexport const ripemd160 = /* @__PURE__ */ createHasher(() => new RIPEMD160());\n//# sourceMappingURL=legacy.js.map","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n/**\n * Package binary provides functions for encoding and decoding numbers in byte arrays.\n */\nimport { isSafeInteger } from \"@stablelib/int\";\n// TODO(dchest): add asserts for correct value ranges and array offsets.\n/**\n * Reads 2 bytes from array starting at offset as big-endian\n * signed 16-bit integer and returns it.\n */\nexport function readInt16BE(array, offset = 0) {\n    return (((array[offset + 0] << 8) | array[offset + 1]) << 16) >> 16;\n}\n/**\n * Reads 2 bytes from array starting at offset as big-endian\n * unsigned 16-bit integer and returns it.\n */\nexport function readUint16BE(array, offset = 0) {\n    return ((array[offset + 0] << 8) | array[offset + 1]) >>> 0;\n}\n/**\n * Reads 2 bytes from array starting at offset as little-endian\n * signed 16-bit integer and returns it.\n */\nexport function readInt16LE(array, offset = 0) {\n    return (((array[offset + 1] << 8) | array[offset]) << 16) >> 16;\n}\n/**\n * Reads 2 bytes from array starting at offset as little-endian\n * unsigned 16-bit integer and returns it.\n */\nexport function readUint16LE(array, offset = 0) {\n    return ((array[offset + 1] << 8) | array[offset]) >>> 0;\n}\n/**\n * Writes 2-byte big-endian representation of 16-bit unsigned\n * value to byte array starting at offset.\n *\n * If byte array is not given, creates a new 2-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeUint16BE(value, out = new Uint8Array(2), offset = 0) {\n    out[offset + 0] = value >>> 8;\n    out[offset + 1] = value >>> 0;\n    return out;\n}\nexport const writeInt16BE = writeUint16BE;\n/**\n * Writes 2-byte little-endian representation of 16-bit unsigned\n * value to array starting at offset.\n *\n * If byte array is not given, creates a new 2-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeUint16LE(value, out = new Uint8Array(2), offset = 0) {\n    out[offset + 0] = value >>> 0;\n    out[offset + 1] = value >>> 8;\n    return out;\n}\nexport const writeInt16LE = writeUint16LE;\n/**\n * Reads 4 bytes from array starting at offset as big-endian\n * signed 32-bit integer and returns it.\n */\nexport function readInt32BE(array, offset = 0) {\n    return (array[offset] << 24) |\n        (array[offset + 1] << 16) |\n        (array[offset + 2] << 8) |\n        array[offset + 3];\n}\n/**\n * Reads 4 bytes from array starting at offset as big-endian\n * unsigned 32-bit integer and returns it.\n */\nexport function readUint32BE(array, offset = 0) {\n    return ((array[offset] << 24) |\n        (array[offset + 1] << 16) |\n        (array[offset + 2] << 8) |\n        array[offset + 3]) >>> 0;\n}\n/**\n * Reads 4 bytes from array starting at offset as little-endian\n * signed 32-bit integer and returns it.\n */\nexport function readInt32LE(array, offset = 0) {\n    return (array[offset + 3] << 24) |\n        (array[offset + 2] << 16) |\n        (array[offset + 1] << 8) |\n        array[offset];\n}\n/**\n * Reads 4 bytes from array starting at offset as little-endian\n * unsigned 32-bit integer and returns it.\n */\nexport function readUint32LE(array, offset = 0) {\n    return ((array[offset + 3] << 24) |\n        (array[offset + 2] << 16) |\n        (array[offset + 1] << 8) |\n        array[offset]) >>> 0;\n}\n/**\n * Writes 4-byte big-endian representation of 32-bit unsigned\n * value to byte array starting at offset.\n *\n * If byte array is not given, creates a new 4-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeUint32BE(value, out = new Uint8Array(4), offset = 0) {\n    out[offset + 0] = value >>> 24;\n    out[offset + 1] = value >>> 16;\n    out[offset + 2] = value >>> 8;\n    out[offset + 3] = value >>> 0;\n    return out;\n}\nexport const writeInt32BE = writeUint32BE;\n/**\n * Writes 4-byte little-endian representation of 32-bit unsigned\n * value to array starting at offset.\n *\n * If byte array is not given, creates a new 4-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeUint32LE(value, out = new Uint8Array(4), offset = 0) {\n    out[offset + 0] = value >>> 0;\n    out[offset + 1] = value >>> 8;\n    out[offset + 2] = value >>> 16;\n    out[offset + 3] = value >>> 24;\n    return out;\n}\nexport const writeInt32LE = writeUint32LE;\n/**\n * Reads 8 bytes from array starting at offset as big-endian\n * signed 64-bit integer and returns it.\n *\n * IMPORTANT: due to JavaScript limitation, supports exact\n * numbers in range -9007199254740991 to 9007199254740991.\n * If the number stored in the byte array is outside this range,\n * the result is not exact.\n */\nexport function readInt64BE(array, offset = 0) {\n    const hi = readInt32BE(array, offset);\n    const lo = readInt32BE(array, offset + 4);\n    return hi * 0x100000000 + lo - ((lo >> 31) * 0x100000000);\n}\n/**\n * Reads 8 bytes from array starting at offset as big-endian\n * unsigned 64-bit integer and returns it.\n *\n * IMPORTANT: due to JavaScript limitation, supports values up to 2^53-1.\n */\nexport function readUint64BE(array, offset = 0) {\n    const hi = readUint32BE(array, offset);\n    const lo = readUint32BE(array, offset + 4);\n    return hi * 0x100000000 + lo;\n}\n/**\n * Reads 8 bytes from array starting at offset as little-endian\n * signed 64-bit integer and returns it.\n *\n * IMPORTANT: due to JavaScript limitation, supports exact\n * numbers in range -9007199254740991 to 9007199254740991.\n * If the number stored in the byte array is outside this range,\n * the result is not exact.\n */\nexport function readInt64LE(array, offset = 0) {\n    const lo = readInt32LE(array, offset);\n    const hi = readInt32LE(array, offset + 4);\n    return hi * 0x100000000 + lo - ((lo >> 31) * 0x100000000);\n}\n/**\n * Reads 8 bytes from array starting at offset as little-endian\n * unsigned 64-bit integer and returns it.\n *\n * IMPORTANT: due to JavaScript limitation, supports values up to 2^53-1.\n */\nexport function readUint64LE(array, offset = 0) {\n    const lo = readUint32LE(array, offset);\n    const hi = readUint32LE(array, offset + 4);\n    return hi * 0x100000000 + lo;\n}\n/**\n * Writes 8-byte big-endian representation of 64-bit unsigned\n * value to byte array starting at offset.\n *\n * Due to JavaScript limitation, supports values up to 2^53-1.\n *\n * If byte array is not given, creates a new 8-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeUint64BE(value, out = new Uint8Array(8), offset = 0) {\n    writeUint32BE(value / 0x100000000 >>> 0, out, offset);\n    writeUint32BE(value >>> 0, out, offset + 4);\n    return out;\n}\nexport const writeInt64BE = writeUint64BE;\n/**\n * Writes 8-byte little-endian representation of 64-bit unsigned\n * value to byte array starting at offset.\n *\n * Due to JavaScript limitation, supports values up to 2^53-1.\n *\n * If byte array is not given, creates a new 8-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeUint64LE(value, out = new Uint8Array(8), offset = 0) {\n    writeUint32LE(value >>> 0, out, offset);\n    writeUint32LE(value / 0x100000000 >>> 0, out, offset + 4);\n    return out;\n}\nexport const writeInt64LE = writeUint64LE;\n/**\n * Reads bytes from array starting at offset as big-endian\n * unsigned bitLen-bit integer and returns it.\n *\n * Supports bit lengths divisible by 8, up to 48.\n */\nexport function readUintBE(bitLength, array, offset = 0) {\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\n    if (bitLength % 8 !== 0) {\n        throw new Error(\"readUintBE supports only bitLengths divisible by 8\");\n    }\n    if (bitLength / 8 > array.length - offset) {\n        throw new Error(\"readUintBE: array is too short for the given bitLength\");\n    }\n    let result = 0;\n    let mul = 1;\n    for (let i = bitLength / 8 + offset - 1; i >= offset; i--) {\n        result += array[i] * mul;\n        mul *= 256;\n    }\n    return result;\n}\n/**\n * Reads bytes from array starting at offset as little-endian\n * unsigned bitLen-bit integer and returns it.\n *\n * Supports bit lengths divisible by 8, up to 48.\n */\nexport function readUintLE(bitLength, array, offset = 0) {\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\n    if (bitLength % 8 !== 0) {\n        throw new Error(\"readUintLE supports only bitLengths divisible by 8\");\n    }\n    if (bitLength / 8 > array.length - offset) {\n        throw new Error(\"readUintLE: array is too short for the given bitLength\");\n    }\n    let result = 0;\n    let mul = 1;\n    for (let i = offset; i < offset + bitLength / 8; i++) {\n        result += array[i] * mul;\n        mul *= 256;\n    }\n    return result;\n}\n/**\n * Writes a big-endian representation of bitLen-bit unsigned\n * value to array starting at offset.\n *\n * Supports bit lengths divisible by 8, up to 48.\n *\n * If byte array is not given, creates a new one.\n *\n * Returns the output byte array.\n */\nexport function writeUintBE(bitLength, value, out = new Uint8Array(bitLength / 8), offset = 0) {\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\n    if (bitLength % 8 !== 0) {\n        throw new Error(\"writeUintBE supports only bitLengths divisible by 8\");\n    }\n    if (!isSafeInteger(value)) {\n        throw new Error(\"writeUintBE value must be an integer\");\n    }\n    let div = 1;\n    for (let i = bitLength / 8 + offset - 1; i >= offset; i--) {\n        out[i] = (value / div) & 0xff;\n        div *= 256;\n    }\n    return out;\n}\n/**\n * Writes a little-endian representation of bitLen-bit unsigned\n * value to array starting at offset.\n *\n * Supports bit lengths divisible by 8, up to 48.\n *\n * If byte array is not given, creates a new one.\n *\n * Returns the output byte array.\n */\nexport function writeUintLE(bitLength, value, out = new Uint8Array(bitLength / 8), offset = 0) {\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\n    if (bitLength % 8 !== 0) {\n        throw new Error(\"writeUintLE supports only bitLengths divisible by 8\");\n    }\n    if (!isSafeInteger(value)) {\n        throw new Error(\"writeUintLE value must be an integer\");\n    }\n    let div = 1;\n    for (let i = offset; i < offset + bitLength / 8; i++) {\n        out[i] = (value / div) & 0xff;\n        div *= 256;\n    }\n    return out;\n}\n/**\n * Reads 4 bytes from array starting at offset as big-endian\n * 32-bit floating-point number and returns it.\n */\nexport function readFloat32BE(array, offset = 0) {\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat32(offset);\n}\n/**\n * Reads 4 bytes from array starting at offset as little-endian\n * 32-bit floating-point number and returns it.\n */\nexport function readFloat32LE(array, offset = 0) {\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat32(offset, true);\n}\n/**\n * Reads 8 bytes from array starting at offset as big-endian\n * 64-bit floating-point number (\"double\") and returns it.\n */\nexport function readFloat64BE(array, offset = 0) {\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat64(offset);\n}\n/**\n * Reads 8 bytes from array starting at offset as little-endian\n * 64-bit floating-point number (\"double\") and returns it.\n */\nexport function readFloat64LE(array, offset = 0) {\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat64(offset, true);\n}\n/**\n * Writes 4-byte big-endian floating-point representation of value\n * to byte array starting at offset.\n *\n * If byte array is not given, creates a new 4-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeFloat32BE(value, out = new Uint8Array(4), offset = 0) {\n    const view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    view.setFloat32(offset, value);\n    return out;\n}\n/**\n * Writes 4-byte little-endian floating-point representation of value\n * to byte array starting at offset.\n *\n * If byte array is not given, creates a new 4-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeFloat32LE(value, out = new Uint8Array(4), offset = 0) {\n    const view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    view.setFloat32(offset, value, true);\n    return out;\n}\n/**\n * Writes 8-byte big-endian floating-point representation of value\n * to byte array starting at offset.\n *\n * If byte array is not given, creates a new 8-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeFloat64BE(value, out = new Uint8Array(8), offset = 0) {\n    const view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    view.setFloat64(offset, value);\n    return out;\n}\n/**\n * Writes 8-byte little-endian floating-point representation of value\n * to byte array starting at offset.\n *\n * If byte array is not given, creates a new 8-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeFloat64LE(value, out = new Uint8Array(8), offset = 0) {\n    const view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    view.setFloat64(offset, value, true);\n    return out;\n}\n//# sourceMappingURL=binary.js.map","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n/**\n * Sets all values in the given array to zero and returns it.\n *\n * The fact that it sets bytes to zero can be relied on.\n *\n * There is no guarantee that this function makes data disappear from memory,\n * as runtime implementation can, for example, have copying garbage collector\n * that will make copies of sensitive data before we wipe it. Or that an\n * operating system will write our data to swap or sleep image. Another thing\n * is that an optimizing compiler can remove calls to this function or make it\n * no-op. There's nothing we can do with it, so we just do our best and hope\n * that everything will be okay and good will triumph over evil.\n */\nexport function wipe(array) {\n    // Right now it's similar to array.fill(0). If it turns\n    // out that runtimes optimize this call away, maybe\n    // we can try something else.\n    for (let i = 0; i < array.length; i++) {\n        array[i] = 0;\n    }\n    return array;\n}\n//# sourceMappingURL=wipe.js.map","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n/**\n * Package chacha implements ChaCha stream cipher.\n */\nimport { writeUint32LE } from \"@stablelib/binary\";\nimport { wipe } from \"@stablelib/wipe\";\n// Number of ChaCha rounds (ChaCha20).\nconst ROUNDS = 20;\n// Applies the ChaCha core function to 16-byte input,\n// 32-byte key key, and puts the result into 64-byte array out.\nfunction core(out, input, key) {\n    let j0 = 0x61707865; // \"expa\"  -- ChaCha's \"sigma\" constant\n    let j1 = 0x3320646E; // \"nd 3\"     for 32-byte keys\n    let j2 = 0x79622D32; // \"2-by\"\n    let j3 = 0x6B206574; // \"te k\"\n    let j4 = (key[3] << 24) | (key[2] << 16) | (key[1] << 8) | key[0];\n    let j5 = (key[7] << 24) | (key[6] << 16) | (key[5] << 8) | key[4];\n    let j6 = (key[11] << 24) | (key[10] << 16) | (key[9] << 8) | key[8];\n    let j7 = (key[15] << 24) | (key[14] << 16) | (key[13] << 8) | key[12];\n    let j8 = (key[19] << 24) | (key[18] << 16) | (key[17] << 8) | key[16];\n    let j9 = (key[23] << 24) | (key[22] << 16) | (key[21] << 8) | key[20];\n    let j10 = (key[27] << 24) | (key[26] << 16) | (key[25] << 8) | key[24];\n    let j11 = (key[31] << 24) | (key[30] << 16) | (key[29] << 8) | key[28];\n    let j12 = (input[3] << 24) | (input[2] << 16) | (input[1] << 8) | input[0];\n    let j13 = (input[7] << 24) | (input[6] << 16) | (input[5] << 8) | input[4];\n    let j14 = (input[11] << 24) | (input[10] << 16) | (input[9] << 8) | input[8];\n    let j15 = (input[15] << 24) | (input[14] << 16) | (input[13] << 8) | input[12];\n    let x0 = j0;\n    let x1 = j1;\n    let x2 = j2;\n    let x3 = j3;\n    let x4 = j4;\n    let x5 = j5;\n    let x6 = j6;\n    let x7 = j7;\n    let x8 = j8;\n    let x9 = j9;\n    let x10 = j10;\n    let x11 = j11;\n    let x12 = j12;\n    let x13 = j13;\n    let x14 = j14;\n    let x15 = j15;\n    for (let i = 0; i < ROUNDS; i += 2) {\n        x0 = x0 + x4 | 0;\n        x12 ^= x0;\n        x12 = x12 >>> (32 - 16) | x12 << 16;\n        x8 = x8 + x12 | 0;\n        x4 ^= x8;\n        x4 = x4 >>> (32 - 12) | x4 << 12;\n        x1 = x1 + x5 | 0;\n        x13 ^= x1;\n        x13 = x13 >>> (32 - 16) | x13 << 16;\n        x9 = x9 + x13 | 0;\n        x5 ^= x9;\n        x5 = x5 >>> (32 - 12) | x5 << 12;\n        x2 = x2 + x6 | 0;\n        x14 ^= x2;\n        x14 = x14 >>> (32 - 16) | x14 << 16;\n        x10 = x10 + x14 | 0;\n        x6 ^= x10;\n        x6 = x6 >>> (32 - 12) | x6 << 12;\n        x3 = x3 + x7 | 0;\n        x15 ^= x3;\n        x15 = x15 >>> (32 - 16) | x15 << 16;\n        x11 = x11 + x15 | 0;\n        x7 ^= x11;\n        x7 = x7 >>> (32 - 12) | x7 << 12;\n        x2 = x2 + x6 | 0;\n        x14 ^= x2;\n        x14 = x14 >>> (32 - 8) | x14 << 8;\n        x10 = x10 + x14 | 0;\n        x6 ^= x10;\n        x6 = x6 >>> (32 - 7) | x6 << 7;\n        x3 = x3 + x7 | 0;\n        x15 ^= x3;\n        x15 = x15 >>> (32 - 8) | x15 << 8;\n        x11 = x11 + x15 | 0;\n        x7 ^= x11;\n        x7 = x7 >>> (32 - 7) | x7 << 7;\n        x1 = x1 + x5 | 0;\n        x13 ^= x1;\n        x13 = x13 >>> (32 - 8) | x13 << 8;\n        x9 = x9 + x13 | 0;\n        x5 ^= x9;\n        x5 = x5 >>> (32 - 7) | x5 << 7;\n        x0 = x0 + x4 | 0;\n        x12 ^= x0;\n        x12 = x12 >>> (32 - 8) | x12 << 8;\n        x8 = x8 + x12 | 0;\n        x4 ^= x8;\n        x4 = x4 >>> (32 - 7) | x4 << 7;\n        x0 = x0 + x5 | 0;\n        x15 ^= x0;\n        x15 = x15 >>> (32 - 16) | x15 << 16;\n        x10 = x10 + x15 | 0;\n        x5 ^= x10;\n        x5 = x5 >>> (32 - 12) | x5 << 12;\n        x1 = x1 + x6 | 0;\n        x12 ^= x1;\n        x12 = x12 >>> (32 - 16) | x12 << 16;\n        x11 = x11 + x12 | 0;\n        x6 ^= x11;\n        x6 = x6 >>> (32 - 12) | x6 << 12;\n        x2 = x2 + x7 | 0;\n        x13 ^= x2;\n        x13 = x13 >>> (32 - 16) | x13 << 16;\n        x8 = x8 + x13 | 0;\n        x7 ^= x8;\n        x7 = x7 >>> (32 - 12) | x7 << 12;\n        x3 = x3 + x4 | 0;\n        x14 ^= x3;\n        x14 = x14 >>> (32 - 16) | x14 << 16;\n        x9 = x9 + x14 | 0;\n        x4 ^= x9;\n        x4 = x4 >>> (32 - 12) | x4 << 12;\n        x2 = x2 + x7 | 0;\n        x13 ^= x2;\n        x13 = x13 >>> (32 - 8) | x13 << 8;\n        x8 = x8 + x13 | 0;\n        x7 ^= x8;\n        x7 = x7 >>> (32 - 7) | x7 << 7;\n        x3 = x3 + x4 | 0;\n        x14 ^= x3;\n        x14 = x14 >>> (32 - 8) | x14 << 8;\n        x9 = x9 + x14 | 0;\n        x4 ^= x9;\n        x4 = x4 >>> (32 - 7) | x4 << 7;\n        x1 = x1 + x6 | 0;\n        x12 ^= x1;\n        x12 = x12 >>> (32 - 8) | x12 << 8;\n        x11 = x11 + x12 | 0;\n        x6 ^= x11;\n        x6 = x6 >>> (32 - 7) | x6 << 7;\n        x0 = x0 + x5 | 0;\n        x15 ^= x0;\n        x15 = x15 >>> (32 - 8) | x15 << 8;\n        x10 = x10 + x15 | 0;\n        x5 ^= x10;\n        x5 = x5 >>> (32 - 7) | x5 << 7;\n    }\n    writeUint32LE(x0 + j0 | 0, out, 0);\n    writeUint32LE(x1 + j1 | 0, out, 4);\n    writeUint32LE(x2 + j2 | 0, out, 8);\n    writeUint32LE(x3 + j3 | 0, out, 12);\n    writeUint32LE(x4 + j4 | 0, out, 16);\n    writeUint32LE(x5 + j5 | 0, out, 20);\n    writeUint32LE(x6 + j6 | 0, out, 24);\n    writeUint32LE(x7 + j7 | 0, out, 28);\n    writeUint32LE(x8 + j8 | 0, out, 32);\n    writeUint32LE(x9 + j9 | 0, out, 36);\n    writeUint32LE(x10 + j10 | 0, out, 40);\n    writeUint32LE(x11 + j11 | 0, out, 44);\n    writeUint32LE(x12 + j12 | 0, out, 48);\n    writeUint32LE(x13 + j13 | 0, out, 52);\n    writeUint32LE(x14 + j14 | 0, out, 56);\n    writeUint32LE(x15 + j15 | 0, out, 60);\n}\n/**\n * Encrypt src with ChaCha20 stream generated for the given 32-byte key and\n * 8-byte (as in original implementation) or 12-byte (as in RFC7539) nonce and\n * write the result into dst and return it.\n *\n * dst and src may be the same, but otherwise must not overlap.\n *\n * If nonce is 12 bytes, users should not encrypt more than 256 GiB with the\n * same key and nonce, otherwise the stream will repeat. The function will\n * throw error if counter overflows to prevent this.\n *\n * If nonce is 8 bytes, the output is practically unlimited (2^70 bytes, which\n * is more than a million petabytes). However, it is not recommended to\n * generate 8-byte nonces randomly, as the chance of collision is high.\n *\n * Never use the same key and nonce to encrypt more than one message.\n *\n * If nonceInplaceCounterLength is not 0, the nonce is assumed to be a 16-byte\n * array with stream counter in first nonceInplaceCounterLength bytes and nonce\n * in the last remaining bytes. The counter will be incremented inplace for\n * each ChaCha block. This is useful if you need to encrypt one stream of data\n * in chunks.\n */\nexport function streamXOR(key, nonce, src, dst, nonceInplaceCounterLength = 0) {\n    // We only support 256-bit keys.\n    if (key.length !== 32) {\n        throw new Error(\"ChaCha: key size must be 32 bytes\");\n    }\n    if (dst.length < src.length) {\n        throw new Error(\"ChaCha: destination is shorter than source\");\n    }\n    let nc;\n    let counterLength;\n    if (nonceInplaceCounterLength === 0) {\n        if (nonce.length !== 8 && nonce.length !== 12) {\n            throw new Error(\"ChaCha nonce must be 8 or 12 bytes\");\n        }\n        nc = new Uint8Array(16);\n        // First counterLength bytes of nc are counter, starting with zero.\n        counterLength = nc.length - nonce.length;\n        // Last bytes of nc after counterLength are nonce, set them.\n        nc.set(nonce, counterLength);\n    }\n    else {\n        if (nonce.length !== 16) {\n            throw new Error(\"ChaCha nonce with counter must be 16 bytes\");\n        }\n        // This will update passed nonce with counter inplace.\n        nc = nonce;\n        counterLength = nonceInplaceCounterLength;\n    }\n    // Allocate temporary space for ChaCha block.\n    const block = new Uint8Array(64);\n    for (let i = 0; i < src.length; i += 64) {\n        // Generate a block.\n        core(block, nc, key);\n        // XOR block bytes with src into dst.\n        for (let j = i; j < i + 64 && j < src.length; j++) {\n            dst[j] = src[j] ^ block[j - i];\n        }\n        // Increment counter.\n        incrementCounter(nc, 0, counterLength);\n    }\n    // Cleanup temporary space.\n    wipe(block);\n    if (nonceInplaceCounterLength === 0) {\n        // Cleanup counter.\n        wipe(nc);\n    }\n    return dst;\n}\n/**\n * Generate ChaCha20 stream for the given 32-byte key and 8-byte or 12-byte\n * nonce and write it into dst and return it.\n *\n * Never use the same key and nonce to generate more than one stream.\n *\n * If nonceInplaceCounterLength is not 0, it behaves the same with respect to\n * the nonce as described in the streamXOR documentation.\n *\n * stream is like streamXOR with all-zero src.\n */\nexport function stream(key, nonce, dst, nonceInplaceCounterLength = 0) {\n    wipe(dst);\n    return streamXOR(key, nonce, dst, dst, nonceInplaceCounterLength);\n}\nfunction incrementCounter(counter, pos, len) {\n    let carry = 1;\n    while (len--) {\n        carry = carry + (counter[pos] & 0xff) | 0;\n        counter[pos] = carry & 0xff;\n        carry >>>= 8;\n        pos++;\n    }\n    if (carry > 0) {\n        throw new Error(\"ChaCha: counter overflow\");\n    }\n}\n//# sourceMappingURL=chacha.js.map","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n/**\n * Package constant-time provides functions for performing algorithmically constant-time operations.\n */\n/**\n * NOTE! Due to the inability to guarantee real constant time evaluation of\n * anything in JavaScript VM, this is module is the best effort.\n */\n/**\n * Returns resultIfOne if subject is 1, or resultIfZero if subject is 0.\n *\n * Supports only 32-bit integers, so resultIfOne or resultIfZero are not\n * integers, they'll be converted to them with bitwise operations.\n */\nexport function select(subject, resultIfOne, resultIfZero) {\n    return (~(subject - 1) & resultIfOne) | ((subject - 1) & resultIfZero);\n}\n/**\n * Returns 1 if a <= b, or 0 if not.\n * Arguments must be positive 32-bit integers less than or equal to 2^31 - 1.\n */\nexport function lessOrEqual(a, b) {\n    return (((a | 0) - (b | 0) - 1) >>> 31) & 1;\n}\n/**\n * Returns 1 if a and b are of equal length and their contents\n * are equal, or 0 otherwise.\n *\n * Note that unlike in equal(), zero-length inputs are considered\n * the same, so this function will return 1.\n */\nexport function compare(a, b) {\n    if (a.length !== b.length) {\n        return 0;\n    }\n    let result = 0;\n    for (let i = 0; i < a.length; i++) {\n        result |= a[i] ^ b[i];\n    }\n    return (1 & ((result - 1) >>> 8));\n}\n/**\n * Returns true if a and b are of equal non-zero length,\n * and their contents are equal, or false otherwise.\n *\n * Note that unlike in compare() zero-length inputs are considered\n * _not_ equal, so this function will return false.\n */\nexport function equal(a, b) {\n    if (a.length === 0 || b.length === 0) {\n        return false;\n    }\n    return compare(a, b) !== 0;\n}\n//# sourceMappingURL=constant-time.js.map","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n/**\n * Package poly1305 implements Poly1305 one-time message authentication algorithm.\n */\nimport { equal as constantTimeEqual } from \"@stablelib/constant-time\";\nimport { wipe } from \"@stablelib/wipe\";\nexport const DIGEST_LENGTH = 16;\n// Port of Andrew Moon's Poly1305-donna-16. Public domain.\n// https://github.com/floodyberry/poly1305-donna\n/**\n * Poly1305 computes 16-byte authenticator of message using\n * a one-time 32-byte key.\n *\n * Important: key should be used for only one message,\n * it should never repeat.\n */\nexport class Poly1305 {\n    digestLength = DIGEST_LENGTH;\n    _buffer = new Uint8Array(16);\n    _r = new Uint16Array(10);\n    _h = new Uint16Array(10);\n    _pad = new Uint16Array(8);\n    _leftover = 0;\n    _fin = 0;\n    _finished = false;\n    constructor(key) {\n        let t0 = key[0] | key[1] << 8;\n        this._r[0] = (t0) & 0x1fff;\n        let t1 = key[2] | key[3] << 8;\n        this._r[1] = ((t0 >>> 13) | (t1 << 3)) & 0x1fff;\n        let t2 = key[4] | key[5] << 8;\n        this._r[2] = ((t1 >>> 10) | (t2 << 6)) & 0x1f03;\n        let t3 = key[6] | key[7] << 8;\n        this._r[3] = ((t2 >>> 7) | (t3 << 9)) & 0x1fff;\n        let t4 = key[8] | key[9] << 8;\n        this._r[4] = ((t3 >>> 4) | (t4 << 12)) & 0x00ff;\n        this._r[5] = ((t4 >>> 1)) & 0x1ffe;\n        let t5 = key[10] | key[11] << 8;\n        this._r[6] = ((t4 >>> 14) | (t5 << 2)) & 0x1fff;\n        let t6 = key[12] | key[13] << 8;\n        this._r[7] = ((t5 >>> 11) | (t6 << 5)) & 0x1f81;\n        let t7 = key[14] | key[15] << 8;\n        this._r[8] = ((t6 >>> 8) | (t7 << 8)) & 0x1fff;\n        this._r[9] = ((t7 >>> 5)) & 0x007f;\n        this._pad[0] = key[16] | key[17] << 8;\n        this._pad[1] = key[18] | key[19] << 8;\n        this._pad[2] = key[20] | key[21] << 8;\n        this._pad[3] = key[22] | key[23] << 8;\n        this._pad[4] = key[24] | key[25] << 8;\n        this._pad[5] = key[26] | key[27] << 8;\n        this._pad[6] = key[28] | key[29] << 8;\n        this._pad[7] = key[30] | key[31] << 8;\n    }\n    _blocks(m, mpos, bytes) {\n        let hibit = this._fin ? 0 : 1 << 11;\n        let h0 = this._h[0], h1 = this._h[1], h2 = this._h[2], h3 = this._h[3], h4 = this._h[4], h5 = this._h[5], h6 = this._h[6], h7 = this._h[7], h8 = this._h[8], h9 = this._h[9];\n        let r0 = this._r[0], r1 = this._r[1], r2 = this._r[2], r3 = this._r[3], r4 = this._r[4], r5 = this._r[5], r6 = this._r[6], r7 = this._r[7], r8 = this._r[8], r9 = this._r[9];\n        while (bytes >= 16) {\n            let t0 = m[mpos + 0] | m[mpos + 1] << 8;\n            h0 += (t0) & 0x1fff;\n            let t1 = m[mpos + 2] | m[mpos + 3] << 8;\n            h1 += ((t0 >>> 13) | (t1 << 3)) & 0x1fff;\n            let t2 = m[mpos + 4] | m[mpos + 5] << 8;\n            h2 += ((t1 >>> 10) | (t2 << 6)) & 0x1fff;\n            let t3 = m[mpos + 6] | m[mpos + 7] << 8;\n            h3 += ((t2 >>> 7) | (t3 << 9)) & 0x1fff;\n            let t4 = m[mpos + 8] | m[mpos + 9] << 8;\n            h4 += ((t3 >>> 4) | (t4 << 12)) & 0x1fff;\n            h5 += ((t4 >>> 1)) & 0x1fff;\n            let t5 = m[mpos + 10] | m[mpos + 11] << 8;\n            h6 += ((t4 >>> 14) | (t5 << 2)) & 0x1fff;\n            let t6 = m[mpos + 12] | m[mpos + 13] << 8;\n            h7 += ((t5 >>> 11) | (t6 << 5)) & 0x1fff;\n            let t7 = m[mpos + 14] | m[mpos + 15] << 8;\n            h8 += ((t6 >>> 8) | (t7 << 8)) & 0x1fff;\n            h9 += ((t7 >>> 5)) | hibit;\n            let c = 0;\n            let d0 = c;\n            d0 += h0 * r0;\n            d0 += h1 * (5 * r9);\n            d0 += h2 * (5 * r8);\n            d0 += h3 * (5 * r7);\n            d0 += h4 * (5 * r6);\n            c = (d0 >>> 13);\n            d0 &= 0x1fff;\n            d0 += h5 * (5 * r5);\n            d0 += h6 * (5 * r4);\n            d0 += h7 * (5 * r3);\n            d0 += h8 * (5 * r2);\n            d0 += h9 * (5 * r1);\n            c += (d0 >>> 13);\n            d0 &= 0x1fff;\n            let d1 = c;\n            d1 += h0 * r1;\n            d1 += h1 * r0;\n            d1 += h2 * (5 * r9);\n            d1 += h3 * (5 * r8);\n            d1 += h4 * (5 * r7);\n            c = (d1 >>> 13);\n            d1 &= 0x1fff;\n            d1 += h5 * (5 * r6);\n            d1 += h6 * (5 * r5);\n            d1 += h7 * (5 * r4);\n            d1 += h8 * (5 * r3);\n            d1 += h9 * (5 * r2);\n            c += (d1 >>> 13);\n            d1 &= 0x1fff;\n            let d2 = c;\n            d2 += h0 * r2;\n            d2 += h1 * r1;\n            d2 += h2 * r0;\n            d2 += h3 * (5 * r9);\n            d2 += h4 * (5 * r8);\n            c = (d2 >>> 13);\n            d2 &= 0x1fff;\n            d2 += h5 * (5 * r7);\n            d2 += h6 * (5 * r6);\n            d2 += h7 * (5 * r5);\n            d2 += h8 * (5 * r4);\n            d2 += h9 * (5 * r3);\n            c += (d2 >>> 13);\n            d2 &= 0x1fff;\n            let d3 = c;\n            d3 += h0 * r3;\n            d3 += h1 * r2;\n            d3 += h2 * r1;\n            d3 += h3 * r0;\n            d3 += h4 * (5 * r9);\n            c = (d3 >>> 13);\n            d3 &= 0x1fff;\n            d3 += h5 * (5 * r8);\n            d3 += h6 * (5 * r7);\n            d3 += h7 * (5 * r6);\n            d3 += h8 * (5 * r5);\n            d3 += h9 * (5 * r4);\n            c += (d3 >>> 13);\n            d3 &= 0x1fff;\n            let d4 = c;\n            d4 += h0 * r4;\n            d4 += h1 * r3;\n            d4 += h2 * r2;\n            d4 += h3 * r1;\n            d4 += h4 * r0;\n            c = (d4 >>> 13);\n            d4 &= 0x1fff;\n            d4 += h5 * (5 * r9);\n            d4 += h6 * (5 * r8);\n            d4 += h7 * (5 * r7);\n            d4 += h8 * (5 * r6);\n            d4 += h9 * (5 * r5);\n            c += (d4 >>> 13);\n            d4 &= 0x1fff;\n            let d5 = c;\n            d5 += h0 * r5;\n            d5 += h1 * r4;\n            d5 += h2 * r3;\n            d5 += h3 * r2;\n            d5 += h4 * r1;\n            c = (d5 >>> 13);\n            d5 &= 0x1fff;\n            d5 += h5 * r0;\n            d5 += h6 * (5 * r9);\n            d5 += h7 * (5 * r8);\n            d5 += h8 * (5 * r7);\n            d5 += h9 * (5 * r6);\n            c += (d5 >>> 13);\n            d5 &= 0x1fff;\n            let d6 = c;\n            d6 += h0 * r6;\n            d6 += h1 * r5;\n            d6 += h2 * r4;\n            d6 += h3 * r3;\n            d6 += h4 * r2;\n            c = (d6 >>> 13);\n            d6 &= 0x1fff;\n            d6 += h5 * r1;\n            d6 += h6 * r0;\n            d6 += h7 * (5 * r9);\n            d6 += h8 * (5 * r8);\n            d6 += h9 * (5 * r7);\n            c += (d6 >>> 13);\n            d6 &= 0x1fff;\n            let d7 = c;\n            d7 += h0 * r7;\n            d7 += h1 * r6;\n            d7 += h2 * r5;\n            d7 += h3 * r4;\n            d7 += h4 * r3;\n            c = (d7 >>> 13);\n            d7 &= 0x1fff;\n            d7 += h5 * r2;\n            d7 += h6 * r1;\n            d7 += h7 * r0;\n            d7 += h8 * (5 * r9);\n            d7 += h9 * (5 * r8);\n            c += (d7 >>> 13);\n            d7 &= 0x1fff;\n            let d8 = c;\n            d8 += h0 * r8;\n            d8 += h1 * r7;\n            d8 += h2 * r6;\n            d8 += h3 * r5;\n            d8 += h4 * r4;\n            c = (d8 >>> 13);\n            d8 &= 0x1fff;\n            d8 += h5 * r3;\n            d8 += h6 * r2;\n            d8 += h7 * r1;\n            d8 += h8 * r0;\n            d8 += h9 * (5 * r9);\n            c += (d8 >>> 13);\n            d8 &= 0x1fff;\n            let d9 = c;\n            d9 += h0 * r9;\n            d9 += h1 * r8;\n            d9 += h2 * r7;\n            d9 += h3 * r6;\n            d9 += h4 * r5;\n            c = (d9 >>> 13);\n            d9 &= 0x1fff;\n            d9 += h5 * r4;\n            d9 += h6 * r3;\n            d9 += h7 * r2;\n            d9 += h8 * r1;\n            d9 += h9 * r0;\n            c += (d9 >>> 13);\n            d9 &= 0x1fff;\n            c = (((c << 2) + c)) | 0;\n            c = (c + d0) | 0;\n            d0 = c & 0x1fff;\n            c = (c >>> 13);\n            d1 += c;\n            h0 = d0;\n            h1 = d1;\n            h2 = d2;\n            h3 = d3;\n            h4 = d4;\n            h5 = d5;\n            h6 = d6;\n            h7 = d7;\n            h8 = d8;\n            h9 = d9;\n            mpos += 16;\n            bytes -= 16;\n        }\n        this._h[0] = h0;\n        this._h[1] = h1;\n        this._h[2] = h2;\n        this._h[3] = h3;\n        this._h[4] = h4;\n        this._h[5] = h5;\n        this._h[6] = h6;\n        this._h[7] = h7;\n        this._h[8] = h8;\n        this._h[9] = h9;\n    }\n    finish(mac, macpos = 0) {\n        const g = new Uint16Array(10);\n        let c;\n        let mask;\n        let f;\n        let i;\n        if (this._leftover) {\n            i = this._leftover;\n            this._buffer[i++] = 1;\n            for (; i < 16; i++) {\n                this._buffer[i] = 0;\n            }\n            this._fin = 1;\n            this._blocks(this._buffer, 0, 16);\n        }\n        c = this._h[1] >>> 13;\n        this._h[1] &= 0x1fff;\n        for (i = 2; i < 10; i++) {\n            this._h[i] += c;\n            c = this._h[i] >>> 13;\n            this._h[i] &= 0x1fff;\n        }\n        this._h[0] += (c * 5);\n        c = this._h[0] >>> 13;\n        this._h[0] &= 0x1fff;\n        this._h[1] += c;\n        c = this._h[1] >>> 13;\n        this._h[1] &= 0x1fff;\n        this._h[2] += c;\n        g[0] = this._h[0] + 5;\n        c = g[0] >>> 13;\n        g[0] &= 0x1fff;\n        for (i = 1; i < 10; i++) {\n            g[i] = this._h[i] + c;\n            c = g[i] >>> 13;\n            g[i] &= 0x1fff;\n        }\n        g[9] -= (1 << 13);\n        mask = (c ^ 1) - 1;\n        for (i = 0; i < 10; i++) {\n            g[i] &= mask;\n        }\n        mask = ~mask;\n        for (i = 0; i < 10; i++) {\n            this._h[i] = (this._h[i] & mask) | g[i];\n        }\n        this._h[0] = ((this._h[0]) | (this._h[1] << 13)) & 0xffff;\n        this._h[1] = ((this._h[1] >>> 3) | (this._h[2] << 10)) & 0xffff;\n        this._h[2] = ((this._h[2] >>> 6) | (this._h[3] << 7)) & 0xffff;\n        this._h[3] = ((this._h[3] >>> 9) | (this._h[4] << 4)) & 0xffff;\n        this._h[4] = ((this._h[4] >>> 12) | (this._h[5] << 1) | (this._h[6] << 14)) & 0xffff;\n        this._h[5] = ((this._h[6] >>> 2) | (this._h[7] << 11)) & 0xffff;\n        this._h[6] = ((this._h[7] >>> 5) | (this._h[8] << 8)) & 0xffff;\n        this._h[7] = ((this._h[8] >>> 8) | (this._h[9] << 5)) & 0xffff;\n        f = this._h[0] + this._pad[0];\n        this._h[0] = f & 0xffff;\n        for (i = 1; i < 8; i++) {\n            f = (((this._h[i] + this._pad[i]) | 0) + (f >>> 16)) | 0;\n            this._h[i] = f & 0xffff;\n        }\n        mac[macpos + 0] = this._h[0] >>> 0;\n        mac[macpos + 1] = this._h[0] >>> 8;\n        mac[macpos + 2] = this._h[1] >>> 0;\n        mac[macpos + 3] = this._h[1] >>> 8;\n        mac[macpos + 4] = this._h[2] >>> 0;\n        mac[macpos + 5] = this._h[2] >>> 8;\n        mac[macpos + 6] = this._h[3] >>> 0;\n        mac[macpos + 7] = this._h[3] >>> 8;\n        mac[macpos + 8] = this._h[4] >>> 0;\n        mac[macpos + 9] = this._h[4] >>> 8;\n        mac[macpos + 10] = this._h[5] >>> 0;\n        mac[macpos + 11] = this._h[5] >>> 8;\n        mac[macpos + 12] = this._h[6] >>> 0;\n        mac[macpos + 13] = this._h[6] >>> 8;\n        mac[macpos + 14] = this._h[7] >>> 0;\n        mac[macpos + 15] = this._h[7] >>> 8;\n        this._finished = true;\n        return this;\n    }\n    update(m) {\n        let mpos = 0;\n        let bytes = m.length;\n        let want;\n        if (this._leftover) {\n            want = (16 - this._leftover);\n            if (want > bytes) {\n                want = bytes;\n            }\n            for (let i = 0; i < want; i++) {\n                this._buffer[this._leftover + i] = m[mpos + i];\n            }\n            bytes -= want;\n            mpos += want;\n            this._leftover += want;\n            if (this._leftover < 16) {\n                return this;\n            }\n            this._blocks(this._buffer, 0, 16);\n            this._leftover = 0;\n        }\n        if (bytes >= 16) {\n            want = bytes - (bytes % 16);\n            this._blocks(m, mpos, want);\n            mpos += want;\n            bytes -= want;\n        }\n        if (bytes) {\n            for (let i = 0; i < bytes; i++) {\n                this._buffer[this._leftover + i] = m[mpos + i];\n            }\n            this._leftover += bytes;\n        }\n        return this;\n    }\n    digest() {\n        // TODO(dchest): it behaves differently than other hashes/HMAC,\n        // because it throws when finished — others just return saved result.\n        if (this._finished) {\n            throw new Error(\"Poly1305 was finished\");\n        }\n        let mac = new Uint8Array(16);\n        this.finish(mac);\n        return mac;\n    }\n    clean() {\n        wipe(this._buffer);\n        wipe(this._r);\n        wipe(this._h);\n        wipe(this._pad);\n        this._leftover = 0;\n        this._fin = 0;\n        this._finished = true; // mark as finished even if not\n        return this;\n    }\n}\n/**\n * Returns 16-byte authenticator of data using a one-time 32-byte key.\n *\n * Important: key should be used for only one message, it should never repeat.\n */\nexport function oneTimeAuth(key, data) {\n    const h = new Poly1305(key);\n    h.update(data);\n    const digest = h.digest();\n    h.clean();\n    return digest;\n}\n/**\n * Returns true if two authenticators are 16-byte long and equal.\n * Uses contant-time comparison to avoid leaking timing information.\n */\nexport function equal(a, b) {\n    if (a.length !== DIGEST_LENGTH || b.length !== DIGEST_LENGTH) {\n        return false;\n    }\n    return constantTimeEqual(a, b);\n}\n//# sourceMappingURL=poly1305.js.map","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nimport { streamXOR, stream } from \"@stablelib/chacha\";\nimport { Poly1305 } from \"@stablelib/poly1305\";\nimport { wipe } from \"@stablelib/wipe\";\nimport { writeUint64LE } from \"@stablelib/binary\";\nimport { equal } from \"@stablelib/constant-time\";\nexport const KEY_LENGTH = 32;\nexport const NONCE_LENGTH = 12;\nexport const TAG_LENGTH = 16;\nconst ZEROS = new Uint8Array(16);\n/**\n * ChaCha20-Poly1305 Authenticated Encryption with Associated Data.\n *\n * Defined in RFC7539.\n */\nexport class ChaCha20Poly1305 {\n    nonceLength = NONCE_LENGTH;\n    tagLength = TAG_LENGTH;\n    _key;\n    /**\n     * Creates a new instance with the given 32-byte key.\n     */\n    constructor(key) {\n        if (key.length !== KEY_LENGTH) {\n            throw new Error(\"ChaCha20Poly1305 needs 32-byte key\");\n        }\n        // Copy key.\n        this._key = new Uint8Array(key);\n    }\n    /**\n     * Encrypts and authenticates plaintext, authenticates associated data,\n     * and returns sealed ciphertext, which includes authentication tag.\n     *\n     * RFC7539 specifies 12 bytes for nonce. It may be this 12-byte nonce\n     * (\"IV\"), or full 16-byte counter (called \"32-bit fixed-common part\")\n     * and nonce.\n     *\n     * If dst is given (it must be the size of plaintext + the size of tag\n     * length) the result will be put into it. Dst and plaintext must not\n     * overlap.\n     */\n    seal(nonce, plaintext, associatedData, dst) {\n        if (nonce.length > 16) {\n            throw new Error(\"ChaCha20Poly1305: incorrect nonce length\");\n        }\n        // Allocate space for counter, and set nonce as last bytes of it.\n        const counter = new Uint8Array(16);\n        counter.set(nonce, counter.length - nonce.length);\n        // Generate authentication key by taking first 32-bytes of stream.\n        // We pass full counter, which has 12-byte nonce and 4-byte block counter,\n        // and it will get incremented after generating the block, which is\n        // exactly what we need: we only use the first 32 bytes of 64-byte\n        // ChaCha block and discard the next 32 bytes.\n        const authKey = new Uint8Array(32);\n        stream(this._key, counter, authKey, 4);\n        // Allocate space for sealed ciphertext.\n        const resultLength = plaintext.length + this.tagLength;\n        let result;\n        if (dst) {\n            if (dst.length !== resultLength) {\n                throw new Error(\"ChaCha20Poly1305: incorrect destination length\");\n            }\n            result = dst;\n        }\n        else {\n            result = new Uint8Array(resultLength);\n        }\n        // Encrypt plaintext.\n        streamXOR(this._key, counter, plaintext, result, 4);\n        // Authenticate.\n        // XXX: can \"simplify\" here: pass full result (which is already padded\n        // due to zeroes prepared for tag), and ciphertext length instead of\n        // subarray of result.\n        this._authenticate(result.subarray(result.length - this.tagLength, result.length), authKey, result.subarray(0, result.length - this.tagLength), associatedData);\n        // Cleanup.\n        wipe(counter);\n        return result;\n    }\n    /**\n     * Authenticates sealed ciphertext (which includes authentication tag) and\n     * associated data, decrypts ciphertext and returns decrypted plaintext.\n     *\n     * RFC7539 specifies 12 bytes for nonce. It may be this 12-byte nonce\n     * (\"IV\"), or full 16-byte counter (called \"32-bit fixed-common part\")\n     * and nonce.\n     *\n     * If authentication fails, it returns null.\n     *\n     * If dst is given (it must be of ciphertext length minus tag length),\n     * the result will be put into it. Dst and plaintext must not overlap.\n     */\n    open(nonce, sealed, associatedData, dst) {\n        if (nonce.length > 16) {\n            throw new Error(\"ChaCha20Poly1305: incorrect nonce length\");\n        }\n        // Sealed ciphertext should at least contain tag.\n        if (sealed.length < this.tagLength) {\n            // TODO(dchest): should we throw here instead?\n            return null;\n        }\n        // Allocate space for counter, and set nonce as last bytes of it.\n        const counter = new Uint8Array(16);\n        counter.set(nonce, counter.length - nonce.length);\n        // Generate authentication key by taking first 32-bytes of stream.\n        const authKey = new Uint8Array(32);\n        stream(this._key, counter, authKey, 4);\n        // Authenticate.\n        // XXX: can simplify and avoid allocation: since authenticate()\n        // already allocates tag (from Poly1305.digest(), it can return)\n        // it instead of copying to calculatedTag. But then in seal()\n        // we'll need to copy it.\n        const calculatedTag = new Uint8Array(this.tagLength);\n        this._authenticate(calculatedTag, authKey, sealed.subarray(0, sealed.length - this.tagLength), associatedData);\n        // Constant-time compare tags and return null if they differ.\n        if (!equal(calculatedTag, sealed.subarray(sealed.length - this.tagLength, sealed.length))) {\n            return null;\n        }\n        // Allocate space for decrypted plaintext.\n        const resultLength = sealed.length - this.tagLength;\n        let result;\n        if (dst) {\n            if (dst.length !== resultLength) {\n                throw new Error(\"ChaCha20Poly1305: incorrect destination length\");\n            }\n            result = dst;\n        }\n        else {\n            result = new Uint8Array(resultLength);\n        }\n        // Decrypt.\n        streamXOR(this._key, counter, sealed.subarray(0, sealed.length - this.tagLength), result, 4);\n        // Cleanup.\n        wipe(counter);\n        return result;\n    }\n    clean() {\n        wipe(this._key);\n        return this;\n    }\n    _authenticate(tagOut, authKey, ciphertext, associatedData) {\n        // Initialize Poly1305 with authKey.\n        const h = new Poly1305(authKey);\n        // Authenticate padded associated data.\n        if (associatedData) {\n            h.update(associatedData);\n            if (associatedData.length % 16 > 0) {\n                h.update(ZEROS.subarray(associatedData.length % 16));\n            }\n        }\n        // Authenticate padded ciphertext.\n        h.update(ciphertext);\n        if (ciphertext.length % 16 > 0) {\n            h.update(ZEROS.subarray(ciphertext.length % 16));\n        }\n        // Authenticate length of associated data.\n        // XXX: can avoid allocation here?\n        const length = new Uint8Array(8);\n        if (associatedData) {\n            writeUint64LE(associatedData.length, length);\n        }\n        h.update(length);\n        // Authenticate length of ciphertext.\n        writeUint64LE(ciphertext.length, length);\n        h.update(length);\n        // Get tag and copy it into tagOut.\n        const tag = h.digest();\n        for (let i = 0; i < tag.length; i++) {\n            tagOut[i] = tag[i];\n        }\n        // Cleanup.\n        h.clean();\n        wipe(tag);\n        wipe(length);\n    }\n}\n//# sourceMappingURL=chacha20poly1305.js.map","// SPDX-License-Identifier: MIT\nimport { hmac } from '@noble/hashes/hmac';\n// @ts-ignore: no declaration file for '@taichunmin/crc'\nimport { crc32 as crc32Hex, crc16xmodem as crc16xmodemHex } from '@taichunmin/crc';\nimport { sha256 as nobleSha256, sha512 as nobleSha512, sha512_256 as nobleSha512_256 } from '@noble/hashes/sha2';\nimport { sha3_256 as nobleSha3_256, keccak_256 as nobleKeccak256 } from '@noble/hashes/sha3';\nimport { blake2b as nobleBlake2b } from '@noble/hashes/blake2';\nimport { pbkdf2 } from '@noble/hashes/pbkdf2';\nimport { ripemd160 as nobleRipemd160 } from '@noble/hashes/legacy';\nimport { ChaCha20Poly1305 } from '@stablelib/chacha20poly1305';\nimport { getBytes, integerToBytes, concatBytes, toBuffer } from './utils';\nimport { SLIP10_SECP256K1_CONST } from './consts';\nexport function hmacSha256(key, data) {\n    const mac = hmac(nobleSha256, toBuffer(key), toBuffer(data)); // ← key first!\n    return getBytes(mac);\n}\nexport function hmacSha512(key, data) {\n    const mac = hmac(nobleSha512, toBuffer(key), toBuffer(data)); // ← key first!\n    return getBytes(mac);\n}\nexport function blake2b(data, digestSize, key = new Uint8Array(0), salt = new Uint8Array(0), personalize) {\n    const msg = getBytes(data);\n    const k = getBytes(key);\n    const s = getBytes(salt);\n    const p = personalize ? getBytes(personalize) : undefined;\n    const hashBytes = nobleBlake2b(msg, {\n        dkLen: digestSize,\n        key: k.length > 0 ? k : undefined,\n        salt: s.length > 0 ? s : undefined,\n        personalize: p,\n    });\n    return getBytes(hashBytes);\n}\nexport const blake2b32 = (d, k, s) => blake2b(d, 4, k, s);\nexport const blake2b40 = (d, k, s) => blake2b(d, 5, k, s);\nexport const blake2b160 = (d, k, s) => blake2b(d, 20, k, s);\nexport const blake2b224 = (d, k, s) => blake2b(d, 28, k, s);\nexport const blake2b256 = (d, k, s) => blake2b(d, 32, k, s);\nexport const blake2b512 = (d, k, s) => blake2b(d, 64, k, s);\nexport function chacha20Poly1305Encrypt(key, nonce, aad, plaintext) {\n    const aead = new ChaCha20Poly1305(getBytes(key)); // key must be 32 bytes\n    const ciphertextWithTag = aead.seal(getBytes(nonce), getBytes(plaintext), getBytes(aad));\n    // split cipher & tag (last 16 bytes)\n    const ct = ciphertextWithTag.slice(0, -16);\n    const tag = ciphertextWithTag.slice(-16);\n    return { cipherText: getBytes(ct), tag: getBytes(tag) };\n}\nexport function chacha20Poly1305Decrypt(key, nonce, aad, ciphertext, tag) {\n    const aead = new ChaCha20Poly1305(getBytes(key));\n    const combined = concatBytes(getBytes(ciphertext), getBytes(tag));\n    const pt = aead.open(getBytes(nonce), combined, getBytes(aad));\n    if (!pt)\n        throw new Error('ChaCha20-Poly1305: authentication failed');\n    return getBytes(pt);\n}\nexport function sha256(data) {\n    const bytes = getBytes(data);\n    const digestBytes = nobleSha256(bytes);\n    return getBytes(digestBytes);\n}\nexport const doubleSha256 = (d) => sha256(sha256(d));\nexport function sha512(data) {\n    const bytes = getBytes(data);\n    const digestBytes = nobleSha512(bytes);\n    return getBytes(digestBytes);\n}\nexport function sha512_256(data) {\n    const bytes = getBytes(data);\n    const digestBytes = nobleSha512_256(bytes);\n    return getBytes(digestBytes);\n}\nexport function keccak256(data) {\n    const bytes = getBytes(data);\n    const digestBytes = nobleKeccak256(bytes);\n    return getBytes(digestBytes);\n}\nexport function sha3_256(data) {\n    const bytes = getBytes(data);\n    const digestBytes = nobleSha3_256(bytes);\n    return getBytes(digestBytes);\n}\nexport function ripemd160(data) {\n    const bytes = getBytes(data); // whatever util you already use\n    return getBytes(nobleRipemd160(bytes));\n}\nexport function hash160(data) {\n    const sha = sha256(data);\n    return ripemd160(sha);\n}\nexport function crc32(data) {\n    const num = crc32Hex(toBuffer(data)) >>> 0;\n    return integerToBytes(num, 4);\n}\nexport function xmodemCrc(data) {\n    const num = crc16xmodemHex(toBuffer(data)) & 0xffff;\n    return integerToBytes(num, 2);\n}\nexport function pbkdf2HmacSha512(password, salt, iterations, keyLen = 64) {\n    if (iterations <= 0 || !Number.isSafeInteger(iterations))\n        throw new RangeError('iterations must be a positive integer');\n    if (keyLen <= 0)\n        throw new RangeError('keyLen must be > 0');\n    const dk = pbkdf2(nobleSha512, toBuffer(password), toBuffer(salt), { c: iterations, dkLen: keyLen });\n    return getBytes(dk);\n}\nexport const getChecksum = (d) => doubleSha256(d).slice(0, SLIP10_SECP256K1_CONST.CHECKSUM_BYTE_LENGTH);\n//# sourceMappingURL=crypto.js.map","// SPDX-License-Identifier: MIT\nexport class Network {\n    // Bitcoin\n    static PUBLIC_KEY_ADDRESS_PREFIX;\n    static SCRIPT_ADDRESS_PREFIX;\n    static HRP;\n    static WITNESS_VERSIONS;\n    static XPRIVATE_KEY_VERSIONS;\n    static XPUBLIC_KEY_VERSIONS;\n    static MESSAGE_PREFIX;\n    static WIF_PREFIX;\n    // Bitcoin-Cash | Bitcoin-Cash-SLP | eCash\n    static LEGACY_PUBLIC_KEY_ADDRESS_PREFIX;\n    static STD_PUBLIC_KEY_ADDRESS_PREFIX;\n    static LEGACY_SCRIPT_ADDRESS_PREFIX;\n    static STD_SCRIPT_ADDRESS_PREFIX;\n    // Monero\n    static STANDARD;\n    static INTEGRATED;\n    static SUB_ADDRESS;\n    // Cardano\n    static TYPE;\n    static PAYMENT_ADDRESS_HRP;\n    static REWARD_ADDRESS_HRP;\n    static getName() {\n        const name = this.prototype.constructor.name;\n        const base = name.includes('$') ? name.slice(0, name.indexOf('$')) : name;\n        return base.toLowerCase();\n    }\n}\nexport class Cryptocurrency {\n    static NAME;\n    static SYMBOL;\n    static INFO;\n    static ECC;\n    static COIN_TYPE;\n    static SUPPORT_BIP38;\n    static NETWORKS;\n    static DEFAULT_NETWORK;\n    static ENTROPIES;\n    static MNEMONICS;\n    static SEEDS;\n    static HDS;\n    static DEFAULT_HD;\n    static ADDRESSES;\n    static DEFAULT_ADDRESS;\n    static ADDRESS_TYPES;\n    static DEFAULT_ADDRESS_TYPE;\n    static ADDRESS_PREFIXES;\n    static DEFAULT_ADDRESS_PREFIX;\n    static DEFAULT_SEMANTIC;\n    static PARAMS;\n}\n//# sourceMappingURL=cryptocurrency.js.map","// SPDX-License-Identifier: MIT\n/**\n * SLIP-0044 coin type registry\n * https://github.com/satoshilabs/slips/blob/master/slip-0044.md\n */\nexport const CoinTypes = {\n    Adcoin: 161,\n    AkashNetwork: 118,\n    Algorand: 283,\n    Anon: 220,\n    Aptos: 637,\n    Arbitrum: 60,\n    Argoneum: 421,\n    Artax: 219,\n    Aryacoin: 357,\n    Asiacoin: 51,\n    Auroracoin: 85,\n    Avalanche: 9000,\n    Avian: 921,\n    Axe: 4242,\n    Axelar: 118,\n    BandProtocol: 494,\n    Bata: 89,\n    BeetleCoin: 800,\n    BelaCoin: 73,\n    Binance: 714,\n    BitCloud: 218,\n    Bitcoin: 0,\n    BitcoinAtom: 185,\n    BitcoinCash: 145,\n    BitcoinCashSLP: 145,\n    BitcoinGold: 156,\n    BitcoinGreen: 222,\n    BitcoinPlus: 65,\n    BitcoinPrivate: 183,\n    BitcoinSV: 236,\n    BitcoinZ: 177,\n    Bitcore: 160,\n    BitSend: 91,\n    Blackcoin: 10,\n    Blocknode: 2941,\n    BlockStamp: 254,\n    Bolivarcoin: 278,\n    BritCoin: 70,\n    CanadaECoin: 34,\n    Cannacoin: 19,\n    Cardano: 1815,\n    Celo: 52752,\n    Chihuahua: 118,\n    Clams: 23,\n    ClubCoin: 79,\n    Compcoin: 71,\n    Cosmos: 118,\n    CPUChain: 363,\n    CranePay: 2304,\n    Crave: 186,\n    Dash: 5,\n    DeepOnion: 305,\n    Defcoin: 1337,\n    Denarius: 116,\n    Diamond: 152,\n    DigiByte: 20,\n    Digitalcoin: 18,\n    Divi: 301,\n    Dogecoin: 3,\n    dYdX: 22000118,\n    eCash: 145,\n    ECoin: 115,\n    EDRCoin: 56,\n    eGulden: 78,\n    Einsteinium: 41,\n    Elastos: 2305,\n    Energi: 9797,\n    EOS: 194,\n    Ergo: 429,\n    Ethereum: 60,\n    EuropeCoin: 151,\n    Evrmore: 175,\n    ExclusiveCoin: 190,\n    Fantom: 60,\n    Feathercoin: 8,\n    FetchAI: 118,\n    Filecoin: 461,\n    Firo: 136,\n    Firstcoin: 167,\n    FIX: 336,\n    Flashcoin: 120,\n    Flux: 19167,\n    Foxdcoin: 175,\n    FujiCoin: 75,\n    GameCredits: 101,\n    GCRCoin: 49,\n    GoByte: 176,\n    Gridcoin: 84,\n    GroestlCoin: 17,\n    Gulden: 87,\n    Harmony: 1023,\n    Helleniccoin: 168,\n    Hempcoin: 113,\n    Horizen: 121,\n    HuobiToken: 553,\n    Hush: 197,\n    Icon: 74,\n    Injective: 60,\n    InsaneCoin: 68,\n    InternetOfPeople: 66,\n    IRISnet: 566,\n    IXCoin: 86,\n    Jumbucks: 26,\n    Kava: 459,\n    Kobocoin: 196,\n    Komodo: 141,\n    Landcoin: 63,\n    LBRYCredits: 140,\n    Linx: 114,\n    Litecoin: 2,\n    LitecoinCash: 192,\n    LitecoinZ: 221,\n    Lkrcoin: 557,\n    Lynx: 191,\n    Mazacoin: 13,\n    Megacoin: 217,\n    Metis: 60,\n    Minexcoin: 182,\n    Monacoin: 22,\n    Monero: 128,\n    Monk: 214,\n    MultiversX: 508,\n    Myriadcoin: 90,\n    Namecoin: 7,\n    Nano: 165,\n    Navcoin: 130,\n    Near: 397,\n    Neblio: 146,\n    Neo: 888,\n    Neoscoin: 25,\n    Neurocoin: 110,\n    NewYorkCoin: 179,\n    NineChronicles: 567,\n    NIX: 400,\n    Novacoin: 50,\n    NuBits: 12,\n    NuShares: 11,\n    OKCash: 69,\n    OKTChain: 996,\n    Omni: 200,\n    Onix: 174,\n    Ontology: 1024,\n    Optimism: 60,\n    Osmosis: 10000118,\n    Particl: 44,\n    Peercoin: 6,\n    Pesobit: 62,\n    Phore: 444,\n    PiNetwork: 314159,\n    Pinkcoin: 117,\n    Pivx: 119,\n    Polygon: 60,\n    PoSWCoin: 47,\n    Potcoin: 81,\n    ProjectCoin: 533,\n    Putincoin: 122,\n    Qtum: 2301,\n    Rapids: 320,\n    Ravencoin: 175,\n    Reddcoin: 4,\n    Ripple: 144,\n    Ritocoin: 19169,\n    RSK: 137,\n    Rubycoin: 16,\n    Safecoin: 19165,\n    Saluscoin: 572,\n    Scribe: 545,\n    Secret: 529,\n    ShadowCash: 35,\n    Shentu: 118,\n    Slimcoin: 63,\n    Smileycoin: 59,\n    Solana: 501,\n    Solarcoin: 58,\n    Stafi: 907,\n    Stash: 49344,\n    Stellar: 148,\n    Stratis: 105,\n    Sugarchain: 408,\n    Sui: 784,\n    Syscoin: 57,\n    Terra: 330,\n    Tezos: 1729,\n    Theta: 500,\n    ThoughtAI: 502,\n    TOACoin: 159,\n    Tron: 195,\n    TWINS: 970,\n    UltimateSecureCash: 112,\n    Unobtanium: 92,\n    Vcash: 127,\n    VeChain: 818,\n    Verge: 77,\n    Vertcoin: 28,\n    Viacoin: 14,\n    Vivo: 166,\n    Voxels: 129,\n    VPNCoin: 33,\n    Wagerr: 0,\n    Whitecoin: 559,\n    Wincoin: 181,\n    XinFin: 550,\n    XUEZ: 225,\n    Ycash: 347,\n    Zcash: 133,\n    ZClassic: 147,\n    Zetacoin: 719,\n    Zilliqa: 313,\n    ZooBC: 883,\n};\n//# sourceMappingURL=slip44.js.map","// SPDX-License-Identifier: MIT\nexport class Point {\n    point;\n    constructor(point) {\n        this.point = point;\n    }\n    static fromBytes(point) {\n        throw new Error('Must override fromBytes()');\n    }\n    static fromCoordinates(x, y) {\n        throw new Error('Must override fromCoordinates()');\n    }\n    getRaw() {\n        return this.getRawEncoded();\n    }\n}\n//# sourceMappingURL=point.js.map","// SPDX-License-Identifier: MIT\nexport class PublicKey {\n    publicKey;\n    constructor(publicKey) {\n        this.publicKey = publicKey;\n    }\n    getName() {\n        throw new Error('Must override getName()');\n    }\n    static fromBytes(publicKey) {\n        throw new Error('Must override fromBytes()');\n    }\n    static fromPoint(point) {\n        throw new Error('Must override fromPoint()');\n    }\n    static getCompressedLength() {\n        throw new Error('Must override compressedLength()');\n    }\n    static getUncompressedLength() {\n        throw new Error('Must override uncompressedLength()');\n    }\n    static isValidBytes(bytes) {\n        try {\n            this.fromBytes(bytes);\n            return true;\n        }\n        catch {\n            return false;\n        }\n    }\n    static isValidPoint(point) {\n        try {\n            this.fromPoint(point);\n            return true;\n        }\n        catch {\n            return false;\n        }\n    }\n}\n//# sourceMappingURL=public-key.js.map","// SPDX-License-Identifier: MIT\nexport class PrivateKey {\n    privateKey;\n    options;\n    constructor(privateKey, options = {}) {\n        this.privateKey = privateKey;\n        this.options = options;\n    }\n    getName() {\n        throw new Error('Must override getName()');\n    }\n    static fromBytes(privateKey) {\n        throw new Error('Must override fromBytes()');\n    }\n    static getLength() {\n        throw new Error('Must override size()');\n    }\n    static isValidBytes(bytes) {\n        try {\n            this.fromBytes(bytes);\n            return true;\n        }\n        catch {\n            return false;\n        }\n    }\n}\n//# sourceMappingURL=private-key.js.map","// SPDX-License-Identifier: MIT\nimport { Point as _Point } from './point';\nimport { PublicKey as _PublicKey } from './public-key';\nimport { PrivateKey as _PrivateKey } from './private-key';\nexport class EllipticCurveCryptography {\n    static NAME;\n    static ORDER;\n    static GENERATOR;\n    static POINT;\n    static PUBLIC_KEY;\n    static PRIVATE_KEY;\n}\nexport { _Point as Point, _PublicKey as PublicKey, _PrivateKey as PrivateKey, };\n//# sourceMappingURL=ecc.js.map","/**\n * Hex, bytes and number utilities.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { abytes as abytes_, bytesToHex as bytesToHex_, concatBytes as concatBytes_, hexToBytes as hexToBytes_, isBytes as isBytes_, } from '@noble/hashes/utils.js';\nexport { abytes, anumber, bytesToHex, bytesToUtf8, concatBytes, hexToBytes, isBytes, randomBytes, utf8ToBytes, } from '@noble/hashes/utils.js';\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nexport function abool(title, value) {\n    if (typeof value !== 'boolean')\n        throw new Error(title + ' boolean expected, got ' + value);\n}\n// Used in weierstrass, der\nexport function numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? '0' + hex : hex;\n}\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    return hex === '' ? _0n : BigInt('0x' + hex); // Big Endian\n}\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex_(bytes));\n}\nexport function bytesToNumberLE(bytes) {\n    abytes_(bytes);\n    return hexToNumber(bytesToHex_(Uint8Array.from(bytes).reverse()));\n}\nexport function numberToBytesBE(n, len) {\n    return hexToBytes_(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n, len) {\n    return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n) {\n    return hexToBytes_(numberToHexUnpadded(n));\n}\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes_(hex);\n        }\n        catch (e) {\n            throw new Error(title + ' must be hex string or Uint8Array, cause: ' + e);\n        }\n    }\n    else if (isBytes_(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(title + ' must be hex string or Uint8Array');\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(title + ' of length ' + expectedLength + ' expected, got ' + len);\n    return res;\n}\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a, b) {\n    if (a.length !== b.length)\n        return false;\n    let diff = 0;\n    for (let i = 0; i < a.length; i++)\n        diff |= a[i] ^ b[i];\n    return diff === 0;\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\n// export const utf8ToBytes: typeof utf8ToBytes_ = utf8ToBytes_;\n/**\n * Converts bytes to string using UTF8 encoding.\n * @example bytesToUtf8(Uint8Array.from([97, 98, 99])) // 'abc'\n */\n// export const bytesToUtf8: typeof bytesToUtf8_ = bytesToUtf8_;\n// Is positive bigint\nconst isPosBig = (n) => typeof n === 'bigint' && _0n <= n;\nexport function inRange(n, min, max) {\n    return isPosBig(n) && isPosBig(min) && isPosBig(max) && min <= n && n < max;\n}\n/**\n * Asserts min <= n < max. NOTE: It's < max and not <= max.\n * @example\n * aInRange('x', x, 1n, 256n); // would assume x is in (1n..255n)\n */\nexport function aInRange(title, n, min, max) {\n    // Why min <= n < max and not a (min < n < max) OR b (min <= n <= max)?\n    // consider P=256n, min=0n, max=P\n    // - a for min=0 would require -1:          `inRange('x', x, -1n, P)`\n    // - b would commonly require subtraction:  `inRange('x', x, 0n, P - 1n)`\n    // - our way is the cleanest:               `inRange('x', x, 0n, P)\n    if (!inRange(n, min, max))\n        throw new Error('expected valid ' + title + ': ' + min + ' <= n < ' + max + ', got ' + n);\n}\n// Bit operations\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n * TODO: merge with nLength in modular\n */\nexport function bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n, pos) {\n    return (n >> BigInt(pos)) & _1n;\n}\n/**\n * Sets single bit at position.\n */\nexport function bitSet(n, pos, value) {\n    return n | ((value ? _1n : _0n) << BigInt(pos));\n}\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n) => (_1n << BigInt(n)) - _1n;\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    const u8n = (len) => new Uint8Array(len); // creates Uint8Array\n    const u8of = (byte) => Uint8Array.of(byte); // another shortcut\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n(0)) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8of(0x00), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8of(0x01), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes_(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    stringOrUint8Array: (val) => typeof val === 'string' || isBytes_(val),\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nexport function validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error('invalid validator function');\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error('param ' + String(fieldName) + ' is invalid. Expected ' + type + ', got ' + val);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\nexport function isHash(val) {\n    return typeof val === 'function' && Number.isSafeInteger(val.outputLen);\n}\nexport function _validateObject(object, fields, optFields = {}) {\n    if (!object || typeof object !== 'object')\n        throw new Error('expected valid options object');\n    function checkField(fieldName, expectedType, isOpt) {\n        const val = object[fieldName];\n        if (isOpt && val === undefined)\n            return;\n        const current = typeof val;\n        if (current !== expectedType || val === null)\n            throw new Error(`param \"${fieldName}\" is invalid: expected ${expectedType}, got ${current}`);\n    }\n    Object.entries(fields).forEach(([k, v]) => checkField(k, v, false));\n    Object.entries(optFields).forEach(([k, v]) => checkField(k, v, true));\n}\n/**\n * throws not implemented error\n */\nexport const notImplemented = () => {\n    throw new Error('not implemented');\n};\n/**\n * Memoizes (caches) computation result.\n * Uses WeakMap: the value is going auto-cleaned by GC after last reference is removed.\n */\nexport function memoized(fn) {\n    const map = new WeakMap();\n    return (arg, ...args) => {\n        const val = map.get(arg);\n        if (val !== undefined)\n            return val;\n        const computed = fn(arg, ...args);\n        map.set(arg, computed);\n        return computed;\n    };\n}\n//# sourceMappingURL=utils.js.map","/**\n * Utils for modular division and fields.\n * Field over 11 is a finite (Galois) field is integer number operations `mod 11`.\n * There is no division: it is replaced by modular multiplicative inverse.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { _validateObject, anumber, bitMask, bytesToNumberBE, bytesToNumberLE, ensureBytes, numberToBytesBE, numberToBytesLE, } from \"../utils.js\";\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = /* @__PURE__ */ BigInt(2), _3n = /* @__PURE__ */ BigInt(3);\n// prettier-ignore\nconst _4n = /* @__PURE__ */ BigInt(4), _5n = /* @__PURE__ */ BigInt(5);\nconst _8n = /* @__PURE__ */ BigInt(8);\n// Calculates a modulo b\nexport function mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\nexport function pow(num, power, modulo) {\n    return FpPow(Field(modulo), num, power);\n}\n/** Does `x^(2^power)` mod p. `pow2(30, 4)` == `30^(2^4)` */\nexport function pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n/**\n * Inverses number over modulo.\n * Implemented using [Euclidean GCD](https://brilliant.org/wiki/extended-euclidean-algorithm/).\n */\nexport function invert(number, modulo) {\n    if (number === _0n)\n        throw new Error('invert: expected non-zero number');\n    if (modulo <= _0n)\n        throw new Error('invert: expected positive modulus, got ' + modulo);\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\n// Not all roots are possible! Example which will throw:\n// const NUM =\n// n = 72057594037927816n;\n// Fp = Field(BigInt('0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaab'));\nfunction sqrt3mod4(Fp, n) {\n    const p1div4 = (Fp.ORDER + _1n) / _4n;\n    const root = Fp.pow(n, p1div4);\n    // Throw if root^2 != n\n    if (!Fp.eql(Fp.sqr(root), n))\n        throw new Error('Cannot find square root');\n    return root;\n}\nfunction sqrt5mod8(Fp, n) {\n    const p5div8 = (Fp.ORDER - _5n) / _8n;\n    const n2 = Fp.mul(n, _2n);\n    const v = Fp.pow(n2, p5div8);\n    const nv = Fp.mul(n, v);\n    const i = Fp.mul(Fp.mul(nv, _2n), v);\n    const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n    if (!Fp.eql(Fp.sqr(root), n))\n        throw new Error('Cannot find square root');\n    return root;\n}\n// TODO: Commented-out for now. Provide test vectors.\n// Tonelli is too slow for extension fields Fp2.\n// That means we can't use sqrt (c1, c2...) even for initialization constants.\n// if (P % _16n === _9n) return sqrt9mod16;\n// // prettier-ignore\n// function sqrt9mod16<T>(Fp: IField<T>, n: T, p7div16?: bigint) {\n//   if (p7div16 === undefined) p7div16 = (Fp.ORDER + BigInt(7)) / _16n;\n//   const c1 = Fp.sqrt(Fp.neg(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n//   const c2 = Fp.sqrt(c1);             //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n//   const c3 = Fp.sqrt(Fp.neg(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n//   const c4 = p7div16;                 //  4. c4 = (q + 7) / 16        # Integer arithmetic\n//   let tv1 = Fp.pow(n, c4);            //  1. tv1 = x^c4\n//   let tv2 = Fp.mul(c1, tv1);          //  2. tv2 = c1 * tv1\n//   const tv3 = Fp.mul(c2, tv1);        //  3. tv3 = c2 * tv1\n//   let tv4 = Fp.mul(c3, tv1);          //  4. tv4 = c3 * tv1\n//   const e1 = Fp.eql(Fp.sqr(tv2), n);  //  5.  e1 = (tv2^2) == x\n//   const e2 = Fp.eql(Fp.sqr(tv3), n);  //  6.  e2 = (tv3^2) == x\n//   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n//   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n//   const e3 = Fp.eql(Fp.sqr(tv2), n);  //  9.  e3 = (tv2^2) == x\n//   return Fp.cmov(tv1, tv2, e3); // 10.  z = CMOV(tv1, tv2, e3) # Select the sqrt from tv1 and tv2\n// }\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P) {\n    // Initialization (precomputation).\n    // Caching initialization could boost perf by 7%.\n    if (P < BigInt(3))\n        throw new Error('sqrt is not defined for small field');\n    // Factor P - 1 = Q * 2^S, where Q is odd\n    let Q = P - _1n;\n    let S = 0;\n    while (Q % _2n === _0n) {\n        Q /= _2n;\n        S++;\n    }\n    // Find the first quadratic non-residue Z >= 2\n    let Z = _2n;\n    const _Fp = Field(P);\n    while (FpLegendre(_Fp, Z) === 1) {\n        // Basic primality test for P. After x iterations, chance of\n        // not finding quadratic non-residue is 2^x, so 2^1000.\n        if (Z++ > 1000)\n            throw new Error('Cannot find square root: probably non-prime P');\n    }\n    // Fast-path; usually done before Z, but we do \"primality test\".\n    if (S === 1)\n        return sqrt3mod4;\n    // Slow-path\n    // TODO: test on Fp2 and others\n    let cc = _Fp.pow(Z, Q); // c = z^Q\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        if (Fp.is0(n))\n            return n;\n        // Check if n is a quadratic residue using Legendre symbol\n        if (FpLegendre(Fp, n) !== 1)\n            throw new Error('Cannot find square root');\n        // Initialize variables for the main loop\n        let M = S;\n        let c = Fp.mul(Fp.ONE, cc); // c = z^Q, move cc from field _Fp into field Fp\n        let t = Fp.pow(n, Q); // t = n^Q, first guess at the fudge factor\n        let R = Fp.pow(n, Q1div2); // R = n^((Q+1)/2), first guess at the square root\n        // Main loop\n        // while t != 1\n        while (!Fp.eql(t, Fp.ONE)) {\n            if (Fp.is0(t))\n                return Fp.ZERO; // if t=0 return R=0\n            let i = 1;\n            // Find the smallest i >= 1 such that t^(2^i) ≡ 1 (mod P)\n            let t_tmp = Fp.sqr(t); // t^(2^1)\n            while (!Fp.eql(t_tmp, Fp.ONE)) {\n                i++;\n                t_tmp = Fp.sqr(t_tmp); // t^(2^2)...\n                if (i === M)\n                    throw new Error('Cannot find square root');\n            }\n            // Calculate the exponent for b: 2^(M - i - 1)\n            const exponent = _1n << BigInt(M - i - 1); // bigint is important\n            const b = Fp.pow(c, exponent); // b = 2^(M - i - 1)\n            // Update variables\n            M = i;\n            c = Fp.sqr(b); // c = b^2\n            t = Fp.mul(t, c); // t = (t * b^2)\n            R = Fp.mul(R, b); // R = R*b\n        }\n        return R;\n    };\n}\n/**\n * Square root for a finite field. Will try optimized versions first:\n *\n * 1. P ≡ 3 (mod 4)\n * 2. P ≡ 5 (mod 8)\n * 3. Tonelli-Shanks algorithm\n *\n * Different algorithms can give different roots, it is up to user to decide which one they want.\n * For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n */\nexport function FpSqrt(P) {\n    // P ≡ 3 (mod 4) => √n = n^((P+1)/4)\n    if (P % _4n === _3n)\n        return sqrt3mod4;\n    // P ≡ 5 (mod 8) => Atkin algorithm, page 10 of https://eprint.iacr.org/2012/685.pdf\n    if (P % _8n === _5n)\n        return sqrt5mod8;\n    // P ≡ 9 (mod 16) not implemented, see above\n    // Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nexport function validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'number',\n        BITS: 'number',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    _validateObject(field, opts);\n    // const max = 16384;\n    // if (field.BYTES < 1 || field.BYTES > max) throw new Error('invalid field');\n    // if (field.BITS < 1 || field.BITS > 8 * max) throw new Error('invalid field');\n    return field;\n}\n// Generic field functions\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow(Fp, num, power) {\n    if (power < _0n)\n        throw new Error('invalid exponent, negatives unsupported');\n    if (power === _0n)\n        return Fp.ONE;\n    if (power === _1n)\n        return num;\n    let p = Fp.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = Fp.mul(p, d);\n        d = Fp.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\n/**\n * Efficiently invert an array of Field elements.\n * Exception-free. Will return `undefined` for 0 elements.\n * @param passZero map 0 to 0 (instead of undefined)\n */\nexport function FpInvertBatch(Fp, nums, passZero = false) {\n    const inverted = new Array(nums.length).fill(passZero ? Fp.ZERO : undefined);\n    // Walk from first to last, multiply them by each other MOD p\n    const multipliedAcc = nums.reduce((acc, num, i) => {\n        if (Fp.is0(num))\n            return acc;\n        inverted[i] = acc;\n        return Fp.mul(acc, num);\n    }, Fp.ONE);\n    // Invert last element\n    const invertedAcc = Fp.inv(multipliedAcc);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (Fp.is0(num))\n            return acc;\n        inverted[i] = Fp.mul(acc, inverted[i]);\n        return Fp.mul(acc, num);\n    }, invertedAcc);\n    return inverted;\n}\n// TODO: remove\nexport function FpDiv(Fp, lhs, rhs) {\n    return Fp.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, Fp.ORDER) : Fp.inv(rhs));\n}\n/**\n * Legendre symbol.\n * Legendre constant is used to calculate Legendre symbol (a | p)\n * which denotes the value of a^((p-1)/2) (mod p).\n *\n * * (a | p) ≡ 1    if a is a square (mod p), quadratic residue\n * * (a | p) ≡ -1   if a is not a square (mod p), quadratic non residue\n * * (a | p) ≡ 0    if a ≡ 0 (mod p)\n */\nexport function FpLegendre(Fp, n) {\n    // We can use 3rd argument as optional cache of this value\n    // but seems unneeded for now. The operation is very fast.\n    const p1mod2 = (Fp.ORDER - _1n) / _2n;\n    const powered = Fp.pow(n, p1mod2);\n    const yes = Fp.eql(powered, Fp.ONE);\n    const zero = Fp.eql(powered, Fp.ZERO);\n    const no = Fp.eql(powered, Fp.neg(Fp.ONE));\n    if (!yes && !zero && !no)\n        throw new Error('invalid Legendre symbol result');\n    return yes ? 1 : zero ? 0 : -1;\n}\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare(Fp, n) {\n    const l = FpLegendre(Fp, n);\n    return l === 1;\n}\n// CURVE.n lengths\nexport function nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    if (nBitLength !== undefined)\n        anumber(nBitLength);\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\n/**\n * Creates a finite field. Major performance optimizations:\n * * 1. Denormalized operations like mulN instead of mul.\n * * 2. Identical object shape: never add or remove keys.\n * * 3. `Object.freeze`.\n * Fragile: always run a benchmark on a change.\n * Security note: operations don't check 'isValid' for all elements for performance reasons,\n * it is caller responsibility to check this.\n * This is low-level code, please make sure you know what you're doing.\n *\n * Note about field properties:\n * * CHARACTERISTIC p = prime number, number of elements in main subgroup.\n * * ORDER q = similar to cofactor in curves, may be composite `q = p^m`.\n *\n * @param ORDER field order, probably prime, or could be composite\n * @param bitLen how many bits the field consumes\n * @param isLE (default: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(ORDER, bitLenOrOpts, isLE = false, opts = {}) {\n    if (ORDER <= _0n)\n        throw new Error('invalid field: expected ORDER > 0, got ' + ORDER);\n    let _nbitLength = undefined;\n    let _sqrt = undefined;\n    if (typeof bitLenOrOpts === 'object' && bitLenOrOpts != null) {\n        if (opts.sqrt || isLE)\n            throw new Error('cannot specify opts in two arguments');\n        const _opts = bitLenOrOpts;\n        if (_opts.BITS)\n            _nbitLength = _opts.BITS;\n        if (_opts.sqrt)\n            _sqrt = _opts.sqrt;\n        if (typeof _opts.isLE === 'boolean')\n            isLE = _opts.isLE;\n    }\n    else {\n        if (typeof bitLenOrOpts === 'number')\n            _nbitLength = bitLenOrOpts;\n        if (opts.sqrt)\n            _sqrt = opts.sqrt;\n    }\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, _nbitLength);\n    if (BYTES > 2048)\n        throw new Error('invalid field: expected ORDER of <= 2048 bytes');\n    let sqrtP; // cached sqrtP\n    const f = Object.freeze({\n        ORDER,\n        isLE,\n        BITS,\n        BYTES,\n        MASK: bitMask(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error('invalid field element: expected bigint, got ' + typeof num);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        // is valid and invertible\n        isValidNot0: (num) => !f.is0(num) && f.isValid(num),\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: _sqrt ||\n            ((n) => {\n                if (!sqrtP)\n                    sqrtP = FpSqrt(ORDER);\n                return sqrtP(f, n);\n            }),\n        toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n        fromBytes: (bytes) => {\n            if (bytes.length !== BYTES)\n                throw new Error('Field.fromBytes: expected ' + BYTES + ' bytes, got ' + bytes.length);\n            return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n        },\n        // TODO: we don't need it here, move out to separate fn\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // We can't move this out because Fp6, Fp12 implement it\n        // and it's unclear what to return in there.\n        cmov: (a, b, c) => (c ? b : a),\n    });\n    return Object.freeze(f);\n}\nexport function FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(\"Field doesn't have isOdd\");\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nexport function FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(\"Field doesn't have isOdd\");\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use `mapKeyToField` instead\n */\nexport function hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = ensureBytes('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error('hashToPrivateScalar: expected ' + minLen + '-1024 bytes of input, got ' + hashLen);\n    const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder) {\n    if (typeof fieldOrder !== 'bigint')\n        throw new Error('field order must be bigint');\n    const bitLength = fieldOrder.toString(2).length;\n    return Math.ceil(bitLength / 8);\n}\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder) {\n    const length = getFieldBytesLength(fieldOrder);\n    return length + Math.ceil(length / 2);\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key, fieldOrder, isLE = false) {\n    const len = key.length;\n    const fieldLen = getFieldBytesLength(fieldOrder);\n    const minLen = getMinHashLength(fieldOrder);\n    // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n    if (len < 16 || len < minLen || len > 1024)\n        throw new Error('expected ' + minLen + '-1024 bytes of input, got ' + len);\n    const num = isLE ? bytesToNumberLE(key) : bytesToNumberBE(key);\n    // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n    const reduced = mod(num, fieldOrder - _1n) + _1n;\n    return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n//# sourceMappingURL=modular.js.map","/**\n * Methods for elliptic curve multiplication by scalars.\n * Contains wNAF, pippenger\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { bitLen, bitMask, validateObject } from \"../utils.js\";\nimport { Field, FpInvertBatch, nLength, validateField } from \"./modular.js\";\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nexport function negateCt(condition, item) {\n    const neg = item.negate();\n    return condition ? neg : item;\n}\n/**\n * Takes a bunch of Projective Points but executes only one\n * inversion on all of them. Inversion is very slow operation,\n * so this improves performance massively.\n * Optimization: converts a list of projective points to a list of identical points with Z=1.\n */\nexport function normalizeZ(c, property, points) {\n    const getz = property === 'pz' ? (p) => p.pz : (p) => p.ez;\n    const toInv = FpInvertBatch(c.Fp, points.map(getz));\n    // @ts-ignore\n    const affined = points.map((p, i) => p.toAffine(toInv[i]));\n    return affined.map(c.fromAffine);\n}\nfunction validateW(W, bits) {\n    if (!Number.isSafeInteger(W) || W <= 0 || W > bits)\n        throw new Error('invalid window size, expected [1..' + bits + '], got W=' + W);\n}\nfunction calcWOpts(W, scalarBits) {\n    validateW(W, scalarBits);\n    const windows = Math.ceil(scalarBits / W) + 1; // W=8 33. Not 32, because we skip zero\n    const windowSize = 2 ** (W - 1); // W=8 128. Not 256, because we skip zero\n    const maxNumber = 2 ** W; // W=8 256\n    const mask = bitMask(W); // W=8 255 == mask 0b11111111\n    const shiftBy = BigInt(W); // W=8 8\n    return { windows, windowSize, mask, maxNumber, shiftBy };\n}\nfunction calcOffsets(n, window, wOpts) {\n    const { windowSize, mask, maxNumber, shiftBy } = wOpts;\n    let wbits = Number(n & mask); // extract W bits.\n    let nextN = n >> shiftBy; // shift number by W bits.\n    // What actually happens here:\n    // const highestBit = Number(mask ^ (mask >> 1n));\n    // let wbits2 = wbits - 1; // skip zero\n    // if (wbits2 & highestBit) { wbits2 ^= Number(mask); // (~);\n    // split if bits > max: +224 => 256-32\n    if (wbits > windowSize) {\n        // we skip zero, which means instead of `>= size-1`, we do `> size`\n        wbits -= maxNumber; // -32, can be maxNumber - wbits, but then we need to set isNeg here.\n        nextN += _1n; // +256 (carry)\n    }\n    const offsetStart = window * windowSize;\n    const offset = offsetStart + Math.abs(wbits) - 1; // -1 because we skip zero\n    const isZero = wbits === 0; // is current window slice a 0?\n    const isNeg = wbits < 0; // is current window slice negative?\n    const isNegF = window % 2 !== 0; // fake random statement for noise\n    const offsetF = offsetStart; // fake offset for noise\n    return { nextN, offset, isZero, isNeg, isNegF, offsetF };\n}\nfunction validateMSMPoints(points, c) {\n    if (!Array.isArray(points))\n        throw new Error('array expected');\n    points.forEach((p, i) => {\n        if (!(p instanceof c))\n            throw new Error('invalid point at index ' + i);\n    });\n}\nfunction validateMSMScalars(scalars, field) {\n    if (!Array.isArray(scalars))\n        throw new Error('array of scalars expected');\n    scalars.forEach((s, i) => {\n        if (!field.isValid(s))\n            throw new Error('invalid scalar at index ' + i);\n    });\n}\n// Since points in different groups cannot be equal (different object constructor),\n// we can have single place to store precomputes.\n// Allows to make points frozen / immutable.\nconst pointPrecomputes = new WeakMap();\nconst pointWindowSizes = new WeakMap();\nfunction getW(P) {\n    return pointWindowSizes.get(P) || 1;\n}\nfunction assert0(n) {\n    if (n !== _0n)\n        throw new Error('invalid wNAF');\n}\n/**\n * Elliptic curve multiplication of Point by scalar. Fragile.\n * Scalars should always be less than curve order: this should be checked inside of a curve itself.\n * Creates precomputation tables for fast multiplication:\n * - private scalar is split by fixed size windows of W bits\n * - every window point is collected from window's table & added to accumulator\n * - since windows are different, same point inside tables won't be accessed more than once per calc\n * - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n * - +1 window is neccessary for wNAF\n * - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n *\n * @todo Research returning 2d JS array of windows, instead of a single window.\n * This would allow windows to be in different memory locations\n */\nexport function wNAF(c, bits) {\n    return {\n        constTimeNegate: negateCt,\n        hasPrecomputes(elm) {\n            return getW(elm) !== 1;\n        },\n        // non-const time multiplication ladder\n        unsafeLadder(elm, n, p = c.ZERO) {\n            let d = elm;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        },\n        /**\n         * Creates a wNAF precomputation window. Used for caching.\n         * Default window size is set by `utils.precompute()` and is equal to 8.\n         * Number of precomputed points depends on the curve size:\n         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n         * - 𝑊 is the window size\n         * - 𝑛 is the bitlength of the curve order.\n         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n         * @param elm Point instance\n         * @param W window size\n         * @returns precomputed point tables flattened to a single array\n         */\n        precomputeWindow(elm, W) {\n            const { windows, windowSize } = calcWOpts(W, bits);\n            const points = [];\n            let p = elm;\n            let base = p;\n            for (let window = 0; window < windows; window++) {\n                base = p;\n                points.push(base);\n                // i=1, bc we skip 0\n                for (let i = 1; i < windowSize; i++) {\n                    base = base.add(p);\n                    points.push(base);\n                }\n                p = base.double();\n            }\n            return points;\n        },\n        /**\n         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @returns real and fake (for const-time) points\n         */\n        wNAF(W, precomputes, n) {\n            // Smaller version:\n            // https://github.com/paulmillr/noble-secp256k1/blob/47cb1669b6e506ad66b35fe7d76132ae97465da2/index.ts#L502-L541\n            // TODO: check the scalar is less than group order?\n            // wNAF behavior is undefined otherwise. But have to carefully remove\n            // other checks before wNAF. ORDER == bits here.\n            // Accumulators\n            let p = c.ZERO;\n            let f = c.BASE;\n            // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n            // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n            // there is negate now: it is possible that negated element from low value\n            // would be the same as high element, which will create carry into next window.\n            // It's not obvious how this can fail, but still worth investigating later.\n            const wo = calcWOpts(W, bits);\n            for (let window = 0; window < wo.windows; window++) {\n                // (n === _0n) is handled and not early-exited. isEven and offsetF are used for noise\n                const { nextN, offset, isZero, isNeg, isNegF, offsetF } = calcOffsets(n, window, wo);\n                n = nextN;\n                if (isZero) {\n                    // bits are 0: add garbage to fake point\n                    // Important part for const-time getPublicKey: add random \"noise\" point to f.\n                    f = f.add(negateCt(isNegF, precomputes[offsetF]));\n                }\n                else {\n                    // bits are 1: add to result point\n                    p = p.add(negateCt(isNeg, precomputes[offset]));\n                }\n            }\n            assert0(n);\n            // Return both real and fake points: JIT won't eliminate f.\n            // At this point there is a way to F be infinity-point even if p is not,\n            // which makes it less const-time: around 1 bigint multiply.\n            return { p, f };\n        },\n        /**\n         * Implements ec unsafe (non const-time) multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @param acc accumulator point to add result of multiplication\n         * @returns point\n         */\n        wNAFUnsafe(W, precomputes, n, acc = c.ZERO) {\n            const wo = calcWOpts(W, bits);\n            for (let window = 0; window < wo.windows; window++) {\n                if (n === _0n)\n                    break; // Early-exit, skip 0 value\n                const { nextN, offset, isZero, isNeg } = calcOffsets(n, window, wo);\n                n = nextN;\n                if (isZero) {\n                    // Window bits are 0: skip processing.\n                    // Move to next window.\n                    continue;\n                }\n                else {\n                    const item = precomputes[offset];\n                    acc = acc.add(isNeg ? item.negate() : item); // Re-using acc allows to save adds in MSM\n                }\n            }\n            assert0(n);\n            return acc;\n        },\n        getPrecomputes(W, P, transform) {\n            // Calculate precomputes on a first run, reuse them after\n            let comp = pointPrecomputes.get(P);\n            if (!comp) {\n                comp = this.precomputeWindow(P, W);\n                if (W !== 1) {\n                    // Doing transform outside of if brings 15% perf hit\n                    if (typeof transform === 'function')\n                        comp = transform(comp);\n                    pointPrecomputes.set(P, comp);\n                }\n            }\n            return comp;\n        },\n        wNAFCached(P, n, transform) {\n            const W = getW(P);\n            return this.wNAF(W, this.getPrecomputes(W, P, transform), n);\n        },\n        wNAFCachedUnsafe(P, n, transform, prev) {\n            const W = getW(P);\n            if (W === 1)\n                return this.unsafeLadder(P, n, prev); // For W=1 ladder is ~x2 faster\n            return this.wNAFUnsafe(W, this.getPrecomputes(W, P, transform), n, prev);\n        },\n        // We calculate precomputes for elliptic curve point multiplication\n        // using windowed method. This specifies window size and\n        // stores precomputed values. Usually only base point would be precomputed.\n        setWindowSize(P, W) {\n            validateW(W, bits);\n            pointWindowSizes.set(P, W);\n            pointPrecomputes.delete(P);\n        },\n    };\n}\n/**\n * Endomorphism-specific multiplication for Koblitz curves.\n * Cost: 128 dbl, 0-256 adds.\n */\nexport function mulEndoUnsafe(c, point, k1, k2) {\n    let acc = point;\n    let p1 = c.ZERO;\n    let p2 = c.ZERO;\n    while (k1 > _0n || k2 > _0n) {\n        if (k1 & _1n)\n            p1 = p1.add(acc);\n        if (k2 & _1n)\n            p2 = p2.add(acc);\n        acc = acc.double();\n        k1 >>= _1n;\n        k2 >>= _1n;\n    }\n    return { p1, p2 };\n}\n/**\n * Pippenger algorithm for multi-scalar multiplication (MSM, Pa + Qb + Rc + ...).\n * 30x faster vs naive addition on L=4096, 10x faster than precomputes.\n * For N=254bit, L=1, it does: 1024 ADD + 254 DBL. For L=5: 1536 ADD + 254 DBL.\n * Algorithmically constant-time (for same L), even when 1 point + scalar, or when scalar = 0.\n * @param c Curve Point constructor\n * @param fieldN field over CURVE.N - important that it's not over CURVE.P\n * @param points array of L curve points\n * @param scalars array of L scalars (aka private keys / bigints)\n */\nexport function pippenger(c, fieldN, points, scalars) {\n    // If we split scalars by some window (let's say 8 bits), every chunk will only\n    // take 256 buckets even if there are 4096 scalars, also re-uses double.\n    // TODO:\n    // - https://eprint.iacr.org/2024/750.pdf\n    // - https://tches.iacr.org/index.php/TCHES/article/view/10287\n    // 0 is accepted in scalars\n    validateMSMPoints(points, c);\n    validateMSMScalars(scalars, fieldN);\n    const plength = points.length;\n    const slength = scalars.length;\n    if (plength !== slength)\n        throw new Error('arrays of points and scalars must have equal length');\n    // if (plength === 0) throw new Error('array must be of length >= 2');\n    const zero = c.ZERO;\n    const wbits = bitLen(BigInt(plength));\n    let windowSize = 1; // bits\n    if (wbits > 12)\n        windowSize = wbits - 3;\n    else if (wbits > 4)\n        windowSize = wbits - 2;\n    else if (wbits > 0)\n        windowSize = 2;\n    const MASK = bitMask(windowSize);\n    const buckets = new Array(Number(MASK) + 1).fill(zero); // +1 for zero array\n    const lastBits = Math.floor((fieldN.BITS - 1) / windowSize) * windowSize;\n    let sum = zero;\n    for (let i = lastBits; i >= 0; i -= windowSize) {\n        buckets.fill(zero);\n        for (let j = 0; j < slength; j++) {\n            const scalar = scalars[j];\n            const wbits = Number((scalar >> BigInt(i)) & MASK);\n            buckets[wbits] = buckets[wbits].add(points[j]);\n        }\n        let resI = zero; // not using this will do small speed-up, but will lose ct\n        // Skip first bucket, because it is zero\n        for (let j = buckets.length - 1, sumI = zero; j > 0; j--) {\n            sumI = sumI.add(buckets[j]);\n            resI = resI.add(sumI);\n        }\n        sum = sum.add(resI);\n        if (i !== 0)\n            for (let j = 0; j < windowSize; j++)\n                sum = sum.double();\n    }\n    return sum;\n}\n/**\n * Precomputed multi-scalar multiplication (MSM, Pa + Qb + Rc + ...).\n * @param c Curve Point constructor\n * @param fieldN field over CURVE.N - important that it's not over CURVE.P\n * @param points array of L curve points\n * @returns function which multiplies points with scaars\n */\nexport function precomputeMSMUnsafe(c, fieldN, points, windowSize) {\n    /**\n     * Performance Analysis of Window-based Precomputation\n     *\n     * Base Case (256-bit scalar, 8-bit window):\n     * - Standard precomputation requires:\n     *   - 31 additions per scalar × 256 scalars = 7,936 ops\n     *   - Plus 255 summary additions = 8,191 total ops\n     *   Note: Summary additions can be optimized via accumulator\n     *\n     * Chunked Precomputation Analysis:\n     * - Using 32 chunks requires:\n     *   - 255 additions per chunk\n     *   - 256 doublings\n     *   - Total: (255 × 32) + 256 = 8,416 ops\n     *\n     * Memory Usage Comparison:\n     * Window Size | Standard Points | Chunked Points\n     * ------------|-----------------|---------------\n     *     4-bit   |     520         |      15\n     *     8-bit   |    4,224        |     255\n     *    10-bit   |   13,824        |   1,023\n     *    16-bit   |  557,056        |  65,535\n     *\n     * Key Advantages:\n     * 1. Enables larger window sizes due to reduced memory overhead\n     * 2. More efficient for smaller scalar counts:\n     *    - 16 chunks: (16 × 255) + 256 = 4,336 ops\n     *    - ~2x faster than standard 8,191 ops\n     *\n     * Limitations:\n     * - Not suitable for plain precomputes (requires 256 constant doublings)\n     * - Performance degrades with larger scalar counts:\n     *   - Optimal for ~256 scalars\n     *   - Less efficient for 4096+ scalars (Pippenger preferred)\n     */\n    validateW(windowSize, fieldN.BITS);\n    validateMSMPoints(points, c);\n    const zero = c.ZERO;\n    const tableSize = 2 ** windowSize - 1; // table size (without zero)\n    const chunks = Math.ceil(fieldN.BITS / windowSize); // chunks of item\n    const MASK = bitMask(windowSize);\n    const tables = points.map((p) => {\n        const res = [];\n        for (let i = 0, acc = p; i < tableSize; i++) {\n            res.push(acc);\n            acc = acc.add(p);\n        }\n        return res;\n    });\n    return (scalars) => {\n        validateMSMScalars(scalars, fieldN);\n        if (scalars.length > points.length)\n            throw new Error('array of scalars must be smaller than array of points');\n        let res = zero;\n        for (let i = 0; i < chunks; i++) {\n            // No need to double if accumulator is still zero.\n            if (res !== zero)\n                for (let j = 0; j < windowSize; j++)\n                    res = res.double();\n            const shiftBy = BigInt(chunks * windowSize - (i + 1) * windowSize);\n            for (let j = 0; j < scalars.length; j++) {\n                const n = scalars[j];\n                const curr = Number((n >> shiftBy) & MASK);\n                if (!curr)\n                    continue; // skip zero scalars chunks\n                res = res.add(tables[j][curr - 1]);\n            }\n        }\n        return res;\n    };\n}\n// TODO: remove\n/** @deprecated */\nexport function validateBasic(curve) {\n    validateField(curve.Fp);\n    validateObject(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...nLength(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\nfunction createField(order, field) {\n    if (field) {\n        if (field.ORDER !== order)\n            throw new Error('Field.ORDER must match order: Fp == p, Fn == n');\n        validateField(field);\n        return field;\n    }\n    else {\n        return Field(order);\n    }\n}\n/** Validates CURVE opts and creates fields */\nexport function _createCurveFields(type, CURVE, curveOpts = {}) {\n    if (!CURVE || typeof CURVE !== 'object')\n        throw new Error(`expected valid ${type} CURVE object`);\n    for (const p of ['p', 'n', 'h']) {\n        const val = CURVE[p];\n        if (!(typeof val === 'bigint' && val > _0n))\n            throw new Error(`CURVE.${p} must be positive bigint`);\n    }\n    const Fp = createField(CURVE.p, curveOpts.Fp);\n    const Fn = createField(CURVE.n, curveOpts.Fn);\n    const _b = type === 'weierstrass' ? 'b' : 'd';\n    const params = ['Gx', 'Gy', 'a', _b];\n    for (const p of params) {\n        // @ts-ignore\n        if (!Fp.isValid(CURVE[p]))\n            throw new Error(`CURVE.${p} must be valid field element of CURVE.Fp`);\n    }\n    return { Fp, Fn };\n}\n//# sourceMappingURL=curve.js.map","/**\n * Twisted Edwards curve. The formula is: ax² + y² = 1 + dx²y².\n * For design rationale of types / exports, see weierstrass module documentation.\n * Untwisted Edwards curves exist, but they aren't used in real-world protocols.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { _validateObject, abool, abytes, aInRange, bytesToHex, bytesToNumberLE, concatBytes, ensureBytes, memoized, numberToBytesLE, randomBytes, } from \"../utils.js\";\nimport { _createCurveFields, normalizeZ, pippenger, wNAF, } from \"./curve.js\";\nimport { Field } from \"./modular.js\";\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _8n = BigInt(8);\n// verification rule is either zip215 or rfc8032 / nist186-5. Consult fromHex:\nconst VERIFY_DEFAULT = { zip215: true };\nfunction isEdValidXY(Fp, CURVE, x, y) {\n    const x2 = Fp.sqr(x);\n    const y2 = Fp.sqr(y);\n    const left = Fp.add(Fp.mul(CURVE.a, x2), y2);\n    const right = Fp.add(Fp.ONE, Fp.mul(CURVE.d, Fp.mul(x2, y2)));\n    return Fp.eql(left, right);\n}\nexport function edwards(CURVE, curveOpts = {}) {\n    const { Fp, Fn } = _createCurveFields('edwards', CURVE, curveOpts);\n    const { h: cofactor, n: CURVE_ORDER } = CURVE;\n    _validateObject(curveOpts, {}, { uvRatio: 'function' });\n    // Important:\n    // There are some places where Fp.BYTES is used instead of nByteLength.\n    // So far, everything has been tested with curves of Fp.BYTES == nByteLength.\n    // TODO: test and find curves which behave otherwise.\n    const MASK = _2n << (BigInt(Fn.BYTES * 8) - _1n);\n    const modP = (n) => Fp.create(n); // Function overrides\n    // sqrt(u/v)\n    const uvRatio = curveOpts.uvRatio ||\n        ((u, v) => {\n            try {\n                return { isValid: true, value: Fp.sqrt(Fp.div(u, v)) };\n            }\n            catch (e) {\n                return { isValid: false, value: _0n };\n            }\n        });\n    // Validate whether the passed curve params are valid.\n    // equation ax² + y² = 1 + dx²y² should work for generator point.\n    if (!isEdValidXY(Fp, CURVE, CURVE.Gx, CURVE.Gy))\n        throw new Error('bad curve params: generator point');\n    /**\n     * Asserts coordinate is valid: 0 <= n < MASK.\n     * Coordinates >= Fp.ORDER are allowed for zip215.\n     */\n    function acoord(title, n, banZero = false) {\n        const min = banZero ? _1n : _0n;\n        aInRange('coordinate ' + title, n, min, MASK);\n        return n;\n    }\n    function aextpoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ExtendedPoint expected');\n    }\n    // Converts Extended point to default (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    const toAffineMemo = memoized((p, iz) => {\n        const { ex: x, ey: y, ez: z } = p;\n        const is0 = p.is0();\n        if (iz == null)\n            iz = is0 ? _8n : Fp.inv(z); // 8 was chosen arbitrarily\n        const ax = modP(x * iz);\n        const ay = modP(y * iz);\n        const zz = modP(z * iz);\n        if (is0)\n            return { x: _0n, y: _1n };\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return { x: ax, y: ay };\n    });\n    const assertValidMemo = memoized((p) => {\n        const { a, d } = CURVE;\n        if (p.is0())\n            throw new Error('bad point: ZERO'); // TODO: optimize, with vars below?\n        // Equation in affine coordinates: ax² + y² = 1 + dx²y²\n        // Equation in projective coordinates (X/Z, Y/Z, Z):  (aX² + Y²)Z² = Z⁴ + dX²Y²\n        const { ex: X, ey: Y, ez: Z, et: T } = p;\n        const X2 = modP(X * X); // X²\n        const Y2 = modP(Y * Y); // Y²\n        const Z2 = modP(Z * Z); // Z²\n        const Z4 = modP(Z2 * Z2); // Z⁴\n        const aX2 = modP(X2 * a); // aX²\n        const left = modP(Z2 * modP(aX2 + Y2)); // (aX² + Y²)Z²\n        const right = modP(Z4 + modP(d * modP(X2 * Y2))); // Z⁴ + dX²Y²\n        if (left !== right)\n            throw new Error('bad point: equation left != right (1)');\n        // In Extended coordinates we also have T, which is x*y=T/Z: check X*Y == Z*T\n        const XY = modP(X * Y);\n        const ZT = modP(Z * T);\n        if (XY !== ZT)\n            throw new Error('bad point: equation left != right (2)');\n        return true;\n    });\n    // Extended Point works in extended coordinates: (X, Y, Z, T) ∋ (x=X/Z, y=Y/Z, T=xy).\n    // https://en.wikipedia.org/wiki/Twisted_Edwards_curve#Extended_coordinates\n    class Point {\n        constructor(ex, ey, ez, et) {\n            this.ex = acoord('x', ex);\n            this.ey = acoord('y', ey);\n            this.ez = acoord('z', ez, true);\n            this.et = acoord('t', et);\n            Object.freeze(this);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        static fromAffine(p) {\n            if (p instanceof Point)\n                throw new Error('extended point not allowed');\n            const { x, y } = p || {};\n            acoord('x', x);\n            acoord('y', y);\n            return new Point(x, y, _1n, modP(x * y));\n        }\n        static normalizeZ(points) {\n            return normalizeZ(Point, 'ez', points);\n        }\n        // Multiscalar Multiplication\n        static msm(points, scalars) {\n            return pippenger(Point, Fn, points, scalars);\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this.precompute(windowSize);\n        }\n        precompute(windowSize = 8, isLazy = true) {\n            wnaf.setWindowSize(this, windowSize);\n            if (!isLazy)\n                this.multiply(_2n); // random number\n            return this;\n        }\n        // Not required for fromHex(), which always creates valid points.\n        // Could be useful for fromAffine().\n        assertValidity() {\n            assertValidMemo(this);\n        }\n        // Compare one point to another.\n        equals(other) {\n            aextpoint(other);\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2 } = other;\n            const X1Z2 = modP(X1 * Z2);\n            const X2Z1 = modP(X2 * Z1);\n            const Y1Z2 = modP(Y1 * Z2);\n            const Y2Z1 = modP(Y2 * Z1);\n            return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        negate() {\n            // Flips point sign to a negative one (-x, y in affine coords)\n            return new Point(modP(-this.ex), this.ey, this.ez, modP(-this.et));\n        }\n        // Fast algo for doubling Extended Point.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n        // Cost: 4M + 4S + 1*a + 6add + 1*2.\n        double() {\n            const { a } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const A = modP(X1 * X1); // A = X12\n            const B = modP(Y1 * Y1); // B = Y12\n            const C = modP(_2n * modP(Z1 * Z1)); // C = 2*Z12\n            const D = modP(a * A); // D = a*A\n            const x1y1 = X1 + Y1;\n            const E = modP(modP(x1y1 * x1y1) - A - B); // E = (X1+Y1)2-A-B\n            const G = D + B; // G = D+B\n            const F = G - C; // F = G-C\n            const H = D - B; // H = D-B\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        // Fast algo for adding 2 Extended Points.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#addition-add-2008-hwcd\n        // Cost: 9M + 1*a + 1*d + 7add.\n        add(other) {\n            aextpoint(other);\n            const { a, d } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1, et: T1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2, et: T2 } = other;\n            const A = modP(X1 * X2); // A = X1*X2\n            const B = modP(Y1 * Y2); // B = Y1*Y2\n            const C = modP(T1 * d * T2); // C = T1*d*T2\n            const D = modP(Z1 * Z2); // D = Z1*Z2\n            const E = modP((X1 + Y1) * (X2 + Y2) - A - B); // E = (X1+Y1)*(X2+Y2)-A-B\n            const F = D - C; // F = D-C\n            const G = D + C; // G = D+C\n            const H = modP(B - a * A); // H = B-a*A\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        // Constant-time multiplication.\n        multiply(scalar) {\n            const n = scalar;\n            aInRange('scalar', n, _1n, CURVE_ORDER); // 1 <= scalar < L\n            const { p, f } = wnaf.wNAFCached(this, n, Point.normalizeZ);\n            return Point.normalizeZ([p, f])[0];\n        }\n        // Non-constant-time multiplication. Uses double-and-add algorithm.\n        // It's faster, but should only be used when you don't care about\n        // an exposed private key e.g. sig verification.\n        // Does NOT allow scalars higher than CURVE.n.\n        // Accepts optional accumulator to merge with multiply (important for sparse scalars)\n        multiplyUnsafe(scalar, acc = Point.ZERO) {\n            const n = scalar;\n            aInRange('scalar', n, _0n, CURVE_ORDER); // 0 <= scalar < L\n            if (n === _0n)\n                return Point.ZERO;\n            if (this.is0() || n === _1n)\n                return this;\n            return wnaf.wNAFCachedUnsafe(this, n, Point.normalizeZ, acc);\n        }\n        // Checks if point is of small order.\n        // If you add something to small order point, you will have \"dirty\"\n        // point with torsion component.\n        // Multiplies point by cofactor and checks if the result is 0.\n        isSmallOrder() {\n            return this.multiplyUnsafe(cofactor).is0();\n        }\n        // Multiplies point by curve order and checks if the result is 0.\n        // Returns `false` is the point is dirty.\n        isTorsionFree() {\n            return wnaf.wNAFCachedUnsafe(this, CURVE_ORDER).is0();\n        }\n        // Converts Extended point to default (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        toAffine(invertedZ) {\n            return toAffineMemo(this, invertedZ);\n        }\n        clearCofactor() {\n            if (cofactor === _1n)\n                return this;\n            return this.multiplyUnsafe(cofactor);\n        }\n        static fromBytes(bytes, zip215 = false) {\n            abytes(bytes);\n            return this.fromHex(bytes, zip215);\n        }\n        // Converts hash string or Uint8Array to Point.\n        // Uses algo from RFC8032 5.1.3.\n        static fromHex(hex, zip215 = false) {\n            const { d, a } = CURVE;\n            const len = Fp.BYTES;\n            hex = ensureBytes('pointHex', hex, len); // copy hex to a new array\n            abool('zip215', zip215);\n            const normed = hex.slice(); // copy again, we'll manipulate it\n            const lastByte = hex[len - 1]; // select last byte\n            normed[len - 1] = lastByte & ~0x80; // clear last bit\n            const y = bytesToNumberLE(normed);\n            // zip215=true is good for consensus-critical apps. =false follows RFC8032 / NIST186-5.\n            // RFC8032 prohibits >= p, but ZIP215 doesn't\n            // zip215=true:  0 <= y < MASK (2^256 for ed25519)\n            // zip215=false: 0 <= y < P (2^255-19 for ed25519)\n            const max = zip215 ? MASK : Fp.ORDER;\n            aInRange('pointHex.y', y, _0n, max);\n            // Ed25519: x² = (y²-1)/(dy²+1) mod p. Ed448: x² = (y²-1)/(dy²-1) mod p. Generic case:\n            // ax²+y²=1+dx²y² => y²-1=dx²y²-ax² => y²-1=x²(dy²-a) => x²=(y²-1)/(dy²-a)\n            const y2 = modP(y * y); // denominator is always non-0 mod p.\n            const u = modP(y2 - _1n); // u = y² - 1\n            const v = modP(d * y2 - a); // v = d y² + 1.\n            let { isValid, value: x } = uvRatio(u, v); // √(u/v)\n            if (!isValid)\n                throw new Error('Point.fromHex: invalid y coordinate');\n            const isXOdd = (x & _1n) === _1n; // There are 2 square roots. Use x_0 bit to select proper\n            const isLastByteOdd = (lastByte & 0x80) !== 0; // x_0, last bit\n            if (!zip215 && x === _0n && isLastByteOdd)\n                // if x=0 and x_0 = 1, fail\n                throw new Error('Point.fromHex: x=0 and x_0=1');\n            if (isLastByteOdd !== isXOdd)\n                x = modP(-x); // if x_0 != x mod 2, set x = p-x\n            return Point.fromAffine({ x, y });\n        }\n        static fromPrivateScalar(scalar) {\n            return Point.BASE.multiply(scalar);\n        }\n        toBytes() {\n            const { x, y } = this.toAffine();\n            const bytes = numberToBytesLE(y, Fp.BYTES); // each y has 2 x values (x, -y)\n            bytes[bytes.length - 1] |= x & _1n ? 0x80 : 0; // when compressing, it's enough to store y\n            return bytes; // and use the last byte to encode sign of x\n        }\n        /** @deprecated use `toBytes` */\n        toRawBytes() {\n            return this.toBytes();\n        }\n        toHex() {\n            return bytesToHex(this.toBytes());\n        }\n        toString() {\n            return `<Point ${this.is0() ? 'ZERO' : this.toHex()}>`;\n        }\n    }\n    // base / generator point\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, _1n, modP(CURVE.Gx * CURVE.Gy));\n    // zero / infinity / identity point\n    Point.ZERO = new Point(_0n, _1n, _1n, _0n); // 0, 1, 1, 0\n    // fields\n    Point.Fp = Fp;\n    Point.Fn = Fn;\n    const wnaf = wNAF(Point, Fn.BYTES * 8); // Fn.BITS?\n    return Point;\n}\n/**\n * Initializes EdDSA signatures over given Edwards curve.\n */\nexport function eddsa(Point, eddsaOpts) {\n    _validateObject(eddsaOpts, {\n        hash: 'function',\n    }, {\n        adjustScalarBytes: 'function',\n        randomBytes: 'function',\n        domain: 'function',\n        prehash: 'function',\n        mapToCurve: 'function',\n    });\n    const { prehash, hash: cHash } = eddsaOpts;\n    const { BASE: G, Fp, Fn } = Point;\n    const CURVE_ORDER = Fn.ORDER;\n    const randomBytes_ = eddsaOpts.randomBytes || randomBytes;\n    const adjustScalarBytes = eddsaOpts.adjustScalarBytes || ((bytes) => bytes); // NOOP\n    const domain = eddsaOpts.domain ||\n        ((data, ctx, phflag) => {\n            abool('phflag', phflag);\n            if (ctx.length || phflag)\n                throw new Error('Contexts/pre-hash are not supported');\n            return data;\n        }); // NOOP\n    function modN(a) {\n        return Fn.create(a);\n    }\n    // Little-endian SHA512 with modulo n\n    function modN_LE(hash) {\n        // Not using Fn.fromBytes: hash can be 2*Fn.BYTES\n        return modN(bytesToNumberLE(hash));\n    }\n    // Get the hashed private scalar per RFC8032 5.1.5\n    function getPrivateScalar(key) {\n        const len = Fp.BYTES;\n        key = ensureBytes('private key', key, len);\n        // Hash private key with curve's hash function to produce uniformingly random input\n        // Check byte lengths: ensure(64, h(ensure(32, key)))\n        const hashed = ensureBytes('hashed private key', cHash(key), 2 * len);\n        const head = adjustScalarBytes(hashed.slice(0, len)); // clear first half bits, produce FE\n        const prefix = hashed.slice(len, 2 * len); // second half is called key prefix (5.1.6)\n        const scalar = modN_LE(head); // The actual private scalar\n        return { head, prefix, scalar };\n    }\n    // Convenience method that creates public key from scalar. RFC8032 5.1.5\n    function getExtendedPublicKey(key) {\n        const { head, prefix, scalar } = getPrivateScalar(key);\n        const point = G.multiply(scalar); // Point on Edwards curve aka public key\n        const pointBytes = point.toBytes();\n        return { head, prefix, scalar, point, pointBytes };\n    }\n    // Calculates EdDSA pub key. RFC8032 5.1.5. Privkey is hashed. Use first half with 3 bits cleared\n    function getPublicKey(privKey) {\n        return getExtendedPublicKey(privKey).pointBytes;\n    }\n    // int('LE', SHA512(dom2(F, C) || msgs)) mod N\n    function hashDomainToScalar(context = Uint8Array.of(), ...msgs) {\n        const msg = concatBytes(...msgs);\n        return modN_LE(cHash(domain(msg, ensureBytes('context', context), !!prehash)));\n    }\n    /** Signs message with privateKey. RFC8032 5.1.6 */\n    function sign(msg, privKey, options = {}) {\n        msg = ensureBytes('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph etc.\n        const { prefix, scalar, pointBytes } = getExtendedPublicKey(privKey);\n        const r = hashDomainToScalar(options.context, prefix, msg); // r = dom2(F, C) || prefix || PH(M)\n        const R = G.multiply(r).toBytes(); // R = rG\n        const k = hashDomainToScalar(options.context, R, pointBytes, msg); // R || A || PH(M)\n        const s = modN(r + k * scalar); // S = (r + k * s) mod L\n        aInRange('signature.s', s, _0n, CURVE_ORDER); // 0 <= s < l\n        const L = Fp.BYTES;\n        const res = concatBytes(R, numberToBytesLE(s, L));\n        return ensureBytes('result', res, L * 2); // 64-byte signature\n    }\n    const verifyOpts = VERIFY_DEFAULT;\n    /**\n     * Verifies EdDSA signature against message and public key. RFC8032 5.1.7.\n     * An extended group equation is checked.\n     */\n    function verify(sig, msg, publicKey, options = verifyOpts) {\n        const { context, zip215 } = options;\n        const len = Fp.BYTES; // Verifies EdDSA signature against message and public key. RFC8032 5.1.7.\n        sig = ensureBytes('signature', sig, 2 * len); // An extended group equation is checked.\n        msg = ensureBytes('message', msg);\n        publicKey = ensureBytes('publicKey', publicKey, len);\n        if (zip215 !== undefined)\n            abool('zip215', zip215);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph, etc\n        const s = bytesToNumberLE(sig.slice(len, 2 * len));\n        let A, R, SB;\n        try {\n            // zip215=true is good for consensus-critical apps. =false follows RFC8032 / NIST186-5.\n            // zip215=true:  0 <= y < MASK (2^256 for ed25519)\n            // zip215=false: 0 <= y < P (2^255-19 for ed25519)\n            A = Point.fromHex(publicKey, zip215);\n            R = Point.fromHex(sig.slice(0, len), zip215);\n            SB = G.multiplyUnsafe(s); // 0 <= s < l is done inside\n        }\n        catch (error) {\n            return false;\n        }\n        if (!zip215 && A.isSmallOrder())\n            return false;\n        const k = hashDomainToScalar(context, R.toBytes(), A.toBytes(), msg);\n        const RkA = R.add(A.multiplyUnsafe(k));\n        // Extended group equation\n        // [8][S]B = [8]R + [8][k]A'\n        return RkA.subtract(SB).clearCofactor().is0();\n    }\n    G.precompute(8); // Enable precomputes. Slows down first publicKey computation by 20ms.\n    const utils = {\n        getExtendedPublicKey,\n        /** ed25519 priv keys are uniform 32b. No need to check for modulo bias, like in secp256k1. */\n        randomPrivateKey: () => randomBytes_(Fp.BYTES),\n        /**\n         * We're doing scalar multiplication (used in getPublicKey etc) with precomputed BASE_POINT\n         * values. This slows down first getPublicKey() by milliseconds (see Speed section),\n         * but allows to speed-up subsequent getPublicKey() calls up to 20x.\n         * @param windowSize 2, 4, 8, 16\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            return point.precompute(windowSize, false);\n        },\n    };\n    return { getPublicKey, sign, verify, utils, Point };\n}\nfunction _eddsa_legacy_opts_to_new(c) {\n    const CURVE = {\n        a: c.a,\n        d: c.d,\n        p: c.Fp.ORDER,\n        n: c.n,\n        h: c.h,\n        Gx: c.Gx,\n        Gy: c.Gy,\n    };\n    const Fp = c.Fp;\n    const Fn = Field(CURVE.n, c.nBitLength, true);\n    const curveOpts = { Fp, Fn, uvRatio: c.uvRatio };\n    const eddsaOpts = {\n        hash: c.hash,\n        randomBytes: c.randomBytes,\n        adjustScalarBytes: c.adjustScalarBytes,\n        domain: c.domain,\n        prehash: c.prehash,\n        mapToCurve: c.mapToCurve,\n    };\n    return { CURVE, curveOpts, eddsaOpts };\n}\nfunction _eddsa_new_output_to_legacy(c, eddsa) {\n    const legacy = Object.assign({}, eddsa, { ExtendedPoint: eddsa.Point, CURVE: c });\n    return legacy;\n}\n// TODO: remove. Use eddsa\nexport function twistedEdwards(c) {\n    const { CURVE, curveOpts, eddsaOpts } = _eddsa_legacy_opts_to_new(c);\n    const Point = edwards(CURVE, curveOpts);\n    const EDDSA = eddsa(Point, eddsaOpts);\n    return _eddsa_new_output_to_legacy(c, EDDSA);\n}\n//# sourceMappingURL=edwards.js.map","/**\n * ed25519 Twisted Edwards curve with following addons:\n * - X25519 ECDH\n * - Ristretto cofactor elimination\n * - Elligator hash-to-group / point indistinguishability\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha512 } from '@noble/hashes/sha2.js';\nimport { abytes, concatBytes, utf8ToBytes } from '@noble/hashes/utils.js';\nimport { pippenger } from \"./abstract/curve.js\";\nimport { twistedEdwards, } from \"./abstract/edwards.js\";\nimport { createHasher, expand_message_xmd, } from \"./abstract/hash-to-curve.js\";\nimport { Field, FpInvertBatch, FpSqrtEven, isNegativeLE, mod, pow2 } from \"./abstract/modular.js\";\nimport { montgomery } from \"./abstract/montgomery.js\";\nimport { bytesToHex, bytesToNumberLE, ensureBytes, equalBytes, numberToBytesLE, } from \"./utils.js\";\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _5n = BigInt(5), _8n = BigInt(8);\n// 2n**255n - 19n\n// Removing Fp.create() will still work, and is 10% faster on sign\n//     a: Fp.create(BigInt(-1)),\n// d is -121665/121666 a.k.a. Fp.neg(121665 * Fp.inv(121666))\n// Finite field 2n**255n - 19n\n// Subgroup order 2n**252n + 27742317777372353535851937790883648493n;\nconst ed25519_CURVE = {\n    p: BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffed'),\n    n: BigInt('0x1000000000000000000000000000000014def9dea2f79cd65812631a5cf5d3ed'),\n    h: _8n,\n    a: BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec'),\n    d: BigInt('0x52036cee2b6ffe738cc740797779e89800700a4d4141d8ab75eb4dca135978a3'),\n    Gx: BigInt('0x216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a'),\n    Gy: BigInt('0x6666666666666666666666666666666666666666666666666666666666666658'),\n};\nfunction ed25519_pow_2_252_3(x) {\n    // prettier-ignore\n    const _10n = BigInt(10), _20n = BigInt(20), _40n = BigInt(40), _80n = BigInt(80);\n    const P = ed25519_CURVE.p;\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P; // x^3, 11\n    const b4 = (pow2(b2, _2n, P) * b2) % P; // x^15, 1111\n    const b5 = (pow2(b4, _1n, P) * x) % P; // x^31\n    const b10 = (pow2(b5, _5n, P) * b5) % P;\n    const b20 = (pow2(b10, _10n, P) * b10) % P;\n    const b40 = (pow2(b20, _20n, P) * b20) % P;\n    const b80 = (pow2(b40, _40n, P) * b40) % P;\n    const b160 = (pow2(b80, _80n, P) * b80) % P;\n    const b240 = (pow2(b160, _80n, P) * b80) % P;\n    const b250 = (pow2(b240, _10n, P) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n, P) * x) % P;\n    // ^ To pow to (p+3)/8, multiply it by x.\n    return { pow_p_5_8, b2 };\n}\nfunction adjustScalarBytes(bytes) {\n    // Section 5: For X25519, in order to decode 32 random bytes as an integer scalar,\n    // set the three least significant bits of the first byte\n    bytes[0] &= 248; // 0b1111_1000\n    // and the most significant bit of the last to zero,\n    bytes[31] &= 127; // 0b0111_1111\n    // set the second most significant bit of the last byte to 1\n    bytes[31] |= 64; // 0b0100_0000\n    return bytes;\n}\n// √(-1) aka √(a) aka 2^((p-1)/4)\n// Fp.sqrt(Fp.neg(1))\nconst ED25519_SQRT_M1 = /* @__PURE__ */ BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\n// sqrt(u/v)\nfunction uvRatio(u, v) {\n    const P = ed25519_CURVE.p;\n    const v3 = mod(v * v * v, P); // v³\n    const v7 = mod(v3 * v3 * v, P); // v⁷\n    // (p+3)/8 and (p-5)/8\n    const pow = ed25519_pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow, P); // (uv³)(uv⁷)^(p-5)/8\n    const vx2 = mod(v * x * x, P); // vx²\n    const root1 = x; // First root candidate\n    const root2 = mod(x * ED25519_SQRT_M1, P); // Second root candidate\n    const useRoot1 = vx2 === u; // If vx² = u (mod p), x is a square root\n    const useRoot2 = vx2 === mod(-u, P); // If vx² = -u, set x <-- x * 2^((p-1)/4)\n    const noRoot = vx2 === mod(-u * ED25519_SQRT_M1, P); // There is no valid root, vx² = -u√(-1)\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2; // We return root2 anyway, for const-time\n    if (isNegativeLE(x, P))\n        x = mod(-x, P);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\n/** Weird / bogus points, useful for debugging. */\nexport const ED25519_TORSION_SUBGROUP = [\n    '0100000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n    '0000000000000000000000000000000000000000000000000000000000000080',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n    'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n    '0000000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n];\nconst Fp = /* @__PURE__ */ (() => Field(ed25519_CURVE.p, undefined, true))();\nconst ed25519Defaults = /* @__PURE__ */ (() => ({\n    ...ed25519_CURVE,\n    Fp,\n    hash: sha512,\n    adjustScalarBytes,\n    // dom2\n    // Ratio of u to v. Allows us to combine inversion and square root. Uses algo from RFC8032 5.1.3.\n    // Constant-time, u/√v\n    uvRatio,\n}))();\n/**\n * ed25519 curve with EdDSA signatures.\n * @example\n * import { ed25519 } from '@noble/curves/ed25519';\n * const priv = ed25519.utils.randomPrivateKey();\n * const pub = ed25519.getPublicKey(priv);\n * const msg = new TextEncoder().encode('hello');\n * const sig = ed25519.sign(msg, priv);\n * ed25519.verify(sig, msg, pub); // Default mode: follows ZIP215\n * ed25519.verify(sig, msg, pub, { zip215: false }); // RFC8032 / FIPS 186-5\n */\nexport const ed25519 = /* @__PURE__ */ (() => twistedEdwards(ed25519Defaults))();\nfunction ed25519_domain(data, ctx, phflag) {\n    if (ctx.length > 255)\n        throw new Error('Context is too big');\n    return concatBytes(utf8ToBytes('SigEd25519 no Ed25519 collisions'), new Uint8Array([phflag ? 1 : 0, ctx.length]), ctx, data);\n}\nexport const ed25519ctx = /* @__PURE__ */ (() => twistedEdwards({\n    ...ed25519Defaults,\n    domain: ed25519_domain,\n}))();\nexport const ed25519ph = /* @__PURE__ */ (() => twistedEdwards(Object.assign({}, ed25519Defaults, {\n    domain: ed25519_domain,\n    prehash: sha512,\n})))();\n/**\n * ECDH using curve25519 aka x25519.\n * @example\n * import { x25519 } from '@noble/curves/ed25519';\n * const priv = 'a546e36bf0527c9d3b16154b82465edd62144c0ac1fc5a18506a2244ba449ac4';\n * const pub = 'e6db6867583030db3594c1a424b15f7c726624ec26b3353b10a903a6d0ab1c4c';\n * x25519.getSharedSecret(priv, pub) === x25519.scalarMult(priv, pub); // aliases\n * x25519.getPublicKey(priv) === x25519.scalarMultBase(priv);\n * x25519.getPublicKey(x25519.utils.randomPrivateKey());\n */\nexport const x25519 = /* @__PURE__ */ (() => {\n    const P = ed25519_CURVE.p;\n    return montgomery({\n        P,\n        type: 'x25519',\n        powPminus2: (x) => {\n            // x^(p-2) aka x^(2^255-21)\n            const { pow_p_5_8, b2 } = ed25519_pow_2_252_3(x);\n            return mod(pow2(pow_p_5_8, _3n, P) * b2, P);\n        },\n        adjustScalarBytes,\n    });\n})();\n/**\n * Converts ed25519 public key to x25519 public key. Uses formula:\n * * `(u, v) = ((1+y)/(1-y), sqrt(-486664)*u/x)`\n * * `(x, y) = (sqrt(-486664)*u/v, (u-1)/(u+1))`\n * @example\n *   const someonesPub = ed25519.getPublicKey(ed25519.utils.randomPrivateKey());\n *   const aPriv = x25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(aPriv, edwardsToMontgomeryPub(someonesPub))\n */\nexport function edwardsToMontgomeryPub(edwardsPub) {\n    const bpub = ensureBytes('pub', edwardsPub);\n    const { y } = ed25519.Point.fromHex(bpub);\n    const _1n = BigInt(1);\n    return Fp.toBytes(Fp.create((_1n + y) * Fp.inv(_1n - y)));\n}\nexport const edwardsToMontgomery = edwardsToMontgomeryPub; // deprecated\n/**\n * Converts ed25519 secret key to x25519 secret key.\n * @example\n *   const someonesPub = x25519.getPublicKey(x25519.utils.randomPrivateKey());\n *   const aPriv = ed25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(edwardsToMontgomeryPriv(aPriv), someonesPub)\n */\nexport function edwardsToMontgomeryPriv(edwardsPriv) {\n    const hashed = ed25519Defaults.hash(edwardsPriv.subarray(0, 32));\n    return ed25519Defaults.adjustScalarBytes(hashed).subarray(0, 32);\n}\n// Hash To Curve Elligator2 Map (NOTE: different from ristretto255 elligator)\n// NOTE: very important part is usage of FpSqrtEven for ELL2_C1_EDWARDS, since\n// SageMath returns different root first and everything falls apart\nconst ELL2_C1 = /* @__PURE__ */ (() => (Fp.ORDER + _3n) / _8n)(); // 1. c1 = (q + 3) / 8       # Integer arithmetic\nconst ELL2_C2 = /* @__PURE__ */ (() => Fp.pow(_2n, ELL2_C1))(); // 2. c2 = 2^c1\nconst ELL2_C3 = /* @__PURE__ */ (() => Fp.sqrt(Fp.neg(Fp.ONE)))(); // 3. c3 = sqrt(-1)\n// prettier-ignore\nfunction map_to_curve_elligator2_curve25519(u) {\n    const ELL2_C4 = (Fp.ORDER - _5n) / _8n; // 4. c4 = (q - 5) / 8       # Integer arithmetic\n    const ELL2_J = BigInt(486662);\n    let tv1 = Fp.sqr(u); //  1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, _2n); //  2.  tv1 = 2 * tv1\n    let xd = Fp.add(tv1, Fp.ONE); //  3.   xd = tv1 + 1         # Nonzero: -1 is square (mod p), tv1 is not\n    let x1n = Fp.neg(ELL2_J); //  4.  x1n = -J              # x1 = x1n / xd = -J / (1 + 2 * u^2)\n    let tv2 = Fp.sqr(xd); //  5.  tv2 = xd^2\n    let gxd = Fp.mul(tv2, xd); //  6.  gxd = tv2 * xd        # gxd = xd^3\n    let gx1 = Fp.mul(tv1, ELL2_J); //  7.  gx1 = J * tv1         # x1n + J * xd\n    gx1 = Fp.mul(gx1, x1n); //  8.  gx1 = gx1 * x1n       # x1n^2 + J * x1n * xd\n    gx1 = Fp.add(gx1, tv2); //  9.  gx1 = gx1 + tv2       # x1n^2 + J * x1n * xd + xd^2\n    gx1 = Fp.mul(gx1, x1n); //  10. gx1 = gx1 * x1n       # x1n^3 + J * x1n^2 * xd + x1n * xd^2\n    let tv3 = Fp.sqr(gxd); //  11. tv3 = gxd^2\n    tv2 = Fp.sqr(tv3); //  12. tv2 = tv3^2           # gxd^4\n    tv3 = Fp.mul(tv3, gxd); //  13. tv3 = tv3 * gxd       # gxd^3\n    tv3 = Fp.mul(tv3, gx1); //  14. tv3 = tv3 * gx1       # gx1 * gxd^3\n    tv2 = Fp.mul(tv2, tv3); //  15. tv2 = tv2 * tv3       # gx1 * gxd^7\n    let y11 = Fp.pow(tv2, ELL2_C4); //  16. y11 = tv2^c4        # (gx1 * gxd^7)^((p - 5) / 8)\n    y11 = Fp.mul(y11, tv3); //  17. y11 = y11 * tv3       # gx1*gxd^3*(gx1*gxd^7)^((p-5)/8)\n    let y12 = Fp.mul(y11, ELL2_C3); //  18. y12 = y11 * c3\n    tv2 = Fp.sqr(y11); //  19. tv2 = y11^2\n    tv2 = Fp.mul(tv2, gxd); //  20. tv2 = tv2 * gxd\n    let e1 = Fp.eql(tv2, gx1); //  21.  e1 = tv2 == gx1\n    let y1 = Fp.cmov(y12, y11, e1); //  22.  y1 = CMOV(y12, y11, e1)  # If g(x1) is square, this is its sqrt\n    let x2n = Fp.mul(x1n, tv1); //  23. x2n = x1n * tv1       # x2 = x2n / xd = 2 * u^2 * x1n / xd\n    let y21 = Fp.mul(y11, u); //  24. y21 = y11 * u\n    y21 = Fp.mul(y21, ELL2_C2); //  25. y21 = y21 * c2\n    let y22 = Fp.mul(y21, ELL2_C3); //  26. y22 = y21 * c3\n    let gx2 = Fp.mul(gx1, tv1); //  27. gx2 = gx1 * tv1       # g(x2) = gx2 / gxd = 2 * u^2 * g(x1)\n    tv2 = Fp.sqr(y21); //  28. tv2 = y21^2\n    tv2 = Fp.mul(tv2, gxd); //  29. tv2 = tv2 * gxd\n    let e2 = Fp.eql(tv2, gx2); //  30.  e2 = tv2 == gx2\n    let y2 = Fp.cmov(y22, y21, e2); //  31.  y2 = CMOV(y22, y21, e2)  # If g(x2) is square, this is its sqrt\n    tv2 = Fp.sqr(y1); //  32. tv2 = y1^2\n    tv2 = Fp.mul(tv2, gxd); //  33. tv2 = tv2 * gxd\n    let e3 = Fp.eql(tv2, gx1); //  34.  e3 = tv2 == gx1\n    let xn = Fp.cmov(x2n, x1n, e3); //  35.  xn = CMOV(x2n, x1n, e3)  # If e3, x = x1, else x = x2\n    let y = Fp.cmov(y2, y1, e3); //  36.   y = CMOV(y2, y1, e3)    # If e3, y = y1, else y = y2\n    let e4 = Fp.isOdd(y); //  37.  e4 = sgn0(y) == 1        # Fix sign of y\n    y = Fp.cmov(y, Fp.neg(y), e3 !== e4); //  38.   y = CMOV(y, -y, e3 XOR e4)\n    return { xMn: xn, xMd: xd, yMn: y, yMd: _1n }; //  39. return (xn, xd, y, 1)\n}\nconst ELL2_C1_EDWARDS = /* @__PURE__ */ (() => FpSqrtEven(Fp, Fp.neg(BigInt(486664))))(); // sgn0(c1) MUST equal 0\nfunction map_to_curve_elligator2_edwards25519(u) {\n    const { xMn, xMd, yMn, yMd } = map_to_curve_elligator2_curve25519(u); //  1.  (xMn, xMd, yMn, yMd) =\n    // map_to_curve_elligator2_curve25519(u)\n    let xn = Fp.mul(xMn, yMd); //  2.  xn = xMn * yMd\n    xn = Fp.mul(xn, ELL2_C1_EDWARDS); //  3.  xn = xn * c1\n    let xd = Fp.mul(xMd, yMn); //  4.  xd = xMd * yMn    # xn / xd = c1 * xM / yM\n    let yn = Fp.sub(xMn, xMd); //  5.  yn = xMn - xMd\n    let yd = Fp.add(xMn, xMd); //  6.  yd = xMn + xMd    # (n / d - 1) / (n / d + 1) = (n - d) / (n + d)\n    let tv1 = Fp.mul(xd, yd); //  7. tv1 = xd * yd\n    let e = Fp.eql(tv1, Fp.ZERO); //  8.   e = tv1 == 0\n    xn = Fp.cmov(xn, Fp.ZERO, e); //  9.  xn = CMOV(xn, 0, e)\n    xd = Fp.cmov(xd, Fp.ONE, e); //  10. xd = CMOV(xd, 1, e)\n    yn = Fp.cmov(yn, Fp.ONE, e); //  11. yn = CMOV(yn, 1, e)\n    yd = Fp.cmov(yd, Fp.ONE, e); //  12. yd = CMOV(yd, 1, e)\n    const [xd_inv, yd_inv] = FpInvertBatch(Fp, [xd, yd], true); // batch division\n    return { x: Fp.mul(xn, xd_inv), y: Fp.mul(yn, yd_inv) }; //  13. return (xn, xd, yn, yd)\n}\nexport const ed25519_hasher = /* @__PURE__ */ (() => createHasher(ed25519.Point, (scalars) => map_to_curve_elligator2_edwards25519(scalars[0]), {\n    DST: 'edwards25519_XMD:SHA-512_ELL2_RO_',\n    encodeDST: 'edwards25519_XMD:SHA-512_ELL2_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha512,\n}))();\nexport const hashToCurve = /* @__PURE__ */ (() => ed25519_hasher.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => ed25519_hasher.encodeToCurve)();\nfunction aristp(other) {\n    if (!(other instanceof RistPoint))\n        throw new Error('RistrettoPoint expected');\n}\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst SQRT_M1 = ED25519_SQRT_M1;\n// √(ad - 1)\nconst SQRT_AD_MINUS_ONE = /* @__PURE__ */ BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\n// 1 / √(a-d)\nconst INVSQRT_A_MINUS_D = /* @__PURE__ */ BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\n// 1-d²\nconst ONE_MINUS_D_SQ = /* @__PURE__ */ BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\n// (d-1)²\nconst D_MINUS_ONE_SQ = /* @__PURE__ */ BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\n// Calculates 1/√(number)\nconst invertSqrt = (number) => uvRatio(_1n, number);\nconst MAX_255B = /* @__PURE__ */ BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nconst bytes255ToNumberLE = (bytes) => ed25519.CURVE.Fp.create(bytesToNumberLE(bytes) & MAX_255B);\n/**\n * Computes Elligator map for Ristretto255.\n * Described in [RFC9380](https://www.rfc-editor.org/rfc/rfc9380#appendix-B) and on\n * the [website](https://ristretto.group/formulas/elligator.html).\n */\nfunction calcElligatorRistrettoMap(r0) {\n    const { d } = ed25519.CURVE;\n    const P = ed25519.CURVE.Fp.ORDER;\n    const mod = ed25519.CURVE.Fp.create;\n    const r = mod(SQRT_M1 * r0 * r0); // 1\n    const Ns = mod((r + _1n) * ONE_MINUS_D_SQ); // 2\n    let c = BigInt(-1); // 3\n    const D = mod((c - d * r) * mod(r + d)); // 4\n    let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D); // 5\n    let s_ = mod(s * r0); // 6\n    if (!isNegativeLE(s_, P))\n        s_ = mod(-s_);\n    if (!Ns_D_is_sq)\n        s = s_; // 7\n    if (!Ns_D_is_sq)\n        c = r; // 8\n    const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D); // 9\n    const s2 = s * s;\n    const W0 = mod((s + s) * D); // 10\n    const W1 = mod(Nt * SQRT_AD_MINUS_ONE); // 11\n    const W2 = mod(_1n - s2); // 12\n    const W3 = mod(_1n + s2); // 13\n    return new ed25519.Point(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n}\n/**\n * Each ed25519/ExtendedPoint has 8 different equivalent points. This can be\n * a source of bugs for protocols like ring signatures. Ristretto was created to solve this.\n * Ristretto point operates in X:Y:Z:T extended coordinates like ExtendedPoint,\n * but it should work in its own namespace: do not combine those two.\n * See [RFC9496](https://www.rfc-editor.org/rfc/rfc9496).\n */\nclass RistPoint {\n    // Private property to discourage combining ExtendedPoint + RistrettoPoint\n    // Always use Ristretto encoding/decoding instead.\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static fromAffine(ap) {\n        return new RistPoint(ed25519.Point.fromAffine(ap));\n    }\n    /**\n     * Takes uniform output of 64-byte hash function like sha512 and converts it to `RistrettoPoint`.\n     * The hash-to-group operation applies Elligator twice and adds the results.\n     * **Note:** this is one-way map, there is no conversion from point to hash.\n     * Described in [RFC9380](https://www.rfc-editor.org/rfc/rfc9380#appendix-B) and on\n     * the [website](https://ristretto.group/formulas/elligator.html).\n     * @param hex 64-byte output of a hash function\n     */\n    static hashToCurve(hex) {\n        hex = ensureBytes('ristrettoHash', hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = calcElligatorRistrettoMap(r2);\n        return new RistPoint(R1.add(R2));\n    }\n    static fromBytes(bytes) {\n        abytes(bytes);\n        return this.fromHex(bytes);\n    }\n    /**\n     * Converts ristretto-encoded string to ristretto point.\n     * Described in [RFC9496](https://www.rfc-editor.org/rfc/rfc9496#name-decode).\n     * @param hex Ristretto-encoded 32 bytes. Not every 32-byte string is valid ristretto encoding\n     */\n    static fromHex(hex) {\n        hex = ensureBytes('ristrettoHex', hex, 32);\n        const { a, d } = ed25519.CURVE;\n        const P = Fp.ORDER;\n        const mod = Fp.create;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        // 1. Check that s_bytes is the canonical encoding of a field element, or else abort.\n        // 3. Check that s is non-negative, or else abort\n        if (!equalBytes(numberToBytesLE(s, 32), hex) || isNegativeLE(s, P))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2); // 4 (a is -1)\n        const u2 = mod(_1n - a * s2); // 5\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2); // 6\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2)); // 7\n        const Dx = mod(I * u2); // 8\n        const Dy = mod(I * Dx * v); // 9\n        let x = mod((s + s) * Dx); // 10\n        if (isNegativeLE(x, P))\n            x = mod(-x); // 10\n        const y = mod(u1 * Dy); // 11\n        const t = mod(x * y); // 12\n        if (!isValid || isNegativeLE(t, P) || y === _0n)\n            throw new Error(emsg);\n        return new RistPoint(new ed25519.Point(x, y, _1n, t));\n    }\n    static msm(points, scalars) {\n        const Fn = Field(ed25519.CURVE.n, ed25519.CURVE.nBitLength);\n        return pippenger(RistPoint, Fn, points, scalars);\n    }\n    /**\n     * Encodes ristretto point to Uint8Array.\n     * Described in [RFC9496](https://www.rfc-editor.org/rfc/rfc9496#name-encode).\n     */\n    toBytes() {\n        let { ex: x, ey: y, ez: z, et: t } = this.ep;\n        const P = Fp.ORDER;\n        const mod = Fp.create;\n        const u1 = mod(mod(z + y) * mod(z - y)); // 1\n        const u2 = mod(x * y); // 2\n        // Square root always exists\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq)); // 3\n        const D1 = mod(invsqrt * u1); // 4\n        const D2 = mod(invsqrt * u2); // 5\n        const zInv = mod(D1 * D2 * t); // 6\n        let D; // 7\n        if (isNegativeLE(t * zInv, P)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2; // 8\n        }\n        if (isNegativeLE(x * zInv, P))\n            y = mod(-y); // 9\n        let s = mod((z - y) * D); // 10 (check footer's note, no sqrt(-a))\n        if (isNegativeLE(s, P))\n            s = mod(-s);\n        return numberToBytesLE(s, 32); // 11\n    }\n    /** @deprecated use `toBytes` */\n    toRawBytes() {\n        return this.toBytes();\n    }\n    toHex() {\n        return bytesToHex(this.toBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    /**\n     * Compares two Ristretto points.\n     * Described in [RFC9496](https://www.rfc-editor.org/rfc/rfc9496#name-equals).\n     */\n    equals(other) {\n        aristp(other);\n        const { ex: X1, ey: Y1 } = this.ep;\n        const { ex: X2, ey: Y2 } = other.ep;\n        const mod = Fp.create;\n        // (x1 * y2 == y1 * x2) | (y1 * y2 == x1 * x2)\n        const one = mod(X1 * Y2) === mod(Y1 * X2);\n        const two = mod(Y1 * Y2) === mod(X1 * X2);\n        return one || two;\n    }\n    add(other) {\n        aristp(other);\n        return new RistPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        aristp(other);\n        return new RistPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistPoint(this.ep.multiplyUnsafe(scalar));\n    }\n    double() {\n        return new RistPoint(this.ep.double());\n    }\n    negate() {\n        return new RistPoint(this.ep.negate());\n    }\n}\n/**\n * Wrapper over Edwards Point for ristretto255 from\n * [RFC9496](https://www.rfc-editor.org/rfc/rfc9496).\n */\nexport const RistrettoPoint = /* @__PURE__ */ (() => {\n    if (!RistPoint.BASE)\n        RistPoint.BASE = new RistPoint(ed25519.Point.BASE);\n    if (!RistPoint.ZERO)\n        RistPoint.ZERO = new RistPoint(ed25519.Point.ZERO);\n    return RistPoint;\n})();\n/**\n * hash-to-curve for ristretto255.\n * Described in [RFC9380](https://www.rfc-editor.org/rfc/rfc9380#appendix-B).\n */\nexport const hashToRistretto255 = (msg, options) => {\n    const d = options.DST;\n    const DST = typeof d === 'string' ? utf8ToBytes(d) : d;\n    const uniform_bytes = expand_message_xmd(msg, DST, 64, sha512);\n    const P = RistPoint.hashToCurve(uniform_bytes);\n    return P;\n};\n/** @deprecated */\nexport const hash_to_ristretto255 = hashToRistretto255; // legacy\n//# sourceMappingURL=ed25519.js.map","// SPDX-License-Identifier: MIT\nimport { ed25519 } from '@noble/curves/ed25519';\nimport { Point } from '../../point';\nimport { SLIP10_ED25519_CONST } from '../../../consts';\nimport { toBuffer } from '../../../utils';\nexport class SLIP10Ed25519Point extends Point {\n    getName() {\n        return 'SLIP10-Ed25519';\n    }\n    static fromBytes(point) {\n        if (point.length !== SLIP10_ED25519_CONST.PUBLIC_KEY_BYTE_LENGTH) {\n            throw new Error('Invalid point bytes length');\n        }\n        try {\n            const pt = ed25519.Point.fromHex(point);\n            return new this(pt);\n        }\n        catch {\n            throw new Error('Invalid point bytes');\n        }\n    }\n    static fromCoordinates(x, y) {\n        try {\n            const pt = ed25519.Point.fromAffine({ x, y });\n            return new this(pt);\n        }\n        catch {\n            throw new Error('Invalid coordinates for ed25519');\n        }\n    }\n    getUnderlyingObject() {\n        return this.point;\n    }\n    getX() {\n        return this.point.x;\n    }\n    getY() {\n        return this.point.y;\n    }\n    getRawEncoded() {\n        return this.point.toRawBytes();\n    }\n    getRawDecoded() {\n        const xBytes = this.point.x.toString(16).padStart(64, '0');\n        const yBytes = this.point.y.toString(16).padStart(64, '0');\n        return Uint8Array.from(toBuffer(xBytes + yBytes, 'hex'));\n    }\n    add(point) {\n        const other = point.getUnderlyingObject();\n        const sum = this.point.add(other);\n        return new SLIP10Ed25519Point(sum);\n    }\n    multiply(scalar) {\n        const prod = this.point.multiply(scalar);\n        return new SLIP10Ed25519Point(prod);\n    }\n}\n//# sourceMappingURL=point.js.map","// SPDX-License-Identifier: MIT\nimport { ed25519 } from '@noble/curves/ed25519';\nimport { PublicKey } from '../../public-key';\nimport { SLIP10_ED25519_CONST } from '../../../consts';\nimport { SLIP10Ed25519Point } from './point';\nimport { concatBytes } from '../../../utils';\nexport class SLIP10Ed25519PublicKey extends PublicKey {\n    getName() {\n        return 'SLIP10-Ed25519';\n    }\n    static fromBytes(publicKey) {\n        let data = publicKey;\n        const prefix = SLIP10_ED25519_CONST.PUBLIC_KEY_PREFIX;\n        if (data.length === prefix.length + SLIP10_ED25519_CONST.PUBLIC_KEY_BYTE_LENGTH &&\n            data[0] === prefix[0]) {\n            data = data.slice(prefix.length);\n        }\n        if (data.length !== SLIP10_ED25519_CONST.PUBLIC_KEY_BYTE_LENGTH) {\n            throw new Error('Invalid key bytes length');\n        }\n        try {\n            const pt = ed25519.Point.fromHex(data);\n            return new this(pt);\n        }\n        catch {\n            throw new Error('Invalid key bytes');\n        }\n    }\n    static fromPoint(point) {\n        const raw = point.getRawEncoded();\n        return this.fromBytes(raw);\n    }\n    static getCompressedLength() {\n        return SLIP10_ED25519_CONST.PUBLIC_KEY_BYTE_LENGTH + SLIP10_ED25519_CONST.PUBLIC_KEY_PREFIX.length;\n    }\n    static getUncompressedLength() {\n        return this.getCompressedLength();\n    }\n    getUnderlyingObject() {\n        return this.publicKey;\n    }\n    getRawCompressed() {\n        return concatBytes(SLIP10_ED25519_CONST.PUBLIC_KEY_PREFIX, this.publicKey.toRawBytes());\n    }\n    getRawUncompressed() {\n        return this.getRawCompressed();\n    }\n    getPoint() {\n        return new SLIP10Ed25519Point(this.publicKey);\n    }\n}\n//# sourceMappingURL=public-key.js.map","// SPDX-License-Identifier: MIT\nimport { ed25519 } from '@noble/curves/ed25519';\nimport { PrivateKey } from '../../private-key';\nimport { SLIP10Ed25519PublicKey } from './public-key';\nimport { SLIP10_ED25519_CONST } from '../../../consts';\nexport class SLIP10Ed25519PrivateKey extends PrivateKey {\n    getName() {\n        return 'SLIP10-Ed25519';\n    }\n    static fromBytes(privateKey) {\n        if (privateKey.length !== SLIP10_ED25519_CONST.PRIVATE_KEY_BYTE_LENGTH) {\n            throw new Error('Invalid private key bytes length');\n        }\n        try {\n            return new this(privateKey);\n        }\n        catch {\n            throw new Error('Invalid private key bytes');\n        }\n    }\n    static getLength() {\n        return SLIP10_ED25519_CONST.PRIVATE_KEY_BYTE_LENGTH;\n    }\n    getRaw() {\n        return this.privateKey;\n    }\n    getUnderlyingObject() {\n        return this.privateKey;\n    }\n    getPublicKey() {\n        const pub = ed25519.getPublicKey(this.getRaw());\n        return SLIP10Ed25519PublicKey.fromBytes(pub);\n    }\n}\n//# sourceMappingURL=private-key.js.map","// SPDX-License-Identifier: MIT\nimport { EllipticCurveCryptography } from '../../ecc';\nimport { SLIP10Ed25519Point as _SLIP10Ed25519Point } from './point';\nimport { SLIP10Ed25519PublicKey as _SLIP10Ed25519PublicKey } from './public-key';\nimport { SLIP10Ed25519PrivateKey as _SLIP10Ed25519PrivateKey } from './private-key';\nexport class SLIP10Ed25519ECC extends EllipticCurveCryptography {\n    static NAME = 'SLIP10-Ed25519';\n    static ORDER = BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989');\n    static GENERATOR = _SLIP10Ed25519Point.fromCoordinates(BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'), BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'));\n    static POINT = _SLIP10Ed25519Point;\n    static PUBLIC_KEY = _SLIP10Ed25519PublicKey;\n    static PRIVATE_KEY = _SLIP10Ed25519PrivateKey;\n}\nexport { _SLIP10Ed25519Point as SLIP10Ed25519Point, _SLIP10Ed25519PublicKey as SLIP10Ed25519PublicKey, _SLIP10Ed25519PrivateKey as SLIP10Ed25519PrivateKey };\n//# sourceMappingURL=index.js.map","// SPDX-License-Identifier: MIT\nimport { SLIP10Ed25519Point } from '../point';\nexport class SLIP10Ed25519Blake2bPoint extends SLIP10Ed25519Point {\n    getName() {\n        return 'SLIP10-Ed25519-Blake2b';\n    }\n}\n//# sourceMappingURL=point.js.map","// SPDX-License-Identifier: MIT\nimport { SLIP10Ed25519PublicKey } from '../public-key';\nimport { SLIP10Ed25519Blake2bPoint } from './point';\nexport class SLIP10Ed25519Blake2bPublicKey extends SLIP10Ed25519PublicKey {\n    getName() {\n        return 'SLIP10-Ed25519-Blake2b';\n    }\n    getPoint() {\n        return new SLIP10Ed25519Blake2bPoint(this.publicKey);\n    }\n}\n//# sourceMappingURL=public-key.js.map","const ERROR_MSG_INPUT = 'Input must be an string, Buffer or Uint8Array'\n\n// For convenience, let people hash a string, not just a Uint8Array\nfunction normalizeInput (input) {\n  let ret\n  if (input instanceof Uint8Array) {\n    ret = input\n  } else if (typeof input === 'string') {\n    const encoder = new TextEncoder()\n    ret = encoder.encode(input)\n  } else {\n    throw new Error(ERROR_MSG_INPUT)\n  }\n  return ret\n}\n\n// Converts a Uint8Array to a hexadecimal string\n// For example, toHex([255, 0, 255]) returns \"ff00ff\"\nfunction toHex (bytes) {\n  return Array.prototype.map\n    .call(bytes, function (n) {\n      return (n < 16 ? '0' : '') + n.toString(16)\n    })\n    .join('')\n}\n\n// Converts any value in [0...2^32-1] to an 8-character hex string\nfunction uint32ToHex (val) {\n  return (0x100000000 + val).toString(16).substring(1)\n}\n\n// For debugging: prints out hash state in the same format as the RFC\n// sample computation exactly, so that you can diff\nfunction debugPrint (label, arr, size) {\n  let msg = '\\n' + label + ' = '\n  for (let i = 0; i < arr.length; i += 2) {\n    if (size === 32) {\n      msg += uint32ToHex(arr[i]).toUpperCase()\n      msg += ' '\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n    } else if (size === 64) {\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n      msg += uint32ToHex(arr[i]).toUpperCase()\n    } else throw new Error('Invalid size ' + size)\n    if (i % 6 === 4) {\n      msg += '\\n' + new Array(label.length + 4).join(' ')\n    } else if (i < arr.length - 2) {\n      msg += ' '\n    }\n  }\n  console.log(msg)\n}\n\n// For performance testing: generates N bytes of input, hashes M times\n// Measures and prints MB/second hash performance each time\nfunction testSpeed (hashFn, N, M) {\n  let startMs = new Date().getTime()\n\n  const input = new Uint8Array(N)\n  for (let i = 0; i < N; i++) {\n    input[i] = i % 256\n  }\n  const genMs = new Date().getTime()\n  console.log('Generated random input in ' + (genMs - startMs) + 'ms')\n  startMs = genMs\n\n  for (let i = 0; i < M; i++) {\n    const hashHex = hashFn(input)\n    const hashMs = new Date().getTime()\n    const ms = hashMs - startMs\n    startMs = hashMs\n    console.log('Hashed in ' + ms + 'ms: ' + hashHex.substring(0, 20) + '...')\n    console.log(\n      Math.round((N / (1 << 20) / (ms / 1000)) * 100) / 100 + ' MB PER SECOND'\n    )\n  }\n}\n\nmodule.exports = {\n  normalizeInput: normalizeInput,\n  toHex: toHex,\n  debugPrint: debugPrint,\n  testSpeed: testSpeed\n}\n","// Blake2B in pure Javascript\n// Adapted from the reference implementation in RFC7693\n// Ported to Javascript by DC - https://github.com/dcposch\n\nconst util = require('./util')\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += v[b,b+1]\n// v should be a Uint32Array\nfunction ADD64AA (v, a, b) {\n  const o0 = v[a] + v[b]\n  let o1 = v[a + 1] + v[b + 1]\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += b\n// b0 is the low 32 bits of b, b1 represents the high 32 bits\nfunction ADD64AC (v, a, b0, b1) {\n  let o0 = v[a] + b0\n  if (b0 < 0) {\n    o0 += 0x100000000\n  }\n  let o1 = v[a + 1] + b1\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// Little-endian byte access\nfunction B2B_GET32 (arr, i) {\n  return arr[i] ^ (arr[i + 1] << 8) ^ (arr[i + 2] << 16) ^ (arr[i + 3] << 24)\n}\n\n// G Mixing function\n// The ROTRs are inlined for speed\nfunction B2B_G (a, b, c, d, ix, iy) {\n  const x0 = m[ix]\n  const x1 = m[ix + 1]\n  const y0 = m[iy]\n  const y1 = m[iy + 1]\n\n  ADD64AA(v, a, b) // v[a,a+1] += v[b,b+1] ... in JS we must store a uint64 as two uint32s\n  ADD64AC(v, a, x0, x1) // v[a, a+1] += x ... x0 is the low 32 bits of x, x1 is the high 32 bits\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated to the right by 32 bits\n  let xor0 = v[d] ^ v[a]\n  let xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = xor1\n  v[d + 1] = xor0\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 24 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor0 >>> 24) ^ (xor1 << 8)\n  v[b + 1] = (xor1 >>> 24) ^ (xor0 << 8)\n\n  ADD64AA(v, a, b)\n  ADD64AC(v, a, y0, y1)\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated right by 16 bits\n  xor0 = v[d] ^ v[a]\n  xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = (xor0 >>> 16) ^ (xor1 << 16)\n  v[d + 1] = (xor1 >>> 16) ^ (xor0 << 16)\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 63 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor1 >>> 31) ^ (xor0 << 1)\n  v[b + 1] = (xor0 >>> 31) ^ (xor1 << 1)\n}\n\n// Initialization Vector\nconst BLAKE2B_IV32 = new Uint32Array([\n  0xf3bcc908, 0x6a09e667, 0x84caa73b, 0xbb67ae85, 0xfe94f82b, 0x3c6ef372,\n  0x5f1d36f1, 0xa54ff53a, 0xade682d1, 0x510e527f, 0x2b3e6c1f, 0x9b05688c,\n  0xfb41bd6b, 0x1f83d9ab, 0x137e2179, 0x5be0cd19\n])\n\nconst SIGMA8 = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13,\n  6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1,\n  9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4,\n  10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5,\n  15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7,\n  14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2,\n  13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, 0,\n  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6,\n  1, 12, 0, 2, 11, 7, 5, 3\n]\n\n// These are offsets into a uint64 buffer.\n// Multiply them all by 2 to make them offsets into a uint32 buffer,\n// because this is Javascript and we don't have uint64s\nconst SIGMA82 = new Uint8Array(\n  SIGMA8.map(function (x) {\n    return x * 2\n  })\n)\n\n// Compression function. 'last' flag indicates last block.\n// Note we're representing 16 uint64s as 32 uint32s\nconst v = new Uint32Array(32)\nconst m = new Uint32Array(32)\nfunction blake2bCompress (ctx, last) {\n  let i = 0\n\n  // init work variables\n  for (i = 0; i < 16; i++) {\n    v[i] = ctx.h[i]\n    v[i + 16] = BLAKE2B_IV32[i]\n  }\n\n  // low 64 bits of offset\n  v[24] = v[24] ^ ctx.t\n  v[25] = v[25] ^ (ctx.t / 0x100000000)\n  // high 64 bits not supported, offset may not be higher than 2**53-1\n\n  // last block flag set ?\n  if (last) {\n    v[28] = ~v[28]\n    v[29] = ~v[29]\n  }\n\n  // get little-endian words\n  for (i = 0; i < 32; i++) {\n    m[i] = B2B_GET32(ctx.b, 4 * i)\n  }\n\n  // twelve rounds of mixing\n  // uncomment the DebugPrint calls to log the computation\n  // and match the RFC sample documentation\n  // util.debugPrint('          m[16]', m, 64)\n  for (i = 0; i < 12; i++) {\n    // util.debugPrint('   (i=' + (i < 10 ? ' ' : '') + i + ') v[16]', v, 64)\n    B2B_G(0, 8, 16, 24, SIGMA82[i * 16 + 0], SIGMA82[i * 16 + 1])\n    B2B_G(2, 10, 18, 26, SIGMA82[i * 16 + 2], SIGMA82[i * 16 + 3])\n    B2B_G(4, 12, 20, 28, SIGMA82[i * 16 + 4], SIGMA82[i * 16 + 5])\n    B2B_G(6, 14, 22, 30, SIGMA82[i * 16 + 6], SIGMA82[i * 16 + 7])\n    B2B_G(0, 10, 20, 30, SIGMA82[i * 16 + 8], SIGMA82[i * 16 + 9])\n    B2B_G(2, 12, 22, 24, SIGMA82[i * 16 + 10], SIGMA82[i * 16 + 11])\n    B2B_G(4, 14, 16, 26, SIGMA82[i * 16 + 12], SIGMA82[i * 16 + 13])\n    B2B_G(6, 8, 18, 28, SIGMA82[i * 16 + 14], SIGMA82[i * 16 + 15])\n  }\n  // util.debugPrint('   (i=12) v[16]', v, 64)\n\n  for (i = 0; i < 16; i++) {\n    ctx.h[i] = ctx.h[i] ^ v[i] ^ v[i + 16]\n  }\n  // util.debugPrint('h[8]', ctx.h, 64)\n}\n\n// reusable parameterBlock\nconst parameterBlock = new Uint8Array([\n  0,\n  0,\n  0,\n  0, //  0: outlen, keylen, fanout, depth\n  0,\n  0,\n  0,\n  0, //  4: leaf length, sequential mode\n  0,\n  0,\n  0,\n  0, //  8: node offset\n  0,\n  0,\n  0,\n  0, // 12: node offset\n  0,\n  0,\n  0,\n  0, // 16: node depth, inner length, rfu\n  0,\n  0,\n  0,\n  0, // 20: rfu\n  0,\n  0,\n  0,\n  0, // 24: rfu\n  0,\n  0,\n  0,\n  0, // 28: rfu\n  0,\n  0,\n  0,\n  0, // 32: salt\n  0,\n  0,\n  0,\n  0, // 36: salt\n  0,\n  0,\n  0,\n  0, // 40: salt\n  0,\n  0,\n  0,\n  0, // 44: salt\n  0,\n  0,\n  0,\n  0, // 48: personal\n  0,\n  0,\n  0,\n  0, // 52: personal\n  0,\n  0,\n  0,\n  0, // 56: personal\n  0,\n  0,\n  0,\n  0 // 60: personal\n])\n\n// Creates a BLAKE2b hashing context\n// Requires an output length between 1 and 64 bytes\n// Takes an optional Uint8Array key\n// Takes an optinal Uint8Array salt\n// Takes an optinal Uint8Array personal\nfunction blake2bInit (outlen, key, salt, personal) {\n  if (outlen === 0 || outlen > 64) {\n    throw new Error('Illegal output length, expected 0 < length <= 64')\n  }\n  if (key && key.length > 64) {\n    throw new Error('Illegal key, expected Uint8Array with 0 < length <= 64')\n  }\n  if (salt && salt.length !== 16) {\n    throw new Error('Illegal salt, expected Uint8Array with length is 16')\n  }\n  if (personal && personal.length !== 16) {\n    throw new Error('Illegal personal, expected Uint8Array with length is 16')\n  }\n\n  // state, 'param block'\n  const ctx = {\n    b: new Uint8Array(128),\n    h: new Uint32Array(16),\n    t: 0, // input count\n    c: 0, // pointer within buffer\n    outlen: outlen // output length in bytes\n  }\n\n  // initialize parameterBlock before usage\n  parameterBlock.fill(0)\n  parameterBlock[0] = outlen\n  if (key) parameterBlock[1] = key.length\n  parameterBlock[2] = 1 // fanout\n  parameterBlock[3] = 1 // depth\n  if (salt) parameterBlock.set(salt, 32)\n  if (personal) parameterBlock.set(personal, 48)\n\n  // initialize hash state\n  for (let i = 0; i < 16; i++) {\n    ctx.h[i] = BLAKE2B_IV32[i] ^ B2B_GET32(parameterBlock, i * 4)\n  }\n\n  // key the hash, if applicable\n  if (key) {\n    blake2bUpdate(ctx, key)\n    // at the end\n    ctx.c = 128\n  }\n\n  return ctx\n}\n\n// Updates a BLAKE2b streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2bUpdate (ctx, input) {\n  for (let i = 0; i < input.length; i++) {\n    if (ctx.c === 128) {\n      // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2bCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2b streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2bFinal (ctx) {\n  ctx.t += ctx.c // mark last block offset\n\n  while (ctx.c < 128) {\n    // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2bCompress(ctx, true) // final block flag = 1\n\n  // little endian convert and store\n  const out = new Uint8Array(ctx.outlen)\n  for (let i = 0; i < ctx.outlen; i++) {\n    out[i] = ctx.h[i >> 2] >> (8 * (i & 3))\n  }\n  return out\n}\n\n// Computes the BLAKE2B hash of a string or byte array, and returns a Uint8Array\n//\n// Returns a n-byte Uint8Array\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\n// - salt - optional salt bytes, string, Buffer or Uint8Array\n// - personal - optional personal bytes, string, Buffer or Uint8Array\nfunction blake2b (input, key, outlen, salt, personal) {\n  // preprocess inputs\n  outlen = outlen || 64\n  input = util.normalizeInput(input)\n  if (salt) {\n    salt = util.normalizeInput(salt)\n  }\n  if (personal) {\n    personal = util.normalizeInput(personal)\n  }\n\n  // do the math\n  const ctx = blake2bInit(outlen, key, salt, personal)\n  blake2bUpdate(ctx, input)\n  return blake2bFinal(ctx)\n}\n\n// Computes the BLAKE2B hash of a string or byte array\n//\n// Returns an n-byte hash in hex, all lowercase\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\n// - salt - optional salt bytes, string, Buffer or Uint8Array\n// - personal - optional personal bytes, string, Buffer or Uint8Array\nfunction blake2bHex (input, key, outlen, salt, personal) {\n  const output = blake2b(input, key, outlen, salt, personal)\n  return util.toHex(output)\n}\n\nmodule.exports = {\n  blake2b: blake2b,\n  blake2bHex: blake2bHex,\n  blake2bInit: blake2bInit,\n  blake2bUpdate: blake2bUpdate,\n  blake2bFinal: blake2bFinal\n}\n","const blake2b = require('blakejs/blake2b');\n\n(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nfunction crypto_hash(out, m, n) {\n  var input = new Uint8Array(n), i;\n  for (i = 0; i < n; ++i) {\n    input[i] = m[i];\n  }\n  var hash = blake2b.blake2b(input);\n  for (i = 0; i < crypto_hash_BYTES; ++i) {\n    out[i] = hash[i];\n  }\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = (x[j] + 128) >> 8;\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i, mlen;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  mlen = -1;\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  mlen = n;\n  return mlen;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n","// SPDX-License-Identifier: MIT\nimport * as nacl from 'tweetnacl-blake2b';\nimport { PrivateKey } from '../../../private-key';\nimport { SLIP10Ed25519Blake2bPublicKey } from './public-key';\nimport { SLIP10_ED25519_CONST } from '../../../../consts';\nimport { getBytes } from '../../../../utils';\nexport class SLIP10Ed25519Blake2bPrivateKey extends PrivateKey {\n    getName() {\n        return 'SLIP10-Ed25519-Blake2b';\n    }\n    static fromBytes(privateKey) {\n        if (privateKey.length !== SLIP10_ED25519_CONST.PRIVATE_KEY_BYTE_LENGTH) {\n            throw new Error('Invalid private key bytes length');\n        }\n        try {\n            const kp = nacl.sign.keyPair.fromSeed(getBytes(privateKey));\n            return new this(kp);\n        }\n        catch {\n            throw new Error('Invalid private key bytes');\n        }\n    }\n    static getLength() {\n        return SLIP10_ED25519_CONST.PRIVATE_KEY_BYTE_LENGTH;\n    }\n    getRaw() {\n        const secret = this.privateKey.secretKey;\n        return new Uint8Array(secret.subarray(0, nacl.sign.seedLength));\n    }\n    getUnderlyingObject() {\n        return this.privateKey;\n    }\n    getPublicKey() {\n        const publicKey = this.privateKey.publicKey;\n        return SLIP10Ed25519Blake2bPublicKey.fromBytes(publicKey);\n    }\n}\n//# sourceMappingURL=private-key.js.map","// SPDX-License-Identifier: MIT\nimport { EllipticCurveCryptography } from '../../../ecc';\nimport { SLIP10Ed25519ECC } from '../index';\nimport { SLIP10Ed25519Blake2bPoint as _SLIP10Ed25519Blake2bPoint } from './point';\nimport { SLIP10Ed25519Blake2bPublicKey as _SLIP10Ed25519Blake2bPublicKey } from './public-key';\nimport { SLIP10Ed25519Blake2bPrivateKey as _SLIP10Ed25519Blake2bPrivateKey } from './private-key';\nexport class SLIP10Ed25519Blake2bECC extends EllipticCurveCryptography {\n    static NAME = 'SLIP10-Ed25519-Blake2b';\n    static ORDER = SLIP10Ed25519ECC.ORDER;\n    static GENERATOR = SLIP10Ed25519ECC.GENERATOR;\n    static POINT = _SLIP10Ed25519Blake2bPoint;\n    static PUBLIC_KEY = _SLIP10Ed25519Blake2bPublicKey;\n    static PRIVATE_KEY = _SLIP10Ed25519Blake2bPrivateKey;\n}\nexport { _SLIP10Ed25519Blake2bPoint as SLIP10Ed25519Blake2bPoint, _SLIP10Ed25519Blake2bPublicKey as SLIP10Ed25519Blake2bPublicKey, _SLIP10Ed25519Blake2bPrivateKey as SLIP10Ed25519Blake2bPrivateKey };\n//# sourceMappingURL=index.js.map","// SPDX-License-Identifier: MIT\nimport { SLIP10Ed25519Point } from '../point';\nexport class SLIP10Ed25519MoneroPoint extends SLIP10Ed25519Point {\n    getName() {\n        return 'SLIP10-Ed25519-Monero';\n    }\n}\n//# sourceMappingURL=point.js.map","// SPDX-License-Identifier: MIT\nimport { SLIP10Ed25519MoneroPoint } from './point';\nimport { SLIP10Ed25519PublicKey } from '../../ed25519';\nimport { SLIP10_ED25519_CONST } from '../../../../consts';\nexport class SLIP10Ed25519MoneroPublicKey extends SLIP10Ed25519PublicKey {\n    getName() {\n        return 'SLIP10-Ed25519-Monero';\n    }\n    getRawCompressed() {\n        return this.publicKey.toRawBytes();\n    }\n    static getCompressedLength() {\n        return SLIP10_ED25519_CONST.PUBLIC_KEY_BYTE_LENGTH;\n    }\n    getPoint() {\n        return new SLIP10Ed25519MoneroPoint(this.publicKey);\n    }\n}\n//# sourceMappingURL=public-key.js.map","// SPDX-License-Identifier: MIT\nimport { ed25519 } from '@noble/curves/ed25519';\nimport { bytesToNumberLE } from '@noble/curves/abstract/utils';\nimport { bytesToInteger, integerToBytes } from '../utils';\nconst COORD_LEN = 32;\nconst CURVE = ed25519.CURVE;\nconst L = CURVE.n; // group order\nexport function intDecode(le) {\n    return bytesToInteger(le, true); // little-endian\n}\nexport function intEncode(x) {\n    return integerToBytes(x, COORD_LEN, 'little');\n}\nfunction scalar32(input) {\n    if (input instanceof Uint8Array) {\n        if (input.length !== COORD_LEN)\n            throw new Error('scalar must be 32 bytes');\n        return input;\n    }\n    return intEncode(BigInt(input));\n}\nfunction decodePoint(p) {\n    if (p.length !== COORD_LEN)\n        throw new Error('point must be 32 bytes');\n    return ed25519.Point.fromHex(p);\n}\nfunction encodePoint(P) {\n    return P.toRawBytes();\n}\nexport function pointAdd(p1, p2) {\n    const P1 = decodePoint(p1);\n    const P2 = decodePoint(p2);\n    return encodePoint(P1.add(P2));\n}\nexport function pointScalarMul(k, point) {\n    const scalar = bytesToNumberLE(scalar32(k));\n    const P = decodePoint(point);\n    return encodePoint(P.multiply(scalar));\n}\nexport function pointScalarMulBase(k) {\n    const scalar = bytesToNumberLE(scalar32(k)) % L; // <- reduce scalar\n    return encodePoint(ed25519.Point.BASE.multiply(scalar));\n}\nexport function scalarReduce(s) {\n    const scalar = bytesToNumberLE(s instanceof Uint8Array ? s : intEncode(BigInt(s)));\n    const r = scalar % L;\n    return intEncode(r);\n}\n//# sourceMappingURL=ed25519-utils.js.map","// SPDX-License-Identifier: MIT\nimport { pointScalarMulBase } from '../../../../libs/ed25519-utils';\nimport { SLIP10Ed25519MoneroPublicKey } from './public-key';\nimport { SLIP10Ed25519PrivateKey } from '../../ed25519';\nexport class SLIP10Ed25519MoneroPrivateKey extends SLIP10Ed25519PrivateKey {\n    getName() {\n        return 'SLIP10-Ed25519-Monero';\n    }\n    getPublicKey() {\n        return SLIP10Ed25519MoneroPublicKey.fromBytes(pointScalarMulBase(this.getRaw()));\n    }\n}\n//# sourceMappingURL=private-key.js.map","// SPDX-License-Identifier: MIT\nimport { EllipticCurveCryptography } from '../../../ecc';\nimport { SLIP10Ed25519ECC } from '../index';\nimport { SLIP10Ed25519MoneroPoint as _SLIP10Ed25519MoneroPoint } from './point';\nimport { SLIP10Ed25519MoneroPublicKey as _SLIP10Ed25519MoneroPublicKey } from './public-key';\nimport { SLIP10Ed25519MoneroPrivateKey as _SLIP10Ed25519MoneroPrivateKey } from './private-key';\nexport class SLIP10Ed25519MoneroECC extends EllipticCurveCryptography {\n    static NAME = 'SLIP10-Ed25519-Monero';\n    static ORDER = SLIP10Ed25519ECC.ORDER;\n    static GENERATOR = SLIP10Ed25519ECC.GENERATOR;\n    static POINT = _SLIP10Ed25519MoneroPoint;\n    static PUBLIC_KEY = _SLIP10Ed25519MoneroPublicKey;\n    static PRIVATE_KEY = _SLIP10Ed25519MoneroPrivateKey;\n}\nexport { _SLIP10Ed25519MoneroPoint as SLIP10Ed25519MoneroPoint, _SLIP10Ed25519MoneroPublicKey as SLIP10Ed25519MoneroPublicKey, _SLIP10Ed25519MoneroPrivateKey as SLIP10Ed25519MoneroPrivateKey };\n//# sourceMappingURL=index.js.map","/**\n * Short Weierstrass curve methods. The formula is: y² = x³ + ax + b.\n *\n * ### Design rationale for types\n *\n * * Interaction between classes from different curves should fail:\n *   `k256.Point.BASE.add(p256.Point.BASE)`\n * * For this purpose we want to use `instanceof` operator, which is fast and works during runtime\n * * Different calls of `curve()` would return different classes -\n *   `curve(params) !== curve(params)`: if somebody decided to monkey-patch their curve,\n *   it won't affect others\n *\n * TypeScript can't infer types for classes created inside a function. Classes is one instance\n * of nominative types in TypeScript and interfaces only check for shape, so it's hard to create\n * unique type for every function call.\n *\n * We can use generic types via some param, like curve opts, but that would:\n *     1. Enable interaction between `curve(params)` and `curve(params)` (curves of same params)\n *     which is hard to debug.\n *     2. Params can be generic and we can't enforce them to be constant value:\n *     if somebody creates curve from non-constant params,\n *     it would be allowed to interact with other curves with non-constant params\n *\n * @todo https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#unique-symbol\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac.js';\nimport { _validateObject, abool, abytes, aInRange, bitMask, bytesToHex, bytesToNumberBE, concatBytes, createHmacDrbg, ensureBytes, hexToBytes, inRange, isBytes, memoized, numberToHexUnpadded, randomBytes, } from \"../utils.js\";\nimport { _createCurveFields, mulEndoUnsafe, negateCt, normalizeZ, pippenger, wNAF, } from \"./curve.js\";\nimport { Field, FpInvertBatch, getMinHashLength, mapHashToField, validateField, } from \"./modular.js\";\nfunction validateSigVerOpts(opts) {\n    if (opts.lowS !== undefined)\n        abool('lowS', opts.lowS);\n    if (opts.prehash !== undefined)\n        abool('prehash', opts.prehash);\n}\nexport class DERErr extends Error {\n    constructor(m = '') {\n        super(m);\n    }\n}\n/**\n * ASN.1 DER encoding utilities. ASN is very complex & fragile. Format:\n *\n *     [0x30 (SEQUENCE), bytelength, 0x02 (INTEGER), intLength, R, 0x02 (INTEGER), intLength, S]\n *\n * Docs: https://letsencrypt.org/docs/a-warm-welcome-to-asn1-and-der/, https://luca.ntop.org/Teaching/Appunti/asn1.html\n */\nexport const DER = {\n    // asn.1 DER encoding utils\n    Err: DERErr,\n    // Basic building block is TLV (Tag-Length-Value)\n    _tlv: {\n        encode: (tag, data) => {\n            const { Err: E } = DER;\n            if (tag < 0 || tag > 256)\n                throw new E('tlv.encode: wrong tag');\n            if (data.length & 1)\n                throw new E('tlv.encode: unpadded data');\n            const dataLen = data.length / 2;\n            const len = numberToHexUnpadded(dataLen);\n            if ((len.length / 2) & 128)\n                throw new E('tlv.encode: long form length too big');\n            // length of length with long form flag\n            const lenLen = dataLen > 127 ? numberToHexUnpadded((len.length / 2) | 128) : '';\n            const t = numberToHexUnpadded(tag);\n            return t + lenLen + len + data;\n        },\n        // v - value, l - left bytes (unparsed)\n        decode(tag, data) {\n            const { Err: E } = DER;\n            let pos = 0;\n            if (tag < 0 || tag > 256)\n                throw new E('tlv.encode: wrong tag');\n            if (data.length < 2 || data[pos++] !== tag)\n                throw new E('tlv.decode: wrong tlv');\n            const first = data[pos++];\n            const isLong = !!(first & 128); // First bit of first length byte is flag for short/long form\n            let length = 0;\n            if (!isLong)\n                length = first;\n            else {\n                // Long form: [longFlag(1bit), lengthLength(7bit), length (BE)]\n                const lenLen = first & 127;\n                if (!lenLen)\n                    throw new E('tlv.decode(long): indefinite length not supported');\n                if (lenLen > 4)\n                    throw new E('tlv.decode(long): byte length is too big'); // this will overflow u32 in js\n                const lengthBytes = data.subarray(pos, pos + lenLen);\n                if (lengthBytes.length !== lenLen)\n                    throw new E('tlv.decode: length bytes not complete');\n                if (lengthBytes[0] === 0)\n                    throw new E('tlv.decode(long): zero leftmost byte');\n                for (const b of lengthBytes)\n                    length = (length << 8) | b;\n                pos += lenLen;\n                if (length < 128)\n                    throw new E('tlv.decode(long): not minimal encoding');\n            }\n            const v = data.subarray(pos, pos + length);\n            if (v.length !== length)\n                throw new E('tlv.decode: wrong value length');\n            return { v, l: data.subarray(pos + length) };\n        },\n    },\n    // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n    // since we always use positive integers here. It must always be empty:\n    // - add zero byte if exists\n    // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n    _int: {\n        encode(num) {\n            const { Err: E } = DER;\n            if (num < _0n)\n                throw new E('integer: negative integers are not allowed');\n            let hex = numberToHexUnpadded(num);\n            // Pad with zero byte if negative flag is present\n            if (Number.parseInt(hex[0], 16) & 0b1000)\n                hex = '00' + hex;\n            if (hex.length & 1)\n                throw new E('unexpected DER parsing assertion: unpadded hex');\n            return hex;\n        },\n        decode(data) {\n            const { Err: E } = DER;\n            if (data[0] & 128)\n                throw new E('invalid signature integer: negative');\n            if (data[0] === 0x00 && !(data[1] & 128))\n                throw new E('invalid signature integer: unnecessary leading zero');\n            return bytesToNumberBE(data);\n        },\n    },\n    toSig(hex) {\n        // parse DER signature\n        const { Err: E, _int: int, _tlv: tlv } = DER;\n        const data = ensureBytes('signature', hex);\n        const { v: seqBytes, l: seqLeftBytes } = tlv.decode(0x30, data);\n        if (seqLeftBytes.length)\n            throw new E('invalid signature: left bytes after parsing');\n        const { v: rBytes, l: rLeftBytes } = tlv.decode(0x02, seqBytes);\n        const { v: sBytes, l: sLeftBytes } = tlv.decode(0x02, rLeftBytes);\n        if (sLeftBytes.length)\n            throw new E('invalid signature: left bytes after parsing');\n        return { r: int.decode(rBytes), s: int.decode(sBytes) };\n    },\n    hexFromSig(sig) {\n        const { _tlv: tlv, _int: int } = DER;\n        const rs = tlv.encode(0x02, int.encode(sig.r));\n        const ss = tlv.encode(0x02, int.encode(sig.s));\n        const seq = rs + ss;\n        return tlv.encode(0x30, seq);\n    },\n};\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\n// TODO: remove\nexport function _legacyHelperEquat(Fp, a, b) {\n    /**\n     * y² = x³ + ax + b: Short weierstrass curve formula. Takes x, returns y².\n     * @returns y²\n     */\n    function weierstrassEquation(x) {\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x² * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x³ + a * x + b\n    }\n    return weierstrassEquation;\n}\nexport function _legacyHelperNormPriv(Fn, allowedPrivateKeyLengths, wrapPrivateKey) {\n    const { BYTES: expected } = Fn;\n    // Validates if priv key is valid and converts it to bigint.\n    function normPrivateKeyToScalar(key) {\n        let num;\n        if (typeof key === 'bigint') {\n            num = key;\n        }\n        else {\n            let bytes = ensureBytes('private key', key);\n            if (allowedPrivateKeyLengths) {\n                if (!allowedPrivateKeyLengths.includes(bytes.length * 2))\n                    throw new Error('invalid private key');\n                const padded = new Uint8Array(expected);\n                padded.set(bytes, padded.length - bytes.length);\n                bytes = padded;\n            }\n            try {\n                num = Fn.fromBytes(bytes);\n            }\n            catch (error) {\n                throw new Error(`invalid private key: expected ui8a of size ${expected}, got ${typeof key}`);\n            }\n        }\n        if (wrapPrivateKey)\n            num = Fn.create(num); // disabled by default, enabled for BLS\n        if (!Fn.isValidNot0(num))\n            throw new Error('invalid private key: out of range [1..N-1]');\n        return num;\n    }\n    return normPrivateKeyToScalar;\n}\nexport function weierstrassN(CURVE, curveOpts = {}) {\n    const { Fp, Fn } = _createCurveFields('weierstrass', CURVE, curveOpts);\n    const { h: cofactor, n: CURVE_ORDER } = CURVE;\n    _validateObject(curveOpts, {}, {\n        allowInfinityPoint: 'boolean',\n        clearCofactor: 'function',\n        isTorsionFree: 'function',\n        fromBytes: 'function',\n        toBytes: 'function',\n        endo: 'object',\n        wrapPrivateKey: 'boolean',\n    });\n    const { endo } = curveOpts;\n    if (endo) {\n        // validateObject(endo, { beta: 'bigint', splitScalar: 'function' });\n        if (!Fp.is0(CURVE.a) ||\n            typeof endo.beta !== 'bigint' ||\n            typeof endo.splitScalar !== 'function') {\n            throw new Error('invalid endo: expected \"beta\": bigint and \"splitScalar\": function');\n        }\n    }\n    function assertCompressionIsSupported() {\n        if (!Fp.isOdd)\n            throw new Error('compression is not supported: Field does not have .isOdd()');\n    }\n    // Implements IEEE P1363 point encoding\n    function pointToBytes(_c, point, isCompressed) {\n        const { x, y } = point.toAffine();\n        const bx = Fp.toBytes(x);\n        abool('isCompressed', isCompressed);\n        if (isCompressed) {\n            assertCompressionIsSupported();\n            const hasEvenY = !Fp.isOdd(y);\n            return concatBytes(pprefix(hasEvenY), bx);\n        }\n        else {\n            return concatBytes(Uint8Array.of(0x04), bx, Fp.toBytes(y));\n        }\n    }\n    function pointFromBytes(bytes) {\n        abytes(bytes);\n        const L = Fp.BYTES;\n        const LC = L + 1; // length compressed, e.g. 33 for 32-byte field\n        const LU = 2 * L + 1; // length uncompressed, e.g. 65 for 32-byte field\n        const length = bytes.length;\n        const head = bytes[0];\n        const tail = bytes.subarray(1);\n        // No actual validation is done here: use .assertValidity()\n        if (length === LC && (head === 0x02 || head === 0x03)) {\n            const x = Fp.fromBytes(tail);\n            if (!Fp.isValid(x))\n                throw new Error('bad point: is not on curve, wrong x');\n            const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n            let y;\n            try {\n                y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n            }\n            catch (sqrtError) {\n                const err = sqrtError instanceof Error ? ': ' + sqrtError.message : '';\n                throw new Error('bad point: is not on curve, sqrt error' + err);\n            }\n            assertCompressionIsSupported();\n            const isYOdd = Fp.isOdd(y); // (y & _1n) === _1n;\n            const isHeadOdd = (head & 1) === 1; // ECDSA-specific\n            if (isHeadOdd !== isYOdd)\n                y = Fp.neg(y);\n            return { x, y };\n        }\n        else if (length === LU && head === 0x04) {\n            // TODO: more checks\n            const x = Fp.fromBytes(tail.subarray(L * 0, L * 1));\n            const y = Fp.fromBytes(tail.subarray(L * 1, L * 2));\n            if (!isValidXY(x, y))\n                throw new Error('bad point: is not on curve');\n            return { x, y };\n        }\n        else {\n            throw new Error(`bad point: got length ${length}, expected compressed=${LC} or uncompressed=${LU}`);\n        }\n    }\n    const toBytes = curveOpts.toBytes || pointToBytes;\n    const fromBytes = curveOpts.fromBytes || pointFromBytes;\n    const weierstrassEquation = _legacyHelperEquat(Fp, CURVE.a, CURVE.b);\n    // TODO: move top-level\n    /** Checks whether equation holds for given x, y: y² == x³ + ax + b */\n    function isValidXY(x, y) {\n        const left = Fp.sqr(y); // y²\n        const right = weierstrassEquation(x); // x³ + ax + b\n        return Fp.eql(left, right);\n    }\n    // Validate whether the passed curve params are valid.\n    // Test 1: equation y² = x³ + ax + b should work for generator point.\n    if (!isValidXY(CURVE.Gx, CURVE.Gy))\n        throw new Error('bad curve params: generator point');\n    // Test 2: discriminant Δ part should be non-zero: 4a³ + 27b² != 0.\n    // Guarantees curve is genus-1, smooth (non-singular).\n    const _4a3 = Fp.mul(Fp.pow(CURVE.a, _3n), _4n);\n    const _27b2 = Fp.mul(Fp.sqr(CURVE.b), BigInt(27));\n    if (Fp.is0(Fp.add(_4a3, _27b2)))\n        throw new Error('bad curve params: a or b');\n    /** Asserts coordinate is valid: 0 <= n < Fp.ORDER. */\n    function acoord(title, n, banZero = false) {\n        if (!Fp.isValid(n) || (banZero && Fp.is0(n)))\n            throw new Error(`bad point coordinate ${title}`);\n        return n;\n    }\n    function aprjpoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ProjectivePoint expected');\n    }\n    // Memoized toAffine / validity check. They are heavy. Points are immutable.\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (X, Y, Z) ∋ (x=X/Z, y=Y/Z)\n    const toAffineMemo = memoized((p, iz) => {\n        const { px: x, py: y, pz: z } = p;\n        // Fast-path for normalized points\n        if (Fp.eql(z, Fp.ONE))\n            return { x, y };\n        const is0 = p.is0();\n        // If invZ was 0, we return zero point. However we still want to execute\n        // all operations, so we replace invZ with a random number, 1.\n        if (iz == null)\n            iz = is0 ? Fp.ONE : Fp.inv(z);\n        const ax = Fp.mul(x, iz);\n        const ay = Fp.mul(y, iz);\n        const zz = Fp.mul(z, iz);\n        if (is0)\n            return { x: Fp.ZERO, y: Fp.ZERO };\n        if (!Fp.eql(zz, Fp.ONE))\n            throw new Error('invZ was invalid');\n        return { x: ax, y: ay };\n    });\n    // NOTE: on exception this will crash 'cached' and no value will be set.\n    // Otherwise true will be return\n    const assertValidMemo = memoized((p) => {\n        if (p.is0()) {\n            // (0, 1, 0) aka ZERO is invalid in most contexts.\n            // In BLS, ZERO can be serialized, so we allow it.\n            // (0, 0, 0) is invalid representation of ZERO.\n            if (curveOpts.allowInfinityPoint && !Fp.is0(p.py))\n                return;\n            throw new Error('bad point: ZERO');\n        }\n        // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n        const { x, y } = p.toAffine();\n        if (!Fp.isValid(x) || !Fp.isValid(y))\n            throw new Error('bad point: x or y not field elements');\n        if (!isValidXY(x, y))\n            throw new Error('bad point: equation left != right');\n        if (!p.isTorsionFree())\n            throw new Error('bad point: not in prime-order subgroup');\n        return true;\n    });\n    function finishEndo(endoBeta, k1p, k2p, k1neg, k2neg) {\n        k2p = new Point(Fp.mul(k2p.px, endoBeta), k2p.py, k2p.pz);\n        k1p = negateCt(k1neg, k1p);\n        k2p = negateCt(k2neg, k2p);\n        return k1p.add(k2p);\n    }\n    /**\n     * Projective Point works in 3d / projective (homogeneous) coordinates:(X, Y, Z) ∋ (x=X/Z, y=Y/Z).\n     * Default Point works in 2d / affine coordinates: (x, y).\n     * We're doing calculations in projective, because its operations don't require costly inversion.\n     */\n    class Point {\n        /** Does NOT validate if the point is valid. Use `.assertValidity()`. */\n        constructor(px, py, pz) {\n            this.px = acoord('x', px);\n            this.py = acoord('y', py, true);\n            this.pz = acoord('z', pz);\n            Object.freeze(this);\n        }\n        /** Does NOT validate if the point is valid. Use `.assertValidity()`. */\n        static fromAffine(p) {\n            const { x, y } = p || {};\n            if (!p || !Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('invalid affine point');\n            if (p instanceof Point)\n                throw new Error('projective point not allowed');\n            // (0, 0) would've produced (0, 0, 1) - instead, we need (0, 1, 0)\n            if (Fp.is0(x) && Fp.is0(y))\n                return Point.ZERO;\n            return new Point(x, y, Fp.ONE);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        static normalizeZ(points) {\n            return normalizeZ(Point, 'pz', points);\n        }\n        static fromBytes(bytes) {\n            abytes(bytes);\n            return Point.fromHex(bytes);\n        }\n        /** Converts hash string or Uint8Array to Point. */\n        static fromHex(hex) {\n            const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n            P.assertValidity();\n            return P;\n        }\n        /** Multiplies generator point by privateKey. */\n        static fromPrivateKey(privateKey) {\n            const normPrivateKeyToScalar = _legacyHelperNormPriv(Fn, curveOpts.allowedPrivateKeyLengths, curveOpts.wrapPrivateKey);\n            return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n        }\n        /** Multiscalar Multiplication */\n        static msm(points, scalars) {\n            return pippenger(Point, Fn, points, scalars);\n        }\n        /**\n         *\n         * @param windowSize\n         * @param isLazy true will defer table computation until the first multiplication\n         * @returns\n         */\n        precompute(windowSize = 8, isLazy = true) {\n            wnaf.setWindowSize(this, windowSize);\n            if (!isLazy)\n                this.multiply(_3n); // random number\n            return this;\n        }\n        /** \"Private method\", don't use it directly */\n        _setWindowSize(windowSize) {\n            this.precompute(windowSize);\n        }\n        // TODO: return `this`\n        /** A point on curve is valid if it conforms to equation. */\n        assertValidity() {\n            assertValidMemo(this);\n        }\n        hasEvenY() {\n            const { y } = this.toAffine();\n            if (!Fp.isOdd)\n                throw new Error(\"Field doesn't support isOdd\");\n            return !Fp.isOdd(y);\n        }\n        /** Compare one point to another. */\n        equals(other) {\n            aprjpoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n            return U1 && U2;\n        }\n        /** Flips point to one corresponding to (x, -y) in Affine coordinates. */\n        negate() {\n            return new Point(this.px, Fp.neg(this.py), this.pz);\n        }\n        // Renes-Costello-Batina exception-free doubling formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 3\n        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n        double() {\n            const { a, b } = CURVE;\n            const b3 = Fp.mul(b, _3n);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            let t0 = Fp.mul(X1, X1); // step 1\n            let t1 = Fp.mul(Y1, Y1);\n            let t2 = Fp.mul(Z1, Z1);\n            let t3 = Fp.mul(X1, Y1);\n            t3 = Fp.add(t3, t3); // step 5\n            Z3 = Fp.mul(X1, Z1);\n            Z3 = Fp.add(Z3, Z3);\n            X3 = Fp.mul(a, Z3);\n            Y3 = Fp.mul(b3, t2);\n            Y3 = Fp.add(X3, Y3); // step 10\n            X3 = Fp.sub(t1, Y3);\n            Y3 = Fp.add(t1, Y3);\n            Y3 = Fp.mul(X3, Y3);\n            X3 = Fp.mul(t3, X3);\n            Z3 = Fp.mul(b3, Z3); // step 15\n            t2 = Fp.mul(a, t2);\n            t3 = Fp.sub(t0, t2);\n            t3 = Fp.mul(a, t3);\n            t3 = Fp.add(t3, Z3);\n            Z3 = Fp.add(t0, t0); // step 20\n            t0 = Fp.add(Z3, t0);\n            t0 = Fp.add(t0, t2);\n            t0 = Fp.mul(t0, t3);\n            Y3 = Fp.add(Y3, t0);\n            t2 = Fp.mul(Y1, Z1); // step 25\n            t2 = Fp.add(t2, t2);\n            t0 = Fp.mul(t2, t3);\n            X3 = Fp.sub(X3, t0);\n            Z3 = Fp.mul(t2, t1);\n            Z3 = Fp.add(Z3, Z3); // step 30\n            Z3 = Fp.add(Z3, Z3);\n            return new Point(X3, Y3, Z3);\n        }\n        // Renes-Costello-Batina exception-free addition formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 1\n        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n        add(other) {\n            aprjpoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            const a = CURVE.a;\n            const b3 = Fp.mul(CURVE.b, _3n);\n            let t0 = Fp.mul(X1, X2); // step 1\n            let t1 = Fp.mul(Y1, Y2);\n            let t2 = Fp.mul(Z1, Z2);\n            let t3 = Fp.add(X1, Y1);\n            let t4 = Fp.add(X2, Y2); // step 5\n            t3 = Fp.mul(t3, t4);\n            t4 = Fp.add(t0, t1);\n            t3 = Fp.sub(t3, t4);\n            t4 = Fp.add(X1, Z1);\n            let t5 = Fp.add(X2, Z2); // step 10\n            t4 = Fp.mul(t4, t5);\n            t5 = Fp.add(t0, t2);\n            t4 = Fp.sub(t4, t5);\n            t5 = Fp.add(Y1, Z1);\n            X3 = Fp.add(Y2, Z2); // step 15\n            t5 = Fp.mul(t5, X3);\n            X3 = Fp.add(t1, t2);\n            t5 = Fp.sub(t5, X3);\n            Z3 = Fp.mul(a, t4);\n            X3 = Fp.mul(b3, t2); // step 20\n            Z3 = Fp.add(X3, Z3);\n            X3 = Fp.sub(t1, Z3);\n            Z3 = Fp.add(t1, Z3);\n            Y3 = Fp.mul(X3, Z3);\n            t1 = Fp.add(t0, t0); // step 25\n            t1 = Fp.add(t1, t0);\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.mul(b3, t4);\n            t1 = Fp.add(t1, t2);\n            t2 = Fp.sub(t0, t2); // step 30\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.add(t4, t2);\n            t0 = Fp.mul(t1, t4);\n            Y3 = Fp.add(Y3, t0);\n            t0 = Fp.mul(t5, t4); // step 35\n            X3 = Fp.mul(t3, X3);\n            X3 = Fp.sub(X3, t0);\n            t0 = Fp.mul(t3, t1);\n            Z3 = Fp.mul(t5, Z3);\n            Z3 = Fp.add(Z3, t0); // step 40\n            return new Point(X3, Y3, Z3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        /**\n         * Constant time multiplication.\n         * Uses wNAF method. Windowed method may be 10% faster,\n         * but takes 2x longer to generate and consumes 2x memory.\n         * Uses precomputes when available.\n         * Uses endomorphism for Koblitz curves.\n         * @param scalar by which the point would be multiplied\n         * @returns New point\n         */\n        multiply(scalar) {\n            const { endo } = curveOpts;\n            if (!Fn.isValidNot0(scalar))\n                throw new Error('invalid scalar: out of range'); // 0 is invalid\n            let point, fake; // Fake point is used to const-time mult\n            const mul = (n) => wnaf.wNAFCached(this, n, Point.normalizeZ);\n            /** See docs for {@link EndomorphismOpts} */\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = endo.splitScalar(scalar);\n                const { p: k1p, f: k1f } = mul(k1);\n                const { p: k2p, f: k2f } = mul(k2);\n                fake = k1f.add(k2f);\n                point = finishEndo(endo.beta, k1p, k2p, k1neg, k2neg);\n            }\n            else {\n                const { p, f } = mul(scalar);\n                point = p;\n                fake = f;\n            }\n            // Normalize `z` for both points, but return only real one\n            return Point.normalizeZ([point, fake])[0];\n        }\n        /**\n         * Non-constant-time multiplication. Uses double-and-add algorithm.\n         * It's faster, but should only be used when you don't care about\n         * an exposed private key e.g. sig verification, which works over *public* keys.\n         */\n        multiplyUnsafe(sc) {\n            const { endo } = curveOpts;\n            const p = this;\n            if (!Fn.isValid(sc))\n                throw new Error('invalid scalar: out of range'); // 0 is valid\n            if (sc === _0n || p.is0())\n                return Point.ZERO;\n            if (sc === _1n)\n                return p; // fast-path\n            if (wnaf.hasPrecomputes(this))\n                return this.multiply(sc);\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = endo.splitScalar(sc);\n                // `wNAFCachedUnsafe` is 30% slower\n                const { p1, p2 } = mulEndoUnsafe(Point, p, k1, k2);\n                return finishEndo(endo.beta, p1, p2, k1neg, k2neg);\n            }\n            else {\n                return wnaf.wNAFCachedUnsafe(p, sc);\n            }\n        }\n        multiplyAndAddUnsafe(Q, a, b) {\n            const sum = this.multiplyUnsafe(a).add(Q.multiplyUnsafe(b));\n            return sum.is0() ? undefined : sum;\n        }\n        /**\n         * Converts Projective point to affine (x, y) coordinates.\n         * @param invertedZ Z^-1 (inverted zero) - optional, precomputation is useful for invertBatch\n         */\n        toAffine(invertedZ) {\n            return toAffineMemo(this, invertedZ);\n        }\n        /**\n         * Checks whether Point is free of torsion elements (is in prime subgroup).\n         * Always torsion-free for cofactor=1 curves.\n         */\n        isTorsionFree() {\n            const { isTorsionFree } = curveOpts;\n            if (cofactor === _1n)\n                return true;\n            if (isTorsionFree)\n                return isTorsionFree(Point, this);\n            return wnaf.wNAFCachedUnsafe(this, CURVE_ORDER).is0();\n        }\n        clearCofactor() {\n            const { clearCofactor } = curveOpts;\n            if (cofactor === _1n)\n                return this; // Fast-path\n            if (clearCofactor)\n                return clearCofactor(Point, this);\n            return this.multiplyUnsafe(cofactor);\n        }\n        toBytes(isCompressed = true) {\n            abool('isCompressed', isCompressed);\n            this.assertValidity();\n            return toBytes(Point, this, isCompressed);\n        }\n        /** @deprecated use `toBytes` */\n        toRawBytes(isCompressed = true) {\n            return this.toBytes(isCompressed);\n        }\n        toHex(isCompressed = true) {\n            return bytesToHex(this.toBytes(isCompressed));\n        }\n        toString() {\n            return `<Point ${this.is0() ? 'ZERO' : this.toHex()}>`;\n        }\n    }\n    // base / generator point\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    // zero / infinity / identity point\n    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO); // 0, 1, 0\n    // fields\n    Point.Fp = Fp;\n    Point.Fn = Fn;\n    const bits = Fn.BITS;\n    const wnaf = wNAF(Point, curveOpts.endo ? Math.ceil(bits / 2) : bits);\n    return Point;\n}\n// _legacyWeierstrass\n/** @deprecated use `weierstrassN` */\nexport function weierstrassPoints(c) {\n    const { CURVE, curveOpts } = _weierstrass_legacy_opts_to_new(c);\n    const Point = weierstrassN(CURVE, curveOpts);\n    return _weierstrass_new_output_to_legacy(c, Point);\n}\n// Points start with byte 0x02 when y is even; otherwise 0x03\nfunction pprefix(hasEvenY) {\n    return Uint8Array.of(hasEvenY ? 0x02 : 0x03);\n}\nexport function ecdsa(Point, ecdsaOpts, curveOpts = {}) {\n    _validateObject(ecdsaOpts, { hash: 'function' }, {\n        hmac: 'function',\n        lowS: 'boolean',\n        randomBytes: 'function',\n        bits2int: 'function',\n        bits2int_modN: 'function',\n    });\n    const randomBytes_ = ecdsaOpts.randomBytes || randomBytes;\n    const hmac_ = ecdsaOpts.hmac ||\n        ((key, ...msgs) => hmac(ecdsaOpts.hash, key, concatBytes(...msgs)));\n    const { Fp, Fn } = Point;\n    const { ORDER: CURVE_ORDER, BITS: fnBits } = Fn;\n    function isBiggerThanHalfOrder(number) {\n        const HALF = CURVE_ORDER >> _1n;\n        return number > HALF;\n    }\n    function normalizeS(s) {\n        return isBiggerThanHalfOrder(s) ? Fn.neg(s) : s;\n    }\n    function aValidRS(title, num) {\n        if (!Fn.isValidNot0(num))\n            throw new Error(`invalid signature ${title}: out of range 1..CURVE.n`);\n    }\n    /**\n     * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n     */\n    class Signature {\n        constructor(r, s, recovery) {\n            aValidRS('r', r); // r in [1..N-1]\n            aValidRS('s', s); // s in [1..N-1]\n            this.r = r;\n            this.s = s;\n            if (recovery != null)\n                this.recovery = recovery;\n            Object.freeze(this);\n        }\n        // pair (bytes of r, bytes of s)\n        static fromCompact(hex) {\n            const L = Fn.BYTES;\n            const b = ensureBytes('compactSignature', hex, L * 2);\n            return new Signature(Fn.fromBytes(b.subarray(0, L)), Fn.fromBytes(b.subarray(L, L * 2)));\n        }\n        // DER encoded ECDSA signature\n        // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n        static fromDER(hex) {\n            const { r, s } = DER.toSig(ensureBytes('DER', hex));\n            return new Signature(r, s);\n        }\n        /**\n         * @todo remove\n         * @deprecated\n         */\n        assertValidity() { }\n        addRecoveryBit(recovery) {\n            return new Signature(this.r, this.s, recovery);\n        }\n        // ProjPointType<bigint>\n        recoverPublicKey(msgHash) {\n            const FIELD_ORDER = Fp.ORDER;\n            const { r, s, recovery: rec } = this;\n            if (rec == null || ![0, 1, 2, 3].includes(rec))\n                throw new Error('recovery id invalid');\n            // ECDSA recovery is hard for cofactor > 1 curves.\n            // In sign, `r = q.x mod n`, and here we recover q.x from r.\n            // While recovering q.x >= n, we need to add r+n for cofactor=1 curves.\n            // However, for cofactor>1, r+n may not get q.x:\n            // r+n*i would need to be done instead where i is unknown.\n            // To easily get i, we either need to:\n            // a. increase amount of valid recid values (4, 5...); OR\n            // b. prohibit non-prime-order signatures (recid > 1).\n            const hasCofactor = CURVE_ORDER * _2n < FIELD_ORDER;\n            if (hasCofactor && rec > 1)\n                throw new Error('recovery id is ambiguous for h>1 curve');\n            const radj = rec === 2 || rec === 3 ? r + CURVE_ORDER : r;\n            if (!Fp.isValid(radj))\n                throw new Error('recovery id 2 or 3 invalid');\n            const x = Fp.toBytes(radj);\n            const R = Point.fromHex(concatBytes(pprefix((rec & 1) === 0), x));\n            const ir = Fn.inv(radj); // r^-1\n            const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n            const u1 = Fn.create(-h * ir); // -hr^-1\n            const u2 = Fn.create(s * ir); // sr^-1\n            // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1). unsafe is fine: there is no private data.\n            const Q = Point.BASE.multiplyUnsafe(u1).add(R.multiplyUnsafe(u2));\n            if (Q.is0())\n                throw new Error('point at infinify');\n            Q.assertValidity();\n            return Q;\n        }\n        // Signatures should be low-s, to prevent malleability.\n        hasHighS() {\n            return isBiggerThanHalfOrder(this.s);\n        }\n        normalizeS() {\n            return this.hasHighS() ? new Signature(this.r, Fn.neg(this.s), this.recovery) : this;\n        }\n        toBytes(format) {\n            if (format === 'compact')\n                return concatBytes(Fn.toBytes(this.r), Fn.toBytes(this.s));\n            if (format === 'der')\n                return hexToBytes(DER.hexFromSig(this));\n            throw new Error('invalid format');\n        }\n        // DER-encoded\n        toDERRawBytes() {\n            return this.toBytes('der');\n        }\n        toDERHex() {\n            return bytesToHex(this.toBytes('der'));\n        }\n        // padded bytes of r, then padded bytes of s\n        toCompactRawBytes() {\n            return this.toBytes('compact');\n        }\n        toCompactHex() {\n            return bytesToHex(this.toBytes('compact'));\n        }\n    }\n    const normPrivateKeyToScalar = _legacyHelperNormPriv(Fn, curveOpts.allowedPrivateKeyLengths, curveOpts.wrapPrivateKey);\n    const utils = {\n        isValidPrivateKey(privateKey) {\n            try {\n                normPrivateKeyToScalar(privateKey);\n                return true;\n            }\n            catch (error) {\n                return false;\n            }\n        },\n        normPrivateKeyToScalar: normPrivateKeyToScalar,\n        /**\n         * Produces cryptographically secure private key from random of size\n         * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n         */\n        randomPrivateKey: () => {\n            const n = CURVE_ORDER;\n            return mapHashToField(randomBytes_(getMinHashLength(n)), n);\n        },\n        precompute(windowSize = 8, point = Point.BASE) {\n            return point.precompute(windowSize, false);\n        },\n    };\n    /**\n     * Computes public key for a private key. Checks for validity of the private key.\n     * @param privateKey private key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns Public key, full when isCompressed=false; short when isCompressed=true\n     */\n    function getPublicKey(privateKey, isCompressed = true) {\n        return Point.fromPrivateKey(privateKey).toBytes(isCompressed);\n    }\n    /**\n     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n     */\n    function isProbPub(item) {\n        if (typeof item === 'bigint')\n            return false;\n        if (item instanceof Point)\n            return true;\n        const arr = ensureBytes('key', item);\n        const length = arr.length;\n        const L = Fp.BYTES;\n        const LC = L + 1; // e.g. 33 for 32\n        const LU = 2 * L + 1; // e.g. 65 for 32\n        if (curveOpts.allowedPrivateKeyLengths || Fn.BYTES === LC) {\n            return undefined;\n        }\n        else {\n            return length === LC || length === LU;\n        }\n    }\n    /**\n     * ECDH (Elliptic Curve Diffie Hellman).\n     * Computes shared public key from private key and public key.\n     * Checks: 1) private key validity 2) shared key is on-curve.\n     * Does NOT hash the result.\n     * @param privateA private key\n     * @param publicB different public key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns shared public key\n     */\n    function getSharedSecret(privateA, publicB, isCompressed = true) {\n        if (isProbPub(privateA) === true)\n            throw new Error('first arg must be private key');\n        if (isProbPub(publicB) === false)\n            throw new Error('second arg must be public key');\n        const b = Point.fromHex(publicB); // check for being on-curve\n        return b.multiply(normPrivateKeyToScalar(privateA)).toBytes(isCompressed);\n    }\n    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n    const bits2int = ecdsaOpts.bits2int ||\n        function (bytes) {\n            // Our custom check \"just in case\", for protection against DoS\n            if (bytes.length > 8192)\n                throw new Error('input is too large');\n            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n            // for some cases, since bytes.length * 8 is not actual bitLength.\n            const num = bytesToNumberBE(bytes); // check for == u8 done here\n            const delta = bytes.length * 8 - fnBits; // truncate to nBitLength leftmost bits\n            return delta > 0 ? num >> BigInt(delta) : num;\n        };\n    const bits2int_modN = ecdsaOpts.bits2int_modN ||\n        function (bytes) {\n            return Fn.create(bits2int(bytes)); // can't use bytesToNumberBE here\n        };\n    // NOTE: pads output with zero as per spec\n    const ORDER_MASK = bitMask(fnBits);\n    /**\n     * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n     */\n    function int2octets(num) {\n        // IMPORTANT: the check ensures working for case `Fn.BYTES != Fn.BITS * 8`\n        aInRange('num < 2^' + fnBits, num, _0n, ORDER_MASK);\n        return Fn.toBytes(num);\n    }\n    // Steps A, D of RFC6979 3.2\n    // Creates RFC6979 seed; converts msg/privKey to numbers.\n    // Used only in sign, not in verify.\n    // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order,\n    // this will be invalid at least for P521. Also it can be bigger for P224 + SHA256\n    function prepSig(msgHash, privateKey, opts = defaultSigOpts) {\n        if (['recovered', 'canonical'].some((k) => k in opts))\n            throw new Error('sign() legacy options not supported');\n        const { hash } = ecdsaOpts;\n        let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n        if (lowS == null)\n            lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n        msgHash = ensureBytes('msgHash', msgHash);\n        validateSigVerOpts(opts);\n        if (prehash)\n            msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n        // We can't later call bits2octets, since nested bits2int is broken for curves\n        // with fnBits % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n        const h1int = bits2int_modN(msgHash);\n        const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n        const seedArgs = [int2octets(d), int2octets(h1int)];\n        // extraEntropy. RFC6979 3.6: additional k' (optional).\n        if (ent != null && ent !== false) {\n            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n            const e = ent === true ? randomBytes_(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n            seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n        }\n        const seed = concatBytes(...seedArgs); // Step D of RFC6979 3.2\n        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n        // Converts signature params into point w r/s, checks result for validity.\n        // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n        // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n        // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n        function k2sig(kBytes) {\n            // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n            // Important: all mod() calls here must be done over N\n            const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n            if (!Fn.isValidNot0(k))\n                return; // Valid scalars (including k) must be in 1..N-1\n            const ik = Fn.inv(k); // k^-1 mod n\n            const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n            const r = Fn.create(q.x); // r = q.x mod n\n            if (r === _0n)\n                return;\n            const s = Fn.create(ik * Fn.create(m + r * d)); // Not using blinding here, see comment above\n            if (s === _0n)\n                return;\n            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n            let normS = s;\n            if (lowS && isBiggerThanHalfOrder(s)) {\n                normS = normalizeS(s); // if lowS was passed, ensure s is always\n                recovery ^= 1; // // in the bottom half of N\n            }\n            return new Signature(r, normS, recovery); // use normS, not s\n        }\n        return { seed, k2sig };\n    }\n    const defaultSigOpts = { lowS: ecdsaOpts.lowS, prehash: false };\n    const defaultVerOpts = { lowS: ecdsaOpts.lowS, prehash: false };\n    /**\n     * Signs message hash with a private key.\n     * ```\n     * sign(m, d, k) where\n     *   (x, y) = G × k\n     *   r = x mod n\n     *   s = (m + dr)/k mod n\n     * ```\n     * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n     * @param privKey private key\n     * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n     * @returns signature with recovery param\n     */\n    function sign(msgHash, privKey, opts = defaultSigOpts) {\n        const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n        const drbg = createHmacDrbg(ecdsaOpts.hash.outputLen, Fn.BYTES, hmac_);\n        return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n    }\n    // Enable precomputes. Slows down first publicKey computation by 20ms.\n    Point.BASE.precompute(8);\n    /**\n     * Verifies a signature against message hash and public key.\n     * Rejects lowS signatures by default: to override,\n     * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n     *\n     * ```\n     * verify(r, s, h, P) where\n     *   U1 = hs^-1 mod n\n     *   U2 = rs^-1 mod n\n     *   R = U1⋅G - U2⋅P\n     *   mod(R.x, n) == r\n     * ```\n     */\n    function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {\n        const sg = signature;\n        msgHash = ensureBytes('msgHash', msgHash);\n        publicKey = ensureBytes('publicKey', publicKey);\n        // Verify opts\n        validateSigVerOpts(opts);\n        const { lowS, prehash, format } = opts;\n        // TODO: remove\n        if ('strict' in opts)\n            throw new Error('options.strict was renamed to lowS');\n        if (format !== undefined && !['compact', 'der', 'js'].includes(format))\n            throw new Error('format must be \"compact\", \"der\" or \"js\"');\n        const isHex = typeof sg === 'string' || isBytes(sg);\n        const isObj = !isHex &&\n            !format &&\n            typeof sg === 'object' &&\n            sg !== null &&\n            typeof sg.r === 'bigint' &&\n            typeof sg.s === 'bigint';\n        if (!isHex && !isObj)\n            throw new Error('invalid signature, expected Uint8Array, hex string or Signature instance');\n        let _sig = undefined;\n        let P;\n        // deduce signature format\n        try {\n            // if (format === 'js') {\n            //   if (sg != null && !isBytes(sg)) _sig = new Signature(sg.r, sg.s);\n            // } else if (format === 'compact') {\n            //   _sig = Signature.fromCompact(sg);\n            // } else if (format === 'der') {\n            //   _sig = Signature.fromDER(sg);\n            // } else {\n            //   throw new Error('invalid format');\n            // }\n            if (isObj) {\n                if (format === undefined || format === 'js') {\n                    _sig = new Signature(sg.r, sg.s);\n                }\n                else {\n                    throw new Error('invalid format');\n                }\n            }\n            if (isHex) {\n                // TODO: remove this malleable check\n                // Signature can be represented in 2 ways: compact (2*Fn.BYTES) & DER (variable-length).\n                // Since DER can also be 2*Fn.BYTES bytes, we check for it first.\n                try {\n                    if (format !== 'compact')\n                        _sig = Signature.fromDER(sg);\n                }\n                catch (derError) {\n                    if (!(derError instanceof DER.Err))\n                        throw derError;\n                }\n                if (!_sig && format !== 'der')\n                    _sig = Signature.fromCompact(sg);\n            }\n            P = Point.fromHex(publicKey);\n        }\n        catch (error) {\n            return false;\n        }\n        if (!_sig)\n            return false;\n        if (lowS && _sig.hasHighS())\n            return false;\n        // todo: optional.hash => hash\n        if (prehash)\n            msgHash = ecdsaOpts.hash(msgHash);\n        const { r, s } = _sig;\n        const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n        const is = Fn.inv(s); // s^-1\n        const u1 = Fn.create(h * is); // u1 = hs^-1 mod n\n        const u2 = Fn.create(r * is); // u2 = rs^-1 mod n\n        const R = Point.BASE.multiplyUnsafe(u1).add(P.multiplyUnsafe(u2));\n        if (R.is0())\n            return false;\n        const v = Fn.create(R.x); // v = r.x mod n\n        return v === r;\n    }\n    // TODO: clarify API for cloning .clone({hash: sha512}) ? .createWith({hash: sha512})?\n    // const clone = (hash: CHash): ECDSA => ecdsa(Point, { ...ecdsaOpts, ...getHash(hash) }, curveOpts);\n    return Object.freeze({\n        getPublicKey,\n        getSharedSecret,\n        sign,\n        verify,\n        utils,\n        Point,\n        Signature,\n    });\n}\nfunction _weierstrass_legacy_opts_to_new(c) {\n    const CURVE = {\n        a: c.a,\n        b: c.b,\n        p: c.Fp.ORDER,\n        n: c.n,\n        h: c.h,\n        Gx: c.Gx,\n        Gy: c.Gy,\n    };\n    const Fp = c.Fp;\n    const Fn = Field(CURVE.n, c.nBitLength);\n    const curveOpts = {\n        Fp,\n        Fn,\n        allowedPrivateKeyLengths: c.allowedPrivateKeyLengths,\n        allowInfinityPoint: c.allowInfinityPoint,\n        endo: c.endo,\n        wrapPrivateKey: c.wrapPrivateKey,\n        isTorsionFree: c.isTorsionFree,\n        clearCofactor: c.clearCofactor,\n        fromBytes: c.fromBytes,\n        toBytes: c.toBytes,\n    };\n    return { CURVE, curveOpts };\n}\nfunction _ecdsa_legacy_opts_to_new(c) {\n    const { CURVE, curveOpts } = _weierstrass_legacy_opts_to_new(c);\n    const ecdsaOpts = {\n        hash: c.hash,\n        hmac: c.hmac,\n        randomBytes: c.randomBytes,\n        lowS: c.lowS,\n        bits2int: c.bits2int,\n        bits2int_modN: c.bits2int_modN,\n    };\n    return { CURVE, curveOpts, ecdsaOpts };\n}\nfunction _weierstrass_new_output_to_legacy(c, Point) {\n    const { Fp, Fn } = Point;\n    // TODO: remove\n    function isWithinCurveOrder(num) {\n        return inRange(num, _1n, Fn.ORDER);\n    }\n    const weierstrassEquation = _legacyHelperEquat(Fp, c.a, c.b);\n    const normPrivateKeyToScalar = _legacyHelperNormPriv(Fn, c.allowedPrivateKeyLengths, c.wrapPrivateKey);\n    return Object.assign({}, {\n        CURVE: c,\n        Point: Point,\n        ProjectivePoint: Point,\n        normPrivateKeyToScalar,\n        weierstrassEquation,\n        isWithinCurveOrder,\n    });\n}\nfunction _ecdsa_new_output_to_legacy(c, ecdsa) {\n    return Object.assign({}, ecdsa, {\n        ProjectivePoint: ecdsa.Point,\n        CURVE: c,\n    });\n}\n// _ecdsa_legacy\nexport function weierstrass(c) {\n    const { CURVE, curveOpts, ecdsaOpts } = _ecdsa_legacy_opts_to_new(c);\n    const Point = weierstrassN(CURVE, curveOpts);\n    const signs = ecdsa(Point, ecdsaOpts, curveOpts);\n    return _ecdsa_new_output_to_legacy(c, signs);\n}\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio(Fp, Z) {\n    // Generic implementation\n    const q = Fp.ORDER;\n    let l = _0n;\n    for (let o = q - _1n; o % _2n === _0n; o /= _2n)\n        l += _1n;\n    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n    // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n    // 2n ** c1 == 2n << (c1-1)\n    const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n    const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n    const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n    const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n    const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n    let sqrtRatio = (u, v) => {\n        let tv1 = c6; // 1. tv1 = c6\n        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n        // 17. for i in (c1, c1 - 1, ..., 2):\n        for (let i = c1; i > _1n; i--) {\n            let tv5 = i - _2n; // 18.    tv5 = i - 2\n            tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n        }\n        return { isValid: isQR, value: tv3 };\n    };\n    if (Fp.ORDER % _4n === _3n) {\n        // sqrt_ratio_3mod4(u, v)\n        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n        sqrtRatio = (u, v) => {\n            let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n        };\n    }\n    // No curves uses that\n    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n    return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU(Fp, opts) {\n    validateField(Fp);\n    const { A, B, Z } = opts;\n    if (!Fp.isValid(A) || !Fp.isValid(B) || !Fp.isValid(Z))\n        throw new Error('mapToCurveSimpleSWU: invalid opts');\n    const sqrtRatio = SWUFpSqrtRatio(Fp, Z);\n    if (!Fp.isOdd)\n        throw new Error('Field does not have .isOdd()');\n    // Input: u, an element of F.\n    // Output: (x, y), a point on E.\n    return (u) => {\n        // prettier-ignore\n        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n        tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n        tv1 = Fp.mul(tv1, Z); // 2.  tv1 = Z * tv1\n        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n        tv3 = Fp.mul(tv3, B); // 6.  tv3 = B * tv3\n        tv4 = Fp.cmov(Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n        tv4 = Fp.mul(tv4, A); // 8.  tv4 = A * tv4\n        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n        tv5 = Fp.mul(tv6, A); // 11. tv5 = A * tv6\n        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n        tv5 = Fp.mul(tv6, B); // 15. tv5 = B * tv6\n        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n        y = Fp.mul(y, value); // 20.   y = y * y1\n        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)\n        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n        const tv4_inv = FpInvertBatch(Fp, [tv4], true)[0];\n        x = Fp.mul(x, tv4_inv); // 25.   x = x / tv4\n        return { x, y };\n    };\n}\n//# sourceMappingURL=weierstrass.js.map","/**\n * Utilities for short weierstrass curves, combined with noble-hashes.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { weierstrass } from \"./abstract/weierstrass.js\";\n/** connects noble-curves to noble-hashes */\nexport function getHash(hash) {\n    return { hash };\n}\nexport function createCurve(curveDef, defHash) {\n    const create = (hash) => weierstrass({ ...curveDef, hash: hash });\n    return { ...create(defHash), create };\n}\n//# sourceMappingURL=_shortw_utils.js.map","/**\n * Internal module for NIST P256, P384, P521 curves.\n * Do not use for now.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256, sha384, sha512 } from '@noble/hashes/sha2.js';\nimport { createCurve } from \"./_shortw_utils.js\";\nimport { createHasher } from \"./abstract/hash-to-curve.js\";\nimport { Field } from \"./abstract/modular.js\";\nimport { mapToCurveSimpleSWU } from \"./abstract/weierstrass.js\";\n// p = 2n**224n * (2n**32n-1n) + 2n**192n + 2n**96n - 1n\n// a = Fp256.create(BigInt('-3'));\nconst p256_CURVE = {\n    p: BigInt('0xffffffff00000001000000000000000000000000ffffffffffffffffffffffff'),\n    n: BigInt('0xffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551'),\n    h: BigInt(1),\n    a: BigInt('0xffffffff00000001000000000000000000000000fffffffffffffffffffffffc'),\n    b: BigInt('0x5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b'),\n    Gx: BigInt('0x6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296'),\n    Gy: BigInt('0x4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5'),\n};\n// p = 2n**384n - 2n**128n - 2n**96n + 2n**32n - 1n\nconst p384_CURVE = {\n    p: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffff0000000000000000ffffffff'),\n    n: BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffc7634d81f4372ddf581a0db248b0a77aecec196accc52973'),\n    h: BigInt(1),\n    a: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffff0000000000000000fffffffc'),\n    b: BigInt('0xb3312fa7e23ee7e4988e056be3f82d19181d9c6efe8141120314088f5013875ac656398d8a2ed19d2a85c8edd3ec2aef'),\n    Gx: BigInt('0xaa87ca22be8b05378eb1c71ef320ad746e1d3b628ba79b9859f741e082542a385502f25dbf55296c3a545e3872760ab7'),\n    Gy: BigInt('0x3617de4a96262c6f5d9e98bf9292dc29f8f41dbd289a147ce9da3113b5f0b8c00a60b1ce1d7e819d7a431d7c90ea0e5f'),\n};\n// p = 2n**521n - 1n\nconst p521_CURVE = {\n    p: BigInt('0x1ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'),\n    n: BigInt('0x01fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa51868783bf2f966b7fcc0148f709a5d03bb5c9b8899c47aebb6fb71e91386409'),\n    h: BigInt(1),\n    a: BigInt('0x1fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc'),\n    b: BigInt('0x0051953eb9618e1c9a1f929a21a0b68540eea2da725b99b315f3b8b489918ef109e156193951ec7e937b1652c0bd3bb1bf073573df883d2c34f1ef451fd46b503f00'),\n    Gx: BigInt('0x00c6858e06b70404e9cd9e3ecb662395b4429c648139053fb521f828af606b4d3dbaa14b5e77efe75928fe1dc127a2ffa8de3348b3c1856a429bf97e7e31c2e5bd66'),\n    Gy: BigInt('0x011839296a789a3bc0045c8a5fb42c7d1bd998f54449579b446817afbd17273e662c97ee72995ef42640c550b9013fad0761353c7086a272c24088be94769fd16650'),\n};\nconst Fp256 = Field(p256_CURVE.p);\nconst Fp384 = Field(p384_CURVE.p);\nconst Fp521 = Field(p521_CURVE.p);\nfunction createSWU(field, opts) {\n    const map = mapToCurveSimpleSWU(field, opts);\n    return (scalars) => map(scalars[0]);\n}\n/** NIST P256 (aka secp256r1, prime256v1) curve, ECDSA and ECDH methods. */\nexport const p256 = createCurve({ ...p256_CURVE, Fp: Fp256, lowS: false }, sha256);\n/** Alias to p256. */\nexport const secp256r1 = p256;\n/** Hashing / encoding to p256 points / field. RFC 9380 methods. */\nexport const p256_hasher = /* @__PURE__ */ (() => {\n    return createHasher(p256.Point, createSWU(Fp256, {\n        A: p256_CURVE.a,\n        B: p256_CURVE.b,\n        Z: Fp256.create(BigInt('-10')),\n    }), {\n        DST: 'P256_XMD:SHA-256_SSWU_RO_',\n        encodeDST: 'P256_XMD:SHA-256_SSWU_NU_',\n        p: p256_CURVE.p,\n        m: 1,\n        k: 128,\n        expand: 'xmd',\n        hash: sha256,\n    });\n})();\n/** NIST P384 (aka secp384r1) curve, ECDSA and ECDH methods. */\nexport const p384 = createCurve({ ...p384_CURVE, Fp: Fp384, lowS: false }, sha384);\n/** Alias to p384. */\nexport const secp384r1 = p384;\n/** Hashing / encoding to p384 points / field. RFC 9380 methods. */\nexport const p384_hasher = /* @__PURE__ */ (() => {\n    return createHasher(p384.Point, createSWU(Fp384, {\n        A: p384_CURVE.a,\n        B: p384_CURVE.b,\n        Z: Fp384.create(BigInt('-12')),\n    }), {\n        DST: 'P384_XMD:SHA-384_SSWU_RO_',\n        encodeDST: 'P384_XMD:SHA-384_SSWU_NU_',\n        p: p384_CURVE.p,\n        m: 1,\n        k: 192,\n        expand: 'xmd',\n        hash: sha384,\n    });\n})();\n/** NIST P521 (aka secp521r1) curve, ECDSA and ECDH methods. */\nexport const p521 = createCurve({ ...p521_CURVE, Fp: Fp521, lowS: false, allowedPrivateKeyLengths: [130, 131, 132] }, sha512);\n/** Alias to p521. */\nexport const secp521r1 = p521;\n/** Hashing / encoding to p521 points / field. RFC 9380 methods. */\nexport const p521_hasher = /* @__PURE__ */ (() => {\n    return createHasher(p521.Point, createSWU(Fp521, {\n        A: p521_CURVE.a,\n        B: p521_CURVE.b,\n        Z: Fp521.create(BigInt('-4')),\n    }), {\n        DST: 'P521_XMD:SHA-512_SSWU_RO_',\n        encodeDST: 'P521_XMD:SHA-512_SSWU_NU_',\n        p: p521_CURVE.p,\n        m: 1,\n        k: 256,\n        expand: 'xmd',\n        hash: sha512,\n    });\n})();\n//# sourceMappingURL=nist.js.map","/**\n * NIST secp256r1 aka p256.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport {} from \"./abstract/hash-to-curve.js\";\nimport { p256_hasher, p256 as p256n } from \"./nist.js\";\nexport const p256 = p256n;\nexport const secp256r1 = p256n;\nexport const hashToCurve = /* @__PURE__ */ (() => p256_hasher.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => p256_hasher.encodeToCurve)();\n//# sourceMappingURL=p256.js.map","// SPDX-License-Identifier: MIT\nimport { p256 } from '@noble/curves/p256';\nimport { bytesToNumberBE } from '@noble/curves/abstract/utils';\nimport { Point } from '../../point';\nimport { SLIP10_SECP256K1_CONST } from '../../../consts';\nimport { getBytes } from '../../../utils';\nexport class SLIP10Nist256p1Point extends Point {\n    getName() {\n        return 'SLIP10-Nist256p1';\n    }\n    static fromBytes(point) {\n        try {\n            const pt = p256.Point.fromHex(getBytes(point));\n            return new SLIP10Nist256p1Point(pt);\n        }\n        catch {\n            if (point.length === SLIP10_SECP256K1_CONST.POINT_COORDINATE_BYTE_LENGTH * 2) {\n                const x = bytesToNumberBE(point.slice(0, SLIP10_SECP256K1_CONST.POINT_COORDINATE_BYTE_LENGTH));\n                const y = bytesToNumberBE(point.slice(SLIP10_SECP256K1_CONST.POINT_COORDINATE_BYTE_LENGTH));\n                return SLIP10Nist256p1Point.fromCoordinates(BigInt(x), BigInt(y));\n            }\n            throw new Error('Invalid point bytes');\n        }\n    }\n    static fromCoordinates(x, y) {\n        const pt = new p256.Point(BigInt(x), BigInt(y), 1n);\n        return new SLIP10Nist256p1Point(pt);\n    }\n    getUnderlyingObject() {\n        return this.point;\n    }\n    getX() {\n        return this.point.toAffine().x;\n    }\n    getY() {\n        return this.point.toAffine().y;\n    }\n    getRawEncoded() {\n        return this.point.toRawBytes(true);\n    }\n    getRawDecoded() {\n        return this.point.toRawBytes(false).slice(1); // strip leading `0x04`\n    }\n    add(other) {\n        const p = other.getUnderlyingObject();\n        return new SLIP10Nist256p1Point(this.point.add(p));\n    }\n    multiply(scalar) {\n        return new SLIP10Nist256p1Point(this.point.multiply(scalar));\n    }\n}\n//# sourceMappingURL=point.js.map","// SPDX-License-Identifier: MIT\nimport { p256 } from '@noble/curves/p256';\nimport { PublicKey } from '../../public-key';\nimport { SLIP10Nist256p1Point } from './point';\nimport { SLIP10_SECP256K1_CONST } from '../../../consts';\nimport { getBytes } from '../../../utils';\nexport class SLIP10Nist256p1PublicKey extends PublicKey {\n    getName() {\n        return 'SLIP10-Nist256p1';\n    }\n    static fromBytes(publicKey) {\n        try {\n            const point = p256.Point.fromHex(getBytes(publicKey));\n            return new SLIP10Nist256p1PublicKey(point);\n        }\n        catch {\n            throw new Error('Invalid key bytes');\n        }\n    }\n    static fromPoint(point) {\n        const base = point.getUnderlyingObject();\n        return new SLIP10Nist256p1PublicKey(base);\n    }\n    static getCompressedLength() {\n        return SLIP10_SECP256K1_CONST.PUBLIC_KEY_COMPRESSED_BYTE_LENGTH;\n    }\n    static getUncompressedLength() {\n        return SLIP10_SECP256K1_CONST.PUBLIC_KEY_UNCOMPRESSED_BYTE_LENGTH;\n    }\n    getUnderlyingObject() {\n        return this.publicKey;\n    }\n    getRawCompressed() {\n        return this.publicKey.toRawBytes(true);\n    }\n    getRawUncompressed() {\n        return this.publicKey.toRawBytes(false);\n    }\n    getRaw() {\n        return this.getRawCompressed();\n    }\n    getPoint() {\n        return new SLIP10Nist256p1Point(this.publicKey);\n    }\n}\n//# sourceMappingURL=public-key.js.map","// SPDX-License-Identifier: MIT\nimport { p256 } from '@noble/curves/p256';\nimport { bytesToNumberBE, numberToBytesBE } from '@noble/curves/abstract/utils';\nimport { PrivateKey } from '../../private-key';\nimport { SLIP10Nist256p1PublicKey } from './public-key';\nimport { SLIP10_SECP256K1_CONST } from '../../../consts';\nimport { getBytes } from '../../../utils';\nexport class SLIP10Nist256p1PrivateKey extends PrivateKey {\n    getName() {\n        return 'SLIP10-Nist256p1';\n    }\n    static fromBytes(privateKey) {\n        if (privateKey.length !== SLIP10_SECP256K1_CONST.PRIVATE_KEY_BYTE_LENGTH) {\n            throw new Error('Invalid private key bytes length');\n        }\n        try {\n            const priv = bytesToNumberBE(getBytes(privateKey));\n            const point = p256.Point.BASE.multiply(priv);\n            return new SLIP10Nist256p1PrivateKey({ priv, point });\n        }\n        catch {\n            throw new Error('Invalid private key bytes');\n        }\n    }\n    static getLength() {\n        return SLIP10_SECP256K1_CONST.PRIVATE_KEY_BYTE_LENGTH;\n    }\n    getRaw() {\n        return numberToBytesBE(this.privateKey.priv, SLIP10_SECP256K1_CONST.PRIVATE_KEY_BYTE_LENGTH);\n    }\n    getUnderlyingObject() {\n        return this.privateKey;\n    }\n    getPublicKey() {\n        return new SLIP10Nist256p1PublicKey(this.privateKey.point);\n    }\n}\n//# sourceMappingURL=private-key.js.map","// SPDX-License-Identifier: MIT\nimport { p256 } from '@noble/curves/p256';\nimport { EllipticCurveCryptography } from '../../ecc';\nimport { SLIP10Nist256p1Point as _SLIP10Nist256p1Point } from './point';\nimport { SLIP10Nist256p1PublicKey as _SLIP10Nist256p1PublicKey } from './public-key';\nimport { SLIP10Nist256p1PrivateKey as _SLIP10Nist256p1PrivateKey } from './private-key';\nexport class SLIP10Nist256p1ECC extends EllipticCurveCryptography {\n    static NAME = 'SLIP10-Nist256p1';\n    static ORDER = p256.CURVE.n;\n    static GENERATOR = _SLIP10Nist256p1Point.fromCoordinates(p256.CURVE.Gx, p256.CURVE.Gy);\n    static POINT = _SLIP10Nist256p1Point;\n    static PUBLIC_KEY = _SLIP10Nist256p1PublicKey;\n    static PRIVATE_KEY = _SLIP10Nist256p1PrivateKey;\n}\nexport { _SLIP10Nist256p1Point as SLIP10Nist256p1Point, _SLIP10Nist256p1PublicKey as SLIP10Nist256p1PublicKey, _SLIP10Nist256p1PrivateKey as SLIP10Nist256p1PrivateKey };\n//# sourceMappingURL=index.js.map","/**\n * SECG secp256k1. See [pdf](https://www.secg.org/sec2-v2.pdf).\n *\n * Belongs to Koblitz curves: it has efficiently-computable GLV endomorphism ψ,\n * check out {@link EndomorphismOpts}. Seems to be rigid (not backdoored).\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha2.js';\nimport { randomBytes } from '@noble/hashes/utils.js';\nimport { createCurve } from \"./_shortw_utils.js\";\nimport { createHasher, isogenyMap, } from \"./abstract/hash-to-curve.js\";\nimport { Field, mod, pow2 } from \"./abstract/modular.js\";\nimport { mapToCurveSimpleSWU, } from \"./abstract/weierstrass.js\";\nimport { aInRange, bytesToNumberBE, concatBytes, ensureBytes, inRange, numberToBytesBE, } from \"./utils.js\";\n// Seems like generator was produced from some seed:\n// `Point.BASE.multiply(Point.Fn.inv(2n, N)).toAffine().x`\n// // gives short x 0x3b78ce563f89a0ed9414f5aa28ad0d96d6795f9c63n\nconst secp256k1_CURVE = {\n    p: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n    h: BigInt(1),\n    a: BigInt(0),\n    b: BigInt(7),\n    Gx: BigInt('0x79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798'),\n    Gy: BigInt('0x483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8'),\n};\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a, b) => (a + b / _2n) / b;\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y) {\n    const P = secp256k1_CURVE.p;\n    // prettier-ignore\n    const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n    // prettier-ignore\n    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n    const b2 = (y * y * y) % P; // x^3, 11\n    const b3 = (b2 * b2 * y) % P; // x^7\n    const b6 = (pow2(b3, _3n, P) * b3) % P;\n    const b9 = (pow2(b6, _3n, P) * b3) % P;\n    const b11 = (pow2(b9, _2n, P) * b2) % P;\n    const b22 = (pow2(b11, _11n, P) * b11) % P;\n    const b44 = (pow2(b22, _22n, P) * b22) % P;\n    const b88 = (pow2(b44, _44n, P) * b44) % P;\n    const b176 = (pow2(b88, _88n, P) * b88) % P;\n    const b220 = (pow2(b176, _44n, P) * b44) % P;\n    const b223 = (pow2(b220, _3n, P) * b3) % P;\n    const t1 = (pow2(b223, _23n, P) * b22) % P;\n    const t2 = (pow2(t1, _6n, P) * b2) % P;\n    const root = pow2(t2, _2n, P);\n    if (!Fpk1.eql(Fpk1.sqr(root), y))\n        throw new Error('Cannot find square root');\n    return root;\n}\nconst Fpk1 = Field(secp256k1_CURVE.p, undefined, undefined, { sqrt: sqrtMod });\n/**\n * secp256k1 curve, ECDSA and ECDH methods.\n *\n * Field: `2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n`\n *\n * @example\n * ```js\n * import { secp256k1 } from '@noble/curves/secp256k1';\n * const priv = secp256k1.utils.randomPrivateKey();\n * const pub = secp256k1.getPublicKey(priv);\n * const msg = new Uint8Array(32).fill(1); // message hash (not message) in ecdsa\n * const sig = secp256k1.sign(msg, priv); // `{prehash: true}` option is available\n * const isValid = secp256k1.verify(sig, msg, pub) === true;\n * ```\n */\nexport const secp256k1 = createCurve({\n    ...secp256k1_CURVE,\n    Fp: Fpk1,\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    endo: {\n        // Endomorphism, see above\n        beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n        splitScalar: (k) => {\n            const n = secp256k1_CURVE.n;\n            const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n            const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n            const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n            const b2 = a1;\n            const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n            const c1 = divNearest(b2 * k, n);\n            const c2 = divNearest(-b1 * k, n);\n            let k1 = mod(k - c1 * a1 - c2 * a2, n);\n            let k2 = mod(-c1 * b1 - c2 * b2, n);\n            const k1neg = k1 > POW_2_128;\n            const k2neg = k2 > POW_2_128;\n            if (k1neg)\n                k1 = n - k1;\n            if (k2neg)\n                k2 = n - k2;\n            if (k1 > POW_2_128 || k2 > POW_2_128) {\n                throw new Error('splitScalar: Endomorphism failed, k=' + k);\n            }\n            return { k1neg, k1, k2neg, k2 };\n        },\n    },\n}, sha256);\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = {};\nfunction taggedHash(tag, ...messages) {\n    let tagP = TAGGED_HASH_PREFIXES[tag];\n    if (tagP === undefined) {\n        const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n        tagP = concatBytes(tagH, tagH);\n        TAGGED_HASH_PREFIXES[tag] = tagP;\n    }\n    return sha256(concatBytes(tagP, ...messages));\n}\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point) => point.toBytes(true).slice(1);\nconst numTo32b = (n) => numberToBytesBE(n, 32);\nconst modP = (x) => mod(x, secp256k1_CURVE.p);\nconst modN = (x) => mod(x, secp256k1_CURVE.n);\nconst Point = /* @__PURE__ */ (() => secp256k1.Point)();\nconst hasEven = (y) => y % _2n === _0n;\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv) {\n    let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n    let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n    const scalar = hasEven(p.y) ? d_ : modN(-d_);\n    return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x) {\n    aInRange('x', x, _1n, secp256k1_CURVE.p); // Fail if x ≥ p.\n    const xx = modP(x * x);\n    const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n    let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n    if (!hasEven(y))\n        y = modP(-y); // Return the unique point P such that x(P) = x and\n    const p = Point.fromAffine({ x, y }); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n    p.assertValidity();\n    return p;\n}\nconst num = bytesToNumberBE;\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args) {\n    return modN(num(taggedHash('BIP0340/challenge', ...args)));\n}\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey) {\n    return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(message, privateKey, auxRand = randomBytes(32)) {\n    const m = ensureBytes('message', message);\n    const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n    const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n    const t = numTo32b(d ^ num(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n    const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n    const k_ = modN(num(rand)); // Let k' = int(rand) mod n\n    if (k_ === _0n)\n        throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n    const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n    const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n    const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n    sig.set(rx, 0);\n    sig.set(numTo32b(modN(k + e * d)), 32);\n    // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n    if (!schnorrVerify(sig, m, px))\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature, message, publicKey) {\n    const sig = ensureBytes('signature', signature, 64);\n    const m = ensureBytes('message', message);\n    const pub = ensureBytes('publicKey', publicKey, 32);\n    try {\n        const P = lift_x(num(pub)); // P = lift_x(int(pk)); fail if that fails\n        const r = num(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n        if (!inRange(r, _1n, secp256k1_CURVE.p))\n            return false;\n        const s = num(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n        if (!inRange(s, _1n, secp256k1_CURVE.n))\n            return false;\n        const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n        // R = s⋅G - e⋅P, where -eP == (n-e)P\n        const R = Point.BASE.multiplyUnsafe(s).add(P.multiplyUnsafe(modN(-e)));\n        const { x, y } = R.toAffine();\n        // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n        if (R.is0() || !hasEven(y) || x !== r)\n            return false;\n        return true;\n    }\n    catch (error) {\n        return false;\n    }\n}\n/**\n * Schnorr signatures over secp256k1.\n * https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\n * @example\n * ```js\n * import { schnorr } from '@noble/curves/secp256k1';\n * const priv = schnorr.utils.randomPrivateKey();\n * const pub = schnorr.getPublicKey(priv);\n * const msg = new TextEncoder().encode('hello');\n * const sig = schnorr.sign(msg, priv);\n * const isValid = schnorr.verify(sig, msg, pub);\n * ```\n */\nexport const schnorr = /* @__PURE__ */ (() => ({\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    utils: {\n        randomPrivateKey: secp256k1.utils.randomPrivateKey,\n        lift_x,\n        pointToBytes,\n        numberToBytesBE,\n        bytesToNumberBE,\n        taggedHash,\n        mod,\n    },\n}))();\nconst isoMap = /* @__PURE__ */ (() => isogenyMap(Fpk1, [\n    // xNum\n    [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n].map((i) => i.map((j) => BigInt(j)))))();\nconst mapSWU = /* @__PURE__ */ (() => mapToCurveSimpleSWU(Fpk1, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fpk1.create(BigInt('-11')),\n}))();\n/** Hashing / encoding to secp256k1 points / field. RFC 9380 methods. */\nexport const secp256k1_hasher = /* @__PURE__ */ (() => createHasher(secp256k1.Point, (scalars) => {\n    const { x, y } = mapSWU(Fpk1.create(scalars[0]));\n    return isoMap(x, y);\n}, {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fpk1.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256,\n}))();\nexport const hashToCurve = /* @__PURE__ */ (() => secp256k1_hasher.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => secp256k1_hasher.encodeToCurve)();\n//# sourceMappingURL=secp256k1.js.map","// SPDX-License-Identifier: MIT\nimport { secp256k1 } from '@noble/curves/secp256k1';\nimport { Point } from '../../point';\nimport { getBytes } from '../../../utils';\nexport class SLIP10Secp256k1Point extends Point {\n    getName() {\n        return 'SLIP10-Secp256k1';\n    }\n    static fromBytes(point) {\n        try {\n            const pubPoint = secp256k1.Point.fromHex(getBytes(point));\n            return new SLIP10Secp256k1Point(pubPoint);\n        }\n        catch {\n            throw new Error('Invalid point bytes');\n        }\n    }\n    static fromCoordinates(x, y) {\n        const pt = new secp256k1.Point(x, y, 1n);\n        return new SLIP10Secp256k1Point(pt);\n    }\n    getUnderlyingObject() {\n        return this.point;\n    }\n    getX() {\n        return this.point.toAffine().x;\n    }\n    getY() {\n        return this.point.toAffine().y;\n    }\n    getRawEncoded() {\n        return this.point.toRawBytes(true);\n    }\n    getRawDecoded() {\n        return this.point.toRawBytes(false).slice(1);\n    }\n    add(point) {\n        const other = point.getUnderlyingObject();\n        const sum = this.point.add(other);\n        return new SLIP10Secp256k1Point(sum);\n    }\n    multiply(scalar) {\n        const prod = this.point.multiply(scalar);\n        return new SLIP10Secp256k1Point(prod);\n    }\n}\n//# sourceMappingURL=point.js.map","// SPDX-License-Identifier: MIT\nimport { secp256k1 } from '@noble/curves/secp256k1';\nimport { PublicKey } from '../../public-key';\nimport { SLIP10Secp256k1Point } from './point';\nimport { SLIP10_SECP256K1_CONST } from '../../../consts';\nimport { getBytes } from '../../../utils';\nexport class SLIP10Secp256k1PublicKey extends PublicKey {\n    getName() {\n        return 'SLIP10-Secp256k1';\n    }\n    static fromBytes(publicKey) {\n        try {\n            const point = secp256k1.Point.fromHex(getBytes(publicKey));\n            return new SLIP10Secp256k1PublicKey(point);\n        }\n        catch {\n            throw new Error('Invalid key bytes');\n        }\n    }\n    static fromPoint(point) {\n        const base = point.getUnderlyingObject();\n        return new SLIP10Secp256k1PublicKey(base);\n    }\n    static getCompressedLength() {\n        return SLIP10_SECP256K1_CONST.PUBLIC_KEY_COMPRESSED_BYTE_LENGTH;\n    }\n    static getUncompressedLength() {\n        return SLIP10_SECP256K1_CONST.PUBLIC_KEY_UNCOMPRESSED_BYTE_LENGTH;\n    }\n    getUnderlyingObject() {\n        return this.publicKey;\n    }\n    getRawCompressed() {\n        return this.publicKey.toRawBytes(true);\n    }\n    getRawUncompressed() {\n        return this.publicKey.toRawBytes(false);\n    }\n    getRaw() {\n        return this.getRawCompressed();\n    }\n    getPoint() {\n        return new SLIP10Secp256k1Point(this.publicKey);\n    }\n}\n//# sourceMappingURL=public-key.js.map","// SPDX-License-Identifier: MIT\nimport { secp256k1 } from '@noble/curves/secp256k1';\nimport { bytesToNumberBE, numberToBytesBE } from '@noble/curves/abstract/utils';\nimport { PrivateKey } from '../../private-key';\nimport { SLIP10Secp256k1PublicKey } from './public-key';\nimport { SLIP10_SECP256K1_CONST } from '../../../consts';\nimport { getBytes } from '../../../utils';\nexport class SLIP10Secp256k1PrivateKey extends PrivateKey {\n    getName() {\n        return 'SLIP10-Secp256k1';\n    }\n    static fromBytes(privateKey) {\n        if (privateKey.length !== SLIP10_SECP256K1_CONST.PRIVATE_KEY_BYTE_LENGTH) {\n            throw new Error('Invalid private key bytes length');\n        }\n        try {\n            const priv = bytesToNumberBE(getBytes(privateKey));\n            const point = secp256k1.Point.BASE.multiply(priv);\n            return new SLIP10Secp256k1PrivateKey({ priv, point });\n        }\n        catch {\n            throw new Error('Invalid private key bytes');\n        }\n    }\n    static getLength() {\n        return SLIP10_SECP256K1_CONST.PRIVATE_KEY_BYTE_LENGTH;\n    }\n    getRaw() {\n        return numberToBytesBE(this.privateKey.priv, SLIP10_SECP256K1_CONST.PRIVATE_KEY_BYTE_LENGTH);\n    }\n    getUnderlyingObject() {\n        return this.privateKey;\n    }\n    getPublicKey() {\n        return new SLIP10Secp256k1PublicKey(this.privateKey.point);\n    }\n}\n//# sourceMappingURL=private-key.js.map","// SPDX-License-Identifier: MIT\nimport { EllipticCurveCryptography } from '../../ecc';\nimport { SLIP10Secp256k1Point as _SLIP10Secp256k1Point } from './point';\nimport { SLIP10Secp256k1PublicKey as _SLIP10Secp256k1PublicKey } from './public-key';\nimport { SLIP10Secp256k1PrivateKey as _SLIP10Secp256k1PrivateKey } from './private-key';\nexport class SLIP10Secp256k1ECC extends EllipticCurveCryptography {\n    static NAME = 'SLIP10-Secp256k1';\n    static ORDER = BigInt('0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141');\n    static GENERATOR = _SLIP10Secp256k1Point.fromCoordinates(BigInt('0x79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798'), BigInt('0x483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB10D4B8'));\n    static POINT = _SLIP10Secp256k1Point;\n    static PUBLIC_KEY = _SLIP10Secp256k1PublicKey;\n    static PRIVATE_KEY = _SLIP10Secp256k1PrivateKey;\n}\nexport { _SLIP10Secp256k1Point as SLIP10Secp256k1Point, _SLIP10Secp256k1PublicKey as SLIP10Secp256k1PublicKey, _SLIP10Secp256k1PrivateKey as SLIP10Secp256k1PrivateKey };\n//# sourceMappingURL=index.js.map","// SPDX-License-Identifier: MIT\nimport { SLIP10Ed25519Point } from '../../slip10';\nexport class KholawEd25519Point extends SLIP10Ed25519Point {\n    getName() {\n        return 'Kholaw-Ed25519';\n    }\n}\n//# sourceMappingURL=point.js.map","// SPDX-License-Identifier: MIT\nimport { SLIP10Ed25519PublicKey } from '../../slip10';\nimport { KholawEd25519Point } from './point';\nexport class KholawEd25519PublicKey extends SLIP10Ed25519PublicKey {\n    getName() {\n        return 'Kholaw-Ed25519';\n    }\n    getPoint() {\n        return new KholawEd25519Point(this.publicKey);\n    }\n}\n//# sourceMappingURL=public-key.js.map","// SPDX-License-Identifier: MIT\nimport { KHOLAW_ED25519_CONST } from '../../../consts';\nimport { SLIP10Ed25519PrivateKey } from '../../slip10';\nimport { KholawEd25519PublicKey } from './public-key';\nimport { pointScalarMulBase } from '../../../libs/ed25519-utils';\nexport class KholawEd25519PrivateKey extends SLIP10Ed25519PrivateKey {\n    constructor(privateKey, options) {\n        if (!options.extendedKey) {\n            throw new Error('Extended key is required');\n        }\n        if (options.extendedKey.length !== SLIP10Ed25519PrivateKey.getLength()) {\n            throw new Error('Invalid extended key length');\n        }\n        super(privateKey, options);\n    }\n    getName() {\n        return 'Kholaw-Ed25519';\n    }\n    static fromBytes(privateKey) {\n        if (privateKey.length !== KHOLAW_ED25519_CONST.PRIVATE_KEY_BYTE_LENGTH) {\n            throw new Error('Invalid private key bytes length');\n        }\n        const privateKeyBytes = privateKey.slice(0, SLIP10Ed25519PrivateKey.getLength());\n        const extendedKeyBytes = privateKey.slice(SLIP10Ed25519PrivateKey.getLength());\n        return new KholawEd25519PrivateKey(privateKeyBytes, { extendedKey: extendedKeyBytes });\n    }\n    static getLength() {\n        return KHOLAW_ED25519_CONST.PRIVATE_KEY_BYTE_LENGTH;\n    }\n    getRaw() {\n        const combined = new Uint8Array(KholawEd25519PrivateKey.getLength());\n        combined.set(this.privateKey);\n        if (!this.options.extendedKey)\n            throw new Error('Extended key is required');\n        combined.set(this.options.extendedKey, SLIP10Ed25519PrivateKey.getLength());\n        return combined;\n    }\n    getPublicKey() {\n        const point = pointScalarMulBase(this.privateKey);\n        return KholawEd25519PublicKey.fromBytes(point);\n    }\n}\n//# sourceMappingURL=private-key.js.map","// SPDX-License-Identifier: MIT\nimport { EllipticCurveCryptography } from '../../ecc';\nimport { SLIP10Ed25519ECC } from '../../slip10';\nimport { KholawEd25519Point as _KholawEd25519Point } from './point';\nimport { KholawEd25519PublicKey as _KholawEd25519PublicKey } from './public-key';\nimport { KholawEd25519PrivateKey as _KholawEd25519PrivateKey } from './private-key';\nexport class KholawEd25519ECC extends EllipticCurveCryptography {\n    static NAME = 'Kholaw-Ed25519';\n    static ORDER = SLIP10Ed25519ECC.ORDER;\n    static GENERATOR = SLIP10Ed25519ECC.GENERATOR;\n    static POINT = _KholawEd25519Point;\n    static PUBLIC_KEY = _KholawEd25519PublicKey;\n    static PRIVATE_KEY = _KholawEd25519PrivateKey;\n}\nexport { _KholawEd25519Point as KholawEd25519Point, _KholawEd25519PublicKey as KholawEd25519PublicKey, _KholawEd25519PrivateKey as KholawEd25519PrivateKey };\n//# sourceMappingURL=index.js.map","// SPDX-License-Identifier: MIT\nimport { EllipticCurveCryptography as _EllipticCurveCryptography, Point as _Point, PublicKey as _PublicKey, PrivateKey as _PrivateKey } from './ecc';\nimport { KholawEd25519ECC as _KholawEd25519ECC } from './kholaw';\nimport { SLIP10Ed25519ECC as _SLIP10Ed25519ECC, SLIP10Ed25519Blake2bECC as _SLIP10Ed25519Blake2bECC, SLIP10Ed25519MoneroECC as _SLIP10Ed25519MoneroECC, SLIP10Nist256p1ECC as _SLIP10Nist256p1ECC, SLIP10Secp256k1ECC as _SLIP10Secp256k1ECC } from './slip10';\nimport { getBytes } from '../utils';\nimport { ECCError, PublicKeyError } from '../exceptions';\nexport class ECCS {\n    static dictionary = {\n        [_KholawEd25519ECC.NAME]: _KholawEd25519ECC,\n        [_SLIP10Ed25519ECC.NAME]: _SLIP10Ed25519ECC,\n        [_SLIP10Ed25519Blake2bECC.NAME]: _SLIP10Ed25519Blake2bECC,\n        [_SLIP10Ed25519MoneroECC.NAME]: _SLIP10Ed25519MoneroECC,\n        [_SLIP10Nist256p1ECC.NAME]: _SLIP10Nist256p1ECC,\n        [_SLIP10Secp256k1ECC.NAME]: _SLIP10Secp256k1ECC\n    };\n    static getNames() {\n        return Object.keys(this.dictionary);\n    }\n    static getClasses() {\n        return Object.values(this.dictionary);\n    }\n    static getECCClass(name) {\n        if (!this.isECC(name)) {\n            throw new ECCError(`Invalid ECC name`, { expected: this.getNames(), got: name });\n        }\n        return this.dictionary[name];\n    }\n    static isECC(name) {\n        return this.getNames().includes(name);\n    }\n}\nexport function validateAndGetPublicKey(publicKey, publicKeyCls) {\n    try {\n        if (publicKey instanceof Uint8Array) {\n            return publicKeyCls.fromBytes(publicKey);\n        }\n        if (typeof publicKey === 'string') {\n            const bytes = getBytes(publicKey);\n            return publicKeyCls.fromBytes(bytes);\n        }\n        if (!(publicKey instanceof publicKeyCls)) {\n            throw new PublicKeyError(`Invalid public key instance`, {\n                expected: publicKeyCls.name,\n                got: publicKey.constructor.name\n            });\n        }\n        return publicKey;\n    }\n    catch (err) {\n        if (err instanceof PublicKeyError)\n            throw err;\n        throw new PublicKeyError('Invalid public key data');\n    }\n}\nexport { _EllipticCurveCryptography as EllipticCurveCryptography, _Point as Point, _PublicKey as PublicKey, _PrivateKey as PrivateKey, _KholawEd25519ECC as KholawEd25519ECC, _SLIP10Ed25519ECC as SLIP10Ed25519ECC, _SLIP10Ed25519Blake2bECC as SLIP10Ed25519Blake2bECC, _SLIP10Ed25519MoneroECC as SLIP10Ed25519MoneroECC, _SLIP10Nist256p1ECC as SLIP10Nist256p1ECC, _SLIP10Secp256k1ECC as SLIP10Secp256k1ECC };\nexport { KholawEd25519Point, KholawEd25519PublicKey, KholawEd25519PrivateKey } from './kholaw';\nexport { SLIP10Ed25519Point, SLIP10Ed25519PublicKey, SLIP10Ed25519PrivateKey, SLIP10Ed25519Blake2bPoint, SLIP10Ed25519Blake2bPublicKey, SLIP10Ed25519Blake2bPrivateKey, SLIP10Ed25519MoneroPoint, SLIP10Ed25519MoneroPublicKey, SLIP10Ed25519MoneroPrivateKey, SLIP10Nist256p1Point, SLIP10Nist256p1PublicKey, SLIP10Nist256p1PrivateKey, SLIP10Secp256k1Point, SLIP10Secp256k1PublicKey, SLIP10Secp256k1PrivateKey } from './slip10';\n//# sourceMappingURL=index.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x17;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18AdCoin Signed Message:\\n';\n    static WIF_PREFIX = 0xb0;\n}\nexport class Adcoin extends Cryptocurrency {\n    static NAME = 'Adcoin';\n    static SYMBOL = 'ACC';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/adcoin-project/AdCoin',\n        WHITEPAPER: 'https://www.getadcoin.com/assets/Whitepaper_AdCoin.pdf',\n        WEBSITES: [\n            'https://www.getadcoin.com'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Adcoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Adcoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Adcoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Adcoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Adcoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=adcoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static HRP = 'akash';\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n    static WIF_PREFIX = 0x80;\n}\nexport class AkashNetwork extends Cryptocurrency {\n    static NAME = 'Akash-Network';\n    static SYMBOL = 'AKT';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/akash-network',\n        WEBSITES: [\n            'https://akash.network'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.AkashNetwork;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = AkashNetwork.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = AkashNetwork.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${AkashNetwork.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        COSMOS: 'Cosmos'\n    });\n    static DEFAULT_ADDRESS = AkashNetwork.ADDRESSES.COSMOS;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=akashnetwork.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Ed25519ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, Params, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n}\nexport class Algorand extends Cryptocurrency {\n    static NAME = 'Algorand';\n    static SYMBOL = 'ALGO';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/algorand/go-algorand',\n        WHITEPAPER: 'https://www.algorand.com/resources/white-papers',\n        WEBSITES: [\n            'http://algorand.foundation',\n            'https://www.algorand.com'\n        ]\n    });\n    static ECC = SLIP10Ed25519ECC;\n    static COIN_TYPE = CoinTypes.Algorand;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Algorand.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        { ALGORAND: 'Algorand' },\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        { ALGORAND: 'Algorand' },\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        { ALGORAND: 'Algorand' },\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Algorand.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Algorand.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        ALGORAND: 'Algorand'\n    });\n    static DEFAULT_ADDRESS = Algorand.ADDRESSES.ALGORAND;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n    static PARAMS = new Params({\n        CHECKSUM_LENGTH: 0x04\n    });\n}\n//# sourceMappingURL=algorand.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x00000582;\n    static SCRIPT_ADDRESS_PREFIX = 0x00005389;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18ANON Signed Message:\\n';\n    static WIF_PREFIX = 0x80;\n}\nexport class Anon extends Cryptocurrency {\n    static NAME = 'Anon';\n    static SYMBOL = 'ANON';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/anonymousbitcoin/anon',\n        WHITEPAPER: 'https://www.anon.community/whitepaper',\n        WEBSITES: [\n            'https://www.anon.community'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Anon;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Anon.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Anon.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Anon.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Anon.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=anon.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Ed25519ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, Params, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n}\nexport class Aptos extends Cryptocurrency {\n    static NAME = 'Aptos';\n    static SYMBOL = 'APT';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/aptos-labs',\n        WHITEPAPER: 'https://aptosfoundation.org/whitepaper',\n        WEBSITES: [\n            'https://aptosfoundation.org'\n        ]\n    });\n    static ECC = SLIP10Ed25519ECC;\n    static COIN_TYPE = CoinTypes.Aptos;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Aptos.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Aptos.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Aptos.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        APTOS: 'Aptos'\n    });\n    static DEFAULT_ADDRESS = Aptos.ADDRESSES.APTOS;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n    static PARAMS = new Params({\n        SUFFIX: 0x00,\n        ADDRESS_PREFIX: '0x'\n    });\n}\n//# sourceMappingURL=aptos.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n    static WIF_PREFIX = 0x80;\n}\nexport class Arbitrum extends Cryptocurrency {\n    static NAME = 'Arbitrum';\n    static SYMBOL = 'ARB';\n    static INFO = new Info({\n        WHITEPAPER: 'https://github.com/OffchainLabs',\n        WEBSITES: [\n            'https://arbitrum.foundation',\n            'https://arbitrum.io'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Arbitrum;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Arbitrum.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Arbitrum.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Arbitrum.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        ETHEREUM: 'Ethereum'\n    });\n    static DEFAULT_ADDRESS = Arbitrum.ADDRESSES.ETHEREUM;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=arbitum.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x32;\n    static SCRIPT_ADDRESS_PREFIX = 0x61;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = null;\n    static WIF_PREFIX = 0xbf;\n}\nexport class Argoneum extends Cryptocurrency {\n    static NAME = 'Argoneum';\n    static SYMBOL = 'AGM';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/Argoneum/argoneum',\n        WEBSITES: [\n            'https://www.argoneum.net'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Argoneum;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Argoneum.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Argoneum.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Argoneum.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Argoneum.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=argoneum.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x17;\n    static SCRIPT_ADDRESS_PREFIX = 0x00001cbd;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Artax Signed Message:\\n';\n    static WIF_PREFIX = 0x97;\n}\nexport class Artax extends Cryptocurrency {\n    static NAME = 'Artax';\n    static SYMBOL = 'XAX';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/artax-committee/Artax',\n        WEBSITES: [\n            'http://www.artaxcoin.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Artax;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Artax.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Artax.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Artax.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Artax.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=artax.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x17;\n    static SCRIPT_ADDRESS_PREFIX = 0x6f;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Aryacoin Signed Message:\\n';\n    static WIF_PREFIX = 0x97;\n}\nexport class Aryacoin extends Cryptocurrency {\n    static NAME = 'Aryacoin';\n    static SYMBOL = 'AYA';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/Aryacoin/Aryacoin',\n        WEBSITES: [\n            'https://aryacoin.io'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Aryacoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Aryacoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Aryacoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Aryacoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Aryacoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=aryacoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x17;\n    static SCRIPT_ADDRESS_PREFIX = 0x08;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18AsiaCoin Signed Message:\\n';\n    static WIF_PREFIX = 0x97;\n}\nexport class Asiacoin extends Cryptocurrency {\n    static NAME = 'Asiacoin';\n    static SYMBOL = 'AC';\n    static INFO = new Info({\n        WEBSITES: [\n            'http://www.thecoin.asia'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Asiacoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Asiacoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Asiacoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Asiacoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Asiacoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=asiacoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x17;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18AuroraCoin Signed Message:\\n';\n    static WIF_PREFIX = 0x97;\n}\nexport class Auroracoin extends Cryptocurrency {\n    static NAME = 'Auroracoin';\n    static SYMBOL = 'AUR';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/aurarad/auroracoin',\n        WEBSITES: [\n            'https://en.auroracoin.is'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Auroracoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Auroracoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Auroracoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Auroracoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Auroracoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=auroracoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, AddressTypes, Networks, Params, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static HRP = 'avax';\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n    static WIF_PREFIX = 0x80;\n}\nexport class Avalanche extends Cryptocurrency {\n    static NAME = 'Avalanche';\n    static SYMBOL = 'AVAX';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/ava-labs/avalanchego',\n        WHITEPAPER: 'https://www.avalabs.org/whitepapers',\n        WEBSITES: [\n            'https://avax.network',\n            'https://www.avalabs.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Avalanche;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Avalanche.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Avalanche.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Avalanche.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        AVALANCHE: 'Avalanche',\n        ETHEREUM: 'Ethereum'\n    });\n    static DEFAULT_ADDRESS = Avalanche.ADDRESSES.AVALANCHE;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n    static ADDRESS_TYPES = new AddressTypes({\n        C_CHAIN: 'c-chain',\n        P_CHAIN: 'p-chain',\n        X_CHAIN: 'x-chain'\n    });\n    static DEFAULT_ADDRESS_TYPE = Avalanche.ADDRESS_TYPES.P_CHAIN;\n    static PARAMS = new Params({\n        ADDRESS_TYPES: {\n            P_CHAIN: 'P-',\n            X_CHAIN: 'X-'\n        }\n    });\n}\n//# sourceMappingURL=avalanche.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, WitnessVersions, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x3c;\n    static SCRIPT_ADDRESS_PREFIX = 0x7a;\n    static HRP = 'av';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2WPKH: 0x00,\n        P2WSH: 0x00\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4,\n        P2WPKH: 0x04b2430c,\n        P2WPKH_IN_P2SH: 0x049d7878,\n        P2WSH: 0x02aa7a99,\n        P2WSH_IN_P2SH: 0x0295b005\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e,\n        P2WPKH: 0x04b24746,\n        P2WPKH_IN_P2SH: 0x049d7cb2,\n        P2WSH: 0x02aa7ed3,\n        P2WSH_IN_P2SH: 0x0295b43f\n    });\n    static MESSAGE_PREFIX = 'Aviancoin Signed Message:\\n';\n    static WIF_PREFIX = 0x80;\n}\nexport class Avian extends Cryptocurrency {\n    static NAME = 'Avian';\n    static SYMBOL = 'AVN';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/AvianNetwork/Avian',\n        WHITEPAPER: 'https://www.avn.network/_files/ugd/c493c9_83224e1867d24a4185421548cfd6a35a.pdf',\n        WEBSITES: [\n            'https://avn.network'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Avian;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Avian.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Avian.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Avian.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH',\n        'P2WPKH',\n        { P2WPKH_IN_P2SH: 'P2WPKH-In-P2SH' },\n        'P2WSH',\n        { P2WSH_IN_P2SH: 'P2WSH-In-P2SH' }\n    ]);\n    static DEFAULT_ADDRESS = Avian.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=avian.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x37;\n    static SCRIPT_ADDRESS_PREFIX = 0x10;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = null;\n    static WIF_PREFIX = 0xcc;\n}\nexport class Axe extends Cryptocurrency {\n    static NAME = 'Axe';\n    static SYMBOL = 'AXE';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/AXErunners/axe',\n        WEBSITES: [\n            'https://axerunners.com'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Axe;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Axe.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Axe.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Axe.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Axe.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=axe.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static HRP = 'axelar';\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n    static WIF_PREFIX = 0x80;\n}\nexport class Axelar extends Cryptocurrency {\n    static NAME = 'Axelar';\n    static SYMBOL = 'AXL';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/axelarnetwork/axelar-core',\n        WHITEPAPER: 'https://axelar.network/wp-content/uploads/2021/07/axelar_whitepaper.pdf',\n        WEBSITES: [\n            'https://axelar.network',\n            'https://app.squidrouter.com'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Axelar;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Axelar.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Axelar.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Axelar.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        COSMOS: 'Cosmos'\n    });\n    static DEFAULT_ADDRESS = Axelar.ADDRESSES.COSMOS;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=axelar.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static HRP = 'band';\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n    static WIF_PREFIX = 0x80;\n}\nexport class BandProtocol extends Cryptocurrency {\n    static NAME = 'Band-Protocol';\n    static SYMBOL = 'BAND';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/bandprotocol/chain',\n        WHITEPAPER: 'https://bandprotocol.com/whitepaper-3.0.1.pdf',\n        WEBSITES: [\n            'https://bandprotocol.com'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.BandProtocol;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = BandProtocol.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = BandProtocol.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${BandProtocol.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        COSMOS: 'Cosmos'\n    });\n    static DEFAULT_ADDRESS = BandProtocol.ADDRESSES.COSMOS;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=bandprotocol.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x19;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0xa40b91bd,\n        P2SH: 0xa40b91bd\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0xa40c86fa,\n        P2SH: 0xa40c86fa\n    });\n    static MESSAGE_PREFIX = '\\x18Bata Signed Message:\\n';\n    static WIF_PREFIX = 0xa4;\n}\nexport class Bata extends Cryptocurrency {\n    static NAME = 'Bata';\n    static SYMBOL = 'BTA';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/BTA-BATA/Bataoshi',\n        WHITEPAPER: 'https://bata.io/wp-content/uploads/2021/09/Bata-Cryptocurrency-Whitepaper.pdf',\n        WEBSITES: [\n            'https://bata.io',\n            'https://bata.digital'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Bata;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Bata.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Bata.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Bata.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Bata.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=bata.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x1a;\n    static SCRIPT_ADDRESS_PREFIX = 0x55;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x19Beetlecoin Signed Message:\\n';\n    static WIF_PREFIX = 0x99;\n}\nexport class BeetleCoin extends Cryptocurrency {\n    static NAME = 'Beetle-Coin';\n    static SYMBOL = 'BEET';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/beetledev/Wallet',\n        WEBSITES: [\n            'https://beetlecoin.io'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.BeetleCoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = BeetleCoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = BeetleCoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${BeetleCoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = BeetleCoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=beetlecoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x19;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18BelaCoin Signed Message:\\n';\n    static WIF_PREFIX = 0x99;\n}\nexport class BelaCoin extends Cryptocurrency {\n    static NAME = 'Bela-Coin';\n    static SYMBOL = 'BELA';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/TheAmbiaFund/erc20bela',\n        WHITEPAPER: 'http://livebela.com/assets/releases/belawhitepaper.pdf',\n        WEBSITES: [\n            'http://livebela.com'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.BelaCoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = BelaCoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = BelaCoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${BelaCoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = BelaCoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=belacoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, AddressTypes, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static HRP = 'bnb';\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n    static WIF_PREFIX = 0x80;\n}\nexport class Binance extends Cryptocurrency {\n    static NAME = 'Binance';\n    static SYMBOL = 'BNB';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/bnb-chain/bsc',\n        WHITEPAPER: 'https://github.com/bnb-chain/whitepaper',\n        WEBSITES: [\n            'https://www.bnbchain.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Binance;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Binance.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Binance.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Binance.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        COSMOS: 'Cosmos',\n        ETHEREUM: 'Ethereum'\n    });\n    static DEFAULT_ADDRESS = Binance.ADDRESSES.COSMOS;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n    static ADDRESS_TYPES = new AddressTypes({\n        CHAIN: 'chain',\n        SMART_CHAIN: 'smart-chain'\n    });\n    static DEFAULT_ADDRESS_TYPE = Binance.ADDRESS_TYPES.CHAIN;\n}\n//# sourceMappingURL=binance.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x19;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18BitCloud Signed Message:\\n';\n    static WIF_PREFIX = 0x99;\n}\nexport class BitCloud extends Cryptocurrency {\n    static NAME = 'Bit-Cloud';\n    static SYMBOL = 'BTDX';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/LIMXTEC/Bitcloud',\n        WHITEPAPER: 'https://github.com/LIMXTEC/Bitcloud/blob/master/README.md',\n        WEBSITES: [\n            'https://bit-cloud.cc'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.BitCloud;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = BitCloud.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = BitCloud.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${BitCloud.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = BitCloud.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=bitcloud.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, WitnessVersions, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, Params, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x00;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static HRP = 'bc';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2TR: 0x01,\n        P2WPKH: 0x00,\n        P2WSH: 0x00\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4,\n        P2TR: 0x0488ade4,\n        P2WPKH: 0x04b2430c,\n        P2WPKH_IN_P2SH: 0x049d7878,\n        P2WSH: 0x02aa7a99,\n        P2WSH_IN_P2SH: 0x0295b005\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e,\n        P2TR: 0x0488b21e,\n        P2WPKH: 0x04b24746,\n        P2WPKH_IN_P2SH: 0x049d7cb2,\n        P2WSH: 0x02aa7ed3,\n        P2WSH_IN_P2SH: 0x0295b43f\n    });\n    static MESSAGE_PREFIX = '\\x18Bitcoin Signed Message:\\n';\n    static WIF_PREFIX = 0x80;\n}\nexport class Testnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x6f;\n    static SCRIPT_ADDRESS_PREFIX = 0xc4;\n    static HRP = 'tb';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2TR: 0x01,\n        P2WPKH: 0x00,\n        P2WSH: 0x00\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x04358394,\n        P2SH: 0x04358394,\n        P2TR: 0x04358394,\n        P2WPKH: 0x045f18bc,\n        P2WPKH_IN_P2SH: 0x044a4e28,\n        P2WSH: 0x02575048,\n        P2WSH_IN_P2SH: 0x024285b5\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x043587cf,\n        P2SH: 0x043587cf,\n        P2TR: 0x043587cf,\n        P2WPKH: 0x045f1cf6,\n        P2WPKH_IN_P2SH: 0x044a5262,\n        P2WSH: 0x02575483,\n        P2WSH_IN_P2SH: 0x024289ef\n    });\n    static MESSAGE_PREFIX = '\\x18Bitcoin Signed Message:\\n';\n    static WIF_PREFIX = 0xef;\n}\nexport class Regtest extends Testnet {\n    static HRP = 'bcrt';\n}\nexport class Bitcoin extends Cryptocurrency {\n    static NAME = 'Bitcoin';\n    static SYMBOL = 'BTC';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/bitcoin/bitcoin',\n        WHITEPAPER: 'https://bitcoin.org/bitcoin.pdf',\n        WEBSITES: [\n            'https://bitcoin.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Bitcoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet,\n        TESTNET: Testnet,\n        REGTEST: Regtest\n    });\n    static DEFAULT_NETWORK = Bitcoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39',\n        { ELECTRUM_V1: 'Electrum-V1' },\n        { ELECTRUM_V2: 'Electrum-V2' }\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39',\n        { ELECTRUM_V1: 'Electrum-V1' },\n        { ELECTRUM_V2: 'Electrum-V2' }\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39',\n        { ELECTRUM_V1: 'Electrum-V1' },\n        { ELECTRUM_V2: 'Electrum-V2' }\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44',\n        'BIP49',\n        'BIP84',\n        'BIP86',\n        'BIP141',\n        { ELECTRUM_V1: 'Electrum-V1' },\n        { ELECTRUM_V2: 'Electrum-V2' }\n    ]);\n    static DEFAULT_HD = Bitcoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Bitcoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH',\n        'P2TR',\n        'P2WPKH',\n        { P2WPKH_IN_P2SH: 'P2WPKH-In-P2SH' },\n        'P2WSH',\n        { P2WSH_IN_P2SH: 'P2WSH-In-P2SH' }\n    ]);\n    static DEFAULT_ADDRESS = Bitcoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n    static PARAMS = new Params({\n        ALPHABET: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz',\n        FIELD_SIZE: '0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F',\n        TAP_TWEAK_SHA256: 'e80fe1639c9ca050e3af1b39c143c63e429cbceb15d940fbb5c5a1f4af57c5e9'\n    });\n}\n//# sourceMappingURL=bitcoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, WitnessVersions, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x17;\n    static SCRIPT_ADDRESS_PREFIX = 0x0a;\n    static HRP = 'bca';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2WPKH: 0x00,\n        P2WSH: 0x00\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4,\n        P2WPKH: 0x0488ade4,\n        P2WPKH_IN_P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e,\n        P2WPKH: 0x0488b21e,\n        P2WPKH_IN_P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Bitcoin Atom Signed Message:\\n';\n    static WIF_PREFIX = 0x80;\n}\nexport class BitcoinAtom extends Cryptocurrency {\n    static NAME = 'Bitcoin-Atom';\n    static SYMBOL = 'BCA';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/bitcoin-atom/bitcoin-atom',\n        WEBSITES: [\n            'https://bitcoinatom.io/'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.BitcoinAtom;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = BitcoinAtom.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = BitcoinAtom.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${BitcoinAtom.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH',\n        'P2WPKH',\n        { P2WPKH_IN_P2SH: 'P2WPKH-In-P2SH' }\n    ]);\n    static DEFAULT_ADDRESS = BitcoinAtom.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=bitcoinatom.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, WitnessVersions, Entropies, Mnemonics, Seeds, HDs, Addresses, AddressTypes, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static LEGACY_PUBLIC_KEY_ADDRESS_PREFIX = 0x00;\n    static LEGACY_SCRIPT_ADDRESS_PREFIX = 0x05;\n    static STD_PUBLIC_KEY_ADDRESS_PREFIX = 0x00;\n    static STD_SCRIPT_ADDRESS_PREFIX = 0x08;\n    static HRP = 'bitcoincash';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2WPKH: 0x00,\n        P2WSH: 0x00\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4,\n        P2WPKH: 0x04b2430c,\n        P2WPKH_IN_P2SH: 0x049d7878,\n        P2WSH: 0x02aa7a99,\n        P2WSH_IN_P2SH: 0x0295b005\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e,\n        P2WPKH: 0x04b24746,\n        P2WPKH_IN_P2SH: 0x049d7cb2,\n        P2WSH: 0x02aa7ed3,\n        P2WSH_IN_P2SH: 0x0295b43f\n    });\n    static WIF_PREFIX = 0x80;\n}\nexport class Testnet extends Network {\n    static LEGACY_PUBLIC_KEY_ADDRESS_PREFIX = 0x6f;\n    static LEGACY_SCRIPT_ADDRESS_PREFIX = 0xc4;\n    static STD_PUBLIC_KEY_ADDRESS_PREFIX = 0x00;\n    static STD_SCRIPT_ADDRESS_PREFIX = 0x08;\n    static HRP = 'bchtest';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2WPKH: 0x00,\n        P2WSH: 0x00\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x04358394,\n        P2SH: 0x04358394,\n        P2WPKH: 0x045f18bc,\n        P2WPKH_IN_P2SH: 0x044a4e28,\n        P2WSH: 0x02575048,\n        P2WSH_IN_P2SH: 0x024285b5\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x043587cf,\n        P2SH: 0x043587cf,\n        P2WPKH: 0x045f1cf6,\n        P2WPKH_IN_P2SH: 0x044a5262,\n        P2WSH: 0x02575483,\n        P2WSH_IN_P2SH: 0x024289ef\n    });\n    static WIF_PREFIX = 0xef;\n}\nexport class Regtest extends Testnet {\n    static HRP = 'bchreg';\n}\nexport class BitcoinCash extends Cryptocurrency {\n    static NAME = 'Bitcoin-Cash';\n    static SYMBOL = 'BCH';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/bitcoincashorg/bitcoincash.org',\n        WEBSITES: [\n            'http://bch.info'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.BitcoinCash;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet,\n        TESTNET: Testnet,\n        REGTEST: Regtest\n    });\n    static DEFAULT_NETWORK = BitcoinCash.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = BitcoinCash.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${BitcoinCash.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH',\n        'P2WPKH',\n        { P2WPKH_IN_P2SH: 'P2WPKH-In-P2SH' },\n        'P2WSH',\n        { P2WSH_IN_P2SH: 'P2WSH-In-P2SH' }\n    ]);\n    static DEFAULT_ADDRESS = BitcoinCash.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n    static ADDRESS_TYPES = new AddressTypes({\n        STD: 'std',\n        LEGACY: 'legacy'\n    });\n    static DEFAULT_ADDRESS_TYPE = BitcoinCash.ADDRESS_TYPES.STD;\n}\n//# sourceMappingURL=bitcoincash.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, WitnessVersions, Entropies, Mnemonics, Seeds, HDs, Addresses, AddressTypes, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static LEGACY_PUBLIC_KEY_ADDRESS_PREFIX = 0x00;\n    static LEGACY_SCRIPT_ADDRESS_PREFIX = 0x05;\n    static STD_PUBLIC_KEY_ADDRESS_PREFIX = 0x00;\n    static STD_SCRIPT_ADDRESS_PREFIX = 0x08;\n    static HRP = 'simpleledger';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2WPKH: 0x00,\n        P2WSH: 0x00\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4,\n        P2WPKH: 0x04b2430c,\n        P2WPKH_IN_P2SH: 0x049d7878,\n        P2WSH: 0x02aa7a99,\n        P2WSH_IN_P2SH: 0x0295b005\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e,\n        P2WPKH: 0x04b24746,\n        P2WPKH_IN_P2SH: 0x049d7cb2,\n        P2WSH: 0x02aa7ed3,\n        P2WSH_IN_P2SH: 0x0295b43f\n    });\n    static WIF_PREFIX = 0x80;\n}\nexport class Testnet extends Network {\n    static LEGACY_PUBLIC_KEY_ADDRESS_PREFIX = 0x6f;\n    static LEGACY_SCRIPT_ADDRESS_PREFIX = 0xc4;\n    static STD_PUBLIC_KEY_ADDRESS_PREFIX = 0x00;\n    static STD_SCRIPT_ADDRESS_PREFIX = 0x08;\n    static HRP = 'slptest';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2WPKH: 0x00,\n        P2WSH: 0x00\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x04358394,\n        P2SH: 0x04358394,\n        P2WPKH: 0x045f18bc,\n        P2WPKH_IN_P2SH: 0x044a4e28,\n        P2WSH: 0x02575048,\n        P2WSH_IN_P2SH: 0x024285b5\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x043587cf,\n        P2SH: 0x043587cf,\n        P2WPKH: 0x045f1cf6,\n        P2WPKH_IN_P2SH: 0x044a5262,\n        P2WSH: 0x02575483,\n        P2WSH_IN_P2SH: 0x024289ef\n    });\n    static WIF_PREFIX = 0xef;\n}\nexport class BitcoinCashSLP extends Cryptocurrency {\n    static NAME = 'Bitcoin-Cash-SLP';\n    static SYMBOL = 'SLP';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/bitcoincashorg/bitcoincash.org',\n        WEBSITES: [\n            'http://bch.info'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.BitcoinCashSLP;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet,\n        TESTNET: Testnet\n    });\n    static DEFAULT_NETWORK = BitcoinCashSLP.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = BitcoinCashSLP.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${BitcoinCashSLP.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH',\n        'P2WPKH',\n        { P2WPKH_IN_P2SH: 'P2WPKH-In-P2SH' },\n        'P2WSH',\n        { P2WSH_IN_P2SH: 'P2WSH-In-P2SH' }\n    ]);\n    static DEFAULT_ADDRESS = BitcoinCashSLP.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n    static ADDRESS_TYPES = new AddressTypes({\n        STD: 'std',\n        LEGACY: 'legacy'\n    });\n    static DEFAULT_ADDRESS_TYPE = BitcoinCashSLP.ADDRESS_TYPES.STD;\n}\n//# sourceMappingURL=bitcoincashslp.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, WitnessVersions, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x26;\n    static SCRIPT_ADDRESS_PREFIX = 0x17;\n    static HRP = 'btg';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2WPKH: 0x00,\n        P2WSH: 0x00\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4,\n        P2WPKH: 0x04b2430c,\n        P2WPKH_IN_P2SH: 0x049d7878,\n        P2WSH: 0x02aa7a99,\n        P2WSH_IN_P2SH: 0x0295b005\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e,\n        P2WPKH: 0x04b24746,\n        P2WPKH_IN_P2SH: 0x049d7cb2,\n        P2WSH: 0x02aa7ed3,\n        P2WSH_IN_P2SH: 0x0295b43f\n    });\n    static MESSAGE_PREFIX = '\\x1dBitcoin Gold Signed Message:\\n';\n    static WIF_PREFIX = 0x80;\n}\nexport class BitcoinGold extends Cryptocurrency {\n    static NAME = 'Bitcoin-Gold';\n    static SYMBOL = 'BTG';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/BTCGPU/BTCGPU',\n        WHITEPAPER: 'https://github.com/BTCGPU/BTCGPU/wiki/Technical-Spec',\n        WEBSITES: [\n            'https://bitcoingold.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.BitcoinGold;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = BitcoinGold.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = BitcoinGold.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${BitcoinGold.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH',\n        'P2WPKH',\n        { P2WPKH_IN_P2SH: 'P2WPKH-In-P2SH' },\n        'P2WSH',\n        { P2WSH_IN_P2SH: 'P2WSH-In-P2SH' }\n    ]);\n    static DEFAULT_ADDRESS = BitcoinGold.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=bitcoingold.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x26;\n    static SCRIPT_ADDRESS_PREFIX = 0x00001cbd;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18BitcoinGreen Signed Message:\\n';\n    static WIF_PREFIX = 0x2e;\n}\nexport class BitcoinGreen extends Cryptocurrency {\n    static NAME = 'Bitcoin-Green';\n    static SYMBOL = 'BITG';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/bitcoin-green/bitcoingreen',\n        WEBSITES: [\n            'https://bitg.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.BitcoinGreen;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = BitcoinGreen.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = BitcoinGreen.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${BitcoinGreen.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = BitcoinGreen.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=bitcoingreen.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x19;\n    static SCRIPT_ADDRESS_PREFIX = 0x08;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18BitcoinPlus Signed Message:\\n';\n    static WIF_PREFIX = 0x99;\n}\nexport class BitcoinPlus extends Cryptocurrency {\n    static NAME = 'Bitcoin-Plus';\n    static SYMBOL = 'XBC';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/bitcoinplusorg/xbcwalletsource',\n        WHITEPAPER: 'https://bitcoinplus.org/wp-content/uploads/2020/09/bitcoin-plus-whitepaper.pdf',\n        WEBSITES: [\n            'https://bitcoinplus.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.BitcoinPlus;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = BitcoinPlus.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = BitcoinPlus.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${BitcoinPlus.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = BitcoinPlus.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=bitcoinplus.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x00001325;\n    static SCRIPT_ADDRESS_PREFIX = 0x000013af;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18BitcoinPrivate Signed Message:\\n';\n    static WIF_PREFIX = 0x80;\n}\nexport class Testnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x00001957;\n    static SCRIPT_ADDRESS_PREFIX = 0x000019e0;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x04358394,\n        P2SH: 0x04358394\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x043587cf,\n        P2SH: 0x043587cf\n    });\n    static MESSAGE_PREFIX = '\\x18BitcoinPrivate Signed Message:\\n';\n    static WIF_PREFIX = 0xef;\n}\nexport class BitcoinPrivate extends Cryptocurrency {\n    static NAME = 'Bitcoin-Private';\n    static SYMBOL = 'BTCP';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/BTCPrivate/BitcoinPrivate',\n        WHITEPAPER: 'https://btcprivate.org/whitepaper.pdf',\n        WEBSITES: [\n            'https://btcprivate.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.BitcoinPrivate;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet,\n        TESTNET: Testnet\n    });\n    static DEFAULT_NETWORK = BitcoinPrivate.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = BitcoinPrivate.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${BitcoinPrivate.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = BitcoinPrivate.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=bitcoinprivate.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x00;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = null;\n    static WIF_PREFIX = 0x80;\n}\nexport class BitcoinSV extends Cryptocurrency {\n    static NAME = 'Bitcoin-SV';\n    static SYMBOL = 'BSV';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/bitcoin-sv/bitcoin-sv',\n        WEBSITES: [\n            'https://www.bsvblockchain.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.BitcoinSV;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = BitcoinSV.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = BitcoinSV.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${BitcoinSV.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = BitcoinSV.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=bitcoinsv.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x00001cb8;\n    static SCRIPT_ADDRESS_PREFIX = 0x00001cbd;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18BitcoinZ Signed Message:\\n';\n    static WIF_PREFIX = 0x80;\n}\nexport class BitcoinZ extends Cryptocurrency {\n    static NAME = 'BitcoinZ';\n    static SYMBOL = 'BTCZ';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/btcz/bitcoinz',\n        WHITEPAPER: 'https://getbtcz.com/btcz-analytical-description',\n        WEBSITES: [\n            'https://getbtcz.com'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.BitcoinZ;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = BitcoinZ.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = BitcoinZ.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${BitcoinZ.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = BitcoinZ.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=bitcoinz.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, WitnessVersions, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x03;\n    static SCRIPT_ADDRESS_PREFIX = 0x7d;\n    static HRP = 'bitcore';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2WPKH: 0x00,\n        P2WSH: 0x00\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4,\n        P2WPKH: 0x0488ade4,\n        P2WPKH_IN_P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e,\n        P2WPKH: 0x0488b21e,\n        P2WPKH_IN_P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18BitCore Signed Message:\\n';\n    static WIF_PREFIX = 0x80;\n}\nexport class Bitcore extends Cryptocurrency {\n    static NAME = 'Bitcore';\n    static SYMBOL = 'BTX';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/bitcore-btx/BitCore',\n        WHITEPAPER: 'https://bitcore.cc/#coinspec-anchor',\n        WEBSITES: [\n            'https://bitcore.cc'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Bitcore;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Bitcore.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Bitcore.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Bitcore.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH',\n        'P2WPKH',\n        { P2WPKH_IN_P2SH: 'P2WPKH-In-P2SH' }\n    ]);\n    static DEFAULT_ADDRESS = Bitcore.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=bitcore.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x66;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Bitsend Signed Message:\\n';\n    static WIF_PREFIX = 0xcc;\n}\nexport class BitSend extends Cryptocurrency {\n    static NAME = 'Bit-Send';\n    static SYMBOL = 'BSD';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/LIMXTEC/BitSend',\n        WHITEPAPER: 'https://github.com/LIMXTEC/BitSend/releases/download/v0.14.0.5/Z.bitsend_whitePaper.Dec_17.pdf',\n        WEBSITES: [\n            'https://bitsend.cc',\n            'http://www.mybitsend.com'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.BitSend;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = BitSend.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = BitSend.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${BitSend.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = BitSend.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=bitsend.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x19;\n    static SCRIPT_ADDRESS_PREFIX = 0x55;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x02cfbf60,\n        P2SH: 0x02cfbf60\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x02cfbede,\n        P2SH: 0x02cfbede\n    });\n    static MESSAGE_PREFIX = '\\x18BlackCoin Signed Message:\\n';\n    static WIF_PREFIX = 0x99;\n}\nexport class Blackcoin extends Cryptocurrency {\n    static NAME = 'Blackcoin';\n    static SYMBOL = 'BLK';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/coinblack',\n        WHITEPAPER: 'https://blackcoin.org/blackcoin-pos-protocol-v2-whitepaper.pdf',\n        WEBSITES: [\n            'https://blackcoin.org',\n            'https://blackcoinmore.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Blackcoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Blackcoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Blackcoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Blackcoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Blackcoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=blackcoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x19;\n    static SCRIPT_ADDRESS_PREFIX = 0x3f;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Blocknode Signed Message:\\n';\n    static WIF_PREFIX = 0x4b;\n}\nexport class Testnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x55;\n    static SCRIPT_ADDRESS_PREFIX = 0x7d;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x04358394,\n        P2SH: 0x04358394\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x043587cf,\n        P2SH: 0x043587cf\n    });\n    static MESSAGE_PREFIX = '\\x18Blocknode Testnet Signed Message:\\n';\n    static WIF_PREFIX = 0x89;\n}\nexport class Blocknode extends Cryptocurrency {\n    static NAME = 'Blocknode';\n    static SYMBOL = 'BND';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/blocknodetech/blocknode',\n        WEBSITES: [\n            'https://blocknode.tech'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Blocknode;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet,\n        TESTNET: Testnet\n    });\n    static DEFAULT_NETWORK = Blocknode.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Blocknode.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Blocknode.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Blocknode.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=blocknode.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, WitnessVersions, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x00;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static HRP = 'bc';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2WPKH: 0x00,\n        P2WSH: 0x00\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4,\n        P2WPKH: 0x0488ade4,\n        P2WPKH_IN_P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e,\n        P2WPKH: 0x0488b21e,\n        P2WPKH_IN_P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18BlockStamp Signed Message:\\n';\n    static WIF_PREFIX = 0x80;\n}\nexport class BlockStamp extends Cryptocurrency {\n    static NAME = 'Block-Stamp';\n    static SYMBOL = 'BST';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/BlockStamp',\n        WHITEPAPER: 'https://whitepaper.blockstamp.info',\n        WEBSITES: [\n            'https://blockstamp.info'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.BlockStamp;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = BlockStamp.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = BlockStamp.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${BlockStamp.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH',\n        'P2WPKH',\n        { P2WPKH_IN_P2SH: 'P2WPKH-In-P2SH' }\n    ]);\n    static DEFAULT_ADDRESS = BlockStamp.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=blockstamp.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x55;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = 'Bolivarcoin Signed Message:\\n';\n    static WIF_PREFIX = 0xd5;\n}\nexport class Bolivarcoin extends Cryptocurrency {\n    static NAME = 'Bolivarcoin';\n    static SYMBOL = 'BOLI';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/BOLI-Project/BolivarCoin',\n        WEBSITES: [\n            'https://bolis.info'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Bolivarcoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Bolivarcoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Bolivarcoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Bolivarcoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Bolivarcoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=bolivarcoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x19;\n    static SCRIPT_ADDRESS_PREFIX = 0x55;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18BritCoin Signed Message:\\n';\n    static WIF_PREFIX = 0x99;\n}\nexport class BritCoin extends Cryptocurrency {\n    static NAME = 'Brit-Coin';\n    static SYMBOL = 'BRIT';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/britcoin3',\n        WEBSITES: [\n            'http://britcoin.xyz'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.BritCoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = BritCoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = BritCoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${BritCoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = BritCoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=britcoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x1c;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Canada eCoin Signed Message:\\n';\n    static WIF_PREFIX = 0x9c;\n}\nexport class CanadaECoin extends Cryptocurrency {\n    static NAME = 'Canada-eCoin';\n    static SYMBOL = 'CDN';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/Canada-eCoin',\n        WEBSITES: [\n            'http://www.canadaecoin.ca'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.CanadaECoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = CanadaECoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = CanadaECoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${CanadaECoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = CanadaECoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=canadaecoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x1c;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Cannacoin Signed Message:\\n';\n    static WIF_PREFIX = 0x9c;\n}\nexport class Cannacoin extends Cryptocurrency {\n    static NAME = 'Cannacoin';\n    static SYMBOL = 'CCN';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/cannacoin-official/Cannacoin',\n        WHITEPAPER: 'https://wiki.cannacoin.org/whitepaper.html',\n        WEBSITES: [\n            'https://cannacoin.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Cannacoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Cannacoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Cannacoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Cannacoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Cannacoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=cannacoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { KholawEd25519ECC } from '../eccs';\nimport { Info, NestedNamespace, Entropies, Mnemonics, Seeds, HDs, Addresses, AddressTypes, Networks, Params, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Types extends NestedNamespace {\n    getCardanoTypes() {\n        return Object.values(this);\n    }\n    isCardanoType(type) {\n        return this.getCardanoTypes().includes(type);\n    }\n}\nexport class Mainnet extends Network {\n    static TYPE = 0x01;\n    static PAYMENT_ADDRESS_HRP = 'addr';\n    static REWARD_ADDRESS_HRP = 'stake';\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0f4331d4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n}\nexport class Testnet extends Network {\n    static TYPE = 0x00;\n    static PAYMENT_ADDRESS_HRP = 'addr_test';\n    static REWARD_ADDRESS_HRP = 'stake_test';\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x04358394\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x043587cf\n    });\n}\nexport class Cardano extends Cryptocurrency {\n    static NAME = 'Cardano';\n    static SYMBOL = 'ADA';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://cardanoupdates.com',\n        WHITEPAPER: 'https://docs.cardano.org/en/latest',\n        WEBSITES: [\n            'https://www.cardano.org'\n        ]\n    });\n    static ECC = KholawEd25519ECC;\n    static COIN_TYPE = CoinTypes.Cardano;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet,\n        TESTNET: Testnet\n    });\n    static DEFAULT_NETWORK = Cardano.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds({\n        CARDANO: 'Cardano'\n    });\n    static HDS = new HDs({\n        CARDANO: 'Cardano'\n    });\n    static DEFAULT_HD = Cardano.HDS.CARDANO;\n    static DEFAULT_PATH = `m/44'/${Cardano.COIN_TYPE}'/0'/0/0`;\n    static TYPES = new Types({\n        BYRON_ICARUS: 'byron-icarus',\n        BYRON_LEDGER: 'byron-ledger',\n        BYRON_LEGACY: 'byron-legacy',\n        SHELLEY_ICARUS: 'shelley-icarus',\n        SHELLEY_LEDGER: 'shelley-ledger'\n    });\n    static ADDRESSES = new Addresses({\n        CARDANO: 'Cardano'\n    });\n    static DEFAULT_ADDRESS = Cardano.ADDRESSES.CARDANO;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n    static ADDRESS_TYPES = new AddressTypes({\n        PUBLIC_KEY: 'public-key',\n        REDEMPTION: 'redemption',\n        PAYMENT: 'payment',\n        STAKING: 'staking',\n        REWARD: 'reward'\n    });\n    static PARAMS = new Params({\n        PUBLIC_KEY_ADDRESS: 0x00,\n        REDEMPTION_ADDRESS: 0x02,\n        PAYMENT_PREFIX: 0x00,\n        REWARD_PREFIX: 0x0e\n    });\n}\n//# sourceMappingURL=cardano.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n    static WIF_PREFIX = 0x80;\n}\nexport class Celo extends Cryptocurrency {\n    static NAME = 'Celo';\n    static SYMBOL = 'CELO';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/celo-org/celo-monorepo',\n        WHITEPAPER: 'http://docs.celo.org',\n        WEBSITES: [\n            'https://celo.org',\n            'https://www.celocamp.com'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Celo;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Celo.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Celo.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Celo.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        ETHEREUM: 'Ethereum'\n    });\n    static DEFAULT_ADDRESS = Celo.ADDRESSES.ETHEREUM;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=celo.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static HRP = 'chihuahua';\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n    static WIF_PREFIX = 0x80;\n}\nexport class Chihuahua extends Cryptocurrency {\n    static NAME = 'Chihuahua';\n    static SYMBOL = 'HUA';\n    static INFO = new Info({\n        WHITEPAPER: 'https://docs.chihuahua.army',\n        WEBSITES: [\n            'http://chihuahua.army'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Chihuahua;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Chihuahua.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Chihuahua.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Chihuahua.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        COSMOS: 'Cosmos'\n    });\n    static DEFAULT_ADDRESS = Chihuahua.ADDRESSES.COSMOS;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=chihuahua.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x89;\n    static SCRIPT_ADDRESS_PREFIX = 0x0d;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0xa8c17826,\n        P2SH: 0xa8c17826\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0xa8c26d64,\n        P2SH: 0xa8c26d64\n    });\n    static MESSAGE_PREFIX = null;\n    static WIF_PREFIX = 0x85;\n}\nexport class Clams extends Cryptocurrency {\n    static NAME = 'Clams';\n    static SYMBOL = 'CLAM';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/nochowderforyou/clams',\n        WEBSITES: [\n            'http://clamcoin.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Clams;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Clams.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Clams.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Clams.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Clams.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=clams.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x1c;\n    static SCRIPT_ADDRESS_PREFIX = 0x55;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18ClubCoin Signed Message:\\n';\n    static WIF_PREFIX = 0x99;\n}\nexport class ClubCoin extends Cryptocurrency {\n    static NAME = 'Club-Coin';\n    static SYMBOL = 'CLUB';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/BitClubDev/ClubCoin',\n        WEBSITES: [\n            'http://clubcoin.co'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.ClubCoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = ClubCoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = ClubCoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${ClubCoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = ClubCoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=clubcoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x1c;\n    static SCRIPT_ADDRESS_PREFIX = 0x55;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18CompCoin Signed Message:\\n';\n    static WIF_PREFIX = 0x9c;\n}\nexport class Compcoin extends Cryptocurrency {\n    static NAME = 'Compcoin';\n    static SYMBOL = 'CMP';\n    static INFO = new Info({\n        WEBSITES: [\n            'https://compcoin.com'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Compcoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Compcoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Compcoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Compcoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Compcoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=compcoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static HRP = 'cosmos';\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n    static WIF_PREFIX = 0x80;\n}\nexport class Cosmos extends Cryptocurrency {\n    static NAME = 'Cosmos';\n    static SYMBOL = 'ATOM';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/cosmos',\n        WHITEPAPER: 'https://cosmos.network/resources/whitepaper',\n        WEBSITES: [\n            'https://cosmos.network'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Cosmos;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Cosmos.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Cosmos.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Cosmos.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        COSMOS: 'Cosmos'\n    });\n    static DEFAULT_ADDRESS = Cosmos.ADDRESSES.COSMOS;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=cosmos.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, WitnessVersions, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x1c;\n    static SCRIPT_ADDRESS_PREFIX = 0x1e;\n    static HRP = 'cpu';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2WPKH: 0x00,\n        P2WSH: 0x00\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4,\n        P2WPKH: 0x04b2430c,\n        P2WPKH_IN_P2SH: 0x049d7878\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e,\n        P2WPKH: 0x04b24746,\n        P2WPKH_IN_P2SH: 0x049d7cb2\n    });\n    static MESSAGE_PREFIX = '\\x1dCPUchain Signed Message:\\n';\n    static WIF_PREFIX = 0x80;\n}\nexport class CPUChain extends Cryptocurrency {\n    static NAME = 'CPU-Chain';\n    static SYMBOL = 'CPU';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/cpuchain/cpuchain',\n        WHITEPAPER: 'https://cpuchain.org/assets/v1.pdf',\n        WEBSITES: [\n            'https://cpuchain.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.CPUChain;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = CPUChain.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = CPUChain.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${CPUChain.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH',\n        'P2WPKH',\n        { P2WPKH_IN_P2SH: 'P2WPKH-In-P2SH' }\n    ]);\n    static DEFAULT_ADDRESS = CPUChain.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=cpuchain.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, WitnessVersions, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x1c;\n    static SCRIPT_ADDRESS_PREFIX = 0x0a;\n    static HRP = 'cp';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2WPKH: 0x00,\n        P2WSH: 0x00\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4,\n        P2WPKH: 0x04b2430c,\n        P2WPKH_IN_P2SH: 0x049d7878\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e,\n        P2WPKH: 0x04b24746,\n        P2WPKH_IN_P2SH: 0x049d7cb2\n    });\n    static MESSAGE_PREFIX = '\\x18Bitcoin Signed Message:\\n';\n    static WIF_PREFIX = 0x7b;\n}\nexport class CranePay extends Cryptocurrency {\n    static NAME = 'Crane-Pay';\n    static SYMBOL = 'CRP';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/cranepay/cranepay-core',\n        WEBSITES: [\n            'https://cranepay.io'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.CranePay;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = CranePay.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = CranePay.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${CranePay.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH',\n        'P2WPKH',\n        { P2WPKH_IN_P2SH: 'P2WPKH-In-P2SH' }\n    ]);\n    static DEFAULT_ADDRESS = CranePay.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=cranepay.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x46;\n    static SCRIPT_ADDRESS_PREFIX = 0x55;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18DarkNet Signed Message:\\n';\n    static WIF_PREFIX = 0x99;\n}\nexport class Crave extends Cryptocurrency {\n    static NAME = 'Crave';\n    static SYMBOL = 'CRAVE';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/Crave-Community-Project/Crave-Project',\n        WHITEPAPER: 'https://crave.cc/specifications',\n        WEBSITES: [\n            'https://crave.cc'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Crave;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Crave.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Crave.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Crave.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Crave.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=crave.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x4c;\n    static SCRIPT_ADDRESS_PREFIX = 0x10;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Bitcoin Signed Message:\\n';\n    static WIF_PREFIX = 0xcc;\n}\nexport class Testnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x8c;\n    static SCRIPT_ADDRESS_PREFIX = 0x13;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x04358394,\n        P2SH: 0x04358394\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x043587cf,\n        P2SH: 0x043587cf\n    });\n    static MESSAGE_PREFIX = '\\x18Bitcoin Signed Message:\\n';\n    static WIF_PREFIX = 0xef;\n}\nexport class Dash extends Cryptocurrency {\n    static NAME = 'Dash';\n    static SYMBOL = 'DASH';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/dashpay/dash',\n        WHITEPAPER: 'https://docs.dash.org',\n        WEBSITES: [\n            'https://www.dash.org',\n            'https://newsroom.dash.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Dash;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet,\n        TESTNET: Testnet\n    });\n    static DEFAULT_NETWORK = Dash.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Dash.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Dash.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Dash.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=dash.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, WitnessVersions, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x1f;\n    static SCRIPT_ADDRESS_PREFIX = 0x4e;\n    static HRP = 'dpn';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2WPKH: 0x00,\n        P2WSH: 0x00\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4,\n        P2WPKH: 0x0488ade4,\n        P2WPKH_IN_P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e,\n        P2WPKH: 0x0488b21e,\n        P2WPKH_IN_P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18DeepOnion Signed Message:\\n';\n    static WIF_PREFIX = 0x9f;\n}\nexport class DeepOnion extends Cryptocurrency {\n    static NAME = 'DeepOnion';\n    static SYMBOL = 'ONION';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/deeponion/deeponion',\n        WHITEPAPER: 'https://deeponion.org/White-Paper.pdf',\n        WEBSITES: [\n            'https://deeponion.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.DeepOnion;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = DeepOnion.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = DeepOnion.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${DeepOnion.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH',\n        'P2WPKH',\n        { P2WPKH_IN_P2SH: 'P2WPKH-In-P2SH' }\n    ]);\n    static DEFAULT_ADDRESS = DeepOnion.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=deeponion.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x1e;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18defcoin Signed Message:\\n';\n    static WIF_PREFIX = 0x9e;\n}\nexport class Defcoin extends Cryptocurrency {\n    static NAME = 'Defcoin';\n    static SYMBOL = 'DFC';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/mspicer/Defcoin',\n        WEBSITES: [\n            'https://defcoin-ng.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Defcoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Defcoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Defcoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Defcoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Defcoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=defcoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x1e;\n    static SCRIPT_ADDRESS_PREFIX = 0x5a;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x19Denarius Signed Message:\\n';\n    static WIF_PREFIX = 0x9e;\n}\nexport class Denarius extends Cryptocurrency {\n    static NAME = 'Denarius';\n    static SYMBOL = 'DNR';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/metaspartan/denarius',\n        WHITEPAPER: 'https://denarius.io/wp-content/uploads/2020/06/whitescroll.pdf',\n        WEBSITES: [\n            'https://denarius.io'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Denarius;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Denarius.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Denarius.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Denarius.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Denarius.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=denarius.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x5a;\n    static SCRIPT_ADDRESS_PREFIX = 0x08;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Diamond Signed Message:\\n';\n    static WIF_PREFIX = 0xda;\n}\nexport class Diamond extends Cryptocurrency {\n    static NAME = 'Diamond';\n    static SYMBOL = 'DMD';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/DMDcoin/Diamond',\n        WHITEPAPER: 'https://bit.diamonds/DMD_WP.pdf',\n        WEBSITES: [\n            'http://bit.diamonds'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Diamond;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Diamond.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Diamond.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Diamond.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Diamond.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=diamond.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, WitnessVersions, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x1e;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static HRP = 'dgb';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2WPKH: 0x00,\n        P2WSH: 0x00\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4,\n        P2WPKH: 0x04b2430c,\n        P2WPKH_IN_P2SH: 0x049d7878\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e,\n        P2WPKH: 0x04b24746,\n        P2WPKH_IN_P2SH: 0x049d7cb2\n    });\n    static MESSAGE_PREFIX = '\\x19DigiByte Signed Message:\\n';\n    static WIF_PREFIX = 0x80;\n}\nexport class DigiByte extends Cryptocurrency {\n    static NAME = 'Digi-Byte';\n    static SYMBOL = 'DGB';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/DigiByte-Core/digibyte',\n        WHITEPAPER: 'https://digibyte.io/docs/infopaper.pdf',\n        WEBSITES: [\n            'https://digibyte.org',\n            'https://dgbwiki.com'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.DigiByte;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = DigiByte.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = DigiByte.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${DigiByte.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH',\n        'P2WPKH',\n        { P2WPKH_IN_P2SH: 'P2WPKH-In-P2SH' }\n    ]);\n    static DEFAULT_ADDRESS = DigiByte.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=digibyte.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x1e;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x9e0488b2,\n        P2SH: 0x9e0488b2\n    });\n    static MESSAGE_PREFIX = '\\x18Digitalcoin Signed Message:\\n';\n    static WIF_PREFIX = 0x9e;\n}\nexport class Digitalcoin extends Cryptocurrency {\n    static NAME = 'Digitalcoin';\n    static SYMBOL = 'DGC';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/lomtax/digitalcoin',\n        WHITEPAPER: 'https://github.com/lomtax/digitalcoin/blob/master/README.md',\n        WEBSITES: [\n            'http://digitalcoin.co',\n            'https://digitalcoin.tech'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Digitalcoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Digitalcoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Digitalcoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Digitalcoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Digitalcoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=digitalcoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x1e;\n    static SCRIPT_ADDRESS_PREFIX = 0x0d;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0221312b,\n        P2SH: 0x0221312b\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x022d2533,\n        P2SH: 0x022d2533\n    });\n    static MESSAGE_PREFIX = '\\x19Divi Signed Message:\\n';\n    static WIF_PREFIX = 0xd4;\n}\nexport class Testnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x1e;\n    static SCRIPT_ADDRESS_PREFIX = 0x0d;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x3a805837,\n        P2SH: 0x3a805837\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x3a8061a0,\n        P2SH: 0x3a8061a0\n    });\n    static MESSAGE_PREFIX = '\\x19Divi Signed Message:\\n';\n    static WIF_PREFIX = 0xd4;\n}\nexport class Divi extends Cryptocurrency {\n    static NAME = 'Divi';\n    static SYMBOL = 'DIVI';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/Divicoin/Divi',\n        WHITEPAPER: 'https://wiki.diviproject.org/#whitepaper',\n        WEBSITES: [\n            'https://www.diviproject.org',\n            'https://diviwallet.com'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Divi;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet,\n        TESTNET: Testnet\n    });\n    static DEFAULT_NETWORK = Divi.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Divi.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Divi.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Divi.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=divi.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, WitnessVersions, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x1e;\n    static SCRIPT_ADDRESS_PREFIX = 0x16;\n    static HRP = 'dogecoin';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2WPKH: 0x00,\n        P2WSH: 0x00\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        DOGECOIN: 0x02fac398,\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4,\n        P2WPKH: 0x04b2430c,\n        P2WPKH_IN_P2SH: 0x049d7878\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        DOGECOIN: 0x02facafd,\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e,\n        P2WPKH: 0x04b24746,\n        P2WPKH_IN_P2SH: 0x049d7cb2\n    });\n    static MESSAGE_PREFIX = '\\x19Dogecoin Signed Message:\\n';\n    static WIF_PREFIX = 0xf1;\n}\nexport class Testnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x71;\n    static SCRIPT_ADDRESS_PREFIX = 0xc4;\n    static HRP = 'dogecointestnet';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2WPKH: 0x00,\n        P2WSH: 0x00\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        DOGECOIN: 0x04358394,\n        P2PKH: 0x04358394,\n        P2SH: 0x04358394,\n        P2WPKH: 0x04358394,\n        P2WPKH_IN_P2SH: 0x04358394\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        DOGECOIN: 0x043587cf,\n        P2PKH: 0x043587cf,\n        P2SH: 0x043587cf,\n        P2WPKH: 0x043587cf,\n        P2WPKH_IN_P2SH: 0x043587cf\n    });\n    static MESSAGE_PREFIX = '\\x19Dogecoin Signed Message:\\n';\n    static WIF_PREFIX = 0xf1;\n}\nexport class Dogecoin extends Cryptocurrency {\n    static NAME = 'Dogecoin';\n    static SYMBOL = 'DOGE';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/dogecoin/dogecoin',\n        WHITEPAPER: 'https://github.com/dogecoin/dogecoin/blob/master/README.md',\n        WEBSITES: [\n            'http://dogecoin.com'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Dogecoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet,\n        TESTNET: Testnet\n    });\n    static DEFAULT_NETWORK = Dogecoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Dogecoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Dogecoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH',\n        'P2WPKH',\n        { P2WPKH_IN_P2SH: 'P2WPKH-In-P2SH' }\n    ]);\n    static DEFAULT_ADDRESS = Dogecoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'dogecoin';\n}\n//# sourceMappingURL=dogecoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static HRP = 'dydx';\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n    static WIF_PREFIX = 0x80;\n}\nexport class dYdX extends Cryptocurrency {\n    static NAME = 'dYdX';\n    static SYMBOL = 'DYDX';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/dydxprotocol',\n        WEBSITES: [\n            'https://dydx.exchange'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.dYdX;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = dYdX.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = dYdX.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${dYdX.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        COSMOS: 'Cosmos'\n    });\n    static DEFAULT_ADDRESS = dYdX.ADDRESSES.COSMOS;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=dydx.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, WitnessVersions, Entropies, Mnemonics, Seeds, HDs, Addresses, AddressTypes, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static LEGACY_PUBLIC_KEY_ADDRESS_PREFIX = 0x00;\n    static LEGACY_SCRIPT_ADDRESS_PREFIX = 0x05;\n    static STD_PUBLIC_KEY_ADDRESS_PREFIX = 0x00;\n    static STD_SCRIPT_ADDRESS_PREFIX = 0x08;\n    static HRP = 'ecash';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2WPKH: 0x00,\n        P2WSH: 0x00\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4,\n        P2WPKH: 0x04b2430c,\n        P2WPKH_IN_P2SH: 0x049d7878,\n        P2WSH: 0x02aa7a99,\n        P2WSH_IN_P2SH: 0x0295b005\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e,\n        P2WPKH: 0x04b24746,\n        P2WPKH_IN_P2SH: 0x049d7cb2,\n        P2WSH: 0x02aa7ed3,\n        P2WSH_IN_P2SH: 0x0295b43f\n    });\n    static WIF_PREFIX = 0x80;\n}\nexport class Testnet extends Network {\n    static LEGACY_PUBLIC_KEY_ADDRESS_PREFIX = 0x6f;\n    static LEGACY_SCRIPT_ADDRESS_PREFIX = 0xc4;\n    static STD_PUBLIC_KEY_ADDRESS_PREFIX = 0x00;\n    static STD_SCRIPT_ADDRESS_PREFIX = 0x08;\n    static HRP = 'ectest';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2WPKH: 0x00,\n        P2WSH: 0x00\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x04358394,\n        P2SH: 0x04358394,\n        P2WPKH: 0x045f18bc,\n        P2WPKH_IN_P2SH: 0x044a4e28,\n        P2WSH: 0x02575048,\n        P2WSH_IN_P2SH: 0x024285b5\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x043587cf,\n        P2SH: 0x043587cf,\n        P2WPKH: 0x045f1cf6,\n        P2WPKH_IN_P2SH: 0x044a5262,\n        P2WSH: 0x02575483,\n        P2WSH_IN_P2SH: 0x024289ef\n    });\n    static WIF_PREFIX = 0xef;\n}\nexport class eCash extends Cryptocurrency {\n    static NAME = 'eCash';\n    static SYMBOL = 'XEC';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/bitcoin-abc',\n        WEBSITES: [\n            'https://e.cash'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.eCash;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet,\n        TESTNET: Testnet\n    });\n    static DEFAULT_NETWORK = eCash.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = eCash.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${eCash.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH',\n        'P2WPKH',\n        { P2WPKH_IN_P2SH: 'P2WPKH-In-P2SH' },\n        'P2WSH',\n        { P2WSH_IN_P2SH: 'P2WSH-In-P2SH' }\n    ]);\n    static DEFAULT_ADDRESS = eCash.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n    static ADDRESS_TYPES = new AddressTypes({\n        STD: 'std',\n        LEGACY: 'legacy'\n    });\n    static DEFAULT_ADDRESS_TYPE = eCash.ADDRESS_TYPES.STD;\n}\n//# sourceMappingURL=ecash.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x5c;\n    static SCRIPT_ADDRESS_PREFIX = 0x14;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18eCoin Signed Message:\\n';\n    static WIF_PREFIX = 0xdc;\n}\nexport class ECoin extends Cryptocurrency {\n    static NAME = 'E-Coin';\n    static SYMBOL = 'ECN';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/ecoinclub/ecoin',\n        WEBSITES: [\n            'https://www.ecoinsource.com'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.ECoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = ECoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = ECoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${ECoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = ECoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=ecoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x5d;\n    static SCRIPT_ADDRESS_PREFIX = 0x1c;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18EDRcoin Signed Message:\\n';\n    static WIF_PREFIX = 0xdd;\n}\nexport class EDRCoin extends Cryptocurrency {\n    static NAME = 'EDR-Coin';\n    static SYMBOL = 'EDRC';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/EDRCoin/EDRcoin-src',\n        WEBSITES: [\n            'https://www.edrcoin.cash',\n            'https://edrcoin.com'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.EDRCoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = EDRCoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = EDRCoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${EDRCoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = EDRCoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=edrcoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x30;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Egulden Signed Message:\\n';\n    static WIF_PREFIX = 0xb0;\n}\nexport class eGulden extends Cryptocurrency {\n    static NAME = 'e-Gulden';\n    static SYMBOL = 'EFL';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/Electronic-Gulden-Foundation/egulden',\n        WEBSITES: [\n            'http://www.e-gulden.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.eGulden;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = eGulden.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = eGulden.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${eGulden.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = eGulden.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=egulden.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x21;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Einsteinium Signed Message:\\n';\n    static WIF_PREFIX = 0xa1;\n}\nexport class Einsteinium extends Cryptocurrency {\n    static NAME = 'Einsteinium';\n    static SYMBOL = 'EMC2';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/emc2foundation/einsteinium',\n        WHITEPAPER: 'https://www.emc2.foundation/coin-specification',\n        WEBSITES: [\n            'https://www.emc2.foundation'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Einsteinium;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Einsteinium.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Einsteinium.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Einsteinium.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Einsteinium.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=einsteinium.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x21;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = null;\n    static WIF_PREFIX = 0x80;\n}\nexport class Elastos extends Cryptocurrency {\n    static NAME = 'Elastos';\n    static SYMBOL = 'ELA';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/elastos',\n        WHITEPAPER: 'https://www.elastos.org/downloads/elastos_whitepaper_en.pdf',\n        WEBSITES: [\n            'https://elastos.info',\n            'https://elastos.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Elastos;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Elastos.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Elastos.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Elastos.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Elastos.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=elastos.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x21;\n    static SCRIPT_ADDRESS_PREFIX = 0x35;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0xd7dc6e9f,\n        P2SH: 0xd7dc6e9f\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x03b8c856,\n        P2SH: 0x03b8c856\n    });\n    static MESSAGE_PREFIX = 'DarkCoin Signed Message:\\n';\n    static WIF_PREFIX = 0x6a;\n}\nexport class Energi extends Cryptocurrency {\n    static NAME = 'Energi';\n    static SYMBOL = 'NRG';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/energcryptocurrency/go-energi',\n        WHITEPAPER: 'https://www.energi.world/whitepaper',\n        WEBSITES: [\n            'https://energi.world',\n            'https://www.energiswap.exchange'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Energi;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Energi.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Energi.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Energi.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Energi.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=energi.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, Params, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n    static WIF_PREFIX = 0x80;\n}\nexport class EOS extends Cryptocurrency {\n    static NAME = 'EOS';\n    static SYMBOL = 'EOS';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/AntelopeIO/leap',\n        WHITEPAPER: 'https://eosnetwork.com/blog/category/eos-blue-papers',\n        WEBSITES: [\n            'https://eosnetwork.com'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.EOS;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = EOS.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = EOS.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${EOS.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'EOS'\n    ]);\n    static DEFAULT_ADDRESS = EOS.ADDRESSES.EOS;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n    static PARAMS = new Params({\n        ADDRESS_PREFIX: 'EOS',\n        CHECKSUM_LENGTH: 0x04\n    });\n}\n//# sourceMappingURL=eos.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, AddressTypes, Networks, Params, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static TYPE = 0x00;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n    static WIF_PREFIX = 0x80;\n}\nexport class Testnet extends Network {\n    static TYPE = 0x10;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x04358394\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x043587cf\n    });\n    static WIF_PREFIX = 0xef;\n}\nexport class Ergo extends Cryptocurrency {\n    static NAME = 'Ergo';\n    static SYMBOL = 'ERG';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/ergoplatform/ergo',\n        WHITEPAPER: 'https://ergoplatform.org/en/documents',\n        WEBSITES: [\n            'https://ergoplatform.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Ergo;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet,\n        TESTNET: Testnet\n    });\n    static DEFAULT_NETWORK = Ergo.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Ergo.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Ergo.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        ERGO: 'Ergo'\n    });\n    static DEFAULT_ADDRESS = Ergo.ADDRESSES.ERGO;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n    static ADDRESS_TYPES = new AddressTypes({\n        P2PKH: 'p2pkh',\n        P2SH: 'p2sh'\n    });\n    static DEFAULT_ADDRESS_TYPE = Ergo.ADDRESS_TYPES.P2PKH;\n    static PARAMS = new Params({\n        CHECKSUM_LENGTH: 0x04,\n        ADDRESS_TYPES: {\n            P2PKH: 0x01,\n            P2SH: 0x02\n        }\n    });\n}\n//# sourceMappingURL=ergo.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, Params, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n    static WIF_PREFIX = 0x80;\n}\nexport class Ethereum extends Cryptocurrency {\n    static NAME = 'Ethereum';\n    static SYMBOL = 'ETH';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/ethereum/go-ethereum',\n        WHITEPAPER: 'https://github.com/ethereum/wiki/wiki/White-Paper',\n        WEBSITES: [\n            'https://www.ethereum.org',\n            'https://en.wikipedia.org/wiki/Ethereum'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Ethereum;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Ethereum.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Ethereum.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Ethereum.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        ETHEREUM: 'Ethereum'\n    });\n    static DEFAULT_ADDRESS = Ethereum.ADDRESSES.ETHEREUM;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n    static PARAMS = new Params({\n        ADDRESS_PREFIX: '0x'\n    });\n}\n//# sourceMappingURL=ethereum.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x21;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Bitcoin Signed Message:\\n';\n    static WIF_PREFIX = 0xa8;\n}\nexport class EuropeCoin extends Cryptocurrency {\n    static NAME = 'Europe-Coin';\n    static SYMBOL = 'ERC';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/LIMXTEC/Europecoin-V3',\n        WHITEPAPER: 'https://www.europecoin.eu.org/projects-2/37-specifications',\n        WEBSITES: [\n            'https://www.europecoin.eu.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.EuropeCoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = EuropeCoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = EuropeCoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${EuropeCoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = EuropeCoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=europecoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, WitnessVersions, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x21;\n    static SCRIPT_ADDRESS_PREFIX = 0x5c;\n    static HRP = 'ev';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2WPKH: 0x0b,\n        P2WSH: 0x0b\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4,\n        P2WPKH: 0x04b2430c,\n        P2WPKH_IN_P2SH: 0x049d7878,\n        P2WSH: 0x02aa7a99,\n        P2WSH_IN_P2SH: 0x0295b005\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e,\n        P2WPKH: 0x04b24746,\n        P2WPKH_IN_P2SH: 0x049d7cb2,\n        P2WSH: 0x02aa7ed3,\n        P2WSH_IN_P2SH: 0x0295b43f\n    });\n    static MESSAGE_PREFIX = 'Evrmore Signed Message:\\n';\n    static WIF_PREFIX = 0x80;\n}\nexport class Testnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x6f;\n    static SCRIPT_ADDRESS_PREFIX = 0xc4;\n    static HRP = 'te';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2WPKH: 0x00,\n        P2WSH: 0x00\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4,\n        P2WPKH: 0x04b2430c,\n        P2WPKH_IN_P2SH: 0x049d7878,\n        P2WSH: 0x02aa7a99,\n        P2WSH_IN_P2SH: 0x0295b005\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e,\n        P2WPKH: 0x04b24746,\n        P2WPKH_IN_P2SH: 0x049d7cb2,\n        P2WSH: 0x02aa7ed3,\n        P2WSH_IN_P2SH: 0x0295b43f\n    });\n    static MESSAGE_PREFIX = 'Evrmore Signed Message:\\n';\n    static WIF_PREFIX = 0xef;\n}\nexport class Evrmore extends Cryptocurrency {\n    static NAME = 'Evrmore';\n    static SYMBOL = 'EVR';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/EvrmoreOrg/Evrmore',\n        WHITEPAPER: 'https://github.com/EvrmoreOrg/whitepaper',\n        WEBSITES: [\n            'https://evrmorecoin.org/'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Evrmore;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet,\n        TESTNET: Testnet\n    });\n    static DEFAULT_NETWORK = Evrmore.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Evrmore.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Evrmore.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH',\n        'P2WPKH',\n        { P2WPKH_IN_P2SH: 'P2WPKH-In-P2SH' },\n        'P2WSH',\n        { P2WSH_IN_P2SH: 'P2WSH-In-P2SH' }\n    ]);\n    static DEFAULT_ADDRESS = Evrmore.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=evrmore.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x21;\n    static SCRIPT_ADDRESS_PREFIX = 0x89;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18ExclusiveCoin Signed Message:\\n';\n    static WIF_PREFIX = 0xa1;\n}\nexport class ExclusiveCoin extends Cryptocurrency {\n    static NAME = 'Exclusive-Coin';\n    static SYMBOL = 'EXCL';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/exclfork/excl-core',\n        WEBSITES: [\n            'https://exclusivecoin.pw'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.ExclusiveCoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = ExclusiveCoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = ExclusiveCoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${ExclusiveCoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = ExclusiveCoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=exclusivecoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n    static WIF_PREFIX = 0x80;\n}\nexport class Fantom extends Cryptocurrency {\n    static NAME = 'Fantom';\n    static SYMBOL = 'FTM';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/Fantom-foundation/go-opera',\n        WHITEPAPER: 'https://fantom.foundation/fantom-research-papers',\n        WEBSITES: [\n            'https://fantom.foundation'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Fantom;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Fantom.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Fantom.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Fantom.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        ETHEREUM: 'Ethereum'\n    });\n    static DEFAULT_ADDRESS = Fantom.ADDRESSES.ETHEREUM;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=fantom.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x0e;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488daee,\n        P2SH: 0x0488daee\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488bc26,\n        P2SH: 0x0488bc26\n    });\n    static MESSAGE_PREFIX = '\\x18Feathercoin Signed Message:\\n';\n    static WIF_PREFIX = 0x8e;\n}\nexport class Feathercoin extends Cryptocurrency {\n    static NAME = 'Feathercoin';\n    static SYMBOL = 'FTC';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/FeatherCoin/Feathercoin',\n        WHITEPAPER: 'https://feathercoin.com/about',\n        WEBSITES: [\n            'http://feathercoin.com'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Feathercoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Feathercoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Feathercoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Feathercoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Feathercoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=feathercoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static HRP = 'fetch';\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n    static WIF_PREFIX = 0x80;\n}\nexport class FetchAI extends Cryptocurrency {\n    static NAME = 'Fetch.ai';\n    static SYMBOL = 'FET';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/fetchai',\n        WHITEPAPER: 'https://www.dropbox.com/s/gxptsecwdl3jjtn/David%20Minarsch%20-%202021-04-26%2010.34.17%20-%20paper_21_finalversion.pdf?dl=0',\n        WEBSITES: [\n            'https://fetch-ai.network',\n            'https://docs.fetch.ai'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.FetchAI;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = FetchAI.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = FetchAI.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${FetchAI.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        COSMOS: 'Cosmos'\n    });\n    static DEFAULT_ADDRESS = FetchAI.ADDRESSES.COSMOS;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=fetchai.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, AddressTypes, Networks, Params, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n    static WIF_PREFIX = 0x80;\n}\nexport class Filecoin extends Cryptocurrency {\n    static NAME = 'Filecoin';\n    static SYMBOL = 'FIL';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/filecoin-project',\n        WHITEPAPER: 'https://docs.filecoin.io',\n        WEBSITES: [\n            'https://filecoin.io'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Filecoin;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Filecoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Filecoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Filecoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        FILECOIN: 'Filecoin'\n    });\n    static DEFAULT_ADDRESS = Filecoin.ADDRESSES.FILECOIN;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n    static ADDRESS_TYPES = new AddressTypes({\n        SECP256K1: 'secp256k1',\n        BLS: 'bls'\n    });\n    static DEFAULT_ADDRESS_TYPE = Filecoin.ADDRESS_TYPES.SECP256K1;\n    static PARAMS = new Params({\n        ALPHABET: 'abcdefghijklmnopqrstuvwxyz234567',\n        ADDRESS_PREFIX: 'f',\n        ADDRESS_TYPES: {\n            SECP256K1: 0x01,\n            BLS: 0x03\n        }\n    });\n}\n//# sourceMappingURL=filecoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x52;\n    static SCRIPT_ADDRESS_PREFIX = 0x07;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Firo Signed Message:\\n';\n    static WIF_PREFIX = 0xd2;\n}\nexport class Firo extends Cryptocurrency {\n    static NAME = 'Firo';\n    static SYMBOL = 'FIRO';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/firoorg/firo',\n        WEBSITES: [\n            'https://firo.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Firo;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Firo.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Firo.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Firo.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Firo.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=firo.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x23;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18FirstCoin Signed Message:\\n';\n    static WIF_PREFIX = 0xa3;\n}\nexport class Firstcoin extends Cryptocurrency {\n    static NAME = 'Firstcoin';\n    static SYMBOL = 'FRST';\n    static INFO = new Info({\n        WHITEPAPER: 'https://first-coin-club.blogspot.com/2017/11/whitepaper.html',\n        WEBSITES: [\n            'https://firstcoinproject.com'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Firstcoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Firstcoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Firstcoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Firstcoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Firstcoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=firstcoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x23;\n    static SCRIPT_ADDRESS_PREFIX = 0x5f;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0221312b,\n        P2SH: 0x0221312b\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x022d2533,\n        P2SH: 0x022d2533\n    });\n    static MESSAGE_PREFIX = null;\n    static WIF_PREFIX = 0x3c;\n}\nexport class Testnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x4c;\n    static SCRIPT_ADDRESS_PREFIX = 0x89;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x3a805837,\n        P2SH: 0x3a805837\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x3a8061a0,\n        P2SH: 0x3a8061a0\n    });\n    static MESSAGE_PREFIX = null;\n    static WIF_PREFIX = 0xed;\n}\nexport class FIX extends Cryptocurrency {\n    static NAME = 'FIX';\n    static SYMBOL = 'FIX';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/NewCapital/FIX-Core',\n        WEBSITES: [\n            'https://fix.network'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.FIX;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet,\n        TESTNET: Testnet\n    });\n    static DEFAULT_NETWORK = FIX.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = FIX.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${FIX.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = FIX.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=fix.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x44;\n    static SCRIPT_ADDRESS_PREFIX = 0x82;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Flashcoin Signed Message:\\n';\n    static WIF_PREFIX = 0xc4;\n}\nexport class Flashcoin extends Cryptocurrency {\n    static NAME = 'Flashcoin';\n    static SYMBOL = 'FLASH';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/flash-coin',\n        WHITEPAPER: 'https://www.flashcoin.io/docs/FLASHWhitepaper.pdf',\n        WEBSITES: [\n            'https://flashcoin.io'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Flashcoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Flashcoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Flashcoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Flashcoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Flashcoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=flashcoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x00001cb8;\n    static SCRIPT_ADDRESS_PREFIX = 0x00001cbd;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Zelcash Signed Message:\\n';\n    static WIF_PREFIX = 0x80;\n}\nexport class Flux extends Cryptocurrency {\n    static NAME = 'Flux';\n    static SYMBOL = 'FLUX';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/RunOnFlux/fluxd',\n        WHITEPAPER: 'https://fluxwhitepaper.app.runonflux.io',\n        WEBSITES: [\n            'https://runonflux.io',\n            'https://home.runonflux.io'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Flux;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Flux.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Flux.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Flux.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Flux.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=flux.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, WitnessVersions, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x23;\n    static SCRIPT_ADDRESS_PREFIX = 0x1e;\n    static HRP = 'fx';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2WPKH: 0x00,\n        P2WSH: 0x00\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4,\n        P2WPKH: 0x04b2430c,\n        P2WPKH_IN_P2SH: 0x049d7878,\n        P2WSH: 0x02aa7a99,\n        P2WSH_IN_P2SH: 0x0295b005\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e,\n        P2WPKH: 0x04b24746,\n        P2WPKH_IN_P2SH: 0x049d7cb2,\n        P2WSH: 0x02aa7ed3,\n        P2WSH_IN_P2SH: 0x0295b43f\n    });\n    static MESSAGE_PREFIX = 'Foxdcoin Signed Message:\\n';\n    static WIF_PREFIX = 0x80;\n}\nexport class Testnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x5f;\n    static SCRIPT_ADDRESS_PREFIX = 0x5a;\n    static HRP = 'tf';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2WPKH: 0x00,\n        P2WSH: 0x00\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4,\n        P2WPKH: 0x04b2430c,\n        P2WPKH_IN_P2SH: 0x049d7878,\n        P2WSH: 0x02aa7a99,\n        P2WSH_IN_P2SH: 0x0295b005\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e,\n        P2WPKH: 0x04b24746,\n        P2WPKH_IN_P2SH: 0x049d7cb2,\n        P2WSH: 0x02aa7ed3,\n        P2WSH_IN_P2SH: 0x0295b43f\n    });\n    static MESSAGE_PREFIX = 'Foxdcoin Signed Message:\\n';\n    static WIF_PREFIX = 0xef;\n}\nexport class Foxdcoin extends Cryptocurrency {\n    static NAME = 'Foxdcoin';\n    static SYMBOL = 'FOXD';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/foxdproject/foxdcoin',\n        WEBSITES: [\n            'https://www.foxdcoin.com'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Foxdcoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet,\n        TESTNET: Testnet\n    });\n    static DEFAULT_NETWORK = Foxdcoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Foxdcoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Foxdcoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH',\n        'P2WPKH',\n        { P2WPKH_IN_P2SH: 'P2WPKH-In-P2SH' },\n        'P2WSH',\n        { P2WSH_IN_P2SH: 'P2WSH-In-P2SH' }\n    ]);\n    static DEFAULT_ADDRESS = Foxdcoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=foxdcoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, WitnessVersions, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x24;\n    static SCRIPT_ADDRESS_PREFIX = 0x10;\n    static HRP = 'fc';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2WPKH: 0x00,\n        P2WSH: 0x00\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4,\n        P2WPKH: 0x04b2430c,\n        P2WPKH_IN_P2SH: 0x049d7878\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e,\n        P2WPKH: 0x04b24746,\n        P2WPKH_IN_P2SH: 0x049d7cb2\n    });\n    static MESSAGE_PREFIX = '\\x19FujiCoin Signed Message:\\n';\n    static WIF_PREFIX = 0xa4;\n}\nexport class FujiCoin extends Cryptocurrency {\n    static NAME = 'Fuji-Coin';\n    static SYMBOL = 'FJC';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/fujicoin/fujicoin',\n        WHITEPAPER: 'https://www.fujicoin.org/what-is-fujicoin.php',\n        WEBSITES: [\n            'https://www.fujicoin.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.FujiCoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = FujiCoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = FujiCoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${FujiCoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH',\n        'P2WPKH',\n        { P2WPKH_IN_P2SH: 'P2WPKH-In-P2SH' }\n    ]);\n    static DEFAULT_ADDRESS = FujiCoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=fujicoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x26;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = null;\n    static WIF_PREFIX = 0xa6;\n}\nexport class GameCredits extends Cryptocurrency {\n    static NAME = 'Game-Credits';\n    static SYMBOL = 'GAME';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/gamecredits-project/GameCredits',\n        WEBSITES: [\n            'https://gamecredits.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.GameCredits;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = GameCredits.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = GameCredits.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${GameCredits.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = GameCredits.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=gamecredits.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x26;\n    static SCRIPT_ADDRESS_PREFIX = 0x61;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18GCR Signed Message:\\n';\n    static WIF_PREFIX = 0x9a;\n}\nexport class GCRCoin extends Cryptocurrency {\n    static NAME = 'GCR-Coin';\n    static SYMBOL = 'GCR';\n    static INFO = new Info({\n        WEBSITES: [\n            'https://globalcoinresearch.com'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.GCRCoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = GCRCoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = GCRCoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${GCRCoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = GCRCoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=gcrcoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x26;\n    static SCRIPT_ADDRESS_PREFIX = 0x0a;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18DarkCoin Signed Message:\\n';\n    static WIF_PREFIX = 0xc6;\n}\nexport class GoByte extends Cryptocurrency {\n    static NAME = 'Go-Byte';\n    static SYMBOL = 'GBX';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/gobytecoin/gobyte',\n        WHITEPAPER: 'https://gobyte-coin.readthedocs.io/en/latest/index.html',\n        WEBSITES: [\n            'https://gobyte.network'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.GoByte;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = GoByte.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = GoByte.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${GoByte.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = GoByte.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=gobyte.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x3e;\n    static SCRIPT_ADDRESS_PREFIX = 0x55;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Gridcoin Signed Message:\\n';\n    static WIF_PREFIX = 0xbe;\n}\nexport class Gridcoin extends Cryptocurrency {\n    static NAME = 'Gridcoin';\n    static SYMBOL = 'GRC';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/gridcoin-community/Gridcoin-Research',\n        WHITEPAPER: 'https://www.gridcoin.us/assets/img/whitepaper.pdf',\n        WEBSITES: [\n            'http://www.gridcoin.us'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Gridcoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Gridcoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Gridcoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Gridcoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Gridcoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=gridcoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, WitnessVersions, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x24;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static HRP = 'grs';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2WPKH: 0x00,\n        P2WSH: 0x00\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4,\n        P2WPKH: 0x04b2430c,\n        P2WPKH_IN_P2SH: 0x049d7878\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e,\n        P2WPKH: 0x04b24746,\n        P2WPKH_IN_P2SH: 0x049d7cb2\n    });\n    static MESSAGE_PREFIX = '\\x19GroestlCoin Signed Message:\\n';\n    static WIF_PREFIX = 0x80;\n}\nexport class Testnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x6f;\n    static SCRIPT_ADDRESS_PREFIX = 0xc4;\n    static HRP = 'tgrs';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2WPKH: 0x00,\n        P2WSH: 0x00\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x04358394,\n        P2SH: 0x04358394,\n        P2WPKH: 0x045f18bc,\n        P2WPKH_IN_P2SH: 0x044a4e28\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x043587cf,\n        P2SH: 0x043587cf,\n        P2WPKH: 0x045f1cf6,\n        P2WPKH_IN_P2SH: 0x044a5262\n    });\n    static MESSAGE_PREFIX = '\\x19GroestlCoin Signed Message:\\n';\n    static WIF_PREFIX = 0xef;\n}\nexport class GroestlCoin extends Cryptocurrency {\n    static NAME = 'Groestl-Coin';\n    static SYMBOL = 'GRS';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/Groestlcoin/groestlcoin',\n        WHITEPAPER: 'http://www.groestl.info/groestl-implementation-guide.pdf',\n        WEBSITES: [\n            'https://www.groestlcoin.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.GroestlCoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet,\n        TESTNET: Testnet\n    });\n    static DEFAULT_NETWORK = GroestlCoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = GroestlCoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${GroestlCoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH',\n        'P2WPKH',\n        { P2WPKH_IN_P2SH: 'P2WPKH-In-P2SH' }\n    ]);\n    static DEFAULT_ADDRESS = GroestlCoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=groestlcoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x26;\n    static SCRIPT_ADDRESS_PREFIX = 0x62;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Guldencoin Signed Message:\\n';\n    static WIF_PREFIX = 0x62;\n}\nexport class Gulden extends Cryptocurrency {\n    static NAME = 'Gulden';\n    static SYMBOL = 'NLG';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/Gulden/gulden-old',\n        WEBSITES: [\n            'https://gulden.com'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Gulden;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Gulden.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Gulden.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Gulden.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Gulden.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=gulden.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static HRP = 'one';\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n    static WIF_PREFIX = 0x80;\n}\nexport class Harmony extends Cryptocurrency {\n    static NAME = 'Harmony';\n    static SYMBOL = 'ONE';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/harmony-one/harmony',\n        WHITEPAPER: 'https://harmony.one/whitepaper.pdf',\n        WEBSITES: [\n            'https://www.harmony.one',\n            'https://t.me/harmony_announcements'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Harmony;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Harmony.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Harmony.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Harmony.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        HARMONY: 'Harmony'\n    });\n    static DEFAULT_ADDRESS = Harmony.ADDRESSES.HARMONY;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=harmony.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x30;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18helleniccoin Signed Message:\\n';\n    static WIF_PREFIX = 0xb0;\n}\nexport class Helleniccoin extends Cryptocurrency {\n    static NAME = 'Helleniccoin';\n    static SYMBOL = 'HNC';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/hnc-coin/hnc-coin',\n        WHITEPAPER: 'https://hnc-coin.com/hnc_whitepaper.pdf',\n        WEBSITES: [\n            'https://hnc-coin.com',\n            'http://www.helleniccoin.com'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Helleniccoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Helleniccoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Helleniccoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Helleniccoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Helleniccoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=helleniccoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x28;\n    static SCRIPT_ADDRESS_PREFIX = 0x08;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Hempcoin Signed Message:\\n';\n    static WIF_PREFIX = 0xa8;\n}\nexport class Hempcoin extends Cryptocurrency {\n    static NAME = 'Hempcoin';\n    static SYMBOL = 'THC';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/jl777/komodo',\n        WHITEPAPER: 'https://hempcoin.org/thc-whitepaper.html',\n        WEBSITES: [\n            'http://hempcoin.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Hempcoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Hempcoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Hempcoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Hempcoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Hempcoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=hempcoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x00002089;\n    static SCRIPT_ADDRESS_PREFIX = 0x00002096;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Zcash Signed Message:\\n';\n    static WIF_PREFIX = 0x80;\n}\nexport class Horizen extends Cryptocurrency {\n    static NAME = 'Horizen';\n    static SYMBOL = 'ZEN';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/HorizenOfficial/zen',\n        WHITEPAPER: 'https://www.horizen.io/research',\n        WEBSITES: [\n            'https://www.horizen.io',\n            'https://academy.horizen.io'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Horizen;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Horizen.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Horizen.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Horizen.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Horizen.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=horizen.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n    static WIF_PREFIX = 0x80;\n}\nexport class HuobiToken extends Cryptocurrency {\n    static NAME = 'Huobi-Token';\n    static SYMBOL = 'HT';\n    static INFO = new Info({\n        WEBSITES: [\n            'https://www.huobi.com/en-us',\n            'https://www.huobiwallet.com'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.HuobiToken;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = HuobiToken.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = HuobiToken.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${HuobiToken.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        ETHEREUM: 'Ethereum'\n    });\n    static DEFAULT_ADDRESS = HuobiToken.ADDRESSES.ETHEREUM;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=huobitoken.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x00001cb8;\n    static SCRIPT_ADDRESS_PREFIX = 0x00001cbd;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Hush Signed Message:\\n';\n    static WIF_PREFIX = 0x80;\n}\nexport class Hush extends Cryptocurrency {\n    static NAME = 'Hush';\n    static SYMBOL = 'HUSH';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://git.hush.is/hush/hush3',\n        WHITEPAPER: 'https://git.hush.is',\n        WEBSITES: [\n            'https://hush.is',\n            'https://hush.land'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Hush;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Hush.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Hush.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Hush.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Hush.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=hush.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, Params, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n    static WIF_PREFIX = 0x80;\n}\nexport class Icon extends Cryptocurrency {\n    static NAME = 'Icon';\n    static SYMBOL = 'ICX';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/icon-project',\n        WHITEPAPER: 'https://icondev.io',\n        WEBSITES: [\n            'https://www.icon.foundation',\n            'https://icon.community'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Icon;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Icon.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Icon.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Icon.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        ICON: 'Icon'\n    });\n    static DEFAULT_ADDRESS = Icon.ADDRESSES.ICON;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n    static PARAMS = new Params({\n        ADDRESS_PREFIX: 'hx',\n        KEY_HASH_LENGTH: 0x14\n    });\n}\n//# sourceMappingURL=icon.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static HRP = 'inj';\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n    static WIF_PREFIX = 0x80;\n}\nexport class Injective extends Cryptocurrency {\n    static NAME = 'Injective';\n    static SYMBOL = 'INJ';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/InjectiveLabs',\n        WHITEPAPER: 'https://docs.injectiveprotocol.com/#introduction',\n        WEBSITES: [\n            'https://injective.com'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Injective;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Injective.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Injective.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Injective.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        INJECTIVE: 'Injective'\n    });\n    static DEFAULT_ADDRESS = Injective.ADDRESSES.INJECTIVE;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=injective.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x66;\n    static SCRIPT_ADDRESS_PREFIX = 0x39;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18INSaNe Signed Message:\\n';\n    static WIF_PREFIX = 0x37;\n}\nexport class InsaneCoin extends Cryptocurrency {\n    static NAME = 'InsaneCoin';\n    static SYMBOL = 'INSN';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/CryptoCoderz/INSN',\n        WHITEPAPER: 'https://insane.network/velocity-bluepaper',\n        WEBSITES: [\n            'https://insane.network'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.InsaneCoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = InsaneCoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = InsaneCoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${InsaneCoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = InsaneCoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=insanecoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x75;\n    static SCRIPT_ADDRESS_PREFIX = 0xae;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0xae3416f6,\n        P2SH: 0xae3416f6\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x2780915f,\n        P2SH: 0x2780915f\n    });\n    static MESSAGE_PREFIX = '\\x18IoP Signed Message:\\n';\n    static WIF_PREFIX = 0x31;\n}\nexport class InternetOfPeople extends Cryptocurrency {\n    static NAME = 'Internet-Of-People';\n    static SYMBOL = 'IOP';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/Internet-of-People',\n        WHITEPAPER: 'https://iop.global/whitepaper',\n        WEBSITES: [\n            'http://iop.global'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.InternetOfPeople;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = InternetOfPeople.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = InternetOfPeople.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${InternetOfPeople.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = InternetOfPeople.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=internetofpeople.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static HRP = 'iaa';\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n    static WIF_PREFIX = 0x80;\n}\nexport class IRISnet extends Cryptocurrency {\n    static NAME = 'IRISnet';\n    static SYMBOL = 'IRIS';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/irisnet',\n        WHITEPAPER: 'https://www.irisnet.org/docs/resources/whitepaper-en.html',\n        WEBSITES: [\n            'https://www.irisnet.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.IRISnet;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = IRISnet.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = IRISnet.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${IRISnet.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        COSMOS: 'Cosmos'\n    });\n    static DEFAULT_ADDRESS = IRISnet.ADDRESSES.COSMOS;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=irisnet.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x8a;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Ixcoin Signed Message:\\n';\n    static WIF_PREFIX = 0x80;\n}\nexport class IXCoin extends Cryptocurrency {\n    static NAME = 'IX-Coin';\n    static SYMBOL = 'IXC';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/ixcore/ixcoin',\n        WHITEPAPER: 'https://www.scribd.com/document/357320345/Ixc-White-Paper-v3',\n        WEBSITES: [\n            'https://www.ixcoin.net'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.IXCoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = IXCoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = IXCoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${IXCoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = IXCoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=ixcoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x2b;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x037a6460,\n        P2SH: 0x037a6460\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x037a689a,\n        P2SH: 0x037a689a\n    });\n    static MESSAGE_PREFIX = '\\x19Jumbucks Signed Message:\\n';\n    static WIF_PREFIX = 0xab;\n}\nexport class Jumbucks extends Cryptocurrency {\n    static NAME = 'Jumbucks';\n    static SYMBOL = 'JBS';\n    static INFO = new Info({\n        WEBSITES: [\n            'http://getjumbucks.com'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Jumbucks;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Jumbucks.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Jumbucks.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Jumbucks.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Jumbucks.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=jumbucks.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static HRP = 'kava';\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n    static WIF_PREFIX = 0x80;\n}\nexport class Kava extends Cryptocurrency {\n    static NAME = 'Kava';\n    static SYMBOL = 'KAVA';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/kava-labs',\n        WHITEPAPER: 'https://docsend.com/view/gwbwpc3',\n        WEBSITES: [\n            'https://www.kava.io',\n            'https://app.kava.io'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Kava;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Kava.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Kava.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Kava.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        COSMOS: 'Cosmos'\n    });\n    static DEFAULT_ADDRESS = Kava.ADDRESSES.COSMOS;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=kava.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x23;\n    static SCRIPT_ADDRESS_PREFIX = 0x1c;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Kobocoin Signed Message:\\n';\n    static WIF_PREFIX = 0xa3;\n}\nexport class Kobocoin extends Cryptocurrency {\n    static NAME = 'Kobocoin';\n    static SYMBOL = 'KOBO';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/kobocoin/Kobocoin',\n        WHITEPAPER: 'https://kobocoin.com/Tech.html',\n        WEBSITES: [\n            'http://kobocoin.com'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Kobocoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Kobocoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Kobocoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Kobocoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Kobocoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=kobocoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x3c;\n    static SCRIPT_ADDRESS_PREFIX = 0x55;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Komodo Signed Message:\\n';\n    static WIF_PREFIX = 0xbc;\n}\nexport class Komodo extends Cryptocurrency {\n    static NAME = 'Komodo';\n    static SYMBOL = 'KMD';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/KomodoPlatform/komodo',\n        WHITEPAPER: 'https://komodoplatform.com/whitepaper',\n        WEBSITES: [\n            'https://komodoplatform.com'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Komodo;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Komodo.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Komodo.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Komodo.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Komodo.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=komodo.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x30;\n    static SCRIPT_ADDRESS_PREFIX = 0x7a;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Landcoin Signed Message:\\n';\n    static WIF_PREFIX = 0xb0;\n}\nexport class Landcoin extends Cryptocurrency {\n    static NAME = 'Landcoin';\n    static SYMBOL = 'LDCN';\n    static INFO = new Info({\n        WEBSITES: [\n            'http://landcoin.co'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Landcoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Landcoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Landcoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Landcoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Landcoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=landcoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x55;\n    static SCRIPT_ADDRESS_PREFIX = 0x7a;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18LBRYcrd Signed Message:\\n';\n    static WIF_PREFIX = 0x1c;\n}\nexport class LBRYCredits extends Cryptocurrency {\n    static NAME = 'LBRY-Credits';\n    static SYMBOL = 'LBC';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/lbryio/lbrycrd',\n        WHITEPAPER: 'https://lbry.tech',\n        WEBSITES: [\n            'https://lbry.com',\n            'https://lbry.fund'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.LBRYCredits;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = LBRYCredits.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = LBRYCredits.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${LBRYCredits.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = LBRYCredits.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=lbrycredits.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x4b;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18LinX Signed Message:\\n';\n    static WIF_PREFIX = 0xcb;\n}\nexport class Linx extends Cryptocurrency {\n    static NAME = 'Linx';\n    static SYMBOL = 'LINX';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/linX-project/linX',\n        WHITEPAPER: 'https://mylinx.io/#ABOUT',\n        WEBSITES: [\n            'https://mylinx.io'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Linx;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Linx.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Linx.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Linx.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Linx.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=linx.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, WitnessVersions, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x30;\n    static SCRIPT_ADDRESS_PREFIX = 0x32;\n    static HRP = 'ltc';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2WPKH: 0x00,\n        P2WSH: 0x00\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4,\n        P2WPKH: 0x04b2430c,\n        P2WPKH_IN_P2SH: 0x049d7878,\n        P2WSH: 0x02aa7a99,\n        P2WSH_IN_P2SH: 0x0295b005\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e,\n        P2WPKH: 0x04b24746,\n        P2WPKH_IN_P2SH: 0x049d7cb2,\n        P2WSH: 0x02aa7ed3,\n        P2WSH_IN_P2SH: 0x0295b43f\n    });\n    static MESSAGE_PREFIX = '\\x19Litecoin Signed Message:\\n';\n    static WIF_PREFIX = 0xb0;\n}\nexport class Testnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x6f;\n    static SCRIPT_ADDRESS_PREFIX = 0x3a;\n    static HRP = 'tltc';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2WPKH: 0x00,\n        P2WSH: 0x00\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x04358394,\n        P2SH: 0x04358394,\n        P2WPKH: 0x045f18bc,\n        P2WPKH_IN_P2SH: 0x044a4e28,\n        P2WSH: 0x02575048,\n        P2WSH_IN_P2SH: 0x024285b5\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x043587cf,\n        P2SH: 0x043587cf,\n        P2WPKH: 0x045f1cf6,\n        P2WPKH_IN_P2SH: 0x044a5262,\n        P2WSH: 0x02575483,\n        P2WSH_IN_P2SH: 0x024289ef\n    });\n    static MESSAGE_PREFIX = '\\x19Litecoin Signed Message:\\n';\n    static WIF_PREFIX = 0xef;\n}\nexport class Litecoin extends Cryptocurrency {\n    static NAME = 'Litecoin';\n    static SYMBOL = 'LTC';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/litecoin-project/litecoin',\n        WEBSITES: [\n            'https://litecoin.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Litecoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet,\n        TESTNET: Testnet\n    });\n    static DEFAULT_NETWORK = Litecoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44',\n        'BIP84'\n    ]);\n    static DEFAULT_HD = Litecoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Litecoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH',\n        'P2WPKH',\n        { P2WPKH_IN_P2SH: 'P2WPKH-In-P2SH' },\n        'P2WSH',\n        { P2WSH_IN_P2SH: 'P2WSH-In-P2SH' }\n    ]);\n    static DEFAULT_ADDRESS = Litecoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=litecoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x1c;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Litecoin Signed Message:\\n';\n    static WIF_PREFIX = 0xb0;\n}\nexport class LitecoinCash extends Cryptocurrency {\n    static NAME = 'Litecoin-Cash';\n    static SYMBOL = 'LCC';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/litecoincash-project/litecoincash',\n        WHITEPAPER: 'https://litecoinca.sh/downloads/lcc_whitepaper.pdf',\n        WEBSITES: [\n            'https://litecoinca.sh'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.LitecoinCash;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = LitecoinCash.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = LitecoinCash.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${LitecoinCash.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = LitecoinCash.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=litecoincash.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x00000ab3;\n    static SCRIPT_ADDRESS_PREFIX = 0x00000ab8;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade3,\n        P2SH: 0x0488ade3\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18LitecoinZ Signed Message:\\n';\n    static WIF_PREFIX = 0x80;\n}\nexport class LitecoinZ extends Cryptocurrency {\n    static NAME = 'LitecoinZ';\n    static SYMBOL = 'LTZ';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/litecoinz-project/litecoinz',\n        WHITEPAPER: 'https://litecoinz.org/downloads/LITECOINZ-WHITE-PAPER.pdf',\n        WEBSITES: [\n            'https://litecoinz.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.LitecoinZ;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = LitecoinZ.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = LitecoinZ.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${LitecoinZ.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = LitecoinZ.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=litecoinz.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x30;\n    static SCRIPT_ADDRESS_PREFIX = 0x55;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18LKRcoin Signed Message:\\n';\n    static WIF_PREFIX = 0xb0;\n}\nexport class Lkrcoin extends Cryptocurrency {\n    static NAME = 'Lkrcoin';\n    static SYMBOL = 'LKR';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/LKRcoin/lkrcoin',\n        WHITEPAPER: 'https://lkrcoin.io/draft/WhitePaper.pdf',\n        WEBSITES: [\n            'https://lkrcoin.io'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Lkrcoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Lkrcoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Lkrcoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Lkrcoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Lkrcoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=lkrcoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x2d;\n    static SCRIPT_ADDRESS_PREFIX = 0x32;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Lynx Signed Message:\\n';\n    static WIF_PREFIX = 0xad;\n}\nexport class Lynx extends Cryptocurrency {\n    static NAME = 'Lynx';\n    static SYMBOL = 'LYNX';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/doh9Xiet7weesh9va9th/lynx',\n        WEBSITES: [\n            'https://getlynx.io'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Lynx;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Lynx.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Lynx.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Lynx.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Lynx.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=lynx.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x32;\n    static SCRIPT_ADDRESS_PREFIX = 0x09;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = null;\n    static WIF_PREFIX = 0xe0;\n}\nexport class Mazacoin extends Cryptocurrency {\n    static NAME = 'Mazacoin';\n    static SYMBOL = 'MZC';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/MazaCoin/maza',\n        WEBSITES: [\n            'http://www.mazacoin.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Mazacoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Mazacoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Mazacoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Mazacoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Mazacoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=mazacoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x32;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Megacoin Signed Message:\\n';\n    static WIF_PREFIX = 0xb2;\n}\nexport class Megacoin extends Cryptocurrency {\n    static NAME = 'Megacoin';\n    static SYMBOL = 'MEC';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/LIMXTEC/Megacoin',\n        WHITEPAPER: 'https://megacoin.eu/Megacoin.pdf',\n        WEBSITES: [\n            'https://megacoin-mec.cc'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Megacoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Megacoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Megacoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Megacoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Megacoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=megacoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n    static WIF_PREFIX = 0x80;\n}\nexport class Metis extends Cryptocurrency {\n    static NAME = 'Metis';\n    static SYMBOL = 'METIS';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/MetisProtocol/metis',\n        WHITEPAPER: 'https://drive.google.com/file/d/1LS7CmKFt-FkfVXxSNu06hNgoZXxMzTC-/view',\n        WEBSITES: [\n            'https://www.metis.io'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Metis;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Metis.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Metis.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Metis.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        ETHEREUM: 'Ethereum'\n    });\n    static DEFAULT_ADDRESS = Metis.ADDRESSES.ETHEREUM;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=metis.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x4b;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Bitcoin Signed Message:\\n';\n    static WIF_PREFIX = 0x80;\n}\nexport class Minexcoin extends Cryptocurrency {\n    static NAME = 'Minexcoin';\n    static SYMBOL = 'MNX';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/minexcoin/minexcoin',\n        WHITEPAPER: 'https://minexcoin.com/html/download/wpeng.pdf',\n        WEBSITES: [\n            'https://minexcoin.com'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Minexcoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Minexcoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Minexcoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Minexcoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Minexcoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=minexcoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, WitnessVersions, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x32;\n    static SCRIPT_ADDRESS_PREFIX = 0x37;\n    static HRP = 'mona';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2WPKH: 0x00,\n        P2WSH: 0x00\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4,\n        P2WPKH: 0x0488ade4,\n        P2WPKH_IN_P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e,\n        P2WPKH: 0x0488b21e,\n        P2WPKH_IN_P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Monacoin Signed Message:\\n';\n    static WIF_PREFIX = 0xb0;\n}\nexport class Monacoin extends Cryptocurrency {\n    static NAME = 'Monacoin';\n    static SYMBOL = 'MONA';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/monacoinproject/monacoin',\n        WHITEPAPER: 'https://monacoin.org/#about',\n        WEBSITES: [\n            'http://monacoin.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Monacoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Monacoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Monacoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Monacoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH',\n        'P2WPKH',\n        { P2WPKH_IN_P2SH: 'P2WPKH-In-P2SH' }\n    ]);\n    static DEFAULT_ADDRESS = Monacoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=monacoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Ed25519MoneroECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, AddressTypes, Networks, Params } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static STANDARD = 0x12;\n    static INTEGRATED = 0x13;\n    static SUB_ADDRESS = 0x2a;\n}\nexport class Stagenet extends Network {\n    static STANDARD = 0x18;\n    static INTEGRATED = 0x19;\n    static SUB_ADDRESS = 0x24;\n}\nexport class Testnet extends Network {\n    static STANDARD = 0x35;\n    static INTEGRATED = 0x36;\n    static SUB_ADDRESS = 0x3f;\n}\nexport class Monero extends Cryptocurrency {\n    static NAME = 'Monero';\n    static SYMBOL = 'XMR';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/monero-project/monero',\n        WHITEPAPER: 'https://github.com/monero-project/research-lab/blob/master/whitepaper/whitepaper.pdf',\n        WEBSITES: [\n            'https://www.getmonero.org'\n        ]\n    });\n    static ECC = SLIP10Ed25519MoneroECC;\n    static COIN_TYPE = CoinTypes.Monero;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet,\n        STAGENET: Stagenet,\n        TESTNET: Testnet\n    });\n    static DEFAULT_NETWORK = Monero.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        { MONERO: 'Monero' },\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        { MONERO: 'Monero' },\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        { MONERO: 'Monero' },\n        'BIP39'\n    ]);\n    static HDS = new HDs({\n        MONERO: 'Monero'\n    });\n    static DEFAULT_HD = Monero.HDS.MONERO;\n    static DEFAULT_PATH = `m/44'/${Monero.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        MONERO: 'Monero'\n    });\n    static DEFAULT_ADDRESS = Monero.ADDRESSES.MONERO;\n    static ADDRESS_TYPES = new AddressTypes({\n        STANDARD: 'standard',\n        INTEGRATED: 'integrated',\n        SUB_ADDRESS: 'sub-address'\n    });\n    static DEFAULT_ADDRESS_TYPE = Monero.ADDRESS_TYPES.STANDARD;\n    static PARAMS = new Params({\n        CHECKSUM_LENGTH: 0x04,\n        PAYMENT_ID_LENGTH: 0x08\n    });\n}\n//# sourceMappingURL=monero.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, WitnessVersions, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x33;\n    static SCRIPT_ADDRESS_PREFIX = 0x1c;\n    static HRP = 'monkey';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2WPKH: 0x00,\n        P2WSH: 0x00\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488dde4,\n        P2SH: 0x0488dde4,\n        P2WPKH: 0x0488dde4,\n        P2WPKH_IN_P2SH: 0x0488dde4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e,\n        P2WPKH: 0x0488b21e,\n        P2WPKH_IN_P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = 'Monkey Signed Message:\\n';\n    static WIF_PREFIX = 0x37;\n}\nexport class Monk extends Cryptocurrency {\n    static NAME = 'Monk';\n    static SYMBOL = 'MONK';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/decenomy/MONK',\n        WHITEPAPER: 'https://decenomy.net/wp-content/uploads/DECENOMY_WP_v1.0_EN.pdf',\n        WEBSITES: [\n            'http://www.monkey.vision'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Monk;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Monk.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Monk.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Monk.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH',\n        'P2WPKH',\n        { P2WPKH_IN_P2SH: 'P2WPKH-In-P2SH' }\n    ]);\n    static DEFAULT_ADDRESS = Monk.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=monk.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Ed25519ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static HRP = 'erd';\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n}\nexport class MultiversX extends Cryptocurrency {\n    static NAME = 'MultiversX';\n    static SYMBOL = 'EGLD';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/multiversx/mx-chain-go',\n        WHITEPAPER: 'https://files.multiversx.com/multiversx-whitepaper.pdf',\n        WEBSITES: [\n            'https://multiversx.com',\n            'https://multiversx.com/ecosystem'\n        ]\n    });\n    static ECC = SLIP10Ed25519ECC;\n    static COIN_TYPE = CoinTypes.MultiversX;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = MultiversX.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = MultiversX.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${MultiversX.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        MULTIVERSX: 'MultiversX'\n    });\n    static DEFAULT_ADDRESS = MultiversX.ADDRESSES.MULTIVERSX;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=multiversx.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x32;\n    static SCRIPT_ADDRESS_PREFIX = 0x09;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = null;\n    static WIF_PREFIX = 0xb2;\n}\nexport class Myriadcoin extends Cryptocurrency {\n    static NAME = 'Myriadcoin';\n    static SYMBOL = 'XMY';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/myriadteam/myriadcoin',\n        WEBSITES: [\n            'http://myriadcoin.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Myriadcoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Myriadcoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Myriadcoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Myriadcoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Myriadcoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=myriadcoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x34;\n    static SCRIPT_ADDRESS_PREFIX = 0x0d;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = null;\n    static WIF_PREFIX = 0x80;\n}\nexport class Namecoin extends Cryptocurrency {\n    static NAME = 'Namecoin';\n    static SYMBOL = 'NMC';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/namecoin/namecoin-core',\n        WHITEPAPER: 'https://www.namecoin.org/resources/whitepaper',\n        WEBSITES: [\n            'https://www.namecoin.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Namecoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Namecoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Namecoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Namecoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Namecoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=namecoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Ed25519Blake2bECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, Params, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n}\nexport class Nano extends Cryptocurrency {\n    static NAME = 'Nano';\n    static SYMBOL = 'XNO';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/nanocurrency/nano-node',\n        WHITEPAPER: 'https://nano.org/en/whitepaper',\n        WEBSITES: [\n            'http://nano.org/en'\n        ]\n    });\n    static ECC = SLIP10Ed25519Blake2bECC;\n    static COIN_TYPE = CoinTypes.Nano;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Nano.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Nano.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Nano.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        NANO: 'Nano'\n    });\n    static DEFAULT_ADDRESS = Nano.ADDRESSES.NANO;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n    static PARAMS = new Params({\n        ADDRESS_PREFIX: 'nano_',\n        ALPHABET: '13456789abcdefghijkmnopqrstuwxyz',\n        PAYLOAD_PADDING_DECODED: '000000',\n        PAYLOAD_PADDING_ENCODED: '1111'\n    });\n}\n//# sourceMappingURL=nano.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x35;\n    static SCRIPT_ADDRESS_PREFIX = 0x55;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Navcoin Signed Message:\\n';\n    static WIF_PREFIX = 0x96;\n}\nexport class Navcoin extends Cryptocurrency {\n    static NAME = 'Navcoin';\n    static SYMBOL = 'NAV';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/navcoin/navcoin-core',\n        WHITEPAPER: 'https://doc.nav.community',\n        WEBSITES: [\n            'http://www.navcoin.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Navcoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Navcoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Navcoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Navcoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Navcoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=navcoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Ed25519ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n}\nexport class Near extends Cryptocurrency {\n    static NAME = 'Near';\n    static SYMBOL = 'NEAR';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/near/nearcore',\n        WHITEPAPER: 'https://near.org/papers/the-official-near-white-paper',\n        WEBSITES: [\n            'https://near.org'\n        ]\n    });\n    static ECC = SLIP10Ed25519ECC;\n    static COIN_TYPE = CoinTypes.Near;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Near.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Near.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Near.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        NEAR: 'Near'\n    });\n    static DEFAULT_ADDRESS = Near.ADDRESSES.NEAR;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=near.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x35;\n    static SCRIPT_ADDRESS_PREFIX = 0x70;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Neblio Signed Message:\\n';\n    static WIF_PREFIX = 0xb5;\n}\nexport class Neblio extends Cryptocurrency {\n    static NAME = 'Neblio';\n    static SYMBOL = 'NEBL';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/NeblioTeam/neblio',\n        WHITEPAPER: 'https://nebl.io/wp-content/uploads/2019/06/NeblioWhitepaper.pdf',\n        WEBSITES: [\n            'https://nebl.io'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Neblio;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Neblio.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Neblio.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Neblio.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Neblio.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=neblio.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Nist256p1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, Params, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n}\nexport class Neo extends Cryptocurrency {\n    static NAME = 'Neo';\n    static SYMBOL = 'NEO';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/neo-project/neo',\n        WHITEPAPER: 'https://docs.neo.org/docs/en-us/index.html',\n        WEBSITES: [\n            'https://neo.org'\n        ]\n    });\n    static ECC = SLIP10Nist256p1ECC;\n    static COIN_TYPE = CoinTypes.Neo;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Neo.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Neo.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Neo.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        NEO: 'Neo'\n    });\n    static DEFAULT_ADDRESS = Neo.ADDRESSES.NEO;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n    static PARAMS = new Params({\n        ADDRESS_PREFIX: 0x21,\n        ADDRESS_SUFFIX: 0xac,\n        ADDRESS_VERSION: 0x17,\n        ALPHABET: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n    });\n}\n//# sourceMappingURL=neo.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x35;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18NeosCoin Signed Message:\\n';\n    static WIF_PREFIX = 0xb1;\n}\nexport class Neoscoin extends Cryptocurrency {\n    static NAME = 'Neoscoin';\n    static SYMBOL = 'NEOS';\n    static INFO = new Info({\n        WHITEPAPER: 'http://neoscoin.com/whitepaper/neoscoin.pdf',\n        WEBSITES: [\n            'http://www.getneos.com'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Neoscoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Neoscoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Neoscoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Neoscoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Neoscoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=neoscoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x35;\n    static SCRIPT_ADDRESS_PREFIX = 0x75;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18PPCoin Signed Message:\\n';\n    static WIF_PREFIX = 0xb5;\n}\nexport class Neurocoin extends Cryptocurrency {\n    static NAME = 'Neurocoin';\n    static SYMBOL = 'NRO';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/neurocoin/neurocoin',\n        WEBSITES: [\n            'http://neurocoin.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Neurocoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Neurocoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Neurocoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Neurocoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Neurocoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=neurocoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static HRP = 'neutron';\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n    static WIF_PREFIX = 0x80;\n}\nexport class Neutron extends Cryptocurrency {\n    static NAME = 'Neutron';\n    static SYMBOL = 'NTRN';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/neutron-org',\n        WHITEPAPER: 'https://docs.neutron.org',\n        WEBSITES: [\n            'https://www.neutron.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Neutron;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Neutron.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Neutron.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Neutron.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        COSMOS: 'Cosmos'\n    });\n    static DEFAULT_ADDRESS = Neutron.ADDRESSES.COSMOS;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=neutron.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x3c;\n    static SCRIPT_ADDRESS_PREFIX = 0x16;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18newyorkc Signed Message:\\n';\n    static WIF_PREFIX = 0xbc;\n}\nexport class NewYorkCoin extends Cryptocurrency {\n    static NAME = 'New-York-Coin';\n    static SYMBOL = 'NYC';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/NewYorkCoinNYC/newyorkcoin',\n        WEBSITES: [\n            'https://nycoin.net',\n            'https://newyorkcoin.net'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.NewYorkCoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = NewYorkCoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = NewYorkCoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${NewYorkCoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = NewYorkCoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=newyorkcoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n    static WIF_PREFIX = 0x80;\n}\nexport class NineChronicles extends Cryptocurrency {\n    static NAME = 'Nine-Chronicles';\n    static SYMBOL = 'NCG';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/planetarium/NineChronicles',\n        WEBSITES: [\n            'https://nine-chronicles.com',\n            'https://presale.nine-chronicles.com'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.NineChronicles;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = NineChronicles.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = NineChronicles.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${NineChronicles.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        ETHEREUM: 'Ethereum'\n    });\n    static DEFAULT_ADDRESS = NineChronicles.ADDRESSES.ETHEREUM;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=ninechronicles.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, WitnessVersions, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x26;\n    static SCRIPT_ADDRESS_PREFIX = 0x35;\n    static HRP = 'nix';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2WPKH: 0x00,\n        P2WSH: 0x00\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4,\n        P2WPKH: 0x0488ade4,\n        P2WPKH_IN_P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e,\n        P2WPKH: 0x0488b21e,\n        P2WPKH_IN_P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Nix Signed Message:\\n';\n    static WIF_PREFIX = 0x80;\n}\nexport class NIX extends Cryptocurrency {\n    static NAME = 'NIX';\n    static SYMBOL = 'NIX';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/NixPlatform/NixCore',\n        WHITEPAPER: 'https://nixplatform.io/about/documentation',\n        WEBSITES: [\n            'https://nixplatform.io',\n            'https://governance.nixplatform.io'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.NIX;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = NIX.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = NIX.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${NIX.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH',\n        'P2WPKH',\n        { P2WPKH_IN_P2SH: 'P2WPKH-In-P2SH' }\n    ]);\n    static DEFAULT_ADDRESS = NIX.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=nix.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x08;\n    static SCRIPT_ADDRESS_PREFIX = 0x14;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18NovaCoin Signed Message:\\n';\n    static WIF_PREFIX = 0x88;\n}\nexport class Novacoin extends Cryptocurrency {\n    static NAME = 'Novacoin';\n    static SYMBOL = 'NVC';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/novacoin-project/novacoin',\n        WHITEPAPER: 'https://github.com/novacoin-project/novacoin/wiki',\n        WEBSITES: [\n            'https://nova-coin.org',\n            'https://novacoin.one'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Novacoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Novacoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Novacoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Novacoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Novacoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=novacoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x19;\n    static SCRIPT_ADDRESS_PREFIX = 0x1a;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Nu Signed Message:\\n';\n    static WIF_PREFIX = 0x96;\n}\nexport class NuBits extends Cryptocurrency {\n    static NAME = 'NuBits';\n    static SYMBOL = 'NBT';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://bitbucket.org/NuNetwork/nubits',\n        WHITEPAPER: 'https://nubits.com/assets/nu-whitepaper-23_sept_2014-en.pdf',\n        WEBSITES: [\n            'https://www.nubits.com'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.NuBits;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = NuBits.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = NuBits.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${NuBits.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = NuBits.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=nubits.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x3f;\n    static SCRIPT_ADDRESS_PREFIX = 0x40;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Nu Signed Message:\\n';\n    static WIF_PREFIX = 0x95;\n}\nexport class NuShares extends Cryptocurrency {\n    static NAME = 'NuShares';\n    static SYMBOL = 'NSR';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://bitbucket.org/JordanLeePeershares/nubit/overview',\n        WHITEPAPER: 'https://nubits.com/whitepaper',\n        WEBSITES: [\n            'https://nubits.com/nushares'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.NuShares;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = NuShares.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = NuShares.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${NuShares.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = NuShares.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=nushares.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x37;\n    static SCRIPT_ADDRESS_PREFIX = 0x1c;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x03cc1c73,\n        P2SH: 0x03cc1c73\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x03cc23d7,\n        P2SH: 0x03cc23d7\n    });\n    static MESSAGE_PREFIX = '\\x18OKCash Signed Message:\\n';\n    static WIF_PREFIX = 0x03;\n}\nexport class OKCash extends Cryptocurrency {\n    static NAME = 'OK-Cash';\n    static SYMBOL = 'OK';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/okcashpro/okcash',\n        WHITEPAPER: 'https://github.com/okcashpro/okcash-whitepaper',\n        WEBSITES: [\n            'http://okcash.co'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.OKCash;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = OKCash.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = OKCash.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${OKCash.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = OKCash.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=okcash.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static HRP = 'ex';\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n    static WIF_PREFIX = 0x80;\n}\nexport class OKTChain extends Cryptocurrency {\n    static NAME = 'OKT-Chain';\n    static SYMBOL = 'OKT';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/okex/okexchain',\n        WHITEPAPER: 'https://okc-docs.readthedocs.io/en/latest',\n        WEBSITES: [\n            'https://www.okx.com/okc'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.OKTChain;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = OKTChain.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = OKTChain.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${OKTChain.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        OKT_CHAIN: 'OKT-Chain'\n    });\n    static DEFAULT_ADDRESS = OKTChain.ADDRESSES.OKT_CHAIN;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=oktchain.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x00;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Bitcoin Signed Message:\\n';\n    static WIF_PREFIX = 0x80;\n}\nexport class Testnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x6f;\n    static SCRIPT_ADDRESS_PREFIX = 0xc4;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x04358394,\n        P2SH: 0x04358394\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x043587cf,\n        P2SH: 0x043587cf\n    });\n    static MESSAGE_PREFIX = '\\x18Bitcoin Signed Message:\\n';\n    static WIF_PREFIX = 0xef;\n}\nexport class Omni extends Cryptocurrency {\n    static NAME = 'Omni';\n    static SYMBOL = 'OMNI';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/omnilayer/omnicore',\n        WHITEPAPER: 'https://github.com/OmniLayer/spec',\n        WEBSITES: [\n            'http://www.omnilayer.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Omni;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet,\n        TESTNET: Testnet\n    });\n    static DEFAULT_NETWORK = Omni.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Omni.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Omni.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Omni.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=omni.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x4b;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = 'ONIX Signed Message:\\n';\n    static WIF_PREFIX = 0xcb;\n}\nexport class Onix extends Cryptocurrency {\n    static NAME = 'Onix';\n    static SYMBOL = 'ONX';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/onix-project',\n        WEBSITES: [\n            'http://www.onixcoin.com'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Onix;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Onix.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Onix.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Onix.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Onix.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=onix.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Nist256p1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, Params, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n}\nexport class Ontology extends Cryptocurrency {\n    static NAME = 'Ontology';\n    static SYMBOL = 'ONT';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/ontio/ontology',\n        WHITEPAPER: 'https://docs.ont.io',\n        WEBSITES: [\n            'https://ont.io'\n        ]\n    });\n    static ECC = SLIP10Nist256p1ECC;\n    static COIN_TYPE = CoinTypes.Ontology;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Ontology.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Ontology.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Ontology.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        NEO: 'Neo'\n    });\n    static DEFAULT_ADDRESS = Ontology.ADDRESSES.NEO;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n    static PARAMS = new Params({\n        ADDRESS_VERSION: 0x17\n    });\n}\n//# sourceMappingURL=ontology.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n    static WIF_PREFIX = 0x80;\n}\nexport class Optimism extends Cryptocurrency {\n    static NAME = 'Optimism';\n    static SYMBOL = 'OP';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/ethereum-optimism',\n        WEBSITES: [\n            'https://www.optimism.io'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Optimism;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Optimism.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Optimism.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Optimism.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        ETHEREUM: 'Ethereum'\n    });\n    static DEFAULT_ADDRESS = Optimism.ADDRESSES.ETHEREUM;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=optimism.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static HRP = 'osmo';\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n    static WIF_PREFIX = 0x80;\n}\nexport class Osmosis extends Cryptocurrency {\n    static NAME = 'Osmosis';\n    static SYMBOL = 'OSMO';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/osmosis-labs/osmosis',\n        WEBSITES: [\n            'https://osmosis.zone'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Osmosis;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Osmosis.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Osmosis.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Osmosis.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        COSMOS: 'Cosmos'\n    });\n    static DEFAULT_ADDRESS = Osmosis.ADDRESSES.COSMOS;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=osmosis.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, WitnessVersions, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x38;\n    static SCRIPT_ADDRESS_PREFIX = 0x3c;\n    static HRP = 'pw';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2WPKH: 0x00,\n        P2WSH: 0x00\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x8f1daeb8,\n        P2SH: 0x8f1daeb8\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x696e82d1,\n        P2SH: 0x696e82d1\n    });\n    static MESSAGE_PREFIX = '\\x18Bitcoin Signed Message:\\n';\n    static WIF_PREFIX = 0x6c;\n}\nexport class Particl extends Cryptocurrency {\n    static NAME = 'Particl';\n    static SYMBOL = 'PART';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/particl/particl-core',\n        WHITEPAPER: 'https://github.com/particl/whitepaper/blob/master/Particl%20Whitepaper%20Draft%20v0.3.pdf',\n        WEBSITES: [\n            'http://particl.io',\n            'https://particl.store'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Particl;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Particl.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Particl.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Particl.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Particl.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=particl.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x37;\n    static SCRIPT_ADDRESS_PREFIX = 0x75;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = null;\n    static WIF_PREFIX = 0xb7;\n}\nexport class Peercoin extends Cryptocurrency {\n    static NAME = 'Peercoin';\n    static SYMBOL = 'PPC';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/peercoin/peercoin',\n        WHITEPAPER: 'https://docs.peercoin.net',\n        WEBSITES: [\n            'http://www.peercoin.net'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Peercoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Peercoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Peercoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Peercoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Peercoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=peercoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x37;\n    static SCRIPT_ADDRESS_PREFIX = 0x55;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Pesobit Signed Message:\\n';\n    static WIF_PREFIX = 0xb7;\n}\nexport class Pesobit extends Cryptocurrency {\n    static NAME = 'Pesobit';\n    static SYMBOL = 'PSB';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/pesobitph/pesobit-source',\n        WEBSITES: [\n            'http://www.pesobit.net'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Pesobit;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Pesobit.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Pesobit.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Pesobit.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Pesobit.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=pesobit.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x37;\n    static SCRIPT_ADDRESS_PREFIX = 0x0d;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0221312b,\n        P2SH: 0x0221312b\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x022d2533,\n        P2SH: 0x022d2533\n    });\n    static MESSAGE_PREFIX = '\\x18Phore Signed Message:\\n';\n    static WIF_PREFIX = 0xd4;\n}\nexport class Phore extends Cryptocurrency {\n    static NAME = 'Phore';\n    static SYMBOL = 'PHR';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/phoreproject/Phore',\n        WHITEPAPER: 'https://www.dropbox.com/s/6uf405mdbdvs6iq/Phore%20White%20Paper%20v.1.1a.pdf?dl=0',\n        WEBSITES: [\n            'https://phore.io'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Phore;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Phore.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Phore.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Phore.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Phore.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=phore.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Ed25519ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, AddressTypes, Networks, Params, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n}\nexport class PiNetwork extends Cryptocurrency {\n    static NAME = 'Pi-Network';\n    static SYMBOL = 'PI';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/pi-apps',\n        WHITEPAPER: 'https://minepi.com/white-paper',\n        WEBSITES: [\n            'https://minepi.com'\n        ]\n    });\n    static ECC = SLIP10Ed25519ECC;\n    static COIN_TYPE = CoinTypes.PiNetwork;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = PiNetwork.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = PiNetwork.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${PiNetwork.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        STELLAR: 'Stellar'\n    });\n    static DEFAULT_ADDRESS = PiNetwork.ADDRESSES.STELLAR;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n    static ADDRESS_TYPES = new AddressTypes({\n        PRIVATE_KEY: 'private_key',\n        PUBLIC_KEY: 'public_key'\n    });\n    static DEFAULT_ADDRESS_TYPE = PiNetwork.ADDRESS_TYPES.PUBLIC_KEY;\n    static PARAMS = new Params({\n        CHECKSUM_LENGTH: 0x02,\n        ADDRESS_TYPES: {\n            PRIVATE_KEY: 18 << 3,\n            PUBLIC_KEY: 6 << 3\n        }\n    });\n}\n//# sourceMappingURL=pinetwork.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x03;\n    static SCRIPT_ADDRESS_PREFIX = 0x1c;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Pinkcoin Signed Message:\\n';\n    static WIF_PREFIX = 0x83;\n}\nexport class Pinkcoin extends Cryptocurrency {\n    static NAME = 'Pinkcoin';\n    static SYMBOL = 'PINK';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/Pink2Dev/Pink2',\n        WEBSITES: [\n            'http://getstarted.with.pink',\n            'https://beta.donate.with.pink'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Pinkcoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Pinkcoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Pinkcoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Pinkcoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Pinkcoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=pinkcoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x1e;\n    static SCRIPT_ADDRESS_PREFIX = 0x0d;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0221312b,\n        P2SH: 0x0221312b\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x022d2533,\n        P2SH: 0x022d2533\n    });\n    static MESSAGE_PREFIX = null;\n    static WIF_PREFIX = 0xd4;\n}\nexport class Testnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x8b;\n    static SCRIPT_ADDRESS_PREFIX = 0x13;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x3a805837,\n        P2SH: 0x3a805837\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x3a8061a0,\n        P2SH: 0x3a8061a0\n    });\n    static MESSAGE_PREFIX = null;\n    static WIF_PREFIX = 0xef;\n}\nexport class Pivx extends Cryptocurrency {\n    static NAME = 'Pivx';\n    static SYMBOL = 'PIVX';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/PIVX-Project/PIVX',\n        WHITEPAPER: 'https://pivx.org/whitepaper',\n        WEBSITES: [\n            'https://pivx.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Pivx;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet,\n        TESTNET: Testnet\n    });\n    static DEFAULT_NETWORK = Pivx.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Pivx.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Pivx.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Pivx.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=pivx.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n    static WIF_PREFIX = 0x80;\n}\nexport class Polygon extends Cryptocurrency {\n    static NAME = 'Polygon';\n    static SYMBOL = 'MATIC';\n    static INFO = new Info({\n        WHITEPAPER: 'https://github.com/maticnetwork/contracts',\n        WEBSITES: [\n            'https://github.com/maticnetwork/whitepaper',\n            'https://polygon.technology'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Polygon;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Polygon.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Polygon.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Polygon.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        ETHEREUM: 'Ethereum'\n    });\n    static DEFAULT_ADDRESS = Polygon.ADDRESSES.ETHEREUM;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=polygon.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x37;\n    static SCRIPT_ADDRESS_PREFIX = 0x55;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Poswcoin Signed Message:\\n';\n    static WIF_PREFIX = 0xb7;\n}\nexport class PoSWCoin extends Cryptocurrency {\n    static NAME = 'PoSW-Coin';\n    static SYMBOL = 'POSW';\n    static INFO = new Info({\n        WEBSITES: [\n            'https://posw.io'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.PoSWCoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = PoSWCoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = PoSWCoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${PoSWCoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = PoSWCoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=poswcoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x37;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Potcoin Signed Message:\\n';\n    static WIF_PREFIX = 0xb7;\n}\nexport class Potcoin extends Cryptocurrency {\n    static NAME = 'Potcoin';\n    static SYMBOL = 'POT';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/potcoin/Potcoin',\n        WHITEPAPER: 'https://www.potcoin.com/images/blog-images/PotCoin-4.20.2016.pdf',\n        WEBSITES: [\n            'http://www.potcoin.com'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Potcoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Potcoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Potcoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Potcoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Potcoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=potcoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x37;\n    static SCRIPT_ADDRESS_PREFIX = 0x08;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0221312b,\n        P2SH: 0x0221312b\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x022d2533,\n        P2SH: 0x022d2533\n    });\n    static MESSAGE_PREFIX = '\\x18ProjectCoin Signed Message:\\n';\n    static WIF_PREFIX = 0x75;\n}\nexport class ProjectCoin extends Cryptocurrency {\n    static NAME = 'Project-Coin';\n    static SYMBOL = 'PRJ';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/projectcoincore/ProjectCoin',\n        WEBSITES: [\n            'https://projectcoin.net'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.ProjectCoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = ProjectCoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = ProjectCoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${ProjectCoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = ProjectCoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=projectcoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x37;\n    static SCRIPT_ADDRESS_PREFIX = 0x14;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18PutinCoin Signed Message:\\n';\n    static WIF_PREFIX = 0xb7;\n}\nexport class Putincoin extends Cryptocurrency {\n    static NAME = 'Putincoin';\n    static SYMBOL = 'PUT';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/PutinCoinPUT/PutinCoin',\n        WHITEPAPER: 'https://putincoin.org/putincoin.pdf',\n        WEBSITES: [\n            'https://putincoin.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Putincoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Putincoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Putincoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Putincoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Putincoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=putincoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, WitnessVersions, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static SCRIPT_ADDRESS_PREFIX = 0x32;\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x3a;\n    static HRP = 'qc1';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2TR: 0x01,\n        P2WPKH: 0x00,\n        P2WSH: 0x00\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4,\n        P2WPKH: 0x045f18bc,\n        P2WPKH_IN_P2SH: 0x049d7878,\n        P2WSH: 0x02aa7a99,\n        P2WSH_IN_P2SH: 0x0295b005\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e,\n        P2WPKH: 0x045f1cf6,\n        P2WPKH_IN_P2SH: 0x049d7cb2,\n        P2WSH: 0x02aa7ed3,\n        P2WSH_IN_P2SH: 0x0295b43f\n    });\n    static MESSAGE_PREFIX = null;\n    static WIF_PREFIX = 0x80;\n}\nexport class Testnet extends Network {\n    static SCRIPT_ADDRESS_PREFIX = 0x6e;\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x78;\n    static HRP = 'tq1';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2TR: 0x01,\n        P2WPKH: 0x00,\n        P2WSH: 0x00\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x04358394,\n        P2SH: 0x04358394,\n        P2WPKH: 0x045f18bc,\n        P2WPKH_IN_P2SH: 0x044a4e28,\n        P2WSH: 0x02575048,\n        P2WSH_IN_P2SH: 0x024285b5\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x043587cf,\n        P2SH: 0x043587cf,\n        P2WPKH: 0x045f1cf6,\n        P2WPKH_IN_P2SH: 0x044a5262,\n        P2WSH: 0x02575483,\n        P2WSH_IN_P2SH: 0x024289ef\n    });\n    static MESSAGE_PREFIX = null;\n    static WIF_PREFIX = 0xef;\n}\nexport class Qtum extends Cryptocurrency {\n    static NAME = 'Qtum';\n    static SYMBOL = 'QTUM';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/qtumproject/qtum',\n        WHITEPAPER: 'https://qtumorg.s3.ap-northeast-2.amazonaws.com/Qtum_New_Whitepaper_en.pdf',\n        WEBSITES: [\n            'https://qtum.org',\n            'https://qtum.info'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Qtum;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet,\n        TESTNET: Testnet\n    });\n    static DEFAULT_NETWORK = Qtum.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44',\n        'BIP49',\n        'BIP84',\n        'BIP86',\n        'BIP141'\n    ]);\n    static DEFAULT_HD = Qtum.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Qtum.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH',\n        'P2TR',\n        'P2WPKH',\n        { P2WPKH_IN_P2SH: 'P2WPKH-In-P2SH' },\n        'P2WSH',\n        { P2WSH_IN_P2SH: 'P2WSH-In-P2SH' }\n    ]);\n    static DEFAULT_ADDRESS = Qtum.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=qtum.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x3d;\n    static SCRIPT_ADDRESS_PREFIX = 0x06;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = 'DarkNet Signed Message:\\n';\n    static WIF_PREFIX = 0x2e;\n}\nexport class Rapids extends Cryptocurrency {\n    static NAME = 'Rapids';\n    static SYMBOL = 'RPD';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/RapidsOfficial/Rapids',\n        WHITEPAPER: 'https://www.rapidsnetwork.io/whitepaper',\n        WEBSITES: [\n            'https://www.rapidsnetwork.io'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Rapids;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Rapids.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Rapids.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Rapids.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Rapids.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=rapids.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, WitnessVersions, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x3c;\n    static SCRIPT_ADDRESS_PREFIX = 0x7a;\n    static HRP = 'ra';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2WPKH: 0x0c,\n        P2WSH: 0x0c\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4,\n        P2WPKH: 0x04b2430c,\n        P2WPKH_IN_P2SH: 0x049d7878,\n        P2WSH: 0x02aa7a99,\n        P2WSH_IN_P2SH: 0x0295b005\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e,\n        P2WPKH: 0x04b24746,\n        P2WPKH_IN_P2SH: 0x049d7cb2,\n        P2WSH: 0x02aa7ed3,\n        P2WSH_IN_P2SH: 0x0295b43f\n    });\n    static MESSAGE_PREFIX = 'Raven Signed Message:\\n';\n    static WIF_PREFIX = 0x80;\n}\nexport class Testnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x6f;\n    static SCRIPT_ADDRESS_PREFIX = 0xc4;\n    static HRP = 'tr';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2WPKH: 0x00,\n        P2WSH: 0x00\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4,\n        P2WPKH: 0x04b2430c,\n        P2WPKH_IN_P2SH: 0x049d7878,\n        P2WSH: 0x02aa7a99,\n        P2WSH_IN_P2SH: 0x0295b005\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e,\n        P2WPKH: 0x04b24746,\n        P2WPKH_IN_P2SH: 0x049d7cb2,\n        P2WSH: 0x02aa7ed3,\n        P2WSH_IN_P2SH: 0x0295b43f\n    });\n    static MESSAGE_PREFIX = 'Raven Signed Message:\\n';\n    static WIF_PREFIX = 0x80;\n}\nexport class Ravencoin extends Cryptocurrency {\n    static NAME = 'Ravencoin';\n    static SYMBOL = 'RVN';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/RavenProject/Ravencoin',\n        WHITEPAPER: 'https://ravencoin.org/whitepaper',\n        WEBSITES: [\n            'https://ravencoin.org',\n            'https://getravencoin.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Ravencoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet,\n        TESTNET: Testnet\n    });\n    static DEFAULT_NETWORK = Ravencoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Ravencoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Ravencoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH',\n        'P2WPKH',\n        { P2WPKH_IN_P2SH: 'P2WPKH-In-P2SH' },\n        'P2WSH',\n        { P2WSH_IN_P2SH: 'P2WSH-In-P2SH' }\n    ]);\n    static DEFAULT_ADDRESS = Ravencoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=ravencoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x3d;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Reddcoin Signed Message:\\n';\n    static WIF_PREFIX = 0xbd;\n}\nexport class Reddcoin extends Cryptocurrency {\n    static NAME = 'Reddcoin';\n    static SYMBOL = 'RDD';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/reddcoin-project/reddcoin',\n        WHITEPAPER: 'https://redd.love/assets/doc/Redd-Paper.pdf',\n        WEBSITES: [\n            'http://www.reddcoin.com',\n            'https://redd.love'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Reddcoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Reddcoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Reddcoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Reddcoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Reddcoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=reddcoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, Params, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x00;\n    static SCRIPT_ADDRESS_PREFIX = 0x00;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = null;\n    static WIF_PREFIX = 0x80;\n}\nexport class Ripple extends Cryptocurrency {\n    static NAME = 'Ripple';\n    static SYMBOL = 'XRP';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/ripple/rippled',\n        WHITEPAPER: 'https://ripple.com/files/ripple_consensus_whitepaper.pdf',\n        WEBSITES: [\n            'https://xrpl.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Ripple;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Ripple.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Ripple.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Ripple.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        RIPPLE: 'Ripple'\n    });\n    static DEFAULT_ADDRESS = Ripple.ADDRESSES.RIPPLE;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n    static PARAMS = new Params({\n        ALPHABET: 'rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz'\n    });\n}\n//# sourceMappingURL=ripple.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x19;\n    static SCRIPT_ADDRESS_PREFIX = 0x69;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x15Rito Signed Message:\\n';\n    static WIF_PREFIX = 0x8b;\n}\nexport class Ritocoin extends Cryptocurrency {\n    static NAME = 'Ritocoin';\n    static SYMBOL = 'RITO';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/RitoProject/Ritocoin',\n        WHITEPAPER: 'https://ritocoin.org/docs/whitepaper_gfx.pdf',\n        WEBSITES: [\n            'https://ritocoin.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Ritocoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Ritocoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Ritocoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Ritocoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Ritocoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=ritocoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x00;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18RSK Signed Message:\\n';\n    static WIF_PREFIX = 0x80;\n}\nexport class Testnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x6f;\n    static SCRIPT_ADDRESS_PREFIX = 0xc4;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x04358394,\n        P2SH: 0x04358394\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x043587cf,\n        P2SH: 0x043587cf\n    });\n    static MESSAGE_PREFIX = '\\x18RSK Testnet Signed Message:\\n';\n    static WIF_PREFIX = 0xef;\n}\nexport class RSK extends Cryptocurrency {\n    static NAME = 'RSK';\n    static SYMBOL = 'RBTC';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/rsksmart',\n        WHITEPAPER: 'https://developers.rsk.co',\n        WEBSITES: [\n            'https://rootstock.io'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.RSK;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet,\n        TESTNET: Testnet\n    });\n    static DEFAULT_NETWORK = RSK.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = RSK.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${RSK.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = RSK.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=rsk.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x3c;\n    static SCRIPT_ADDRESS_PREFIX = 0x55;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Rubycoin Signed Message:\\n';\n    static WIF_PREFIX = 0xbc;\n}\nexport class Rubycoin extends Cryptocurrency {\n    static NAME = 'Rubycoin';\n    static SYMBOL = 'RBY';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/rubycoinorg/rubycoin',\n        WEBSITES: [\n            'http://www.rubycoin.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Rubycoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Rubycoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Rubycoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Rubycoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Rubycoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=rubycoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x3d;\n    static SCRIPT_ADDRESS_PREFIX = 0x56;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Safecoin Signed Message:\\n';\n    static WIF_PREFIX = 0xbd;\n}\nexport class Safecoin extends Cryptocurrency {\n    static NAME = 'Safecoin';\n    static SYMBOL = 'SAFE';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/Fair-Exchange/safecoin',\n        WHITEPAPER: 'https://safecoin.org/assets/SafeWhitePaper.pdf',\n        WEBSITES: [\n            'https://www.safecoin.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Safecoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Safecoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Safecoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Safecoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Safecoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=safecoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x3f;\n    static SCRIPT_ADDRESS_PREFIX = 0xc4;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Salus Signed Message:\\n';\n    static WIF_PREFIX = 0xbf;\n}\nexport class Saluscoin extends Cryptocurrency {\n    static NAME = 'Saluscoin';\n    static SYMBOL = 'SLS';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/saluscoin/SaluS',\n        WEBSITES: [\n            'http://saluscoin.info',\n            'https://divitia.com'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Saluscoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Saluscoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Saluscoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Saluscoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Saluscoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=saluscoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x3c;\n    static SCRIPT_ADDRESS_PREFIX = 0x7d;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = null;\n    static WIF_PREFIX = 0x6e;\n}\nexport class Scribe extends Cryptocurrency {\n    static NAME = 'Scribe';\n    static SYMBOL = 'SCRIBE';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/scribenetwork/scribe',\n        WEBSITES: [\n            'http://scribe.network'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Scribe;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Scribe.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Scribe.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Scribe.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Scribe.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=scribe.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static HRP = 'secret';\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n    static WIF_PREFIX = 0x80;\n}\nexport class Secret extends Cryptocurrency {\n    static NAME = 'Secret';\n    static SYMBOL = 'SCRT';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/scrtlabs/SecretNetwork',\n        WHITEPAPER: 'https://docs.scrt.network',\n        WEBSITES: [\n            'https://scrt.network'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Secret;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Secret.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Secret.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Secret.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        COSMOS: 'Cosmos'\n    });\n    static DEFAULT_ADDRESS = Secret.ADDRESSES.COSMOS;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=secret.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x3f;\n    static SCRIPT_ADDRESS_PREFIX = 0x7d;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0xee8031e8,\n        P2SH: 0xee8031e8\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0xee80286a,\n        P2SH: 0xee80286a\n    });\n    static MESSAGE_PREFIX = null;\n    static WIF_PREFIX = 0xbf;\n}\nexport class Testnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x7f;\n    static SCRIPT_ADDRESS_PREFIX = 0xc4;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x76c1077a,\n        P2SH: 0x76c1077a\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x76c0fdfb,\n        P2SH: 0x76c0fdfb\n    });\n    static MESSAGE_PREFIX = null;\n    static WIF_PREFIX = 0xff;\n}\nexport class ShadowCash extends Cryptocurrency {\n    static NAME = 'Shadow-Cash';\n    static SYMBOL = 'SDC';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/shadowproject/shadow',\n        WHITEPAPER: 'https://github.com/shadowproject/whitepapers',\n        WEBSITES: [\n            'http://shadowproject.io'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.ShadowCash;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet,\n        TESTNET: Testnet\n    });\n    static DEFAULT_NETWORK = ShadowCash.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = ShadowCash.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${ShadowCash.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = ShadowCash.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=shadowcash.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static HRP = 'certik';\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n    static WIF_PREFIX = 0x80;\n}\nexport class Shentu extends Cryptocurrency {\n    static NAME = 'Shentu';\n    static SYMBOL = 'CTK';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/ShentuChain',\n        WHITEPAPER: 'https://www.shentu.technology/whitepaper',\n        WEBSITES: [\n            'https://www.shentu.technology'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Shentu;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Shentu.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Shentu.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Shentu.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        COSMOS: 'Cosmos'\n    });\n    static DEFAULT_ADDRESS = Shentu.ADDRESSES.COSMOS;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=shentu.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x3f;\n    static SCRIPT_ADDRESS_PREFIX = 0x7d;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0xef69ea80,\n        P2SH: 0xef69ea80\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0xef6adf10,\n        P2SH: 0xef6adf10\n    });\n    static MESSAGE_PREFIX = null;\n    static WIF_PREFIX = 0x46;\n}\nexport class Testnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x6f;\n    static SCRIPT_ADDRESS_PREFIX = 0xc4;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x04358394,\n        P2SH: 0x04358394\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x043587cf,\n        P2SH: 0x043587cf\n    });\n    static MESSAGE_PREFIX = null;\n    static WIF_PREFIX = 0x57;\n}\nexport class Slimcoin extends Cryptocurrency {\n    static NAME = 'Slimcoin';\n    static SYMBOL = 'SLM';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/slimcoin-project/Slimcoin',\n        WEBSITES: [\n            'http://slimco.in',\n            'https://slimcoin-project.github.io'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Slimcoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet,\n        TESTNET: Testnet\n    });\n    static DEFAULT_NETWORK = Slimcoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Slimcoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Slimcoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Slimcoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=slimcoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x19;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x1e5631bc,\n        P2SH: 0x1e5631bc\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x1e562d9a,\n        P2SH: 0x1e562d9a\n    });\n    static MESSAGE_PREFIX = '\\x18Smileycoin Signed Message:\\n';\n    static WIF_PREFIX = 0x05;\n}\nexport class Smileycoin extends Cryptocurrency {\n    static NAME = 'Smileycoin';\n    static SYMBOL = 'SMLY';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/tutor-web/',\n        WHITEPAPER: 'https://tutor-web.info/smileycoin',\n        WEBSITES: [\n            'https://smileyco.in'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Smileycoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Smileycoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Smileycoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Smileycoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Smileycoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=smileycoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Ed25519ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, Params, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n}\nexport class Solana extends Cryptocurrency {\n    static NAME = 'Solana';\n    static SYMBOL = 'SOL';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/solana-labs/solana',\n        WHITEPAPER: 'https://solana.com/solana-whitepaper.pdf',\n        WEBSITES: [\n            'https://solana.com'\n        ]\n    });\n    static ECC = SLIP10Ed25519ECC;\n    static COIN_TYPE = CoinTypes.Solana;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Solana.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Solana.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Solana.COIN_TYPE}'/0'/0`;\n    static ADDRESSES = new Addresses({\n        SOLANA: 'Solana'\n    });\n    static DEFAULT_ADDRESS = Solana.ADDRESSES.SOLANA;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n    static PARAMS = new Params({\n        ALPHABET: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n    });\n}\n//# sourceMappingURL=solana.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x12;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18SolarCoin Signed Message:\\n';\n    static WIF_PREFIX = 0x92;\n}\nexport class Solarcoin extends Cryptocurrency {\n    static NAME = 'Solarcoin';\n    static SYMBOL = 'SLR';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/onsightit/solarcoin',\n        WHITEPAPER: 'https://solarcoin.org/sites/default/files/slr-basic-page/2018-02/SolarCoin_Policy_Paper_FINAL.pdf',\n        WEBSITES: [\n            'http://solarcoin.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Solarcoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Solarcoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Solarcoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Solarcoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Solarcoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=solarcoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static HRP = 'stafi';\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n    static WIF_PREFIX = 0x80;\n}\nexport class Stafi extends Cryptocurrency {\n    static NAME = 'Stafi';\n    static SYMBOL = 'FIS';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/stafiprotocol/stafi-node',\n        WHITEPAPER: 'https://docs.stafi.io',\n        WEBSITES: [\n            'https://www.stafi.io'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Stafi;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Stafi.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Stafi.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Stafi.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        COSMOS: 'Cosmos'\n    });\n    static DEFAULT_ADDRESS = Stafi.ADDRESSES.COSMOS;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=stafi.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x4c;\n    static SCRIPT_ADDRESS_PREFIX = 0x10;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Stash Signed Message:\\n';\n    static WIF_PREFIX = 0xcc;\n}\nexport class Testnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x8c;\n    static SCRIPT_ADDRESS_PREFIX = 0x13;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x04358394,\n        P2SH: 0x04358394\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x043587cf,\n        P2SH: 0x043587cf\n    });\n    static MESSAGE_PREFIX = '\\x18Stash Test Signed Message:\\n';\n    static WIF_PREFIX = 0xef;\n}\nexport class Stash extends Cryptocurrency {\n    static NAME = 'Stash';\n    static SYMBOL = 'STASH';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://docs.stash.capital',\n        WHITEPAPER: 'https://docs.stash.capital',\n        WEBSITES: [\n            'https://stash.capital',\n            'https://app.stash.capital/#/dashboard'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Stash;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet,\n        TESTNET: Testnet\n    });\n    static DEFAULT_NETWORK = Stash.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Stash.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Stash.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Stash.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=stash.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Ed25519ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, AddressTypes, Networks, Params, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n}\nexport class Stellar extends Cryptocurrency {\n    static NAME = 'Stellar';\n    static SYMBOL = 'XLM';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/stellar/stellar-core',\n        WHITEPAPER: 'https://www.stellar.org/papers/stellar-consensus-protocol.pdf',\n        WEBSITES: [\n            'https://www.stellar.org'\n        ]\n    });\n    static ECC = SLIP10Ed25519ECC;\n    static COIN_TYPE = CoinTypes.Stellar;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Stellar.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Stellar.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Stellar.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        STELLAR: 'Stellar'\n    });\n    static DEFAULT_ADDRESS = Stellar.ADDRESSES.STELLAR;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n    static ADDRESS_TYPES = new AddressTypes({\n        PRIVATE_KEY: 'privateKey',\n        PUBLIC_KEY: 'publicKey'\n    });\n    static DEFAULT_ADDRESS_TYPE = Stellar.ADDRESS_TYPES.PRIVATE_KEY;\n    static PARAMS = new Params({\n        CHECKSUM_LENGTH: 0x02,\n        ADDRESS_TYPES: {\n            PRIVATE_KEY: 18 << 3,\n            PUBLIC_KEY: 6 << 3\n        }\n    });\n}\n//# sourceMappingURL=stellar.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x3f;\n    static SCRIPT_ADDRESS_PREFIX = 0x7d;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Stratis Signed Message:\\n';\n    static WIF_PREFIX = 0xbf;\n}\nexport class Testnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x41;\n    static SCRIPT_ADDRESS_PREFIX = 0x7d;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Stratis Test Signed Message:\\n';\n    static WIF_PREFIX = 0xbf;\n}\nexport class Stratis extends Cryptocurrency {\n    static NAME = 'Stratis';\n    static SYMBOL = 'STRAT';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/stratisproject',\n        WHITEPAPER: 'https://www.stratisplatform.com/files/Stratis_Whitepaper.pdf',\n        WEBSITES: [\n            'http://stratisplatform.com'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Stratis;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet,\n        TESTNET: Testnet\n    });\n    static DEFAULT_NETWORK = Stratis.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Stratis.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Stratis.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Stratis.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=stratis.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, WitnessVersions, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x3f;\n    static SCRIPT_ADDRESS_PREFIX = 0x7d;\n    static HRP = 'sugar';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2WPKH: 0x00,\n        P2WSH: 0x00\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4,\n        P2WPKH: 0x04b2430c,\n        P2WPKH_IN_P2SH: 0x049d7878\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e,\n        P2WPKH: 0x04b24746,\n        P2WPKH_IN_P2SH: 0x049d7cb2\n    });\n    static MESSAGE_PREFIX = '\\x18Sugarchain Signed Message:\\n';\n    static WIF_PREFIX = 0x80;\n}\nexport class Testnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x42;\n    static SCRIPT_ADDRESS_PREFIX = 0x80;\n    static HRP = 'tugar';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2WPKH: 0x00,\n        P2WSH: 0x00\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x045f18bc,\n        P2SH: 0x045f18bc,\n        P2WPKH: 0x045f18bc,\n        P2WPKH_IN_P2SH: 0x044a4e28\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x045f1cf6,\n        P2SH: 0x045f1cf6,\n        P2WPKH: 0x045f1cf6,\n        P2WPKH_IN_P2SH: 0x044a5262\n    });\n    static MESSAGE_PREFIX = '\\x18Sugarchain Signed Message:\\n';\n    static WIF_PREFIX = 0xef;\n}\nexport class Sugarchain extends Cryptocurrency {\n    static NAME = 'Sugarchain';\n    static SYMBOL = 'SUGAR';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/sugarchain-project/sugarchain',\n        WHITEPAPER: 'https://sugarchain.org/whitepaper',\n        WEBSITES: [\n            'https://sugarchain.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Sugarchain;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet,\n        TESTNET: Testnet\n    });\n    static DEFAULT_NETWORK = Sugarchain.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Sugarchain.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Sugarchain.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH',\n        'P2WPKH',\n        { P2WPKH_IN_P2SH: 'P2WPKH-In-P2SH' }\n    ]);\n    static DEFAULT_ADDRESS = Sugarchain.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=sugarchain.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Ed25519ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, Params, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n}\nexport class Sui extends Cryptocurrency {\n    static NAME = 'Sui';\n    static SYMBOL = 'SUI';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/MystenLabs/sui',\n        WHITEPAPER: 'https://docs.sui.io',\n        WEBSITES: [\n            'https://sui.io'\n        ]\n    });\n    static ECC = SLIP10Ed25519ECC;\n    static COIN_TYPE = CoinTypes.Sui;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Sui.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Sui.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Sui.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        SUI: 'Sui'\n    });\n    static DEFAULT_ADDRESS = Sui.ADDRESSES.SUI;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n    static PARAMS = new Params({\n        KEY_TYPE: 0x00,\n        ADDRESS_PREFIX: '0x'\n    });\n}\n//# sourceMappingURL=sui.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, WitnessVersions, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x3f;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static HRP = 'sys';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2WPKH: 0x00,\n        P2WSH: 0x00\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4,\n        P2WPKH: 0x04b2430c,\n        P2WPKH_IN_P2SH: 0x049d7878\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e,\n        P2WPKH: 0x04b24746,\n        P2WPKH_IN_P2SH: 0x049d7cb2\n    });\n    static MESSAGE_PREFIX = '\\x18Syscoin Signed Message:\\n';\n    static WIF_PREFIX = 0x80;\n}\nexport class Syscoin extends Cryptocurrency {\n    static NAME = 'Syscoin';\n    static SYMBOL = 'SYS';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/syscoin/syscoin',\n        WHITEPAPER: 'https://syscoin.org/research-whitepapers',\n        WEBSITES: [\n            'http://syscoin.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Syscoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Syscoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Syscoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Syscoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH',\n        'P2WPKH',\n        { P2WPKH_IN_P2SH: 'P2WPKH-In-P2SH' }\n    ]);\n    static DEFAULT_ADDRESS = Syscoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=syscoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static HRP = 'terra';\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n    static WIF_PREFIX = 0x80;\n}\nexport class Terra extends Cryptocurrency {\n    static NAME = 'Terra';\n    static SYMBOL = 'LUNA';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/terra-money/core',\n        WHITEPAPER: 'https://docs.terra.money',\n        WEBSITES: [\n            'https://terra.money'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Terra;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Terra.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Terra.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Terra.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        COSMOS: 'Cosmos'\n    });\n    static DEFAULT_ADDRESS = Terra.ADDRESSES.COSMOS;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=terra.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Ed25519ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, AddressPrefixes, Networks, Params, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n}\nexport class Tezos extends Cryptocurrency {\n    static NAME = 'Tezos';\n    static SYMBOL = 'XTZ';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/tezos/tezos',\n        WHITEPAPER: 'https://tezos.com/whitepaper.pdf',\n        WEBSITES: [\n            'https://www.tezos.com'\n        ]\n    });\n    static ECC = SLIP10Ed25519ECC;\n    static COIN_TYPE = CoinTypes.Tezos;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Tezos.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Tezos.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Tezos.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        TEZOS: 'Tezos'\n    });\n    static DEFAULT_ADDRESS = Tezos.ADDRESSES.TEZOS;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n    static ADDRESS_PREFIXES = new AddressPrefixes({\n        TZ1: 'tz1',\n        TZ2: 'tz2',\n        TZ3: 'tz3'\n    });\n    static DEFAULT_ADDRESS_PREFIX = Tezos.ADDRESS_PREFIXES.TZ1;\n    static PARAMS = new Params({\n        ADDRESS_PREFIXES: {\n            TZ1: '06a19f',\n            TZ2: '06a1a1',\n            TZ3: '06a1a4'\n        }\n    });\n}\n//# sourceMappingURL=tezos.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n    static WIF_PREFIX = 0x80;\n}\nexport class Theta extends Cryptocurrency {\n    static NAME = 'Theta';\n    static SYMBOL = 'THETA';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/thetatoken',\n        WHITEPAPER: 'https://s3.us-east-2.amazonaws.com/assets.thetatoken.org/Theta-white-paper-latest.pdf?v=1553657855.509',\n        WEBSITES: [\n            'https://www.thetatoken.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Theta;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Theta.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Theta.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Theta.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        ETHEREUM: 'Ethereum'\n    });\n    static DEFAULT_ADDRESS = Theta.ADDRESSES.ETHEREUM;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=theta.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x07;\n    static SCRIPT_ADDRESS_PREFIX = 0x09;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x5aebd8c6,\n        P2SH: 0x5aebd8c6\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0xfbc6a00d,\n        P2SH: 0xfbc6a00d\n    });\n    static MESSAGE_PREFIX = null;\n    static WIF_PREFIX = 0x7b;\n}\nexport class ThoughtAI extends Cryptocurrency {\n    static NAME = 'Thought-AI';\n    static SYMBOL = 'THT';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/thoughtnetwork',\n        WHITEPAPER: 'https://github.com/thoughtnetwork/thought-whitepaper',\n        WEBSITES: [\n            'https://thought.live'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.ThoughtAI;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = ThoughtAI.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = ThoughtAI.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${ThoughtAI.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = ThoughtAI.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=thoughtai.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x41;\n    static SCRIPT_ADDRESS_PREFIX = 0x17;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18TOA Signed Message:\\n';\n    static WIF_PREFIX = 0xc1;\n}\nexport class TOACoin extends Cryptocurrency {\n    static NAME = 'TOA-Coin';\n    static SYMBOL = 'TOA';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/toacoin/TOA',\n        WHITEPAPER: 'https://toacoin.com/toa-whitepaper',\n        WEBSITES: [\n            'http://www.toacoin.com'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.TOACoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = TOACoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = TOACoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${TOACoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = TOACoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=toacoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, Params, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x41;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = null;\n    static WIF_PREFIX = 0x80;\n}\nexport class Tron extends Cryptocurrency {\n    static NAME = 'Tron';\n    static SYMBOL = 'TRX';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/tronprotocol/java-tron',\n        WHITEPAPER: 'https://developers.tron.network/docs',\n        WEBSITES: [\n            'https://trondao.org',\n            'https://tron.network'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Tron;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Tron.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Tron.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Tron.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        TRON: 'Tron'\n    });\n    static DEFAULT_ADDRESS = Tron.ADDRESSES.TRON;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n    static PARAMS = new Params({\n        ALPHABET: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n    });\n}\n//# sourceMappingURL=tron.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x49;\n    static SCRIPT_ADDRESS_PREFIX = 0x53;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0221312b,\n        P2SH: 0x0221312b\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x022d2533,\n        P2SH: 0x022d2533\n    });\n    static MESSAGE_PREFIX = null;\n    static WIF_PREFIX = 0x42;\n}\nexport class Testnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x4c;\n    static SCRIPT_ADDRESS_PREFIX = 0x89;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x3a805837,\n        P2SH: 0x3a805837\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x3a8061a0,\n        P2SH: 0x3a8061a0\n    });\n    static MESSAGE_PREFIX = null;\n    static WIF_PREFIX = 0xed;\n}\nexport class TWINS extends Cryptocurrency {\n    static NAME = 'TWINS';\n    static SYMBOL = 'TWINS';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/NewCapital/TWINS-Core',\n        WEBSITES: [\n            'https://win.win'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.TWINS;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet,\n        TESTNET: Testnet\n    });\n    static DEFAULT_NETWORK = TWINS.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = TWINS.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${TWINS.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = TWINS.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=twins.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x44;\n    static SCRIPT_ADDRESS_PREFIX = 0x7d;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0xee8031e8,\n        P2SH: 0xee8031e8\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0xee80286a,\n        P2SH: 0xee80286a\n    });\n    static MESSAGE_PREFIX = '\\x18UltimateSecureCash Signed Message:\\n';\n    static WIF_PREFIX = 0xbf;\n}\nexport class UltimateSecureCash extends Cryptocurrency {\n    static NAME = 'Ultimate-Secure-Cash';\n    static SYMBOL = 'USC';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/SilentTrader/UltimateSecureCash',\n        WHITEPAPER: 'https://ultimatesecurecash.info/#spec',\n        WEBSITES: [\n            'http://ultimatesecurecash.info'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.UltimateSecureCash;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = UltimateSecureCash.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = UltimateSecureCash.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${UltimateSecureCash.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = UltimateSecureCash.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=ultimatesecurecash.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x82;\n    static SCRIPT_ADDRESS_PREFIX = 0x1e;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Unobtanium Signed Message:\\n';\n    static WIF_PREFIX = 0xe0;\n}\nexport class Unobtanium extends Cryptocurrency {\n    static NAME = 'Unobtanium';\n    static SYMBOL = 'UNO';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/unobtanium-official/Unobtanium',\n        WEBSITES: [\n            'http://unobtanium.uno'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Unobtanium;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Unobtanium.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Unobtanium.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Unobtanium.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Unobtanium.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=unobtanium.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x47;\n    static SCRIPT_ADDRESS_PREFIX = 0x08;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Vcash Signed Message:\\n';\n    static WIF_PREFIX = 0xc7;\n}\nexport class Vcash extends Cryptocurrency {\n    static NAME = 'Vcash';\n    static SYMBOL = 'VC';\n    static INFO = new Info({\n        WHITEPAPER: 'https://vcash.finance/wp-content/uploads/2023/01/VCash-3.pdf',\n        WEBSITES: [\n            'https://vcash.finance'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Vcash;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Vcash.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Vcash.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Vcash.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Vcash.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=vcash.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n    static WIF_PREFIX = 0x80;\n}\nexport class VeChain extends Cryptocurrency {\n    static NAME = 'VeChain';\n    static SYMBOL = 'VET';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/vechain',\n        WHITEPAPER: 'https://www.vechain.org/whitepaper/#bit_65sv8',\n        WEBSITES: [\n            'https://www.vechain.org',\n            'https://vebetterdao.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.VeChain;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = VeChain.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = VeChain.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${VeChain.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        ETHEREUM: 'Ethereum'\n    });\n    static DEFAULT_ADDRESS = VeChain.ADDRESSES.ETHEREUM;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=vechain.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x1e;\n    static SCRIPT_ADDRESS_PREFIX = 0x21;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18VERGE Signed Message:\\n';\n    static WIF_PREFIX = 0x9e;\n}\nexport class Verge extends Cryptocurrency {\n    static NAME = 'Verge';\n    static SYMBOL = 'XVG';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/vergecurrency/verge',\n        WHITEPAPER: 'https://vergecurrency.com/static/blackpaper/verge-blackpaper-v5.0.pdf',\n        WEBSITES: [\n            'http://vergecurrency.com'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Verge;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Verge.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Verge.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Verge.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Verge.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=verge.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, WitnessVersions, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x47;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static HRP = 'vtc';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2WPKH: 0x00,\n        P2WSH: 0x00\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4,\n        P2WPKH: 0x0488ade4,\n        P2WPKH_IN_P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e,\n        P2WPKH: 0x0488b21e,\n        P2WPKH_IN_P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Vertcoin Signed Message:\\n';\n    static WIF_PREFIX = 0x80;\n}\nexport class Vertcoin extends Cryptocurrency {\n    static NAME = 'Vertcoin';\n    static SYMBOL = 'VTC';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/vertcoin/vertcoin',\n        WHITEPAPER: 'https://vertcoin.org/specs-explained',\n        WEBSITES: [\n            'http://vertcoin.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Vertcoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Vertcoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Vertcoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Vertcoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH',\n        'P2WPKH',\n        { P2WPKH_IN_P2SH: 'P2WPKH-In-P2SH' }\n    ]);\n    static DEFAULT_ADDRESS = Vertcoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=vertcoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, WitnessVersions, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x47;\n    static SCRIPT_ADDRESS_PREFIX = 0x21;\n    static HRP = 'via';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2WPKH: 0x00,\n        P2WSH: 0x00\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4,\n        P2WPKH: 0x0488ade4,\n        P2WPKH_IN_P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e,\n        P2WPKH: 0x0488b21e,\n        P2WPKH_IN_P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Viacoin Signed Message:\\n';\n    static WIF_PREFIX = 0xc7;\n}\nexport class Testnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x7f;\n    static SCRIPT_ADDRESS_PREFIX = 0xc4;\n    static HRP = 'tvia';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2WPKH: 0x00,\n        P2WSH: 0x00\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x04358394,\n        P2SH: 0x04358394,\n        P2WPKH: 0x045f18bc,\n        P2WPKH_IN_P2SH: 0x044a4e28\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x043587cf,\n        P2SH: 0x043587cf,\n        P2WPKH: 0x045f1cf6,\n        P2WPKH_IN_P2SH: 0x044a5262\n    });\n    static MESSAGE_PREFIX = '\\x18Viacoin Signed Message:\\n';\n    static WIF_PREFIX = 0xff;\n}\nexport class Viacoin extends Cryptocurrency {\n    static NAME = 'Viacoin';\n    static SYMBOL = 'VIA';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/viacoin/viacoin',\n        WHITEPAPER: 'https://github.com/viacoin/documents/blob/master/whitepapers/Viacoin_fullcolor_whitepaper.pdf',\n        WEBSITES: [\n            'http://viacoin.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Viacoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet,\n        TESTNET: Testnet\n    });\n    static DEFAULT_NETWORK = Viacoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Viacoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Viacoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH',\n        'P2WPKH',\n        { P2WPKH_IN_P2SH: 'P2WPKH-In-P2SH' }\n    ]);\n    static DEFAULT_ADDRESS = Viacoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=viacoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x46;\n    static SCRIPT_ADDRESS_PREFIX = 0x0a;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18DarkCoin Signed Message:\\n';\n    static WIF_PREFIX = 0xc6;\n}\nexport class Vivo extends Cryptocurrency {\n    static NAME = 'Vivo';\n    static SYMBOL = 'VIVO';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/vivocoin/vivo',\n        WHITEPAPER: 'https://vivoproject.net/whitepaper.html',\n        WEBSITES: [\n            'http://www.vivoproject.net'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Vivo;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Vivo.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Vivo.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Vivo.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Vivo.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=vivo.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x46;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Voxels Signed Message:\\n';\n    static WIF_PREFIX = 0xc6;\n}\nexport class Voxels extends Cryptocurrency {\n    static NAME = 'Voxels';\n    static SYMBOL = 'VOX';\n    static INFO = new Info({\n        WEBSITES: [\n            'http://revolutionvr.live',\n            'https://thevoxel.com'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Voxels;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Voxels.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Voxels.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Voxels.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Voxels.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=voxels.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x47;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18VpnCoin Signed Message:\\n';\n    static WIF_PREFIX = 0xc7;\n}\nexport class VPNCoin extends Cryptocurrency {\n    static NAME = 'Virtual-Cash';\n    static SYMBOL = 'VASH';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/Bit-Net/vash',\n        WEBSITES: [\n            'http://www.bitnet.cc'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.VPNCoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = VPNCoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = VPNCoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${VPNCoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = VPNCoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=vpncoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x49;\n    static SCRIPT_ADDRESS_PREFIX = 0x3f;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0221312b,\n        P2SH: 0x0221312b\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x022d2533,\n        P2SH: 0x022d2533\n    });\n    static WIF_PREFIX = 0xc7;\n}\nexport class Wagerr extends Cryptocurrency {\n    static NAME = 'Wagerr';\n    static SYMBOL = 'WGR';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/wagerr/wagerr',\n        WHITEPAPER: 'https://www.wagerr.com/wagerr_whitepaper_v1.pdf',\n        WEBSITES: [\n            'https://www.wagerr.com'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Wagerr;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Wagerr.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Wagerr.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Wagerr.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Wagerr.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=wagerr.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x49;\n    static SCRIPT_ADDRESS_PREFIX = 0x57;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x048894ed,\n        P2SH: 0x048894ed\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x04887f1e,\n        P2SH: 0x04887f1e\n    });\n    static MESSAGE_PREFIX = '\\x18Whitecoin Signed Message:\\n';\n    static WIF_PREFIX = 0xc9;\n}\nexport class Whitecoin extends Cryptocurrency {\n    static NAME = 'Whitecoin';\n    static SYMBOL = 'XWC';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/Whitecoin-XWC/Whitecoin-core',\n        WHITEPAPER: 'https://www.whitecoin.info/pdf/Whitecoin%20Technical%20White%20Paper_en.pdf',\n        WEBSITES: [\n            'http://whitecoin.info',\n            'http://xwc.com'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Whitecoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Whitecoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Whitecoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Whitecoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Whitecoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=whitecoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x49;\n    static SCRIPT_ADDRESS_PREFIX = 0x1c;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18WinCoin Signed Message:\\n';\n    static WIF_PREFIX = 0xc9;\n}\nexport class Wincoin extends Cryptocurrency {\n    static NAME = 'Wincoin';\n    static SYMBOL = 'WC';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/Wincoinofficial/wincoin',\n        WHITEPAPER: 'https://wincoin.co/Public/Upload/wincoin/WINCOIN%20-%20Eng%20V%201.0.pdf',\n        WEBSITES: [\n            'https://wincoin.co'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Wincoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Wincoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Wincoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Wincoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Wincoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=wincoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, Params, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n    static WIF_PREFIX = 0x80;\n}\nexport class XinFin extends Cryptocurrency {\n    static NAME = 'XinFin';\n    static SYMBOL = 'XDC';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/XinFinOrg/XDPoSChain',\n        WHITEPAPER: 'https://xinfin.org/docs/whitepaper-tech.pdf',\n        WEBSITES: [\n            'https://www.xdc.org',\n            'https://www.xinfin.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.XinFin;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = XinFin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = XinFin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${XinFin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        XINFIN: 'XinFin'\n    });\n    static DEFAULT_ADDRESS = XinFin.ADDRESSES.XINFIN;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n    static PARAMS = new Params({\n        ADDRESS_PREFIX: 'xdc'\n    });\n}\n//# sourceMappingURL=xinfin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x4b;\n    static SCRIPT_ADDRESS_PREFIX = 0x12;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0221312b,\n        P2SH: 0x0221312b\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x022d2533,\n        P2SH: 0x022d2533\n    });\n    static MESSAGE_PREFIX = null;\n    static WIF_PREFIX = 0xd4;\n}\nexport class XUEZ extends Cryptocurrency {\n    static NAME = 'XUEZ';\n    static SYMBOL = 'XUEZ';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/XUEZ/Xuez-Core',\n        WHITEPAPER: 'https://github.com/XUEZ/Whitepaper',\n        WEBSITES: [\n            'https://xuezcoin.com'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.XUEZ;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = XUEZ.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = XUEZ.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${XUEZ.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = XUEZ.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=xuez.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x00001c28;\n    static SCRIPT_ADDRESS_PREFIX = 0x00001c2c;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Ycash Signed Message:\\n';\n    static WIF_PREFIX = 0x80;\n}\nexport class Ycash extends Cryptocurrency {\n    static NAME = 'Ycash';\n    static SYMBOL = 'YEC';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/ycashfoundation/ycash',\n        WEBSITES: [\n            'https://y.cash',\n            'https://www.ycash.xyz'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Ycash;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Ycash.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Ycash.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Ycash.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Ycash.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=ycash.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x00001cb8;\n    static SCRIPT_ADDRESS_PREFIX = 0x00001cbd;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Zcash Signed Message:\\n';\n    static WIF_PREFIX = 0x80;\n}\nexport class Testnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x00001d25;\n    static SCRIPT_ADDRESS_PREFIX = 0x00001cba;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x04358394,\n        P2SH: 0x04358394\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x043587cf,\n        P2SH: 0x043587cf\n    });\n    static MESSAGE_PREFIX = '\\x18Zcash Signed Message:\\n';\n    static WIF_PREFIX = 0xef;\n}\nexport class Zcash extends Cryptocurrency {\n    static NAME = 'Zcash';\n    static SYMBOL = 'ZEC';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/zcash/zcash',\n        WHITEPAPER: 'https://github.com/zcash/zips/blob/master/protocol/protocol.pdf',\n        WEBSITES: [\n            'https://z.cash'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Zcash;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet,\n        TESTNET: Testnet\n    });\n    static DEFAULT_NETWORK = Zcash.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Zcash.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Zcash.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Zcash.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=zcash.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x00001cb8;\n    static SCRIPT_ADDRESS_PREFIX = 0x00001cbd;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Zcash Signed Message:\\n';\n    static WIF_PREFIX = 0x80;\n}\nexport class ZClassic extends Cryptocurrency {\n    static NAME = 'ZClassic';\n    static SYMBOL = 'ZCL';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/ZClassicCommunity/zclassic',\n        WHITEPAPER: 'https://zclassic.org/zclassic-whitepaper.pdf',\n        WEBSITES: [\n            'https://zclassic.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.ZClassic;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = ZClassic.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = ZClassic.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${ZClassic.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = ZClassic.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=zclassic.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x50;\n    static SCRIPT_ADDRESS_PREFIX = 0x09;\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18Zetacoin Signed Message:\\n';\n    static WIF_PREFIX = 0xe0;\n}\nexport class Zetacoin extends Cryptocurrency {\n    static NAME = 'Zetacoin';\n    static SYMBOL = 'ZET';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/zetacoin/zetacoin',\n        WEBSITES: [\n            'http://www.zetac.org'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Zetacoin;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Zetacoin.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Zetacoin.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Zetacoin.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = Zetacoin.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=zetacoin.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static HRP = 'zil';\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e\n    });\n    static WIF_PREFIX = 0x80;\n}\nexport class Zilliqa extends Cryptocurrency {\n    static NAME = 'Zilliqa';\n    static SYMBOL = 'ZIL';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/Zilliqa/Zilliqa',\n        WHITEPAPER: 'https://docs.zilliqa.com/whitepaper.pdf',\n        WEBSITES: [\n            'https://www.zilliqa.com'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.Zilliqa;\n    static SUPPORT_BIP38 = false;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = Zilliqa.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = Zilliqa.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${Zilliqa.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses({\n        ZILLIQA: 'Zilliqa'\n    });\n    static DEFAULT_ADDRESS = Zilliqa.ADDRESSES.ZILLIQA;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=zilliqa.js.map","// SPDX-License-Identifier: MIT\nimport { CoinTypes } from '../slip44';\nimport { SLIP10Secp256k1ECC } from '../eccs';\nimport { Info, WitnessVersions, Entropies, Mnemonics, Seeds, HDs, Addresses, Networks, XPrivateKeyVersions, XPublicKeyVersions } from '../consts';\nimport { Cryptocurrency, Network } from './cryptocurrency';\nexport class Mainnet extends Network {\n    static PUBLIC_KEY_ADDRESS_PREFIX = 0x00;\n    static SCRIPT_ADDRESS_PREFIX = 0x05;\n    static HRP = 'bc';\n    static WITNESS_VERSIONS = new WitnessVersions({\n        P2WPKH: 0x00,\n        P2WSH: 0x00\n    });\n    static XPRIVATE_KEY_VERSIONS = new XPrivateKeyVersions({\n        P2PKH: 0x0488ade4,\n        P2SH: 0x0488ade4\n    });\n    static XPUBLIC_KEY_VERSIONS = new XPublicKeyVersions({\n        P2PKH: 0x0488b21e,\n        P2SH: 0x0488b21e\n    });\n    static MESSAGE_PREFIX = '\\x18ZooBC Signed Message:\\n';\n    static WIF_PREFIX = 0x80;\n}\nexport class ZooBC extends Cryptocurrency {\n    static NAME = 'ZooBC';\n    static SYMBOL = 'ZBC';\n    static INFO = new Info({\n        SOURCE_CODE: 'https://github.com/zoobc/zoobc-core',\n        WHITEPAPER: 'https://git.hush.is',\n        WEBSITES: [\n            'https://zoobc.one',\n            'https://zoobc.com'\n        ]\n    });\n    static ECC = SLIP10Secp256k1ECC;\n    static COIN_TYPE = CoinTypes.ZooBC;\n    static SUPPORT_BIP38 = true;\n    static NETWORKS = new Networks({\n        MAINNET: Mainnet\n    });\n    static DEFAULT_NETWORK = ZooBC.NETWORKS.MAINNET;\n    static ENTROPIES = new Entropies([\n        'BIP39'\n    ]);\n    static MNEMONICS = new Mnemonics([\n        'BIP39'\n    ]);\n    static SEEDS = new Seeds([\n        'BIP39'\n    ]);\n    static HDS = new HDs([\n        'BIP32',\n        'BIP44'\n    ]);\n    static DEFAULT_HD = ZooBC.HDS.BIP44;\n    static DEFAULT_PATH = `m/44'/${ZooBC.COIN_TYPE}'/0'/0/0`;\n    static ADDRESSES = new Addresses([\n        'P2PKH',\n        'P2SH'\n    ]);\n    static DEFAULT_ADDRESS = ZooBC.ADDRESSES.P2PKH;\n    static DEFAULT_SEMANTIC = 'p2pkh';\n}\n//# sourceMappingURL=zoobc.js.map","// SPDX-License-Identifier: MIT\nimport { Cryptocurrency } from './cryptocurrency';\nimport { Adcoin } from './adcoin';\nimport { AkashNetwork } from './akashnetwork';\nimport { Algorand } from './algorand';\nimport { Anon } from './anon';\nimport { Aptos } from './aptos';\nimport { Arbitrum } from './arbitum';\nimport { Argoneum } from './argoneum';\nimport { Artax } from './artax';\nimport { Aryacoin } from './aryacoin';\nimport { Asiacoin } from './asiacoin';\nimport { Auroracoin } from './auroracoin';\nimport { Avalanche } from './avalanche';\nimport { Avian } from './avian';\nimport { Axe } from './axe';\nimport { Axelar } from './axelar';\nimport { BandProtocol } from './bandprotocol';\nimport { Bata } from './bata';\nimport { BeetleCoin } from './beetlecoin';\nimport { BelaCoin } from './belacoin';\nimport { Binance } from './binance';\nimport { BitCloud } from './bitcloud';\nimport { Bitcoin } from './bitcoin';\nimport { BitcoinAtom } from './bitcoinatom';\nimport { BitcoinCash } from './bitcoincash';\nimport { BitcoinCashSLP } from './bitcoincashslp';\nimport { BitcoinGold } from './bitcoingold';\nimport { BitcoinGreen } from './bitcoingreen';\nimport { BitcoinPlus } from './bitcoinplus';\nimport { BitcoinPrivate } from './bitcoinprivate';\nimport { BitcoinSV } from './bitcoinsv';\nimport { BitcoinZ } from './bitcoinz';\nimport { Bitcore } from './bitcore';\nimport { BitSend } from './bitsend';\nimport { Blackcoin } from './blackcoin';\nimport { Blocknode } from './blocknode';\nimport { BlockStamp } from './blockstamp';\nimport { Bolivarcoin } from './bolivarcoin';\nimport { BritCoin } from './britcoin';\nimport { CanadaECoin } from './canadaecoin';\nimport { Cannacoin } from './cannacoin';\nimport { Cardano } from './cardano';\nimport { Celo } from './celo';\nimport { Chihuahua } from './chihuahua';\nimport { Clams } from './clams';\nimport { ClubCoin } from './clubcoin';\nimport { Compcoin } from './compcoin';\nimport { Cosmos } from './cosmos';\nimport { CPUChain } from './cpuchain';\nimport { CranePay } from './cranepay';\nimport { Crave } from './crave';\nimport { Dash } from './dash';\nimport { DeepOnion } from './deeponion';\nimport { Defcoin } from './defcoin';\nimport { Denarius } from './denarius';\nimport { Diamond } from './diamond';\nimport { DigiByte } from './digibyte';\nimport { Digitalcoin } from './digitalcoin';\nimport { Divi } from './divi';\nimport { Dogecoin } from './dogecoin';\nimport { dYdX } from './dydx';\nimport { eCash } from './ecash';\nimport { ECoin } from './ecoin';\nimport { EDRCoin } from './edrcoin';\nimport { eGulden } from './egulden';\nimport { Einsteinium } from './einsteinium';\nimport { Elastos } from './elastos';\nimport { Energi } from './energi';\nimport { EOS } from './eos';\nimport { Ergo } from './ergo';\nimport { Ethereum } from './ethereum';\nimport { EuropeCoin } from './europecoin';\nimport { Evrmore } from './evrmore';\nimport { ExclusiveCoin } from './exclusivecoin';\nimport { Fantom } from './fantom';\nimport { Feathercoin } from './feathercoin';\nimport { FetchAI } from './fetchai';\nimport { Filecoin } from './filecoin';\nimport { Firo } from './firo';\nimport { Firstcoin } from './firstcoin';\nimport { FIX } from './fix';\nimport { Flashcoin } from './flashcoin';\nimport { Flux } from './flux';\nimport { Foxdcoin } from './foxdcoin';\nimport { FujiCoin } from './fujicoin';\nimport { GameCredits } from './gamecredits';\nimport { GCRCoin } from './gcrcoin';\nimport { GoByte } from './gobyte';\nimport { Gridcoin } from './gridcoin';\nimport { GroestlCoin } from './groestlcoin';\nimport { Gulden } from './gulden';\nimport { Harmony } from './harmony';\nimport { Helleniccoin } from './helleniccoin';\nimport { Hempcoin } from './hempcoin';\nimport { Horizen } from './horizen';\nimport { HuobiToken } from './huobitoken';\nimport { Hush } from './hush';\nimport { Icon } from './icon';\nimport { Injective } from './injective';\nimport { InsaneCoin } from './insanecoin';\nimport { InternetOfPeople } from './internetofpeople';\nimport { IRISnet } from './irisnet';\nimport { IXCoin } from './ixcoin';\nimport { Jumbucks } from './jumbucks';\nimport { Kava } from './kava';\nimport { Kobocoin } from './kobocoin';\nimport { Komodo } from './komodo';\nimport { Landcoin } from './landcoin';\nimport { LBRYCredits } from './lbrycredits';\nimport { Linx } from './linx';\nimport { Litecoin } from './litecoin';\nimport { LitecoinCash } from './litecoincash';\nimport { LitecoinZ } from './litecoinz';\nimport { Lkrcoin } from './lkrcoin';\nimport { Lynx } from './lynx';\nimport { Mazacoin } from './mazacoin';\nimport { Megacoin } from './megacoin';\nimport { Metis } from './metis';\nimport { Minexcoin } from './minexcoin';\nimport { Monacoin } from './monacoin';\nimport { Monero } from './monero';\nimport { Monk } from './monk';\nimport { MultiversX } from './multiversx';\nimport { Myriadcoin } from './myriadcoin';\nimport { Namecoin } from './namecoin';\nimport { Nano } from './nano';\nimport { Navcoin } from './navcoin';\nimport { Near } from './near';\nimport { Neblio } from './neblio';\nimport { Neo } from './neo';\nimport { Neoscoin } from './neoscoin';\nimport { Neurocoin } from './neurocoin';\nimport { Neutron } from './neutron';\nimport { NewYorkCoin } from './newyorkcoin';\nimport { NineChronicles } from './ninechronicles';\nimport { NIX } from './nix';\nimport { Novacoin } from './novacoin';\nimport { NuBits } from './nubits';\nimport { NuShares } from './nushares';\nimport { OKCash } from './okcash';\nimport { OKTChain } from './oktchain';\nimport { Omni } from './omni';\nimport { Onix } from './onix';\nimport { Ontology } from './ontology';\nimport { Optimism } from './optimism';\nimport { Osmosis } from './osmosis';\nimport { Particl } from './particl';\nimport { Peercoin } from './peercoin';\nimport { Pesobit } from './pesobit';\nimport { Phore } from './phore';\nimport { PiNetwork } from './pinetwork';\nimport { Pinkcoin } from './pinkcoin';\nimport { Pivx } from './pivx';\nimport { Polygon } from './polygon';\nimport { PoSWCoin } from './poswcoin';\nimport { Potcoin } from './potcoin';\nimport { ProjectCoin } from './projectcoin';\nimport { Putincoin } from './putincoin';\nimport { Qtum } from './qtum';\nimport { Rapids } from './rapids';\nimport { Ravencoin } from './ravencoin';\nimport { Reddcoin } from './reddcoin';\nimport { Ripple } from './ripple';\nimport { Ritocoin } from './ritocoin';\nimport { RSK } from './rsk';\nimport { Rubycoin } from './rubycoin';\nimport { Safecoin } from './safecoin';\nimport { Saluscoin } from './saluscoin';\nimport { Scribe } from './scribe';\nimport { Secret } from './secret';\nimport { ShadowCash } from './shadowcash';\nimport { Shentu } from './shentu';\nimport { Slimcoin } from './slimcoin';\nimport { Smileycoin } from './smileycoin';\nimport { Solana } from './solana';\nimport { Solarcoin } from './solarcoin';\nimport { Stafi } from './stafi';\nimport { Stash } from './stash';\nimport { Stellar } from './stellar';\nimport { Stratis } from './stratis';\nimport { Sugarchain } from './sugarchain';\nimport { Sui } from './sui';\nimport { Syscoin } from './syscoin';\nimport { Terra } from './terra';\nimport { Tezos } from './tezos';\nimport { Theta } from './theta';\nimport { ThoughtAI } from './thoughtai';\nimport { TOACoin } from './toacoin';\nimport { Tron } from './tron';\nimport { TWINS } from './twins';\nimport { UltimateSecureCash } from './ultimatesecurecash';\nimport { Unobtanium } from './unobtanium';\nimport { Vcash } from './vcash';\nimport { VeChain } from './vechain';\nimport { Verge } from './verge';\nimport { Vertcoin } from './vertcoin';\nimport { Viacoin } from './viacoin';\nimport { Vivo } from './vivo';\nimport { Voxels } from './voxels';\nimport { VPNCoin } from './vpncoin';\nimport { Wagerr } from './wagerr';\nimport { Whitecoin } from './whitecoin';\nimport { Wincoin } from './wincoin';\nimport { XinFin } from './xinfin';\nimport { XUEZ } from './xuez';\nimport { Ycash } from './ycash';\nimport { Zcash } from './zcash';\nimport { ZClassic } from './zclassic';\nimport { Zetacoin } from './zetacoin';\nimport { Zilliqa } from './zilliqa';\nimport { ZooBC } from './zoobc';\nimport { CryptocurrencyError, SymbolError } from '../exceptions';\nexport class CRYPTOCURRENCIES {\n    static dictionary = {\n        [Adcoin.NAME]: Adcoin,\n        [AkashNetwork.NAME]: AkashNetwork,\n        [Algorand.NAME]: Algorand,\n        [Anon.NAME]: Anon,\n        [Aptos.NAME]: Aptos,\n        [Arbitrum.NAME]: Arbitrum,\n        [Argoneum.NAME]: Argoneum,\n        [Artax.NAME]: Artax,\n        [Aryacoin.NAME]: Aryacoin,\n        [Asiacoin.NAME]: Asiacoin,\n        [Auroracoin.NAME]: Auroracoin,\n        [Avalanche.NAME]: Avalanche,\n        [Avian.NAME]: Avian,\n        [Axe.NAME]: Axe,\n        [Axelar.NAME]: Axelar,\n        [BandProtocol.NAME]: BandProtocol,\n        [Bata.NAME]: Bata,\n        [BeetleCoin.NAME]: BeetleCoin,\n        [BelaCoin.NAME]: BelaCoin,\n        [Binance.NAME]: Binance,\n        [BitCloud.NAME]: BitCloud,\n        [Bitcoin.NAME]: Bitcoin,\n        [BitcoinAtom.NAME]: BitcoinAtom,\n        [BitcoinCash.NAME]: BitcoinCash,\n        [BitcoinCashSLP.NAME]: BitcoinCashSLP,\n        [BitcoinGold.NAME]: BitcoinGold,\n        [BitcoinGreen.NAME]: BitcoinGreen,\n        [BitcoinPlus.NAME]: BitcoinPlus,\n        [BitcoinPrivate.NAME]: BitcoinPrivate,\n        [BitcoinSV.NAME]: BitcoinSV,\n        [BitcoinZ.NAME]: BitcoinZ,\n        [Bitcore.NAME]: Bitcore,\n        [BitSend.NAME]: BitSend,\n        [Blackcoin.NAME]: Blackcoin,\n        [Blocknode.NAME]: Blocknode,\n        [BlockStamp.NAME]: BlockStamp,\n        [Bolivarcoin.NAME]: Bolivarcoin,\n        [BritCoin.NAME]: BritCoin,\n        [CanadaECoin.NAME]: CanadaECoin,\n        [Cannacoin.NAME]: Cannacoin,\n        [Cardano.NAME]: Cardano,\n        [Celo.NAME]: Celo,\n        [Chihuahua.NAME]: Chihuahua,\n        [Clams.NAME]: Clams,\n        [ClubCoin.NAME]: ClubCoin,\n        [Compcoin.NAME]: Compcoin,\n        [Cosmos.NAME]: Cosmos,\n        [CPUChain.NAME]: CPUChain,\n        [CranePay.NAME]: CranePay,\n        [Crave.NAME]: Crave,\n        [Dash.NAME]: Dash,\n        [DeepOnion.NAME]: DeepOnion,\n        [Defcoin.NAME]: Defcoin,\n        [Denarius.NAME]: Denarius,\n        [Diamond.NAME]: Diamond,\n        [DigiByte.NAME]: DigiByte,\n        [Digitalcoin.NAME]: Digitalcoin,\n        [Divi.NAME]: Divi,\n        [Dogecoin.NAME]: Dogecoin,\n        [dYdX.NAME]: dYdX,\n        [eCash.NAME]: eCash,\n        [ECoin.NAME]: ECoin,\n        [EDRCoin.NAME]: EDRCoin,\n        [eGulden.NAME]: eGulden,\n        [Einsteinium.NAME]: Einsteinium,\n        [Elastos.NAME]: Elastos,\n        [Energi.NAME]: Energi,\n        [EOS.NAME]: EOS,\n        [Ergo.NAME]: Ergo,\n        [Ethereum.NAME]: Ethereum,\n        [EuropeCoin.NAME]: EuropeCoin,\n        [Evrmore.NAME]: Evrmore,\n        [ExclusiveCoin.NAME]: ExclusiveCoin,\n        [Fantom.NAME]: Fantom,\n        [Feathercoin.NAME]: Feathercoin,\n        [FetchAI.NAME]: FetchAI,\n        [Filecoin.NAME]: Filecoin,\n        [Firo.NAME]: Firo,\n        [Firstcoin.NAME]: Firstcoin,\n        [FIX.NAME]: FIX,\n        [Flashcoin.NAME]: Flashcoin,\n        [Flux.NAME]: Flux,\n        [Foxdcoin.NAME]: Foxdcoin,\n        [FujiCoin.NAME]: FujiCoin,\n        [GameCredits.NAME]: GameCredits,\n        [GCRCoin.NAME]: GCRCoin,\n        [GoByte.NAME]: GoByte,\n        [Gridcoin.NAME]: Gridcoin,\n        [GroestlCoin.NAME]: GroestlCoin,\n        [Gulden.NAME]: Gulden,\n        [Harmony.NAME]: Harmony,\n        [Helleniccoin.NAME]: Helleniccoin,\n        [Hempcoin.NAME]: Hempcoin,\n        [Horizen.NAME]: Horizen,\n        [HuobiToken.NAME]: HuobiToken,\n        [Hush.NAME]: Hush,\n        [Icon.NAME]: Icon,\n        [Injective.NAME]: Injective,\n        [InsaneCoin.NAME]: InsaneCoin,\n        [InternetOfPeople.NAME]: InternetOfPeople,\n        [IRISnet.NAME]: IRISnet,\n        [IXCoin.NAME]: IXCoin,\n        [Jumbucks.NAME]: Jumbucks,\n        [Kava.NAME]: Kava,\n        [Kobocoin.NAME]: Kobocoin,\n        [Komodo.NAME]: Komodo,\n        [Landcoin.NAME]: Landcoin,\n        [LBRYCredits.NAME]: LBRYCredits,\n        [Linx.NAME]: Linx,\n        [Litecoin.NAME]: Litecoin,\n        [LitecoinCash.NAME]: LitecoinCash,\n        [LitecoinZ.NAME]: LitecoinZ,\n        [Lkrcoin.NAME]: Lkrcoin,\n        [Lynx.NAME]: Lynx,\n        [Mazacoin.NAME]: Mazacoin,\n        [Megacoin.NAME]: Megacoin,\n        [Metis.NAME]: Metis,\n        [Minexcoin.NAME]: Minexcoin,\n        [Monacoin.NAME]: Monacoin,\n        [Monero.NAME]: Monero,\n        [Monk.NAME]: Monk,\n        [MultiversX.NAME]: MultiversX,\n        [Myriadcoin.NAME]: Myriadcoin,\n        [Namecoin.NAME]: Namecoin,\n        [Nano.NAME]: Nano,\n        [Navcoin.NAME]: Navcoin,\n        [Near.NAME]: Near,\n        [Neblio.NAME]: Neblio,\n        [Neo.NAME]: Neo,\n        [Neoscoin.NAME]: Neoscoin,\n        [Neurocoin.NAME]: Neurocoin,\n        [Neutron.NAME]: Neutron,\n        [NewYorkCoin.NAME]: NewYorkCoin,\n        [NineChronicles.NAME]: NineChronicles,\n        [NIX.NAME]: NIX,\n        [Novacoin.NAME]: Novacoin,\n        [NuBits.NAME]: NuBits,\n        [NuShares.NAME]: NuShares,\n        [OKCash.NAME]: OKCash,\n        [OKTChain.NAME]: OKTChain,\n        [Omni.NAME]: Omni,\n        [Onix.NAME]: Onix,\n        [Ontology.NAME]: Ontology,\n        [Optimism.NAME]: Optimism,\n        [Osmosis.NAME]: Osmosis,\n        [Particl.NAME]: Particl,\n        [Peercoin.NAME]: Peercoin,\n        [Pesobit.NAME]: Pesobit,\n        [Phore.NAME]: Phore,\n        [PiNetwork.NAME]: PiNetwork,\n        [Pinkcoin.NAME]: Pinkcoin,\n        [Pivx.NAME]: Pivx,\n        [Polygon.NAME]: Polygon,\n        [PoSWCoin.NAME]: PoSWCoin,\n        [Potcoin.NAME]: Potcoin,\n        [ProjectCoin.NAME]: ProjectCoin,\n        [Putincoin.NAME]: Putincoin,\n        [Qtum.NAME]: Qtum,\n        [Rapids.NAME]: Rapids,\n        [Ravencoin.NAME]: Ravencoin,\n        [Reddcoin.NAME]: Reddcoin,\n        [Ripple.NAME]: Ripple,\n        [Ritocoin.NAME]: Ritocoin,\n        [RSK.NAME]: RSK,\n        [Rubycoin.NAME]: Rubycoin,\n        [Safecoin.NAME]: Safecoin,\n        [Saluscoin.NAME]: Saluscoin,\n        [Scribe.NAME]: Scribe,\n        [Secret.NAME]: Secret,\n        [ShadowCash.NAME]: ShadowCash,\n        [Shentu.NAME]: Shentu,\n        [Slimcoin.NAME]: Slimcoin,\n        [Smileycoin.NAME]: Smileycoin,\n        [Solana.NAME]: Solana,\n        [Solarcoin.NAME]: Solarcoin,\n        [Stafi.NAME]: Stafi,\n        [Stash.NAME]: Stash,\n        [Stellar.NAME]: Stellar,\n        [Stratis.NAME]: Stratis,\n        [Sugarchain.NAME]: Sugarchain,\n        [Sui.NAME]: Sui,\n        [Syscoin.NAME]: Syscoin,\n        [Terra.NAME]: Terra,\n        [Tezos.NAME]: Tezos,\n        [Theta.NAME]: Theta,\n        [ThoughtAI.NAME]: ThoughtAI,\n        [TOACoin.NAME]: TOACoin,\n        [Tron.NAME]: Tron,\n        [TWINS.NAME]: TWINS,\n        [UltimateSecureCash.NAME]: UltimateSecureCash,\n        [Unobtanium.NAME]: Unobtanium,\n        [Vcash.NAME]: Vcash,\n        [VeChain.NAME]: VeChain,\n        [Verge.NAME]: Verge,\n        [Vertcoin.NAME]: Vertcoin,\n        [Viacoin.NAME]: Viacoin,\n        [Vivo.NAME]: Vivo,\n        [Voxels.NAME]: Voxels,\n        [VPNCoin.NAME]: VPNCoin,\n        [Wagerr.NAME]: Wagerr,\n        [Whitecoin.NAME]: Whitecoin,\n        [Wincoin.NAME]: Wincoin,\n        [XinFin.NAME]: XinFin,\n        [XUEZ.NAME]: XUEZ,\n        [Ycash.NAME]: Ycash,\n        [Zcash.NAME]: Zcash,\n        [ZClassic.NAME]: ZClassic,\n        [Zetacoin.NAME]: Zetacoin,\n        [Zilliqa.NAME]: Zilliqa,\n        [ZooBC.NAME]: ZooBC,\n    };\n    static getNames() {\n        return Object.keys(this.dictionary);\n    }\n    static getClasses() {\n        return Object.values(this.dictionary);\n    }\n    static getCryptocurrencyClass(name) {\n        if (!this.isCryptocurrency(name)) {\n            throw new CryptocurrencyError('Invalid cryptocurrency name', { expected: this.getNames(), got: name });\n        }\n        return this.dictionary[name];\n    }\n    static isCryptocurrency(name) {\n        return name in this.dictionary;\n    }\n}\nexport function getCryptocurrency(symbol) {\n    for (const cls of CRYPTOCURRENCIES.getClasses()) {\n        if (cls.SYMBOL === symbol) {\n            return cls;\n        }\n    }\n    throw new SymbolError(`Cryptocurrency not found with symbol ${symbol}`);\n}\nexport { Cryptocurrency, Adcoin, AkashNetwork, Algorand, Anon, Aptos, Arbitrum, Argoneum, Artax, Aryacoin, Asiacoin, Auroracoin, Avalanche, Avian, Axe, Axelar, BandProtocol, Bata, BeetleCoin, BelaCoin, Binance, BitCloud, Bitcoin, BitcoinAtom, BitcoinCash, BitcoinCashSLP, BitcoinGold, BitcoinGreen, BitcoinPlus, BitcoinPrivate, BitcoinSV, BitcoinZ, Bitcore, BitSend, Blackcoin, Blocknode, BlockStamp, Bolivarcoin, BritCoin, CanadaECoin, Cannacoin, Cardano, Celo, Chihuahua, Clams, ClubCoin, Compcoin, Cosmos, CPUChain, CranePay, Crave, Dash, DeepOnion, Defcoin, Denarius, Diamond, DigiByte, Digitalcoin, Divi, Dogecoin, dYdX, eCash, ECoin, EDRCoin, eGulden, Einsteinium, Elastos, Energi, EOS, Ergo, Ethereum, EuropeCoin, Evrmore, ExclusiveCoin, Fantom, Feathercoin, FetchAI, Filecoin, Firo, Firstcoin, FIX, Flashcoin, Flux, Foxdcoin, FujiCoin, GameCredits, GCRCoin, GoByte, Gridcoin, GroestlCoin, Gulden, Harmony, Helleniccoin, Hempcoin, Horizen, HuobiToken, Hush, Icon, Injective, InsaneCoin, InternetOfPeople, IRISnet, IXCoin, Jumbucks, Kava, Kobocoin, Komodo, Landcoin, LBRYCredits, Linx, Litecoin, LitecoinCash, LitecoinZ, Lkrcoin, Lynx, Mazacoin, Megacoin, Metis, Minexcoin, Monacoin, Monero, Monk, MultiversX, Myriadcoin, Namecoin, Nano, Navcoin, Near, Neblio, Neo, Neoscoin, Neurocoin, Neutron, NewYorkCoin, NineChronicles, NIX, Novacoin, NuBits, NuShares, OKCash, OKTChain, Omni, Onix, Ontology, Optimism, Osmosis, Particl, Peercoin, Pesobit, Phore, PiNetwork, Pinkcoin, Pivx, Polygon, PoSWCoin, Potcoin, ProjectCoin, Putincoin, Qtum, Rapids, Ravencoin, Reddcoin, Ripple, Ritocoin, RSK, Rubycoin, Safecoin, Saluscoin, Scribe, Secret, ShadowCash, Shentu, Slimcoin, Smileycoin, Solana, Solarcoin, Stafi, Stash, Stellar, Stratis, Sugarchain, Sui, Syscoin, Terra, Tezos, Theta, ThoughtAI, TOACoin, Tron, TWINS, UltimateSecureCash, Unobtanium, Vcash, VeChain, Verge, Vertcoin, Viacoin, Vivo, Voxels, VPNCoin, Wagerr, Whitecoin, Wincoin, XinFin, XUEZ, Ycash, Zcash, ZClassic, Zetacoin, Zilliqa, ZooBC };\n//# sourceMappingURL=index.js.map","// SPDX-License-Identifier: MIT\nimport { getBytes, bytesToHex, bytesToInteger } from '../utils';\nimport { EntropyError } from '../exceptions';\nexport class Entropy {\n    entropy;\n    strength;\n    static strengths;\n    constructor(entropy) {\n        const entropyBytes = getBytes(entropy);\n        const strength = entropyBytes.length;\n        const constructor = this.constructor;\n        if (constructor.getName() === 'Electrum-V2') {\n            if (!constructor.areEntropyBitsEnough(entropyBytes)) {\n                throw new EntropyError('Entropy bits are not enough');\n            }\n            this.strength = BigInt(bytesToInteger(entropyBytes)).toString(2).length;\n        }\n        else {\n            if (!constructor.isValidBytesStrength(strength))\n                throw new EntropyError('Unsupported entropy strength');\n            this.strength = strength * 8;\n        }\n        this.entropy = bytesToHex(entropyBytes);\n    }\n    static getName() {\n        throw new Error('Must override getName()');\n    }\n    getName() {\n        return this.constructor.getName();\n    }\n    getEntropy() {\n        return this.entropy;\n    }\n    getStrength() {\n        return this.strength;\n    }\n    static generate(strength) {\n        if (!this.strengths.includes(strength)) {\n            throw new Error(`Invalid strength ${strength}`);\n        }\n        return bytesToHex(crypto.getRandomValues(new Uint8Array(strength / 8)));\n    }\n    static isValid(entropy) {\n        return /^[0-9a-fA-F]+$/.test(entropy) && this.isValidStrength(entropy.length * 4);\n    }\n    static isValidStrength(strength) {\n        return this.strengths.includes(strength);\n    }\n    static isValidBytesStrength(bytesStrength) {\n        return this.isValidStrength(bytesStrength * 8);\n    }\n    static areEntropyBitsEnough(entropy) {\n        throw new Error('Not implemented');\n    }\n}\n//# sourceMappingURL=entropy.js.map","// SPDX-License-Identifier: MIT\nimport { Entropy } from './entropy';\nexport const ALGORAND_ENTROPY_STRENGTHS = {\n    TWO_HUNDRED_FIFTY_SIX: 256\n};\nexport class AlgorandEntropy extends Entropy {\n    static strengths = [\n        ALGORAND_ENTROPY_STRENGTHS.TWO_HUNDRED_FIFTY_SIX\n    ];\n    static getName() {\n        return 'Algorand';\n    }\n}\n//# sourceMappingURL=algorand.js.map","// SPDX-License-Identifier: MIT\nimport { Entropy } from './entropy';\nexport const BIP39_ENTROPY_STRENGTHS = {\n    ONE_HUNDRED_TWENTY_EIGHT: 128,\n    ONE_HUNDRED_SIXTY: 160,\n    ONE_HUNDRED_NINETY_TWO: 192,\n    TWO_HUNDRED_TWENTY_FOUR: 224,\n    TWO_HUNDRED_FIFTY_SIX: 256\n};\nexport class BIP39Entropy extends Entropy {\n    static strengths = [\n        BIP39_ENTROPY_STRENGTHS.ONE_HUNDRED_TWENTY_EIGHT,\n        BIP39_ENTROPY_STRENGTHS.ONE_HUNDRED_SIXTY,\n        BIP39_ENTROPY_STRENGTHS.ONE_HUNDRED_NINETY_TWO,\n        BIP39_ENTROPY_STRENGTHS.TWO_HUNDRED_TWENTY_FOUR,\n        BIP39_ENTROPY_STRENGTHS.TWO_HUNDRED_FIFTY_SIX\n    ];\n    static getName() {\n        return 'BIP39';\n    }\n}\n//# sourceMappingURL=bip39.js.map","// SPDX-License-Identifier: MIT\nimport { Entropy } from '../entropy';\nexport const ELECTRUM_V1_ENTROPY_STRENGTHS = {\n    ONE_HUNDRED_TWENTY_EIGHT: 128\n};\nexport class ElectrumV1Entropy extends Entropy {\n    static strengths = [\n        ELECTRUM_V1_ENTROPY_STRENGTHS.ONE_HUNDRED_TWENTY_EIGHT\n    ];\n    static getName() {\n        return 'Electrum-V1';\n    }\n}\n//# sourceMappingURL=v1.js.map","// SPDX-License-Identifier: MIT\nimport { randomBytes, integerToBytes, bytesToHex, hexToBytes, bytesToInteger, bytesToString } from '../../utils';\nimport { Entropy } from '../entropy';\nexport const ELECTRUM_V2_ENTROPY_STRENGTHS = {\n    ONE_HUNDRED_THIRTY_TWO: 132,\n    TWO_HUNDRED_SIXTY_FOUR: 264\n};\nexport class ElectrumV2Entropy extends Entropy {\n    static strengths = [\n        ELECTRUM_V2_ENTROPY_STRENGTHS.ONE_HUNDRED_THIRTY_TWO,\n        ELECTRUM_V2_ENTROPY_STRENGTHS.TWO_HUNDRED_SIXTY_FOUR\n    ];\n    static getName() {\n        return 'Electrum-V2';\n    }\n    static generate(strength) {\n        if (!this.strengths.includes(strength)) {\n            throw new Error(`Invalid strength ${strength}`);\n        }\n        const byteLen = Math.ceil(strength / 8);\n        const mask = (BigInt(1) << BigInt(strength)) - BigInt(1);\n        const rndBuf = randomBytes(byteLen);\n        let rnd = BigInt('0x' + bytesToString(rndBuf)) & mask;\n        const msbMask = BigInt(1) << BigInt(strength - 1);\n        const combined = msbMask | rnd;\n        const outBytes = integerToBytes(combined, byteLen);\n        return bytesToHex(outBytes);\n    }\n    static isValid(entropy) {\n        return /^[0-9a-fA-F]+$/.test(entropy) && this.areEntropyBitsEnough(hexToBytes(entropy));\n    }\n    static isValidStrength(strength) {\n        return this.strengths.some((s) => strength >= s - 11 && strength <= s);\n    }\n    static areEntropyBitsEnough(entropy) {\n        let intVal = entropy instanceof Uint8Array ? bytesToInteger(entropy) : BigInt(entropy);\n        if (intVal <= BigInt(0))\n            return false;\n        const entropyStrength = intVal.toString(2).length - 1;\n        return this.isValidStrength(entropyStrength);\n    }\n}\n//# sourceMappingURL=v2.js.map","// SPDX-License-Identifier: MIT\nimport { Entropy } from './entropy';\nexport const MONERO_ENTROPY_STRENGTHS = {\n    ONE_HUNDRED_TWENTY_EIGHT: 128,\n    TWO_HUNDRED_FIFTY_SIX: 256\n};\nexport class MoneroEntropy extends Entropy {\n    static strengths = [\n        MONERO_ENTROPY_STRENGTHS.ONE_HUNDRED_TWENTY_EIGHT,\n        MONERO_ENTROPY_STRENGTHS.TWO_HUNDRED_FIFTY_SIX\n    ];\n    static getName() {\n        return 'Monero';\n    }\n}\n//# sourceMappingURL=monero.js.map","// SPDX-License-Identifier: MIT\nimport { Entropy } from './entropy';\nimport { AlgorandEntropy, ALGORAND_ENTROPY_STRENGTHS } from './algorand';\nimport { BIP39Entropy, BIP39_ENTROPY_STRENGTHS } from './bip39';\nimport { ElectrumV1Entropy, ELECTRUM_V1_ENTROPY_STRENGTHS } from './electrum/v1';\nimport { ElectrumV2Entropy, ELECTRUM_V2_ENTROPY_STRENGTHS } from './electrum/v2';\nimport { MoneroEntropy, MONERO_ENTROPY_STRENGTHS } from './monero';\nimport { EntropyError } from '../exceptions';\nexport class ENTROPIES {\n    static dictionary = {\n        [AlgorandEntropy.getName()]: AlgorandEntropy,\n        [BIP39Entropy.getName()]: BIP39Entropy,\n        [ElectrumV1Entropy.getName()]: ElectrumV1Entropy,\n        [ElectrumV2Entropy.getName()]: ElectrumV2Entropy,\n        [MoneroEntropy.getName()]: MoneroEntropy\n    };\n    static getNames() {\n        return Object.keys(this.dictionary);\n    }\n    static getClasses() {\n        return Object.values(this.dictionary);\n    }\n    static getEntropyClass(name) {\n        if (!this.isEntropy(name)) {\n            throw new EntropyError('Invalid Entropy name', { expected: this.getNames(), got: name });\n        }\n        return this.dictionary[name];\n    }\n    static isEntropy(name) {\n        return this.getNames().includes(name);\n    }\n}\nexport { Entropy, AlgorandEntropy, ALGORAND_ENTROPY_STRENGTHS, BIP39Entropy, BIP39_ENTROPY_STRENGTHS, ElectrumV1Entropy, ELECTRUM_V1_ENTROPY_STRENGTHS, ElectrumV2Entropy, ELECTRUM_V2_ENTROPY_STRENGTHS, MoneroEntropy, MONERO_ENTROPY_STRENGTHS };\n//# sourceMappingURL=index.js.map","// SPDX-License-Identifier: MIT\nimport { MnemonicError } from '../exceptions';\nexport class Mnemonic {\n    mnemonic;\n    words;\n    language;\n    options;\n    static wordsList = [];\n    static languages = [];\n    static wordLists = {};\n    constructor(mnemonic, options = {}) {\n        const constructor = this.constructor;\n        const words = constructor.normalize(mnemonic);\n        if (!constructor.isValid(words, options)) {\n            throw new MnemonicError('Invalid mnemonic words');\n        }\n        const [_, language] = constructor.findLanguage(words, options.wordLists);\n        this.mnemonic = words;\n        this.words = words.length;\n        this.language = language;\n        this.options = options;\n    }\n    static getName() {\n        throw new Error('Must override getName()');\n    }\n    getName() {\n        return this.constructor.getName();\n    }\n    getMnemonic() {\n        return this.mnemonic.join(' ');\n    }\n    getWords() {\n        return this.words;\n    }\n    getLanguage() {\n        return this.language;\n    }\n    static fromWords(words, language, options = {}) {\n        throw new Error('Must override fromWords()');\n    }\n    static fromEntropy(entropy, language, options = {}) {\n        throw new Error('Must override fromEntropy()');\n    }\n    static encode(entropy, language, options = {}) {\n        throw new Error('Must override encode()');\n    }\n    static decode(mnemonic, options = {}) {\n        throw new Error('Must override decode()');\n    }\n    static getWordsListByLanguage(language, wordLists) {\n        const wordList = (wordLists ?? this.wordLists)[language];\n        if (!wordList) {\n            throw new MnemonicError(`No wordlist for language '${language}'`);\n        }\n        return wordList;\n    }\n    static findLanguage(mnemonic, wordLists) {\n        for (const language of this.languages) {\n            try {\n                const list = this.normalize(this.getWordsListByLanguage(language, wordLists));\n                const map = new Set(list);\n                for (const w of mnemonic) {\n                    if (!map.has(w)) {\n                        throw new MnemonicError(`Unknown word '${w}'`);\n                    }\n                }\n                return [list, language];\n            }\n            catch {\n                continue;\n            }\n        }\n        throw new MnemonicError(`Invalid language for mnemonic: '${mnemonic.join(' ')}'`);\n    }\n    static isValid(mnemonic, options = {}) {\n        try {\n            this.decode(mnemonic, options);\n            return true;\n        }\n        catch {\n            return false;\n        }\n    }\n    static isValidLanguage(language) {\n        return this.languages.includes(language);\n    }\n    static isValidWords(words) {\n        return this.wordsList.includes(words);\n    }\n    static normalize(mnemonic) {\n        return typeof mnemonic === 'string' ? mnemonic.trim().split(/\\s+/) : mnemonic;\n    }\n}\n//# sourceMappingURL=mnemonic.js.map","// SPDX-License-Identifier: MIT\nexport const WORDLIST = [\n    'abandon',\n    'ability',\n    'able',\n    'about',\n    'above',\n    'absent',\n    'absorb',\n    'abstract',\n    'absurd',\n    'abuse',\n    'access',\n    'accident',\n    'account',\n    'accuse',\n    'achieve',\n    'acid',\n    'acoustic',\n    'acquire',\n    'across',\n    'act',\n    'action',\n    'actor',\n    'actress',\n    'actual',\n    'adapt',\n    'add',\n    'addict',\n    'address',\n    'adjust',\n    'admit',\n    'adult',\n    'advance',\n    'advice',\n    'aerobic',\n    'affair',\n    'afford',\n    'afraid',\n    'again',\n    'age',\n    'agent',\n    'agree',\n    'ahead',\n    'aim',\n    'air',\n    'airport',\n    'aisle',\n    'alarm',\n    'album',\n    'alcohol',\n    'alert',\n    'alien',\n    'all',\n    'alley',\n    'allow',\n    'almost',\n    'alone',\n    'alpha',\n    'already',\n    'also',\n    'alter',\n    'always',\n    'amateur',\n    'amazing',\n    'among',\n    'amount',\n    'amused',\n    'analyst',\n    'anchor',\n    'ancient',\n    'anger',\n    'angle',\n    'angry',\n    'animal',\n    'ankle',\n    'announce',\n    'annual',\n    'another',\n    'answer',\n    'antenna',\n    'antique',\n    'anxiety',\n    'any',\n    'apart',\n    'apology',\n    'appear',\n    'apple',\n    'approve',\n    'april',\n    'arch',\n    'arctic',\n    'area',\n    'arena',\n    'argue',\n    'arm',\n    'armed',\n    'armor',\n    'army',\n    'around',\n    'arrange',\n    'arrest',\n    'arrive',\n    'arrow',\n    'art',\n    'artefact',\n    'artist',\n    'artwork',\n    'ask',\n    'aspect',\n    'assault',\n    'asset',\n    'assist',\n    'assume',\n    'asthma',\n    'athlete',\n    'atom',\n    'attack',\n    'attend',\n    'attitude',\n    'attract',\n    'auction',\n    'audit',\n    'august',\n    'aunt',\n    'author',\n    'auto',\n    'autumn',\n    'average',\n    'avocado',\n    'avoid',\n    'awake',\n    'aware',\n    'away',\n    'awesome',\n    'awful',\n    'awkward',\n    'axis',\n    'baby',\n    'bachelor',\n    'bacon',\n    'badge',\n    'bag',\n    'balance',\n    'balcony',\n    'ball',\n    'bamboo',\n    'banana',\n    'banner',\n    'bar',\n    'barely',\n    'bargain',\n    'barrel',\n    'base',\n    'basic',\n    'basket',\n    'battle',\n    'beach',\n    'bean',\n    'beauty',\n    'because',\n    'become',\n    'beef',\n    'before',\n    'begin',\n    'behave',\n    'behind',\n    'believe',\n    'below',\n    'belt',\n    'bench',\n    'benefit',\n    'best',\n    'betray',\n    'better',\n    'between',\n    'beyond',\n    'bicycle',\n    'bid',\n    'bike',\n    'bind',\n    'biology',\n    'bird',\n    'birth',\n    'bitter',\n    'black',\n    'blade',\n    'blame',\n    'blanket',\n    'blast',\n    'bleak',\n    'bless',\n    'blind',\n    'blood',\n    'blossom',\n    'blouse',\n    'blue',\n    'blur',\n    'blush',\n    'board',\n    'boat',\n    'body',\n    'boil',\n    'bomb',\n    'bone',\n    'bonus',\n    'book',\n    'boost',\n    'border',\n    'boring',\n    'borrow',\n    'boss',\n    'bottom',\n    'bounce',\n    'box',\n    'boy',\n    'bracket',\n    'brain',\n    'brand',\n    'brass',\n    'brave',\n    'bread',\n    'breeze',\n    'brick',\n    'bridge',\n    'brief',\n    'bright',\n    'bring',\n    'brisk',\n    'broccoli',\n    'broken',\n    'bronze',\n    'broom',\n    'brother',\n    'brown',\n    'brush',\n    'bubble',\n    'buddy',\n    'budget',\n    'buffalo',\n    'build',\n    'bulb',\n    'bulk',\n    'bullet',\n    'bundle',\n    'bunker',\n    'burden',\n    'burger',\n    'burst',\n    'bus',\n    'business',\n    'busy',\n    'butter',\n    'buyer',\n    'buzz',\n    'cabbage',\n    'cabin',\n    'cable',\n    'cactus',\n    'cage',\n    'cake',\n    'call',\n    'calm',\n    'camera',\n    'camp',\n    'can',\n    'canal',\n    'cancel',\n    'candy',\n    'cannon',\n    'canoe',\n    'canvas',\n    'canyon',\n    'capable',\n    'capital',\n    'captain',\n    'car',\n    'carbon',\n    'card',\n    'cargo',\n    'carpet',\n    'carry',\n    'cart',\n    'case',\n    'cash',\n    'casino',\n    'castle',\n    'casual',\n    'cat',\n    'catalog',\n    'catch',\n    'category',\n    'cattle',\n    'caught',\n    'cause',\n    'caution',\n    'cave',\n    'ceiling',\n    'celery',\n    'cement',\n    'census',\n    'century',\n    'cereal',\n    'certain',\n    'chair',\n    'chalk',\n    'champion',\n    'change',\n    'chaos',\n    'chapter',\n    'charge',\n    'chase',\n    'chat',\n    'cheap',\n    'check',\n    'cheese',\n    'chef',\n    'cherry',\n    'chest',\n    'chicken',\n    'chief',\n    'child',\n    'chimney',\n    'choice',\n    'choose',\n    'chronic',\n    'chuckle',\n    'chunk',\n    'churn',\n    'cigar',\n    'cinnamon',\n    'circle',\n    'citizen',\n    'city',\n    'civil',\n    'claim',\n    'clap',\n    'clarify',\n    'claw',\n    'clay',\n    'clean',\n    'clerk',\n    'clever',\n    'click',\n    'client',\n    'cliff',\n    'climb',\n    'clinic',\n    'clip',\n    'clock',\n    'clog',\n    'close',\n    'cloth',\n    'cloud',\n    'clown',\n    'club',\n    'clump',\n    'cluster',\n    'clutch',\n    'coach',\n    'coast',\n    'coconut',\n    'code',\n    'coffee',\n    'coil',\n    'coin',\n    'collect',\n    'color',\n    'column',\n    'combine',\n    'come',\n    'comfort',\n    'comic',\n    'common',\n    'company',\n    'concert',\n    'conduct',\n    'confirm',\n    'congress',\n    'connect',\n    'consider',\n    'control',\n    'convince',\n    'cook',\n    'cool',\n    'copper',\n    'copy',\n    'coral',\n    'core',\n    'corn',\n    'correct',\n    'cost',\n    'cotton',\n    'couch',\n    'country',\n    'couple',\n    'course',\n    'cousin',\n    'cover',\n    'coyote',\n    'crack',\n    'cradle',\n    'craft',\n    'cram',\n    'crane',\n    'crash',\n    'crater',\n    'crawl',\n    'crazy',\n    'cream',\n    'credit',\n    'creek',\n    'crew',\n    'cricket',\n    'crime',\n    'crisp',\n    'critic',\n    'crop',\n    'cross',\n    'crouch',\n    'crowd',\n    'crucial',\n    'cruel',\n    'cruise',\n    'crumble',\n    'crunch',\n    'crush',\n    'cry',\n    'crystal',\n    'cube',\n    'culture',\n    'cup',\n    'cupboard',\n    'curious',\n    'current',\n    'curtain',\n    'curve',\n    'cushion',\n    'custom',\n    'cute',\n    'cycle',\n    'dad',\n    'damage',\n    'damp',\n    'dance',\n    'danger',\n    'daring',\n    'dash',\n    'daughter',\n    'dawn',\n    'day',\n    'deal',\n    'debate',\n    'debris',\n    'decade',\n    'december',\n    'decide',\n    'decline',\n    'decorate',\n    'decrease',\n    'deer',\n    'defense',\n    'define',\n    'defy',\n    'degree',\n    'delay',\n    'deliver',\n    'demand',\n    'demise',\n    'denial',\n    'dentist',\n    'deny',\n    'depart',\n    'depend',\n    'deposit',\n    'depth',\n    'deputy',\n    'derive',\n    'describe',\n    'desert',\n    'design',\n    'desk',\n    'despair',\n    'destroy',\n    'detail',\n    'detect',\n    'develop',\n    'device',\n    'devote',\n    'diagram',\n    'dial',\n    'diamond',\n    'diary',\n    'dice',\n    'diesel',\n    'diet',\n    'differ',\n    'digital',\n    'dignity',\n    'dilemma',\n    'dinner',\n    'dinosaur',\n    'direct',\n    'dirt',\n    'disagree',\n    'discover',\n    'disease',\n    'dish',\n    'dismiss',\n    'disorder',\n    'display',\n    'distance',\n    'divert',\n    'divide',\n    'divorce',\n    'dizzy',\n    'doctor',\n    'document',\n    'dog',\n    'doll',\n    'dolphin',\n    'domain',\n    'donate',\n    'donkey',\n    'donor',\n    'door',\n    'dose',\n    'double',\n    'dove',\n    'draft',\n    'dragon',\n    'drama',\n    'drastic',\n    'draw',\n    'dream',\n    'dress',\n    'drift',\n    'drill',\n    'drink',\n    'drip',\n    'drive',\n    'drop',\n    'drum',\n    'dry',\n    'duck',\n    'dumb',\n    'dune',\n    'during',\n    'dust',\n    'dutch',\n    'duty',\n    'dwarf',\n    'dynamic',\n    'eager',\n    'eagle',\n    'early',\n    'earn',\n    'earth',\n    'easily',\n    'east',\n    'easy',\n    'echo',\n    'ecology',\n    'economy',\n    'edge',\n    'edit',\n    'educate',\n    'effort',\n    'egg',\n    'eight',\n    'either',\n    'elbow',\n    'elder',\n    'electric',\n    'elegant',\n    'element',\n    'elephant',\n    'elevator',\n    'elite',\n    'else',\n    'embark',\n    'embody',\n    'embrace',\n    'emerge',\n    'emotion',\n    'employ',\n    'empower',\n    'empty',\n    'enable',\n    'enact',\n    'end',\n    'endless',\n    'endorse',\n    'enemy',\n    'energy',\n    'enforce',\n    'engage',\n    'engine',\n    'enhance',\n    'enjoy',\n    'enlist',\n    'enough',\n    'enrich',\n    'enroll',\n    'ensure',\n    'enter',\n    'entire',\n    'entry',\n    'envelope',\n    'episode',\n    'equal',\n    'equip',\n    'era',\n    'erase',\n    'erode',\n    'erosion',\n    'error',\n    'erupt',\n    'escape',\n    'essay',\n    'essence',\n    'estate',\n    'eternal',\n    'ethics',\n    'evidence',\n    'evil',\n    'evoke',\n    'evolve',\n    'exact',\n    'example',\n    'excess',\n    'exchange',\n    'excite',\n    'exclude',\n    'excuse',\n    'execute',\n    'exercise',\n    'exhaust',\n    'exhibit',\n    'exile',\n    'exist',\n    'exit',\n    'exotic',\n    'expand',\n    'expect',\n    'expire',\n    'explain',\n    'expose',\n    'express',\n    'extend',\n    'extra',\n    'eye',\n    'eyebrow',\n    'fabric',\n    'face',\n    'faculty',\n    'fade',\n    'faint',\n    'faith',\n    'fall',\n    'false',\n    'fame',\n    'family',\n    'famous',\n    'fan',\n    'fancy',\n    'fantasy',\n    'farm',\n    'fashion',\n    'fat',\n    'fatal',\n    'father',\n    'fatigue',\n    'fault',\n    'favorite',\n    'feature',\n    'february',\n    'federal',\n    'fee',\n    'feed',\n    'feel',\n    'female',\n    'fence',\n    'festival',\n    'fetch',\n    'fever',\n    'few',\n    'fiber',\n    'fiction',\n    'field',\n    'figure',\n    'file',\n    'film',\n    'filter',\n    'final',\n    'find',\n    'fine',\n    'finger',\n    'finish',\n    'fire',\n    'firm',\n    'first',\n    'fiscal',\n    'fish',\n    'fit',\n    'fitness',\n    'fix',\n    'flag',\n    'flame',\n    'flash',\n    'flat',\n    'flavor',\n    'flee',\n    'flight',\n    'flip',\n    'float',\n    'flock',\n    'floor',\n    'flower',\n    'fluid',\n    'flush',\n    'fly',\n    'foam',\n    'focus',\n    'fog',\n    'foil',\n    'fold',\n    'follow',\n    'food',\n    'foot',\n    'force',\n    'forest',\n    'forget',\n    'fork',\n    'fortune',\n    'forum',\n    'forward',\n    'fossil',\n    'foster',\n    'found',\n    'fox',\n    'fragile',\n    'frame',\n    'frequent',\n    'fresh',\n    'friend',\n    'fringe',\n    'frog',\n    'front',\n    'frost',\n    'frown',\n    'frozen',\n    'fruit',\n    'fuel',\n    'fun',\n    'funny',\n    'furnace',\n    'fury',\n    'future',\n    'gadget',\n    'gain',\n    'galaxy',\n    'gallery',\n    'game',\n    'gap',\n    'garage',\n    'garbage',\n    'garden',\n    'garlic',\n    'garment',\n    'gas',\n    'gasp',\n    'gate',\n    'gather',\n    'gauge',\n    'gaze',\n    'general',\n    'genius',\n    'genre',\n    'gentle',\n    'genuine',\n    'gesture',\n    'ghost',\n    'giant',\n    'gift',\n    'giggle',\n    'ginger',\n    'giraffe',\n    'girl',\n    'give',\n    'glad',\n    'glance',\n    'glare',\n    'glass',\n    'glide',\n    'glimpse',\n    'globe',\n    'gloom',\n    'glory',\n    'glove',\n    'glow',\n    'glue',\n    'goat',\n    'goddess',\n    'gold',\n    'good',\n    'goose',\n    'gorilla',\n    'gospel',\n    'gossip',\n    'govern',\n    'gown',\n    'grab',\n    'grace',\n    'grain',\n    'grant',\n    'grape',\n    'grass',\n    'gravity',\n    'great',\n    'green',\n    'grid',\n    'grief',\n    'grit',\n    'grocery',\n    'group',\n    'grow',\n    'grunt',\n    'guard',\n    'guess',\n    'guide',\n    'guilt',\n    'guitar',\n    'gun',\n    'gym',\n    'habit',\n    'hair',\n    'half',\n    'hammer',\n    'hamster',\n    'hand',\n    'happy',\n    'harbor',\n    'hard',\n    'harsh',\n    'harvest',\n    'hat',\n    'have',\n    'hawk',\n    'hazard',\n    'head',\n    'health',\n    'heart',\n    'heavy',\n    'hedgehog',\n    'height',\n    'hello',\n    'helmet',\n    'help',\n    'hen',\n    'hero',\n    'hidden',\n    'high',\n    'hill',\n    'hint',\n    'hip',\n    'hire',\n    'history',\n    'hobby',\n    'hockey',\n    'hold',\n    'hole',\n    'holiday',\n    'hollow',\n    'home',\n    'honey',\n    'hood',\n    'hope',\n    'horn',\n    'horror',\n    'horse',\n    'hospital',\n    'host',\n    'hotel',\n    'hour',\n    'hover',\n    'hub',\n    'huge',\n    'human',\n    'humble',\n    'humor',\n    'hundred',\n    'hungry',\n    'hunt',\n    'hurdle',\n    'hurry',\n    'hurt',\n    'husband',\n    'hybrid',\n    'ice',\n    'icon',\n    'idea',\n    'identify',\n    'idle',\n    'ignore',\n    'ill',\n    'illegal',\n    'illness',\n    'image',\n    'imitate',\n    'immense',\n    'immune',\n    'impact',\n    'impose',\n    'improve',\n    'impulse',\n    'inch',\n    'include',\n    'income',\n    'increase',\n    'index',\n    'indicate',\n    'indoor',\n    'industry',\n    'infant',\n    'inflict',\n    'inform',\n    'inhale',\n    'inherit',\n    'initial',\n    'inject',\n    'injury',\n    'inmate',\n    'inner',\n    'innocent',\n    'input',\n    'inquiry',\n    'insane',\n    'insect',\n    'inside',\n    'inspire',\n    'install',\n    'intact',\n    'interest',\n    'into',\n    'invest',\n    'invite',\n    'involve',\n    'iron',\n    'island',\n    'isolate',\n    'issue',\n    'item',\n    'ivory',\n    'jacket',\n    'jaguar',\n    'jar',\n    'jazz',\n    'jealous',\n    'jeans',\n    'jelly',\n    'jewel',\n    'job',\n    'join',\n    'joke',\n    'journey',\n    'joy',\n    'judge',\n    'juice',\n    'jump',\n    'jungle',\n    'junior',\n    'junk',\n    'just',\n    'kangaroo',\n    'keen',\n    'keep',\n    'ketchup',\n    'key',\n    'kick',\n    'kid',\n    'kidney',\n    'kind',\n    'kingdom',\n    'kiss',\n    'kit',\n    'kitchen',\n    'kite',\n    'kitten',\n    'kiwi',\n    'knee',\n    'knife',\n    'knock',\n    'know',\n    'lab',\n    'label',\n    'labor',\n    'ladder',\n    'lady',\n    'lake',\n    'lamp',\n    'language',\n    'laptop',\n    'large',\n    'later',\n    'latin',\n    'laugh',\n    'laundry',\n    'lava',\n    'law',\n    'lawn',\n    'lawsuit',\n    'layer',\n    'lazy',\n    'leader',\n    'leaf',\n    'learn',\n    'leave',\n    'lecture',\n    'left',\n    'leg',\n    'legal',\n    'legend',\n    'leisure',\n    'lemon',\n    'lend',\n    'length',\n    'lens',\n    'leopard',\n    'lesson',\n    'letter',\n    'level',\n    'liar',\n    'liberty',\n    'library',\n    'license',\n    'life',\n    'lift',\n    'light',\n    'like',\n    'limb',\n    'limit',\n    'link',\n    'lion',\n    'liquid',\n    'list',\n    'little',\n    'live',\n    'lizard',\n    'load',\n    'loan',\n    'lobster',\n    'local',\n    'lock',\n    'logic',\n    'lonely',\n    'long',\n    'loop',\n    'lottery',\n    'loud',\n    'lounge',\n    'love',\n    'loyal',\n    'lucky',\n    'luggage',\n    'lumber',\n    'lunar',\n    'lunch',\n    'luxury',\n    'lyrics',\n    'machine',\n    'mad',\n    'magic',\n    'magnet',\n    'maid',\n    'mail',\n    'main',\n    'major',\n    'make',\n    'mammal',\n    'man',\n    'manage',\n    'mandate',\n    'mango',\n    'mansion',\n    'manual',\n    'maple',\n    'marble',\n    'march',\n    'margin',\n    'marine',\n    'market',\n    'marriage',\n    'mask',\n    'mass',\n    'master',\n    'match',\n    'material',\n    'math',\n    'matrix',\n    'matter',\n    'maximum',\n    'maze',\n    'meadow',\n    'mean',\n    'measure',\n    'meat',\n    'mechanic',\n    'medal',\n    'media',\n    'melody',\n    'melt',\n    'member',\n    'memory',\n    'mention',\n    'menu',\n    'mercy',\n    'merge',\n    'merit',\n    'merry',\n    'mesh',\n    'message',\n    'metal',\n    'method',\n    'middle',\n    'midnight',\n    'milk',\n    'million',\n    'mimic',\n    'mind',\n    'minimum',\n    'minor',\n    'minute',\n    'miracle',\n    'mirror',\n    'misery',\n    'miss',\n    'mistake',\n    'mix',\n    'mixed',\n    'mixture',\n    'mobile',\n    'model',\n    'modify',\n    'mom',\n    'moment',\n    'monitor',\n    'monkey',\n    'monster',\n    'month',\n    'moon',\n    'moral',\n    'more',\n    'morning',\n    'mosquito',\n    'mother',\n    'motion',\n    'motor',\n    'mountain',\n    'mouse',\n    'move',\n    'movie',\n    'much',\n    'muffin',\n    'mule',\n    'multiply',\n    'muscle',\n    'museum',\n    'mushroom',\n    'music',\n    'must',\n    'mutual',\n    'myself',\n    'mystery',\n    'myth',\n    'naive',\n    'name',\n    'napkin',\n    'narrow',\n    'nasty',\n    'nation',\n    'nature',\n    'near',\n    'neck',\n    'need',\n    'negative',\n    'neglect',\n    'neither',\n    'nephew',\n    'nerve',\n    'nest',\n    'net',\n    'network',\n    'neutral',\n    'never',\n    'news',\n    'next',\n    'nice',\n    'night',\n    'noble',\n    'noise',\n    'nominee',\n    'noodle',\n    'normal',\n    'north',\n    'nose',\n    'notable',\n    'note',\n    'nothing',\n    'notice',\n    'novel',\n    'now',\n    'nuclear',\n    'number',\n    'nurse',\n    'nut',\n    'oak',\n    'obey',\n    'object',\n    'oblige',\n    'obscure',\n    'observe',\n    'obtain',\n    'obvious',\n    'occur',\n    'ocean',\n    'october',\n    'odor',\n    'off',\n    'offer',\n    'office',\n    'often',\n    'oil',\n    'okay',\n    'old',\n    'olive',\n    'olympic',\n    'omit',\n    'once',\n    'one',\n    'onion',\n    'online',\n    'only',\n    'open',\n    'opera',\n    'opinion',\n    'oppose',\n    'option',\n    'orange',\n    'orbit',\n    'orchard',\n    'order',\n    'ordinary',\n    'organ',\n    'orient',\n    'original',\n    'orphan',\n    'ostrich',\n    'other',\n    'outdoor',\n    'outer',\n    'output',\n    'outside',\n    'oval',\n    'oven',\n    'over',\n    'own',\n    'owner',\n    'oxygen',\n    'oyster',\n    'ozone',\n    'pact',\n    'paddle',\n    'page',\n    'pair',\n    'palace',\n    'palm',\n    'panda',\n    'panel',\n    'panic',\n    'panther',\n    'paper',\n    'parade',\n    'parent',\n    'park',\n    'parrot',\n    'party',\n    'pass',\n    'patch',\n    'path',\n    'patient',\n    'patrol',\n    'pattern',\n    'pause',\n    'pave',\n    'payment',\n    'peace',\n    'peanut',\n    'pear',\n    'peasant',\n    'pelican',\n    'pen',\n    'penalty',\n    'pencil',\n    'people',\n    'pepper',\n    'perfect',\n    'permit',\n    'person',\n    'pet',\n    'phone',\n    'photo',\n    'phrase',\n    'physical',\n    'piano',\n    'picnic',\n    'picture',\n    'piece',\n    'pig',\n    'pigeon',\n    'pill',\n    'pilot',\n    'pink',\n    'pioneer',\n    'pipe',\n    'pistol',\n    'pitch',\n    'pizza',\n    'place',\n    'planet',\n    'plastic',\n    'plate',\n    'play',\n    'please',\n    'pledge',\n    'pluck',\n    'plug',\n    'plunge',\n    'poem',\n    'poet',\n    'point',\n    'polar',\n    'pole',\n    'police',\n    'pond',\n    'pony',\n    'pool',\n    'popular',\n    'portion',\n    'position',\n    'possible',\n    'post',\n    'potato',\n    'pottery',\n    'poverty',\n    'powder',\n    'power',\n    'practice',\n    'praise',\n    'predict',\n    'prefer',\n    'prepare',\n    'present',\n    'pretty',\n    'prevent',\n    'price',\n    'pride',\n    'primary',\n    'print',\n    'priority',\n    'prison',\n    'private',\n    'prize',\n    'problem',\n    'process',\n    'produce',\n    'profit',\n    'program',\n    'project',\n    'promote',\n    'proof',\n    'property',\n    'prosper',\n    'protect',\n    'proud',\n    'provide',\n    'public',\n    'pudding',\n    'pull',\n    'pulp',\n    'pulse',\n    'pumpkin',\n    'punch',\n    'pupil',\n    'puppy',\n    'purchase',\n    'purity',\n    'purpose',\n    'purse',\n    'push',\n    'put',\n    'puzzle',\n    'pyramid',\n    'quality',\n    'quantum',\n    'quarter',\n    'question',\n    'quick',\n    'quit',\n    'quiz',\n    'quote',\n    'rabbit',\n    'raccoon',\n    'race',\n    'rack',\n    'radar',\n    'radio',\n    'rail',\n    'rain',\n    'raise',\n    'rally',\n    'ramp',\n    'ranch',\n    'random',\n    'range',\n    'rapid',\n    'rare',\n    'rate',\n    'rather',\n    'raven',\n    'raw',\n    'razor',\n    'ready',\n    'real',\n    'reason',\n    'rebel',\n    'rebuild',\n    'recall',\n    'receive',\n    'recipe',\n    'record',\n    'recycle',\n    'reduce',\n    'reflect',\n    'reform',\n    'refuse',\n    'region',\n    'regret',\n    'regular',\n    'reject',\n    'relax',\n    'release',\n    'relief',\n    'rely',\n    'remain',\n    'remember',\n    'remind',\n    'remove',\n    'render',\n    'renew',\n    'rent',\n    'reopen',\n    'repair',\n    'repeat',\n    'replace',\n    'report',\n    'require',\n    'rescue',\n    'resemble',\n    'resist',\n    'resource',\n    'response',\n    'result',\n    'retire',\n    'retreat',\n    'return',\n    'reunion',\n    'reveal',\n    'review',\n    'reward',\n    'rhythm',\n    'rib',\n    'ribbon',\n    'rice',\n    'rich',\n    'ride',\n    'ridge',\n    'rifle',\n    'right',\n    'rigid',\n    'ring',\n    'riot',\n    'ripple',\n    'risk',\n    'ritual',\n    'rival',\n    'river',\n    'road',\n    'roast',\n    'robot',\n    'robust',\n    'rocket',\n    'romance',\n    'roof',\n    'rookie',\n    'room',\n    'rose',\n    'rotate',\n    'rough',\n    'round',\n    'route',\n    'royal',\n    'rubber',\n    'rude',\n    'rug',\n    'rule',\n    'run',\n    'runway',\n    'rural',\n    'sad',\n    'saddle',\n    'sadness',\n    'safe',\n    'sail',\n    'salad',\n    'salmon',\n    'salon',\n    'salt',\n    'salute',\n    'same',\n    'sample',\n    'sand',\n    'satisfy',\n    'satoshi',\n    'sauce',\n    'sausage',\n    'save',\n    'say',\n    'scale',\n    'scan',\n    'scare',\n    'scatter',\n    'scene',\n    'scheme',\n    'school',\n    'science',\n    'scissors',\n    'scorpion',\n    'scout',\n    'scrap',\n    'screen',\n    'script',\n    'scrub',\n    'sea',\n    'search',\n    'season',\n    'seat',\n    'second',\n    'secret',\n    'section',\n    'security',\n    'seed',\n    'seek',\n    'segment',\n    'select',\n    'sell',\n    'seminar',\n    'senior',\n    'sense',\n    'sentence',\n    'series',\n    'service',\n    'session',\n    'settle',\n    'setup',\n    'seven',\n    'shadow',\n    'shaft',\n    'shallow',\n    'share',\n    'shed',\n    'shell',\n    'sheriff',\n    'shield',\n    'shift',\n    'shine',\n    'ship',\n    'shiver',\n    'shock',\n    'shoe',\n    'shoot',\n    'shop',\n    'short',\n    'shoulder',\n    'shove',\n    'shrimp',\n    'shrug',\n    'shuffle',\n    'shy',\n    'sibling',\n    'sick',\n    'side',\n    'siege',\n    'sight',\n    'sign',\n    'silent',\n    'silk',\n    'silly',\n    'silver',\n    'similar',\n    'simple',\n    'since',\n    'sing',\n    'siren',\n    'sister',\n    'situate',\n    'six',\n    'size',\n    'skate',\n    'sketch',\n    'ski',\n    'skill',\n    'skin',\n    'skirt',\n    'skull',\n    'slab',\n    'slam',\n    'sleep',\n    'slender',\n    'slice',\n    'slide',\n    'slight',\n    'slim',\n    'slogan',\n    'slot',\n    'slow',\n    'slush',\n    'small',\n    'smart',\n    'smile',\n    'smoke',\n    'smooth',\n    'snack',\n    'snake',\n    'snap',\n    'sniff',\n    'snow',\n    'soap',\n    'soccer',\n    'social',\n    'sock',\n    'soda',\n    'soft',\n    'solar',\n    'soldier',\n    'solid',\n    'solution',\n    'solve',\n    'someone',\n    'song',\n    'soon',\n    'sorry',\n    'sort',\n    'soul',\n    'sound',\n    'soup',\n    'source',\n    'south',\n    'space',\n    'spare',\n    'spatial',\n    'spawn',\n    'speak',\n    'special',\n    'speed',\n    'spell',\n    'spend',\n    'sphere',\n    'spice',\n    'spider',\n    'spike',\n    'spin',\n    'spirit',\n    'split',\n    'spoil',\n    'sponsor',\n    'spoon',\n    'sport',\n    'spot',\n    'spray',\n    'spread',\n    'spring',\n    'spy',\n    'square',\n    'squeeze',\n    'squirrel',\n    'stable',\n    'stadium',\n    'staff',\n    'stage',\n    'stairs',\n    'stamp',\n    'stand',\n    'start',\n    'state',\n    'stay',\n    'steak',\n    'steel',\n    'stem',\n    'step',\n    'stereo',\n    'stick',\n    'still',\n    'sting',\n    'stock',\n    'stomach',\n    'stone',\n    'stool',\n    'story',\n    'stove',\n    'strategy',\n    'street',\n    'strike',\n    'strong',\n    'struggle',\n    'student',\n    'stuff',\n    'stumble',\n    'style',\n    'subject',\n    'submit',\n    'subway',\n    'success',\n    'such',\n    'sudden',\n    'suffer',\n    'sugar',\n    'suggest',\n    'suit',\n    'summer',\n    'sun',\n    'sunny',\n    'sunset',\n    'super',\n    'supply',\n    'supreme',\n    'sure',\n    'surface',\n    'surge',\n    'surprise',\n    'surround',\n    'survey',\n    'suspect',\n    'sustain',\n    'swallow',\n    'swamp',\n    'swap',\n    'swarm',\n    'swear',\n    'sweet',\n    'swift',\n    'swim',\n    'swing',\n    'switch',\n    'sword',\n    'symbol',\n    'symptom',\n    'syrup',\n    'system',\n    'table',\n    'tackle',\n    'tag',\n    'tail',\n    'talent',\n    'talk',\n    'tank',\n    'tape',\n    'target',\n    'task',\n    'taste',\n    'tattoo',\n    'taxi',\n    'teach',\n    'team',\n    'tell',\n    'ten',\n    'tenant',\n    'tennis',\n    'tent',\n    'term',\n    'test',\n    'text',\n    'thank',\n    'that',\n    'theme',\n    'then',\n    'theory',\n    'there',\n    'they',\n    'thing',\n    'this',\n    'thought',\n    'three',\n    'thrive',\n    'throw',\n    'thumb',\n    'thunder',\n    'ticket',\n    'tide',\n    'tiger',\n    'tilt',\n    'timber',\n    'time',\n    'tiny',\n    'tip',\n    'tired',\n    'tissue',\n    'title',\n    'toast',\n    'tobacco',\n    'today',\n    'toddler',\n    'toe',\n    'together',\n    'toilet',\n    'token',\n    'tomato',\n    'tomorrow',\n    'tone',\n    'tongue',\n    'tonight',\n    'tool',\n    'tooth',\n    'top',\n    'topic',\n    'topple',\n    'torch',\n    'tornado',\n    'tortoise',\n    'toss',\n    'total',\n    'tourist',\n    'toward',\n    'tower',\n    'town',\n    'toy',\n    'track',\n    'trade',\n    'traffic',\n    'tragic',\n    'train',\n    'transfer',\n    'trap',\n    'trash',\n    'travel',\n    'tray',\n    'treat',\n    'tree',\n    'trend',\n    'trial',\n    'tribe',\n    'trick',\n    'trigger',\n    'trim',\n    'trip',\n    'trophy',\n    'trouble',\n    'truck',\n    'true',\n    'truly',\n    'trumpet',\n    'trust',\n    'truth',\n    'try',\n    'tube',\n    'tuition',\n    'tumble',\n    'tuna',\n    'tunnel',\n    'turkey',\n    'turn',\n    'turtle',\n    'twelve',\n    'twenty',\n    'twice',\n    'twin',\n    'twist',\n    'two',\n    'type',\n    'typical',\n    'ugly',\n    'umbrella',\n    'unable',\n    'unaware',\n    'uncle',\n    'uncover',\n    'under',\n    'undo',\n    'unfair',\n    'unfold',\n    'unhappy',\n    'uniform',\n    'unique',\n    'unit',\n    'universe',\n    'unknown',\n    'unlock',\n    'until',\n    'unusual',\n    'unveil',\n    'update',\n    'upgrade',\n    'uphold',\n    'upon',\n    'upper',\n    'upset',\n    'urban',\n    'urge',\n    'usage',\n    'use',\n    'used',\n    'useful',\n    'useless',\n    'usual',\n    'utility',\n    'vacant',\n    'vacuum',\n    'vague',\n    'valid',\n    'valley',\n    'valve',\n    'van',\n    'vanish',\n    'vapor',\n    'various',\n    'vast',\n    'vault',\n    'vehicle',\n    'velvet',\n    'vendor',\n    'venture',\n    'venue',\n    'verb',\n    'verify',\n    'version',\n    'very',\n    'vessel',\n    'veteran',\n    'viable',\n    'vibrant',\n    'vicious',\n    'victory',\n    'video',\n    'view',\n    'village',\n    'vintage',\n    'violin',\n    'virtual',\n    'virus',\n    'visa',\n    'visit',\n    'visual',\n    'vital',\n    'vivid',\n    'vocal',\n    'voice',\n    'void',\n    'volcano',\n    'volume',\n    'vote',\n    'voyage',\n    'wage',\n    'wagon',\n    'wait',\n    'walk',\n    'wall',\n    'walnut',\n    'want',\n    'warfare',\n    'warm',\n    'warrior',\n    'wash',\n    'wasp',\n    'waste',\n    'water',\n    'wave',\n    'way',\n    'wealth',\n    'weapon',\n    'wear',\n    'weasel',\n    'weather',\n    'web',\n    'wedding',\n    'weekend',\n    'weird',\n    'welcome',\n    'west',\n    'wet',\n    'whale',\n    'what',\n    'wheat',\n    'wheel',\n    'when',\n    'where',\n    'whip',\n    'whisper',\n    'wide',\n    'width',\n    'wife',\n    'wild',\n    'will',\n    'win',\n    'window',\n    'wine',\n    'wing',\n    'wink',\n    'winner',\n    'winter',\n    'wire',\n    'wisdom',\n    'wise',\n    'wish',\n    'witness',\n    'wolf',\n    'woman',\n    'wonder',\n    'wood',\n    'wool',\n    'word',\n    'work',\n    'world',\n    'worry',\n    'worth',\n    'wrap',\n    'wreck',\n    'wrestle',\n    'wrist',\n    'write',\n    'wrong',\n    'yard',\n    'year',\n    'yellow',\n    'you',\n    'young',\n    'youth',\n    'zebra',\n    'zero',\n    'zone',\n    'zoo'\n];\n//# sourceMappingURL=english.js.map","// SPDX-License-Identifier: MIT\nimport { Mnemonic } from '../mnemonic';\nimport { AlgorandEntropy, ALGORAND_ENTROPY_STRENGTHS } from '../../entropies';\nimport { sha512_256 } from '../../crypto';\nimport { getBytes, bytesToString, convertBits } from '../../utils';\nimport { MnemonicError, EntropyError, ChecksumError } from '../../exceptions';\nimport { ALGORAND_ENGLISH_WORDLIST } from './wordlists';\nexport const ALGORAND_MNEMONIC_WORDS = {\n    TWENTY_FIVE: 25\n};\nexport const ALGORAND_MNEMONIC_LANGUAGES = {\n    ENGLISH: 'english'\n};\nexport class AlgorandMnemonic extends Mnemonic {\n    static checksumLength = 2;\n    static wordBitLength = 11;\n    static wordsList = [\n        ALGORAND_MNEMONIC_WORDS.TWENTY_FIVE\n    ];\n    static wordsToEntropyStrength = {\n        25: ALGORAND_ENTROPY_STRENGTHS.TWO_HUNDRED_FIFTY_SIX\n    };\n    static languages = Object.values(ALGORAND_MNEMONIC_LANGUAGES);\n    static wordLists = {\n        [ALGORAND_MNEMONIC_LANGUAGES.ENGLISH]: ALGORAND_ENGLISH_WORDLIST\n    };\n    static getName() {\n        return 'Algorand';\n    }\n    static fromWords(words, language, options = {}) {\n        if (!this.wordsList.includes(words)) {\n            throw new MnemonicError(`Invalid words count`, { expected: this.wordsList, got: words });\n        }\n        const strength = this.wordsToEntropyStrength[words];\n        const entropyHex = AlgorandEntropy.generate(strength);\n        return this.encode(entropyHex, language, options);\n    }\n    static fromEntropy(entropy, language, options = {}) {\n        const entropyBytes = typeof entropy === 'string'\n            ? getBytes(entropy) : entropy instanceof Uint8Array\n            ? entropy : getBytes(entropy.getEntropy());\n        return this.encode(entropyBytes, language, options);\n    }\n    static encode(entropyInput, language, options = {}) {\n        const entropyBytes = getBytes(entropyInput);\n        if (!AlgorandEntropy.isValidBytesStrength(entropyBytes.length)) {\n            throw new EntropyError('Wrong entropy strength', { expected: AlgorandEntropy.strengths, got: entropyBytes.length * 8 });\n        }\n        const fullHash = sha512_256(entropyBytes);\n        const checksum = fullHash.slice(0, this.checksumLength);\n        const checksumWords = convertBits(checksum, 8, this.wordBitLength);\n        if (!checksumWords)\n            throw new Error('Checksum conversion failed');\n        const dataWords = convertBits(entropyBytes, 8, this.wordBitLength);\n        if (!dataWords)\n            throw new Error('Entropy conversion failed');\n        const wordList = this.getWordsListByLanguage(language, this.wordLists);\n        const indexes = [...dataWords, checksumWords[0]];\n        return indexes.map(i => wordList[i]).join(' ');\n    }\n    static decode(mnemonic, options = {}) {\n        const words = this.normalize(mnemonic);\n        if (!this.wordsList.includes(words.length)) {\n            throw new MnemonicError('Invalid mnemonic length', { expected: this.wordsList, got: words.length });\n        }\n        const [wordList] = this.findLanguage(words, this.wordLists);\n        const idxMap = Object.fromEntries(wordList.map((w, i) => [w, i]));\n        const indexes = words.map(w => {\n            const idx = idxMap[w];\n            if (idx === undefined) {\n                throw new MnemonicError(`Unknown word '${w}'`);\n            }\n            return idx;\n        });\n        const allBytes = convertBits(indexes.slice(0, -1), this.wordBitLength, 8);\n        if (!allBytes)\n            throw new Error('Bit conversion failed');\n        const entropyBytesArr = allBytes.slice(0, -1);\n        const entropyBytes = getBytes(entropyBytesArr);\n        const expectedIdx = (convertBits(sha512_256(entropyBytes).slice(0, this.checksumLength), 8, this.wordBitLength) || [])[0];\n        const actualIdx = indexes[indexes.length - 1];\n        if (expectedIdx !== actualIdx) {\n            throw new ChecksumError('Invalid checksum', {\n                expected: wordList[expectedIdx],\n                got: wordList[actualIdx]\n            });\n        }\n        return bytesToString(entropyBytes);\n    }\n    static normalize(input) {\n        const arr = typeof input === 'string' ? input.trim().split(/\\s+/) : input;\n        return arr.map(w => w.normalize('NFKD').toLowerCase());\n    }\n}\n//# sourceMappingURL=mnemonic.js.map","// SPDX-License-Identifier: MIT\nexport const WORDLIST = [\n    '的',\n    '一',\n    '是',\n    '在',\n    '不',\n    '了',\n    '有',\n    '和',\n    '人',\n    '这',\n    '中',\n    '大',\n    '为',\n    '上',\n    '个',\n    '国',\n    '我',\n    '以',\n    '要',\n    '他',\n    '时',\n    '来',\n    '用',\n    '们',\n    '生',\n    '到',\n    '作',\n    '地',\n    '于',\n    '出',\n    '就',\n    '分',\n    '对',\n    '成',\n    '会',\n    '可',\n    '主',\n    '发',\n    '年',\n    '动',\n    '同',\n    '工',\n    '也',\n    '能',\n    '下',\n    '过',\n    '子',\n    '说',\n    '产',\n    '种',\n    '面',\n    '而',\n    '方',\n    '后',\n    '多',\n    '定',\n    '行',\n    '学',\n    '法',\n    '所',\n    '民',\n    '得',\n    '经',\n    '十',\n    '三',\n    '之',\n    '进',\n    '着',\n    '等',\n    '部',\n    '度',\n    '家',\n    '电',\n    '力',\n    '里',\n    '如',\n    '水',\n    '化',\n    '高',\n    '自',\n    '二',\n    '理',\n    '起',\n    '小',\n    '物',\n    '现',\n    '实',\n    '加',\n    '量',\n    '都',\n    '两',\n    '体',\n    '制',\n    '机',\n    '当',\n    '使',\n    '点',\n    '从',\n    '业',\n    '本',\n    '去',\n    '把',\n    '性',\n    '好',\n    '应',\n    '开',\n    '它',\n    '合',\n    '还',\n    '因',\n    '由',\n    '其',\n    '些',\n    '然',\n    '前',\n    '外',\n    '天',\n    '政',\n    '四',\n    '日',\n    '那',\n    '社',\n    '义',\n    '事',\n    '平',\n    '形',\n    '相',\n    '全',\n    '表',\n    '间',\n    '样',\n    '与',\n    '关',\n    '各',\n    '重',\n    '新',\n    '线',\n    '内',\n    '数',\n    '正',\n    '心',\n    '反',\n    '你',\n    '明',\n    '看',\n    '原',\n    '又',\n    '么',\n    '利',\n    '比',\n    '或',\n    '但',\n    '质',\n    '气',\n    '第',\n    '向',\n    '道',\n    '命',\n    '此',\n    '变',\n    '条',\n    '只',\n    '没',\n    '结',\n    '解',\n    '问',\n    '意',\n    '建',\n    '月',\n    '公',\n    '无',\n    '系',\n    '军',\n    '很',\n    '情',\n    '者',\n    '最',\n    '立',\n    '代',\n    '想',\n    '已',\n    '通',\n    '并',\n    '提',\n    '直',\n    '题',\n    '党',\n    '程',\n    '展',\n    '五',\n    '果',\n    '料',\n    '象',\n    '员',\n    '革',\n    '位',\n    '入',\n    '常',\n    '文',\n    '总',\n    '次',\n    '品',\n    '式',\n    '活',\n    '设',\n    '及',\n    '管',\n    '特',\n    '件',\n    '长',\n    '求',\n    '老',\n    '头',\n    '基',\n    '资',\n    '边',\n    '流',\n    '路',\n    '级',\n    '少',\n    '图',\n    '山',\n    '统',\n    '接',\n    '知',\n    '较',\n    '将',\n    '组',\n    '见',\n    '计',\n    '别',\n    '她',\n    '手',\n    '角',\n    '期',\n    '根',\n    '论',\n    '运',\n    '农',\n    '指',\n    '几',\n    '九',\n    '区',\n    '强',\n    '放',\n    '决',\n    '西',\n    '被',\n    '干',\n    '做',\n    '必',\n    '战',\n    '先',\n    '回',\n    '则',\n    '任',\n    '取',\n    '据',\n    '处',\n    '队',\n    '南',\n    '给',\n    '色',\n    '光',\n    '门',\n    '即',\n    '保',\n    '治',\n    '北',\n    '造',\n    '百',\n    '规',\n    '热',\n    '领',\n    '七',\n    '海',\n    '口',\n    '东',\n    '导',\n    '器',\n    '压',\n    '志',\n    '世',\n    '金',\n    '增',\n    '争',\n    '济',\n    '阶',\n    '油',\n    '思',\n    '术',\n    '极',\n    '交',\n    '受',\n    '联',\n    '什',\n    '认',\n    '六',\n    '共',\n    '权',\n    '收',\n    '证',\n    '改',\n    '清',\n    '美',\n    '再',\n    '采',\n    '转',\n    '更',\n    '单',\n    '风',\n    '切',\n    '打',\n    '白',\n    '教',\n    '速',\n    '花',\n    '带',\n    '安',\n    '场',\n    '身',\n    '车',\n    '例',\n    '真',\n    '务',\n    '具',\n    '万',\n    '每',\n    '目',\n    '至',\n    '达',\n    '走',\n    '积',\n    '示',\n    '议',\n    '声',\n    '报',\n    '斗',\n    '完',\n    '类',\n    '八',\n    '离',\n    '华',\n    '名',\n    '确',\n    '才',\n    '科',\n    '张',\n    '信',\n    '马',\n    '节',\n    '话',\n    '米',\n    '整',\n    '空',\n    '元',\n    '况',\n    '今',\n    '集',\n    '温',\n    '传',\n    '土',\n    '许',\n    '步',\n    '群',\n    '广',\n    '石',\n    '记',\n    '需',\n    '段',\n    '研',\n    '界',\n    '拉',\n    '林',\n    '律',\n    '叫',\n    '且',\n    '究',\n    '观',\n    '越',\n    '织',\n    '装',\n    '影',\n    '算',\n    '低',\n    '持',\n    '音',\n    '众',\n    '书',\n    '布',\n    '复',\n    '容',\n    '儿',\n    '须',\n    '际',\n    '商',\n    '非',\n    '验',\n    '连',\n    '断',\n    '深',\n    '难',\n    '近',\n    '矿',\n    '千',\n    '周',\n    '委',\n    '素',\n    '技',\n    '备',\n    '半',\n    '办',\n    '青',\n    '省',\n    '列',\n    '习',\n    '响',\n    '约',\n    '支',\n    '般',\n    '史',\n    '感',\n    '劳',\n    '便',\n    '团',\n    '往',\n    '酸',\n    '历',\n    '市',\n    '克',\n    '何',\n    '除',\n    '消',\n    '构',\n    '府',\n    '称',\n    '太',\n    '准',\n    '精',\n    '值',\n    '号',\n    '率',\n    '族',\n    '维',\n    '划',\n    '选',\n    '标',\n    '写',\n    '存',\n    '候',\n    '毛',\n    '亲',\n    '快',\n    '效',\n    '斯',\n    '院',\n    '查',\n    '江',\n    '型',\n    '眼',\n    '王',\n    '按',\n    '格',\n    '养',\n    '易',\n    '置',\n    '派',\n    '层',\n    '片',\n    '始',\n    '却',\n    '专',\n    '状',\n    '育',\n    '厂',\n    '京',\n    '识',\n    '适',\n    '属',\n    '圆',\n    '包',\n    '火',\n    '住',\n    '调',\n    '满',\n    '县',\n    '局',\n    '照',\n    '参',\n    '红',\n    '细',\n    '引',\n    '听',\n    '该',\n    '铁',\n    '价',\n    '严',\n    '首',\n    '底',\n    '液',\n    '官',\n    '德',\n    '随',\n    '病',\n    '苏',\n    '失',\n    '尔',\n    '死',\n    '讲',\n    '配',\n    '女',\n    '黄',\n    '推',\n    '显',\n    '谈',\n    '罪',\n    '神',\n    '艺',\n    '呢',\n    '席',\n    '含',\n    '企',\n    '望',\n    '密',\n    '批',\n    '营',\n    '项',\n    '防',\n    '举',\n    '球',\n    '英',\n    '氧',\n    '势',\n    '告',\n    '李',\n    '台',\n    '落',\n    '木',\n    '帮',\n    '轮',\n    '破',\n    '亚',\n    '师',\n    '围',\n    '注',\n    '远',\n    '字',\n    '材',\n    '排',\n    '供',\n    '河',\n    '态',\n    '封',\n    '另',\n    '施',\n    '减',\n    '树',\n    '溶',\n    '怎',\n    '止',\n    '案',\n    '言',\n    '士',\n    '均',\n    '武',\n    '固',\n    '叶',\n    '鱼',\n    '波',\n    '视',\n    '仅',\n    '费',\n    '紧',\n    '爱',\n    '左',\n    '章',\n    '早',\n    '朝',\n    '害',\n    '续',\n    '轻',\n    '服',\n    '试',\n    '食',\n    '充',\n    '兵',\n    '源',\n    '判',\n    '护',\n    '司',\n    '足',\n    '某',\n    '练',\n    '差',\n    '致',\n    '板',\n    '田',\n    '降',\n    '黑',\n    '犯',\n    '负',\n    '击',\n    '范',\n    '继',\n    '兴',\n    '似',\n    '余',\n    '坚',\n    '曲',\n    '输',\n    '修',\n    '故',\n    '城',\n    '夫',\n    '够',\n    '送',\n    '笔',\n    '船',\n    '占',\n    '右',\n    '财',\n    '吃',\n    '富',\n    '春',\n    '职',\n    '觉',\n    '汉',\n    '画',\n    '功',\n    '巴',\n    '跟',\n    '虽',\n    '杂',\n    '飞',\n    '检',\n    '吸',\n    '助',\n    '升',\n    '阳',\n    '互',\n    '初',\n    '创',\n    '抗',\n    '考',\n    '投',\n    '坏',\n    '策',\n    '古',\n    '径',\n    '换',\n    '未',\n    '跑',\n    '留',\n    '钢',\n    '曾',\n    '端',\n    '责',\n    '站',\n    '简',\n    '述',\n    '钱',\n    '副',\n    '尽',\n    '帝',\n    '射',\n    '草',\n    '冲',\n    '承',\n    '独',\n    '令',\n    '限',\n    '阿',\n    '宣',\n    '环',\n    '双',\n    '请',\n    '超',\n    '微',\n    '让',\n    '控',\n    '州',\n    '良',\n    '轴',\n    '找',\n    '否',\n    '纪',\n    '益',\n    '依',\n    '优',\n    '顶',\n    '础',\n    '载',\n    '倒',\n    '房',\n    '突',\n    '坐',\n    '粉',\n    '敌',\n    '略',\n    '客',\n    '袁',\n    '冷',\n    '胜',\n    '绝',\n    '析',\n    '块',\n    '剂',\n    '测',\n    '丝',\n    '协',\n    '诉',\n    '念',\n    '陈',\n    '仍',\n    '罗',\n    '盐',\n    '友',\n    '洋',\n    '错',\n    '苦',\n    '夜',\n    '刑',\n    '移',\n    '频',\n    '逐',\n    '靠',\n    '混',\n    '母',\n    '短',\n    '皮',\n    '终',\n    '聚',\n    '汽',\n    '村',\n    '云',\n    '哪',\n    '既',\n    '距',\n    '卫',\n    '停',\n    '烈',\n    '央',\n    '察',\n    '烧',\n    '迅',\n    '境',\n    '若',\n    '印',\n    '洲',\n    '刻',\n    '括',\n    '激',\n    '孔',\n    '搞',\n    '甚',\n    '室',\n    '待',\n    '核',\n    '校',\n    '散',\n    '侵',\n    '吧',\n    '甲',\n    '游',\n    '久',\n    '菜',\n    '味',\n    '旧',\n    '模',\n    '湖',\n    '货',\n    '损',\n    '预',\n    '阻',\n    '毫',\n    '普',\n    '稳',\n    '乙',\n    '妈',\n    '植',\n    '息',\n    '扩',\n    '银',\n    '语',\n    '挥',\n    '酒',\n    '守',\n    '拿',\n    '序',\n    '纸',\n    '医',\n    '缺',\n    '雨',\n    '吗',\n    '针',\n    '刘',\n    '啊',\n    '急',\n    '唱',\n    '误',\n    '训',\n    '愿',\n    '审',\n    '附',\n    '获',\n    '茶',\n    '鲜',\n    '粮',\n    '斤',\n    '孩',\n    '脱',\n    '硫',\n    '肥',\n    '善',\n    '龙',\n    '演',\n    '父',\n    '渐',\n    '血',\n    '欢',\n    '械',\n    '掌',\n    '歌',\n    '沙',\n    '刚',\n    '攻',\n    '谓',\n    '盾',\n    '讨',\n    '晚',\n    '粒',\n    '乱',\n    '燃',\n    '矛',\n    '乎',\n    '杀',\n    '药',\n    '宁',\n    '鲁',\n    '贵',\n    '钟',\n    '煤',\n    '读',\n    '班',\n    '伯',\n    '香',\n    '介',\n    '迫',\n    '句',\n    '丰',\n    '培',\n    '握',\n    '兰',\n    '担',\n    '弦',\n    '蛋',\n    '沉',\n    '假',\n    '穿',\n    '执',\n    '答',\n    '乐',\n    '谁',\n    '顺',\n    '烟',\n    '缩',\n    '征',\n    '脸',\n    '喜',\n    '松',\n    '脚',\n    '困',\n    '异',\n    '免',\n    '背',\n    '星',\n    '福',\n    '买',\n    '染',\n    '井',\n    '概',\n    '慢',\n    '怕',\n    '磁',\n    '倍',\n    '祖',\n    '皇',\n    '促',\n    '静',\n    '补',\n    '评',\n    '翻',\n    '肉',\n    '践',\n    '尼',\n    '衣',\n    '宽',\n    '扬',\n    '棉',\n    '希',\n    '伤',\n    '操',\n    '垂',\n    '秋',\n    '宜',\n    '氢',\n    '套',\n    '督',\n    '振',\n    '架',\n    '亮',\n    '末',\n    '宪',\n    '庆',\n    '编',\n    '牛',\n    '触',\n    '映',\n    '雷',\n    '销',\n    '诗',\n    '座',\n    '居',\n    '抓',\n    '裂',\n    '胞',\n    '呼',\n    '娘',\n    '景',\n    '威',\n    '绿',\n    '晶',\n    '厚',\n    '盟',\n    '衡',\n    '鸡',\n    '孙',\n    '延',\n    '危',\n    '胶',\n    '屋',\n    '乡',\n    '临',\n    '陆',\n    '顾',\n    '掉',\n    '呀',\n    '灯',\n    '岁',\n    '措',\n    '束',\n    '耐',\n    '剧',\n    '玉',\n    '赵',\n    '跳',\n    '哥',\n    '季',\n    '课',\n    '凯',\n    '胡',\n    '额',\n    '款',\n    '绍',\n    '卷',\n    '齐',\n    '伟',\n    '蒸',\n    '殖',\n    '永',\n    '宗',\n    '苗',\n    '川',\n    '炉',\n    '岩',\n    '弱',\n    '零',\n    '杨',\n    '奏',\n    '沿',\n    '露',\n    '杆',\n    '探',\n    '滑',\n    '镇',\n    '饭',\n    '浓',\n    '航',\n    '怀',\n    '赶',\n    '库',\n    '夺',\n    '伊',\n    '灵',\n    '税',\n    '途',\n    '灭',\n    '赛',\n    '归',\n    '召',\n    '鼓',\n    '播',\n    '盘',\n    '裁',\n    '险',\n    '康',\n    '唯',\n    '录',\n    '菌',\n    '纯',\n    '借',\n    '糖',\n    '盖',\n    '横',\n    '符',\n    '私',\n    '努',\n    '堂',\n    '域',\n    '枪',\n    '润',\n    '幅',\n    '哈',\n    '竟',\n    '熟',\n    '虫',\n    '泽',\n    '脑',\n    '壤',\n    '碳',\n    '欧',\n    '遍',\n    '侧',\n    '寨',\n    '敢',\n    '彻',\n    '虑',\n    '斜',\n    '薄',\n    '庭',\n    '纳',\n    '弹',\n    '饲',\n    '伸',\n    '折',\n    '麦',\n    '湿',\n    '暗',\n    '荷',\n    '瓦',\n    '塞',\n    '床',\n    '筑',\n    '恶',\n    '户',\n    '访',\n    '塔',\n    '奇',\n    '透',\n    '梁',\n    '刀',\n    '旋',\n    '迹',\n    '卡',\n    '氯',\n    '遇',\n    '份',\n    '毒',\n    '泥',\n    '退',\n    '洗',\n    '摆',\n    '灰',\n    '彩',\n    '卖',\n    '耗',\n    '夏',\n    '择',\n    '忙',\n    '铜',\n    '献',\n    '硬',\n    '予',\n    '繁',\n    '圈',\n    '雪',\n    '函',\n    '亦',\n    '抽',\n    '篇',\n    '阵',\n    '阴',\n    '丁',\n    '尺',\n    '追',\n    '堆',\n    '雄',\n    '迎',\n    '泛',\n    '爸',\n    '楼',\n    '避',\n    '谋',\n    '吨',\n    '野',\n    '猪',\n    '旗',\n    '累',\n    '偏',\n    '典',\n    '馆',\n    '索',\n    '秦',\n    '脂',\n    '潮',\n    '爷',\n    '豆',\n    '忽',\n    '托',\n    '惊',\n    '塑',\n    '遗',\n    '愈',\n    '朱',\n    '替',\n    '纤',\n    '粗',\n    '倾',\n    '尚',\n    '痛',\n    '楚',\n    '谢',\n    '奋',\n    '购',\n    '磨',\n    '君',\n    '池',\n    '旁',\n    '碎',\n    '骨',\n    '监',\n    '捕',\n    '弟',\n    '暴',\n    '割',\n    '贯',\n    '殊',\n    '释',\n    '词',\n    '亡',\n    '壁',\n    '顿',\n    '宝',\n    '午',\n    '尘',\n    '闻',\n    '揭',\n    '炮',\n    '残',\n    '冬',\n    '桥',\n    '妇',\n    '警',\n    '综',\n    '招',\n    '吴',\n    '付',\n    '浮',\n    '遭',\n    '徐',\n    '您',\n    '摇',\n    '谷',\n    '赞',\n    '箱',\n    '隔',\n    '订',\n    '男',\n    '吹',\n    '园',\n    '纷',\n    '唐',\n    '败',\n    '宋',\n    '玻',\n    '巨',\n    '耕',\n    '坦',\n    '荣',\n    '闭',\n    '湾',\n    '键',\n    '凡',\n    '驻',\n    '锅',\n    '救',\n    '恩',\n    '剥',\n    '凝',\n    '碱',\n    '齿',\n    '截',\n    '炼',\n    '麻',\n    '纺',\n    '禁',\n    '废',\n    '盛',\n    '版',\n    '缓',\n    '净',\n    '睛',\n    '昌',\n    '婚',\n    '涉',\n    '筒',\n    '嘴',\n    '插',\n    '岸',\n    '朗',\n    '庄',\n    '街',\n    '藏',\n    '姑',\n    '贸',\n    '腐',\n    '奴',\n    '啦',\n    '惯',\n    '乘',\n    '伙',\n    '恢',\n    '匀',\n    '纱',\n    '扎',\n    '辩',\n    '耳',\n    '彪',\n    '臣',\n    '亿',\n    '璃',\n    '抵',\n    '脉',\n    '秀',\n    '萨',\n    '俄',\n    '网',\n    '舞',\n    '店',\n    '喷',\n    '纵',\n    '寸',\n    '汗',\n    '挂',\n    '洪',\n    '贺',\n    '闪',\n    '柬',\n    '爆',\n    '烯',\n    '津',\n    '稻',\n    '墙',\n    '软',\n    '勇',\n    '像',\n    '滚',\n    '厘',\n    '蒙',\n    '芳',\n    '肯',\n    '坡',\n    '柱',\n    '荡',\n    '腿',\n    '仪',\n    '旅',\n    '尾',\n    '轧',\n    '冰',\n    '贡',\n    '登',\n    '黎',\n    '削',\n    '钻',\n    '勒',\n    '逃',\n    '障',\n    '氨',\n    '郭',\n    '峰',\n    '币',\n    '港',\n    '伏',\n    '轨',\n    '亩',\n    '毕',\n    '擦',\n    '莫',\n    '刺',\n    '浪',\n    '秘',\n    '援',\n    '株',\n    '健',\n    '售',\n    '股',\n    '岛',\n    '甘',\n    '泡',\n    '睡',\n    '童',\n    '铸',\n    '汤',\n    '阀',\n    '休',\n    '汇',\n    '舍',\n    '牧',\n    '绕',\n    '炸',\n    '哲',\n    '磷',\n    '绩',\n    '朋',\n    '淡',\n    '尖',\n    '启',\n    '陷',\n    '柴',\n    '呈',\n    '徒',\n    '颜',\n    '泪',\n    '稍',\n    '忘',\n    '泵',\n    '蓝',\n    '拖',\n    '洞',\n    '授',\n    '镜',\n    '辛',\n    '壮',\n    '锋',\n    '贫',\n    '虚',\n    '弯',\n    '摩',\n    '泰',\n    '幼',\n    '廷',\n    '尊',\n    '窗',\n    '纲',\n    '弄',\n    '隶',\n    '疑',\n    '氏',\n    '宫',\n    '姐',\n    '震',\n    '瑞',\n    '怪',\n    '尤',\n    '琴',\n    '循',\n    '描',\n    '膜',\n    '违',\n    '夹',\n    '腰',\n    '缘',\n    '珠',\n    '穷',\n    '森',\n    '枝',\n    '竹',\n    '沟',\n    '催',\n    '绳',\n    '忆',\n    '邦',\n    '剩',\n    '幸',\n    '浆',\n    '栏',\n    '拥',\n    '牙',\n    '贮',\n    '礼',\n    '滤',\n    '钠',\n    '纹',\n    '罢',\n    '拍',\n    '咱',\n    '喊',\n    '袖',\n    '埃',\n    '勤',\n    '罚',\n    '焦',\n    '潜',\n    '伍',\n    '墨',\n    '欲',\n    '缝',\n    '姓',\n    '刊',\n    '饱',\n    '仿',\n    '奖',\n    '铝',\n    '鬼',\n    '丽',\n    '跨',\n    '默',\n    '挖',\n    '链',\n    '扫',\n    '喝',\n    '袋',\n    '炭',\n    '污',\n    '幕',\n    '诸',\n    '弧',\n    '励',\n    '梅',\n    '奶',\n    '洁',\n    '灾',\n    '舟',\n    '鉴',\n    '苯',\n    '讼',\n    '抱',\n    '毁',\n    '懂',\n    '寒',\n    '智',\n    '埔',\n    '寄',\n    '届',\n    '跃',\n    '渡',\n    '挑',\n    '丹',\n    '艰',\n    '贝',\n    '碰',\n    '拔',\n    '爹',\n    '戴',\n    '码',\n    '梦',\n    '芽',\n    '熔',\n    '赤',\n    '渔',\n    '哭',\n    '敬',\n    '颗',\n    '奔',\n    '铅',\n    '仲',\n    '虎',\n    '稀',\n    '妹',\n    '乏',\n    '珍',\n    '申',\n    '桌',\n    '遵',\n    '允',\n    '隆',\n    '螺',\n    '仓',\n    '魏',\n    '锐',\n    '晓',\n    '氮',\n    '兼',\n    '隐',\n    '碍',\n    '赫',\n    '拨',\n    '忠',\n    '肃',\n    '缸',\n    '牵',\n    '抢',\n    '博',\n    '巧',\n    '壳',\n    '兄',\n    '杜',\n    '讯',\n    '诚',\n    '碧',\n    '祥',\n    '柯',\n    '页',\n    '巡',\n    '矩',\n    '悲',\n    '灌',\n    '龄',\n    '伦',\n    '票',\n    '寻',\n    '桂',\n    '铺',\n    '圣',\n    '恐',\n    '恰',\n    '郑',\n    '趣',\n    '抬',\n    '荒',\n    '腾',\n    '贴',\n    '柔',\n    '滴',\n    '猛',\n    '阔',\n    '辆',\n    '妻',\n    '填',\n    '撤',\n    '储',\n    '签',\n    '闹',\n    '扰',\n    '紫',\n    '砂',\n    '递',\n    '戏',\n    '吊',\n    '陶',\n    '伐',\n    '喂',\n    '疗',\n    '瓶',\n    '婆',\n    '抚',\n    '臂',\n    '摸',\n    '忍',\n    '虾',\n    '蜡',\n    '邻',\n    '胸',\n    '巩',\n    '挤',\n    '偶',\n    '弃',\n    '槽',\n    '劲',\n    '乳',\n    '邓',\n    '吉',\n    '仁',\n    '烂',\n    '砖',\n    '租',\n    '乌',\n    '舰',\n    '伴',\n    '瓜',\n    '浅',\n    '丙',\n    '暂',\n    '燥',\n    '橡',\n    '柳',\n    '迷',\n    '暖',\n    '牌',\n    '秧',\n    '胆',\n    '详',\n    '簧',\n    '踏',\n    '瓷',\n    '谱',\n    '呆',\n    '宾',\n    '糊',\n    '洛',\n    '辉',\n    '愤',\n    '竞',\n    '隙',\n    '怒',\n    '粘',\n    '乃',\n    '绪',\n    '肩',\n    '籍',\n    '敏',\n    '涂',\n    '熙',\n    '皆',\n    '侦',\n    '悬',\n    '掘',\n    '享',\n    '纠',\n    '醒',\n    '狂',\n    '锁',\n    '淀',\n    '恨',\n    '牲',\n    '霸',\n    '爬',\n    '赏',\n    '逆',\n    '玩',\n    '陵',\n    '祝',\n    '秒',\n    '浙',\n    '貌',\n    '役',\n    '彼',\n    '悉',\n    '鸭',\n    '趋',\n    '凤',\n    '晨',\n    '畜',\n    '辈',\n    '秩',\n    '卵',\n    '署',\n    '梯',\n    '炎',\n    '滩',\n    '棋',\n    '驱',\n    '筛',\n    '峡',\n    '冒',\n    '啥',\n    '寿',\n    '译',\n    '浸',\n    '泉',\n    '帽',\n    '迟',\n    '硅',\n    '疆',\n    '贷',\n    '漏',\n    '稿',\n    '冠',\n    '嫩',\n    '胁',\n    '芯',\n    '牢',\n    '叛',\n    '蚀',\n    '奥',\n    '鸣',\n    '岭',\n    '羊',\n    '凭',\n    '串',\n    '塘',\n    '绘',\n    '酵',\n    '融',\n    '盆',\n    '锡',\n    '庙',\n    '筹',\n    '冻',\n    '辅',\n    '摄',\n    '袭',\n    '筋',\n    '拒',\n    '僚',\n    '旱',\n    '钾',\n    '鸟',\n    '漆',\n    '沈',\n    '眉',\n    '疏',\n    '添',\n    '棒',\n    '穗',\n    '硝',\n    '韩',\n    '逼',\n    '扭',\n    '侨',\n    '凉',\n    '挺',\n    '碗',\n    '栽',\n    '炒',\n    '杯',\n    '患',\n    '馏',\n    '劝',\n    '豪',\n    '辽',\n    '勃',\n    '鸿',\n    '旦',\n    '吏',\n    '拜',\n    '狗',\n    '埋',\n    '辊',\n    '掩',\n    '饮',\n    '搬',\n    '骂',\n    '辞',\n    '勾',\n    '扣',\n    '估',\n    '蒋',\n    '绒',\n    '雾',\n    '丈',\n    '朵',\n    '姆',\n    '拟',\n    '宇',\n    '辑',\n    '陕',\n    '雕',\n    '偿',\n    '蓄',\n    '崇',\n    '剪',\n    '倡',\n    '厅',\n    '咬',\n    '驶',\n    '薯',\n    '刷',\n    '斥',\n    '番',\n    '赋',\n    '奉',\n    '佛',\n    '浇',\n    '漫',\n    '曼',\n    '扇',\n    '钙',\n    '桃',\n    '扶',\n    '仔',\n    '返',\n    '俗',\n    '亏',\n    '腔',\n    '鞋',\n    '棱',\n    '覆',\n    '框',\n    '悄',\n    '叔',\n    '撞',\n    '骗',\n    '勘',\n    '旺',\n    '沸',\n    '孤',\n    '吐',\n    '孟',\n    '渠',\n    '屈',\n    '疾',\n    '妙',\n    '惜',\n    '仰',\n    '狠',\n    '胀',\n    '谐',\n    '抛',\n    '霉',\n    '桑',\n    '岗',\n    '嘛',\n    '衰',\n    '盗',\n    '渗',\n    '脏',\n    '赖',\n    '涌',\n    '甜',\n    '曹',\n    '阅',\n    '肌',\n    '哩',\n    '厉',\n    '烃',\n    '纬',\n    '毅',\n    '昨',\n    '伪',\n    '症',\n    '煮',\n    '叹',\n    '钉',\n    '搭',\n    '茎',\n    '笼',\n    '酷',\n    '偷',\n    '弓',\n    '锥',\n    '恒',\n    '杰',\n    '坑',\n    '鼻',\n    '翼',\n    '纶',\n    '叙',\n    '狱',\n    '逮',\n    '罐',\n    '络',\n    '棚',\n    '抑',\n    '膨',\n    '蔬',\n    '寺',\n    '骤',\n    '穆',\n    '冶',\n    '枯',\n    '册',\n    '尸',\n    '凸',\n    '绅',\n    '坯',\n    '牺',\n    '焰',\n    '轰',\n    '欣',\n    '晋',\n    '瘦',\n    '御',\n    '锭',\n    '锦',\n    '丧',\n    '旬',\n    '锻',\n    '垄',\n    '搜',\n    '扑',\n    '邀',\n    '亭',\n    '酯',\n    '迈',\n    '舒',\n    '脆',\n    '酶',\n    '闲',\n    '忧',\n    '酚',\n    '顽',\n    '羽',\n    '涨',\n    '卸',\n    '仗',\n    '陪',\n    '辟',\n    '惩',\n    '杭',\n    '姚',\n    '肚',\n    '捉',\n    '飘',\n    '漂',\n    '昆',\n    '欺',\n    '吾',\n    '郎',\n    '烷',\n    '汁',\n    '呵',\n    '饰',\n    '萧',\n    '雅',\n    '邮',\n    '迁',\n    '燕',\n    '撒',\n    '姻',\n    '赴',\n    '宴',\n    '烦',\n    '债',\n    '帐',\n    '斑',\n    '铃',\n    '旨',\n    '醇',\n    '董',\n    '饼',\n    '雏',\n    '姿',\n    '拌',\n    '傅',\n    '腹',\n    '妥',\n    '揉',\n    '贤',\n    '拆',\n    '歪',\n    '葡',\n    '胺',\n    '丢',\n    '浩',\n    '徽',\n    '昂',\n    '垫',\n    '挡',\n    '览',\n    '贪',\n    '慰',\n    '缴',\n    '汪',\n    '慌',\n    '冯',\n    '诺',\n    '姜',\n    '谊',\n    '凶',\n    '劣',\n    '诬',\n    '耀',\n    '昏',\n    '躺',\n    '盈',\n    '骑',\n    '乔',\n    '溪',\n    '丛',\n    '卢',\n    '抹',\n    '闷',\n    '咨',\n    '刮',\n    '驾',\n    '缆',\n    '悟',\n    '摘',\n    '铒',\n    '掷',\n    '颇',\n    '幻',\n    '柄',\n    '惠',\n    '惨',\n    '佳',\n    '仇',\n    '腊',\n    '窝',\n    '涤',\n    '剑',\n    '瞧',\n    '堡',\n    '泼',\n    '葱',\n    '罩',\n    '霍',\n    '捞',\n    '胎',\n    '苍',\n    '滨',\n    '俩',\n    '捅',\n    '湘',\n    '砍',\n    '霞',\n    '邵',\n    '萄',\n    '疯',\n    '淮',\n    '遂',\n    '熊',\n    '粪',\n    '烘',\n    '宿',\n    '档',\n    '戈',\n    '驳',\n    '嫂',\n    '裕',\n    '徙',\n    '箭',\n    '捐',\n    '肠',\n    '撑',\n    '晒',\n    '辨',\n    '殿',\n    '莲',\n    '摊',\n    '搅',\n    '酱',\n    '屏',\n    '疫',\n    '哀',\n    '蔡',\n    '堵',\n    '沫',\n    '皱',\n    '畅',\n    '叠',\n    '阁',\n    '莱',\n    '敲',\n    '辖',\n    '钩',\n    '痕',\n    '坝',\n    '巷',\n    '饿',\n    '祸',\n    '丘',\n    '玄',\n    '溜',\n    '曰',\n    '逻',\n    '彭',\n    '尝',\n    '卿',\n    '妨',\n    '艇',\n    '吞',\n    '韦',\n    '怨',\n    '矮',\n    '歇'\n];\n//# sourceMappingURL=chinese-simplified.js.map","// SPDX-License-Identifier: MIT\nexport const WORDLIST = [\n    '的',\n    '一',\n    '是',\n    '在',\n    '不',\n    '了',\n    '有',\n    '和',\n    '人',\n    '這',\n    '中',\n    '大',\n    '為',\n    '上',\n    '個',\n    '國',\n    '我',\n    '以',\n    '要',\n    '他',\n    '時',\n    '來',\n    '用',\n    '們',\n    '生',\n    '到',\n    '作',\n    '地',\n    '於',\n    '出',\n    '就',\n    '分',\n    '對',\n    '成',\n    '會',\n    '可',\n    '主',\n    '發',\n    '年',\n    '動',\n    '同',\n    '工',\n    '也',\n    '能',\n    '下',\n    '過',\n    '子',\n    '說',\n    '產',\n    '種',\n    '面',\n    '而',\n    '方',\n    '後',\n    '多',\n    '定',\n    '行',\n    '學',\n    '法',\n    '所',\n    '民',\n    '得',\n    '經',\n    '十',\n    '三',\n    '之',\n    '進',\n    '著',\n    '等',\n    '部',\n    '度',\n    '家',\n    '電',\n    '力',\n    '裡',\n    '如',\n    '水',\n    '化',\n    '高',\n    '自',\n    '二',\n    '理',\n    '起',\n    '小',\n    '物',\n    '現',\n    '實',\n    '加',\n    '量',\n    '都',\n    '兩',\n    '體',\n    '制',\n    '機',\n    '當',\n    '使',\n    '點',\n    '從',\n    '業',\n    '本',\n    '去',\n    '把',\n    '性',\n    '好',\n    '應',\n    '開',\n    '它',\n    '合',\n    '還',\n    '因',\n    '由',\n    '其',\n    '些',\n    '然',\n    '前',\n    '外',\n    '天',\n    '政',\n    '四',\n    '日',\n    '那',\n    '社',\n    '義',\n    '事',\n    '平',\n    '形',\n    '相',\n    '全',\n    '表',\n    '間',\n    '樣',\n    '與',\n    '關',\n    '各',\n    '重',\n    '新',\n    '線',\n    '內',\n    '數',\n    '正',\n    '心',\n    '反',\n    '你',\n    '明',\n    '看',\n    '原',\n    '又',\n    '麼',\n    '利',\n    '比',\n    '或',\n    '但',\n    '質',\n    '氣',\n    '第',\n    '向',\n    '道',\n    '命',\n    '此',\n    '變',\n    '條',\n    '只',\n    '沒',\n    '結',\n    '解',\n    '問',\n    '意',\n    '建',\n    '月',\n    '公',\n    '無',\n    '系',\n    '軍',\n    '很',\n    '情',\n    '者',\n    '最',\n    '立',\n    '代',\n    '想',\n    '已',\n    '通',\n    '並',\n    '提',\n    '直',\n    '題',\n    '黨',\n    '程',\n    '展',\n    '五',\n    '果',\n    '料',\n    '象',\n    '員',\n    '革',\n    '位',\n    '入',\n    '常',\n    '文',\n    '總',\n    '次',\n    '品',\n    '式',\n    '活',\n    '設',\n    '及',\n    '管',\n    '特',\n    '件',\n    '長',\n    '求',\n    '老',\n    '頭',\n    '基',\n    '資',\n    '邊',\n    '流',\n    '路',\n    '級',\n    '少',\n    '圖',\n    '山',\n    '統',\n    '接',\n    '知',\n    '較',\n    '將',\n    '組',\n    '見',\n    '計',\n    '別',\n    '她',\n    '手',\n    '角',\n    '期',\n    '根',\n    '論',\n    '運',\n    '農',\n    '指',\n    '幾',\n    '九',\n    '區',\n    '強',\n    '放',\n    '決',\n    '西',\n    '被',\n    '幹',\n    '做',\n    '必',\n    '戰',\n    '先',\n    '回',\n    '則',\n    '任',\n    '取',\n    '據',\n    '處',\n    '隊',\n    '南',\n    '給',\n    '色',\n    '光',\n    '門',\n    '即',\n    '保',\n    '治',\n    '北',\n    '造',\n    '百',\n    '規',\n    '熱',\n    '領',\n    '七',\n    '海',\n    '口',\n    '東',\n    '導',\n    '器',\n    '壓',\n    '志',\n    '世',\n    '金',\n    '增',\n    '爭',\n    '濟',\n    '階',\n    '油',\n    '思',\n    '術',\n    '極',\n    '交',\n    '受',\n    '聯',\n    '什',\n    '認',\n    '六',\n    '共',\n    '權',\n    '收',\n    '證',\n    '改',\n    '清',\n    '美',\n    '再',\n    '採',\n    '轉',\n    '更',\n    '單',\n    '風',\n    '切',\n    '打',\n    '白',\n    '教',\n    '速',\n    '花',\n    '帶',\n    '安',\n    '場',\n    '身',\n    '車',\n    '例',\n    '真',\n    '務',\n    '具',\n    '萬',\n    '每',\n    '目',\n    '至',\n    '達',\n    '走',\n    '積',\n    '示',\n    '議',\n    '聲',\n    '報',\n    '鬥',\n    '完',\n    '類',\n    '八',\n    '離',\n    '華',\n    '名',\n    '確',\n    '才',\n    '科',\n    '張',\n    '信',\n    '馬',\n    '節',\n    '話',\n    '米',\n    '整',\n    '空',\n    '元',\n    '況',\n    '今',\n    '集',\n    '溫',\n    '傳',\n    '土',\n    '許',\n    '步',\n    '群',\n    '廣',\n    '石',\n    '記',\n    '需',\n    '段',\n    '研',\n    '界',\n    '拉',\n    '林',\n    '律',\n    '叫',\n    '且',\n    '究',\n    '觀',\n    '越',\n    '織',\n    '裝',\n    '影',\n    '算',\n    '低',\n    '持',\n    '音',\n    '眾',\n    '書',\n    '布',\n    '复',\n    '容',\n    '兒',\n    '須',\n    '際',\n    '商',\n    '非',\n    '驗',\n    '連',\n    '斷',\n    '深',\n    '難',\n    '近',\n    '礦',\n    '千',\n    '週',\n    '委',\n    '素',\n    '技',\n    '備',\n    '半',\n    '辦',\n    '青',\n    '省',\n    '列',\n    '習',\n    '響',\n    '約',\n    '支',\n    '般',\n    '史',\n    '感',\n    '勞',\n    '便',\n    '團',\n    '往',\n    '酸',\n    '歷',\n    '市',\n    '克',\n    '何',\n    '除',\n    '消',\n    '構',\n    '府',\n    '稱',\n    '太',\n    '準',\n    '精',\n    '值',\n    '號',\n    '率',\n    '族',\n    '維',\n    '劃',\n    '選',\n    '標',\n    '寫',\n    '存',\n    '候',\n    '毛',\n    '親',\n    '快',\n    '效',\n    '斯',\n    '院',\n    '查',\n    '江',\n    '型',\n    '眼',\n    '王',\n    '按',\n    '格',\n    '養',\n    '易',\n    '置',\n    '派',\n    '層',\n    '片',\n    '始',\n    '卻',\n    '專',\n    '狀',\n    '育',\n    '廠',\n    '京',\n    '識',\n    '適',\n    '屬',\n    '圓',\n    '包',\n    '火',\n    '住',\n    '調',\n    '滿',\n    '縣',\n    '局',\n    '照',\n    '參',\n    '紅',\n    '細',\n    '引',\n    '聽',\n    '該',\n    '鐵',\n    '價',\n    '嚴',\n    '首',\n    '底',\n    '液',\n    '官',\n    '德',\n    '隨',\n    '病',\n    '蘇',\n    '失',\n    '爾',\n    '死',\n    '講',\n    '配',\n    '女',\n    '黃',\n    '推',\n    '顯',\n    '談',\n    '罪',\n    '神',\n    '藝',\n    '呢',\n    '席',\n    '含',\n    '企',\n    '望',\n    '密',\n    '批',\n    '營',\n    '項',\n    '防',\n    '舉',\n    '球',\n    '英',\n    '氧',\n    '勢',\n    '告',\n    '李',\n    '台',\n    '落',\n    '木',\n    '幫',\n    '輪',\n    '破',\n    '亞',\n    '師',\n    '圍',\n    '注',\n    '遠',\n    '字',\n    '材',\n    '排',\n    '供',\n    '河',\n    '態',\n    '封',\n    '另',\n    '施',\n    '減',\n    '樹',\n    '溶',\n    '怎',\n    '止',\n    '案',\n    '言',\n    '士',\n    '均',\n    '武',\n    '固',\n    '葉',\n    '魚',\n    '波',\n    '視',\n    '僅',\n    '費',\n    '緊',\n    '愛',\n    '左',\n    '章',\n    '早',\n    '朝',\n    '害',\n    '續',\n    '輕',\n    '服',\n    '試',\n    '食',\n    '充',\n    '兵',\n    '源',\n    '判',\n    '護',\n    '司',\n    '足',\n    '某',\n    '練',\n    '差',\n    '致',\n    '板',\n    '田',\n    '降',\n    '黑',\n    '犯',\n    '負',\n    '擊',\n    '范',\n    '繼',\n    '興',\n    '似',\n    '餘',\n    '堅',\n    '曲',\n    '輸',\n    '修',\n    '故',\n    '城',\n    '夫',\n    '夠',\n    '送',\n    '筆',\n    '船',\n    '佔',\n    '右',\n    '財',\n    '吃',\n    '富',\n    '春',\n    '職',\n    '覺',\n    '漢',\n    '畫',\n    '功',\n    '巴',\n    '跟',\n    '雖',\n    '雜',\n    '飛',\n    '檢',\n    '吸',\n    '助',\n    '昇',\n    '陽',\n    '互',\n    '初',\n    '創',\n    '抗',\n    '考',\n    '投',\n    '壞',\n    '策',\n    '古',\n    '徑',\n    '換',\n    '未',\n    '跑',\n    '留',\n    '鋼',\n    '曾',\n    '端',\n    '責',\n    '站',\n    '簡',\n    '述',\n    '錢',\n    '副',\n    '盡',\n    '帝',\n    '射',\n    '草',\n    '衝',\n    '承',\n    '獨',\n    '令',\n    '限',\n    '阿',\n    '宣',\n    '環',\n    '雙',\n    '請',\n    '超',\n    '微',\n    '讓',\n    '控',\n    '州',\n    '良',\n    '軸',\n    '找',\n    '否',\n    '紀',\n    '益',\n    '依',\n    '優',\n    '頂',\n    '礎',\n    '載',\n    '倒',\n    '房',\n    '突',\n    '坐',\n    '粉',\n    '敵',\n    '略',\n    '客',\n    '袁',\n    '冷',\n    '勝',\n    '絕',\n    '析',\n    '塊',\n    '劑',\n    '測',\n    '絲',\n    '協',\n    '訴',\n    '念',\n    '陳',\n    '仍',\n    '羅',\n    '鹽',\n    '友',\n    '洋',\n    '錯',\n    '苦',\n    '夜',\n    '刑',\n    '移',\n    '頻',\n    '逐',\n    '靠',\n    '混',\n    '母',\n    '短',\n    '皮',\n    '終',\n    '聚',\n    '汽',\n    '村',\n    '雲',\n    '哪',\n    '既',\n    '距',\n    '衛',\n    '停',\n    '烈',\n    '央',\n    '察',\n    '燒',\n    '迅',\n    '境',\n    '若',\n    '印',\n    '洲',\n    '刻',\n    '括',\n    '激',\n    '孔',\n    '搞',\n    '甚',\n    '室',\n    '待',\n    '核',\n    '校',\n    '散',\n    '侵',\n    '吧',\n    '甲',\n    '遊',\n    '久',\n    '菜',\n    '味',\n    '舊',\n    '模',\n    '湖',\n    '貨',\n    '損',\n    '預',\n    '阻',\n    '毫',\n    '普',\n    '穩',\n    '乙',\n    '媽',\n    '植',\n    '息',\n    '擴',\n    '銀',\n    '語',\n    '揮',\n    '酒',\n    '守',\n    '拿',\n    '序',\n    '紙',\n    '醫',\n    '缺',\n    '雨',\n    '嗎',\n    '針',\n    '劉',\n    '啊',\n    '急',\n    '唱',\n    '誤',\n    '訓',\n    '願',\n    '審',\n    '附',\n    '獲',\n    '茶',\n    '鮮',\n    '糧',\n    '斤',\n    '孩',\n    '脫',\n    '硫',\n    '肥',\n    '善',\n    '龍',\n    '演',\n    '父',\n    '漸',\n    '血',\n    '歡',\n    '械',\n    '掌',\n    '歌',\n    '沙',\n    '剛',\n    '攻',\n    '謂',\n    '盾',\n    '討',\n    '晚',\n    '粒',\n    '亂',\n    '燃',\n    '矛',\n    '乎',\n    '殺',\n    '藥',\n    '寧',\n    '魯',\n    '貴',\n    '鐘',\n    '煤',\n    '讀',\n    '班',\n    '伯',\n    '香',\n    '介',\n    '迫',\n    '句',\n    '豐',\n    '培',\n    '握',\n    '蘭',\n    '擔',\n    '弦',\n    '蛋',\n    '沉',\n    '假',\n    '穿',\n    '執',\n    '答',\n    '樂',\n    '誰',\n    '順',\n    '煙',\n    '縮',\n    '徵',\n    '臉',\n    '喜',\n    '松',\n    '腳',\n    '困',\n    '異',\n    '免',\n    '背',\n    '星',\n    '福',\n    '買',\n    '染',\n    '井',\n    '概',\n    '慢',\n    '怕',\n    '磁',\n    '倍',\n    '祖',\n    '皇',\n    '促',\n    '靜',\n    '補',\n    '評',\n    '翻',\n    '肉',\n    '踐',\n    '尼',\n    '衣',\n    '寬',\n    '揚',\n    '棉',\n    '希',\n    '傷',\n    '操',\n    '垂',\n    '秋',\n    '宜',\n    '氫',\n    '套',\n    '督',\n    '振',\n    '架',\n    '亮',\n    '末',\n    '憲',\n    '慶',\n    '編',\n    '牛',\n    '觸',\n    '映',\n    '雷',\n    '銷',\n    '詩',\n    '座',\n    '居',\n    '抓',\n    '裂',\n    '胞',\n    '呼',\n    '娘',\n    '景',\n    '威',\n    '綠',\n    '晶',\n    '厚',\n    '盟',\n    '衡',\n    '雞',\n    '孫',\n    '延',\n    '危',\n    '膠',\n    '屋',\n    '鄉',\n    '臨',\n    '陸',\n    '顧',\n    '掉',\n    '呀',\n    '燈',\n    '歲',\n    '措',\n    '束',\n    '耐',\n    '劇',\n    '玉',\n    '趙',\n    '跳',\n    '哥',\n    '季',\n    '課',\n    '凱',\n    '胡',\n    '額',\n    '款',\n    '紹',\n    '卷',\n    '齊',\n    '偉',\n    '蒸',\n    '殖',\n    '永',\n    '宗',\n    '苗',\n    '川',\n    '爐',\n    '岩',\n    '弱',\n    '零',\n    '楊',\n    '奏',\n    '沿',\n    '露',\n    '桿',\n    '探',\n    '滑',\n    '鎮',\n    '飯',\n    '濃',\n    '航',\n    '懷',\n    '趕',\n    '庫',\n    '奪',\n    '伊',\n    '靈',\n    '稅',\n    '途',\n    '滅',\n    '賽',\n    '歸',\n    '召',\n    '鼓',\n    '播',\n    '盤',\n    '裁',\n    '險',\n    '康',\n    '唯',\n    '錄',\n    '菌',\n    '純',\n    '借',\n    '糖',\n    '蓋',\n    '橫',\n    '符',\n    '私',\n    '努',\n    '堂',\n    '域',\n    '槍',\n    '潤',\n    '幅',\n    '哈',\n    '竟',\n    '熟',\n    '蟲',\n    '澤',\n    '腦',\n    '壤',\n    '碳',\n    '歐',\n    '遍',\n    '側',\n    '寨',\n    '敢',\n    '徹',\n    '慮',\n    '斜',\n    '薄',\n    '庭',\n    '納',\n    '彈',\n    '飼',\n    '伸',\n    '折',\n    '麥',\n    '濕',\n    '暗',\n    '荷',\n    '瓦',\n    '塞',\n    '床',\n    '築',\n    '惡',\n    '戶',\n    '訪',\n    '塔',\n    '奇',\n    '透',\n    '梁',\n    '刀',\n    '旋',\n    '跡',\n    '卡',\n    '氯',\n    '遇',\n    '份',\n    '毒',\n    '泥',\n    '退',\n    '洗',\n    '擺',\n    '灰',\n    '彩',\n    '賣',\n    '耗',\n    '夏',\n    '擇',\n    '忙',\n    '銅',\n    '獻',\n    '硬',\n    '予',\n    '繁',\n    '圈',\n    '雪',\n    '函',\n    '亦',\n    '抽',\n    '篇',\n    '陣',\n    '陰',\n    '丁',\n    '尺',\n    '追',\n    '堆',\n    '雄',\n    '迎',\n    '泛',\n    '爸',\n    '樓',\n    '避',\n    '謀',\n    '噸',\n    '野',\n    '豬',\n    '旗',\n    '累',\n    '偏',\n    '典',\n    '館',\n    '索',\n    '秦',\n    '脂',\n    '潮',\n    '爺',\n    '豆',\n    '忽',\n    '托',\n    '驚',\n    '塑',\n    '遺',\n    '愈',\n    '朱',\n    '替',\n    '纖',\n    '粗',\n    '傾',\n    '尚',\n    '痛',\n    '楚',\n    '謝',\n    '奮',\n    '購',\n    '磨',\n    '君',\n    '池',\n    '旁',\n    '碎',\n    '骨',\n    '監',\n    '捕',\n    '弟',\n    '暴',\n    '割',\n    '貫',\n    '殊',\n    '釋',\n    '詞',\n    '亡',\n    '壁',\n    '頓',\n    '寶',\n    '午',\n    '塵',\n    '聞',\n    '揭',\n    '炮',\n    '殘',\n    '冬',\n    '橋',\n    '婦',\n    '警',\n    '綜',\n    '招',\n    '吳',\n    '付',\n    '浮',\n    '遭',\n    '徐',\n    '您',\n    '搖',\n    '谷',\n    '贊',\n    '箱',\n    '隔',\n    '訂',\n    '男',\n    '吹',\n    '園',\n    '紛',\n    '唐',\n    '敗',\n    '宋',\n    '玻',\n    '巨',\n    '耕',\n    '坦',\n    '榮',\n    '閉',\n    '灣',\n    '鍵',\n    '凡',\n    '駐',\n    '鍋',\n    '救',\n    '恩',\n    '剝',\n    '凝',\n    '鹼',\n    '齒',\n    '截',\n    '煉',\n    '麻',\n    '紡',\n    '禁',\n    '廢',\n    '盛',\n    '版',\n    '緩',\n    '淨',\n    '睛',\n    '昌',\n    '婚',\n    '涉',\n    '筒',\n    '嘴',\n    '插',\n    '岸',\n    '朗',\n    '莊',\n    '街',\n    '藏',\n    '姑',\n    '貿',\n    '腐',\n    '奴',\n    '啦',\n    '慣',\n    '乘',\n    '夥',\n    '恢',\n    '勻',\n    '紗',\n    '扎',\n    '辯',\n    '耳',\n    '彪',\n    '臣',\n    '億',\n    '璃',\n    '抵',\n    '脈',\n    '秀',\n    '薩',\n    '俄',\n    '網',\n    '舞',\n    '店',\n    '噴',\n    '縱',\n    '寸',\n    '汗',\n    '掛',\n    '洪',\n    '賀',\n    '閃',\n    '柬',\n    '爆',\n    '烯',\n    '津',\n    '稻',\n    '牆',\n    '軟',\n    '勇',\n    '像',\n    '滾',\n    '厘',\n    '蒙',\n    '芳',\n    '肯',\n    '坡',\n    '柱',\n    '盪',\n    '腿',\n    '儀',\n    '旅',\n    '尾',\n    '軋',\n    '冰',\n    '貢',\n    '登',\n    '黎',\n    '削',\n    '鑽',\n    '勒',\n    '逃',\n    '障',\n    '氨',\n    '郭',\n    '峰',\n    '幣',\n    '港',\n    '伏',\n    '軌',\n    '畝',\n    '畢',\n    '擦',\n    '莫',\n    '刺',\n    '浪',\n    '秘',\n    '援',\n    '株',\n    '健',\n    '售',\n    '股',\n    '島',\n    '甘',\n    '泡',\n    '睡',\n    '童',\n    '鑄',\n    '湯',\n    '閥',\n    '休',\n    '匯',\n    '舍',\n    '牧',\n    '繞',\n    '炸',\n    '哲',\n    '磷',\n    '績',\n    '朋',\n    '淡',\n    '尖',\n    '啟',\n    '陷',\n    '柴',\n    '呈',\n    '徒',\n    '顏',\n    '淚',\n    '稍',\n    '忘',\n    '泵',\n    '藍',\n    '拖',\n    '洞',\n    '授',\n    '鏡',\n    '辛',\n    '壯',\n    '鋒',\n    '貧',\n    '虛',\n    '彎',\n    '摩',\n    '泰',\n    '幼',\n    '廷',\n    '尊',\n    '窗',\n    '綱',\n    '弄',\n    '隸',\n    '疑',\n    '氏',\n    '宮',\n    '姐',\n    '震',\n    '瑞',\n    '怪',\n    '尤',\n    '琴',\n    '循',\n    '描',\n    '膜',\n    '違',\n    '夾',\n    '腰',\n    '緣',\n    '珠',\n    '窮',\n    '森',\n    '枝',\n    '竹',\n    '溝',\n    '催',\n    '繩',\n    '憶',\n    '邦',\n    '剩',\n    '幸',\n    '漿',\n    '欄',\n    '擁',\n    '牙',\n    '貯',\n    '禮',\n    '濾',\n    '鈉',\n    '紋',\n    '罷',\n    '拍',\n    '咱',\n    '喊',\n    '袖',\n    '埃',\n    '勤',\n    '罰',\n    '焦',\n    '潛',\n    '伍',\n    '墨',\n    '欲',\n    '縫',\n    '姓',\n    '刊',\n    '飽',\n    '仿',\n    '獎',\n    '鋁',\n    '鬼',\n    '麗',\n    '跨',\n    '默',\n    '挖',\n    '鏈',\n    '掃',\n    '喝',\n    '袋',\n    '炭',\n    '污',\n    '幕',\n    '諸',\n    '弧',\n    '勵',\n    '梅',\n    '奶',\n    '潔',\n    '災',\n    '舟',\n    '鑑',\n    '苯',\n    '訟',\n    '抱',\n    '毀',\n    '懂',\n    '寒',\n    '智',\n    '埔',\n    '寄',\n    '屆',\n    '躍',\n    '渡',\n    '挑',\n    '丹',\n    '艱',\n    '貝',\n    '碰',\n    '拔',\n    '爹',\n    '戴',\n    '碼',\n    '夢',\n    '芽',\n    '熔',\n    '赤',\n    '漁',\n    '哭',\n    '敬',\n    '顆',\n    '奔',\n    '鉛',\n    '仲',\n    '虎',\n    '稀',\n    '妹',\n    '乏',\n    '珍',\n    '申',\n    '桌',\n    '遵',\n    '允',\n    '隆',\n    '螺',\n    '倉',\n    '魏',\n    '銳',\n    '曉',\n    '氮',\n    '兼',\n    '隱',\n    '礙',\n    '赫',\n    '撥',\n    '忠',\n    '肅',\n    '缸',\n    '牽',\n    '搶',\n    '博',\n    '巧',\n    '殼',\n    '兄',\n    '杜',\n    '訊',\n    '誠',\n    '碧',\n    '祥',\n    '柯',\n    '頁',\n    '巡',\n    '矩',\n    '悲',\n    '灌',\n    '齡',\n    '倫',\n    '票',\n    '尋',\n    '桂',\n    '鋪',\n    '聖',\n    '恐',\n    '恰',\n    '鄭',\n    '趣',\n    '抬',\n    '荒',\n    '騰',\n    '貼',\n    '柔',\n    '滴',\n    '猛',\n    '闊',\n    '輛',\n    '妻',\n    '填',\n    '撤',\n    '儲',\n    '簽',\n    '鬧',\n    '擾',\n    '紫',\n    '砂',\n    '遞',\n    '戲',\n    '吊',\n    '陶',\n    '伐',\n    '餵',\n    '療',\n    '瓶',\n    '婆',\n    '撫',\n    '臂',\n    '摸',\n    '忍',\n    '蝦',\n    '蠟',\n    '鄰',\n    '胸',\n    '鞏',\n    '擠',\n    '偶',\n    '棄',\n    '槽',\n    '勁',\n    '乳',\n    '鄧',\n    '吉',\n    '仁',\n    '爛',\n    '磚',\n    '租',\n    '烏',\n    '艦',\n    '伴',\n    '瓜',\n    '淺',\n    '丙',\n    '暫',\n    '燥',\n    '橡',\n    '柳',\n    '迷',\n    '暖',\n    '牌',\n    '秧',\n    '膽',\n    '詳',\n    '簧',\n    '踏',\n    '瓷',\n    '譜',\n    '呆',\n    '賓',\n    '糊',\n    '洛',\n    '輝',\n    '憤',\n    '競',\n    '隙',\n    '怒',\n    '粘',\n    '乃',\n    '緒',\n    '肩',\n    '籍',\n    '敏',\n    '塗',\n    '熙',\n    '皆',\n    '偵',\n    '懸',\n    '掘',\n    '享',\n    '糾',\n    '醒',\n    '狂',\n    '鎖',\n    '淀',\n    '恨',\n    '牲',\n    '霸',\n    '爬',\n    '賞',\n    '逆',\n    '玩',\n    '陵',\n    '祝',\n    '秒',\n    '浙',\n    '貌',\n    '役',\n    '彼',\n    '悉',\n    '鴨',\n    '趨',\n    '鳳',\n    '晨',\n    '畜',\n    '輩',\n    '秩',\n    '卵',\n    '署',\n    '梯',\n    '炎',\n    '灘',\n    '棋',\n    '驅',\n    '篩',\n    '峽',\n    '冒',\n    '啥',\n    '壽',\n    '譯',\n    '浸',\n    '泉',\n    '帽',\n    '遲',\n    '矽',\n    '疆',\n    '貸',\n    '漏',\n    '稿',\n    '冠',\n    '嫩',\n    '脅',\n    '芯',\n    '牢',\n    '叛',\n    '蝕',\n    '奧',\n    '鳴',\n    '嶺',\n    '羊',\n    '憑',\n    '串',\n    '塘',\n    '繪',\n    '酵',\n    '融',\n    '盆',\n    '錫',\n    '廟',\n    '籌',\n    '凍',\n    '輔',\n    '攝',\n    '襲',\n    '筋',\n    '拒',\n    '僚',\n    '旱',\n    '鉀',\n    '鳥',\n    '漆',\n    '沈',\n    '眉',\n    '疏',\n    '添',\n    '棒',\n    '穗',\n    '硝',\n    '韓',\n    '逼',\n    '扭',\n    '僑',\n    '涼',\n    '挺',\n    '碗',\n    '栽',\n    '炒',\n    '杯',\n    '患',\n    '餾',\n    '勸',\n    '豪',\n    '遼',\n    '勃',\n    '鴻',\n    '旦',\n    '吏',\n    '拜',\n    '狗',\n    '埋',\n    '輥',\n    '掩',\n    '飲',\n    '搬',\n    '罵',\n    '辭',\n    '勾',\n    '扣',\n    '估',\n    '蔣',\n    '絨',\n    '霧',\n    '丈',\n    '朵',\n    '姆',\n    '擬',\n    '宇',\n    '輯',\n    '陝',\n    '雕',\n    '償',\n    '蓄',\n    '崇',\n    '剪',\n    '倡',\n    '廳',\n    '咬',\n    '駛',\n    '薯',\n    '刷',\n    '斥',\n    '番',\n    '賦',\n    '奉',\n    '佛',\n    '澆',\n    '漫',\n    '曼',\n    '扇',\n    '鈣',\n    '桃',\n    '扶',\n    '仔',\n    '返',\n    '俗',\n    '虧',\n    '腔',\n    '鞋',\n    '棱',\n    '覆',\n    '框',\n    '悄',\n    '叔',\n    '撞',\n    '騙',\n    '勘',\n    '旺',\n    '沸',\n    '孤',\n    '吐',\n    '孟',\n    '渠',\n    '屈',\n    '疾',\n    '妙',\n    '惜',\n    '仰',\n    '狠',\n    '脹',\n    '諧',\n    '拋',\n    '黴',\n    '桑',\n    '崗',\n    '嘛',\n    '衰',\n    '盜',\n    '滲',\n    '臟',\n    '賴',\n    '湧',\n    '甜',\n    '曹',\n    '閱',\n    '肌',\n    '哩',\n    '厲',\n    '烴',\n    '緯',\n    '毅',\n    '昨',\n    '偽',\n    '症',\n    '煮',\n    '嘆',\n    '釘',\n    '搭',\n    '莖',\n    '籠',\n    '酷',\n    '偷',\n    '弓',\n    '錐',\n    '恆',\n    '傑',\n    '坑',\n    '鼻',\n    '翼',\n    '綸',\n    '敘',\n    '獄',\n    '逮',\n    '罐',\n    '絡',\n    '棚',\n    '抑',\n    '膨',\n    '蔬',\n    '寺',\n    '驟',\n    '穆',\n    '冶',\n    '枯',\n    '冊',\n    '屍',\n    '凸',\n    '紳',\n    '坯',\n    '犧',\n    '焰',\n    '轟',\n    '欣',\n    '晉',\n    '瘦',\n    '禦',\n    '錠',\n    '錦',\n    '喪',\n    '旬',\n    '鍛',\n    '壟',\n    '搜',\n    '撲',\n    '邀',\n    '亭',\n    '酯',\n    '邁',\n    '舒',\n    '脆',\n    '酶',\n    '閒',\n    '憂',\n    '酚',\n    '頑',\n    '羽',\n    '漲',\n    '卸',\n    '仗',\n    '陪',\n    '闢',\n    '懲',\n    '杭',\n    '姚',\n    '肚',\n    '捉',\n    '飄',\n    '漂',\n    '昆',\n    '欺',\n    '吾',\n    '郎',\n    '烷',\n    '汁',\n    '呵',\n    '飾',\n    '蕭',\n    '雅',\n    '郵',\n    '遷',\n    '燕',\n    '撒',\n    '姻',\n    '赴',\n    '宴',\n    '煩',\n    '債',\n    '帳',\n    '斑',\n    '鈴',\n    '旨',\n    '醇',\n    '董',\n    '餅',\n    '雛',\n    '姿',\n    '拌',\n    '傅',\n    '腹',\n    '妥',\n    '揉',\n    '賢',\n    '拆',\n    '歪',\n    '葡',\n    '胺',\n    '丟',\n    '浩',\n    '徽',\n    '昂',\n    '墊',\n    '擋',\n    '覽',\n    '貪',\n    '慰',\n    '繳',\n    '汪',\n    '慌',\n    '馮',\n    '諾',\n    '姜',\n    '誼',\n    '兇',\n    '劣',\n    '誣',\n    '耀',\n    '昏',\n    '躺',\n    '盈',\n    '騎',\n    '喬',\n    '溪',\n    '叢',\n    '盧',\n    '抹',\n    '悶',\n    '諮',\n    '刮',\n    '駕',\n    '纜',\n    '悟',\n    '摘',\n    '鉺',\n    '擲',\n    '頗',\n    '幻',\n    '柄',\n    '惠',\n    '慘',\n    '佳',\n    '仇',\n    '臘',\n    '窩',\n    '滌',\n    '劍',\n    '瞧',\n    '堡',\n    '潑',\n    '蔥',\n    '罩',\n    '霍',\n    '撈',\n    '胎',\n    '蒼',\n    '濱',\n    '倆',\n    '捅',\n    '湘',\n    '砍',\n    '霞',\n    '邵',\n    '萄',\n    '瘋',\n    '淮',\n    '遂',\n    '熊',\n    '糞',\n    '烘',\n    '宿',\n    '檔',\n    '戈',\n    '駁',\n    '嫂',\n    '裕',\n    '徙',\n    '箭',\n    '捐',\n    '腸',\n    '撐',\n    '曬',\n    '辨',\n    '殿',\n    '蓮',\n    '攤',\n    '攪',\n    '醬',\n    '屏',\n    '疫',\n    '哀',\n    '蔡',\n    '堵',\n    '沫',\n    '皺',\n    '暢',\n    '疊',\n    '閣',\n    '萊',\n    '敲',\n    '轄',\n    '鉤',\n    '痕',\n    '壩',\n    '巷',\n    '餓',\n    '禍',\n    '丘',\n    '玄',\n    '溜',\n    '曰',\n    '邏',\n    '彭',\n    '嘗',\n    '卿',\n    '妨',\n    '艇',\n    '吞',\n    '韋',\n    '怨',\n    '矮',\n    '歇'\n];\n//# sourceMappingURL=chinese-traditional.js.map","// SPDX-License-Identifier: MIT\nexport const WORDLIST = [\n    'abdikace',\n    'abeceda',\n    'adresa',\n    'agrese',\n    'akce',\n    'aktovka',\n    'alej',\n    'alkohol',\n    'amputace',\n    'ananas',\n    'andulka',\n    'anekdota',\n    'anketa',\n    'antika',\n    'anulovat',\n    'archa',\n    'arogance',\n    'asfalt',\n    'asistent',\n    'aspirace',\n    'astma',\n    'astronom',\n    'atlas',\n    'atletika',\n    'atol',\n    'autobus',\n    'azyl',\n    'babka',\n    'bachor',\n    'bacil',\n    'baculka',\n    'badatel',\n    'bageta',\n    'bagr',\n    'bahno',\n    'bakterie',\n    'balada',\n    'baletka',\n    'balkon',\n    'balonek',\n    'balvan',\n    'balza',\n    'bambus',\n    'bankomat',\n    'barbar',\n    'baret',\n    'barman',\n    'baroko',\n    'barva',\n    'baterka',\n    'batoh',\n    'bavlna',\n    'bazalka',\n    'bazilika',\n    'bazuka',\n    'bedna',\n    'beran',\n    'beseda',\n    'bestie',\n    'beton',\n    'bezinka',\n    'bezmoc',\n    'beztak',\n    'bicykl',\n    'bidlo',\n    'biftek',\n    'bikiny',\n    'bilance',\n    'biograf',\n    'biolog',\n    'bitva',\n    'bizon',\n    'blahobyt',\n    'blatouch',\n    'blecha',\n    'bledule',\n    'blesk',\n    'blikat',\n    'blizna',\n    'blokovat',\n    'bloudit',\n    'blud',\n    'bobek',\n    'bobr',\n    'bodlina',\n    'bodnout',\n    'bohatost',\n    'bojkot',\n    'bojovat',\n    'bokorys',\n    'bolest',\n    'borec',\n    'borovice',\n    'bota',\n    'boubel',\n    'bouchat',\n    'bouda',\n    'boule',\n    'bourat',\n    'boxer',\n    'bradavka',\n    'brambora',\n    'branka',\n    'bratr',\n    'brepta',\n    'briketa',\n    'brko',\n    'brloh',\n    'bronz',\n    'broskev',\n    'brunetka',\n    'brusinka',\n    'brzda',\n    'brzy',\n    'bublina',\n    'bubnovat',\n    'buchta',\n    'buditel',\n    'budka',\n    'budova',\n    'bufet',\n    'bujarost',\n    'bukvice',\n    'buldok',\n    'bulva',\n    'bunda',\n    'bunkr',\n    'burza',\n    'butik',\n    'buvol',\n    'buzola',\n    'bydlet',\n    'bylina',\n    'bytovka',\n    'bzukot',\n    'capart',\n    'carevna',\n    'cedr',\n    'cedule',\n    'cejch',\n    'cejn',\n    'cela',\n    'celer',\n    'celkem',\n    'celnice',\n    'cenina',\n    'cennost',\n    'cenovka',\n    'centrum',\n    'cenzor',\n    'cestopis',\n    'cetka',\n    'chalupa',\n    'chapadlo',\n    'charita',\n    'chata',\n    'chechtat',\n    'chemie',\n    'chichot',\n    'chirurg',\n    'chlad',\n    'chleba',\n    'chlubit',\n    'chmel',\n    'chmura',\n    'chobot',\n    'chochol',\n    'chodba',\n    'cholera',\n    'chomout',\n    'chopit',\n    'choroba',\n    'chov',\n    'chrapot',\n    'chrlit',\n    'chrt',\n    'chrup',\n    'chtivost',\n    'chudina',\n    'chutnat',\n    'chvat',\n    'chvilka',\n    'chvost',\n    'chyba',\n    'chystat',\n    'chytit',\n    'cibule',\n    'cigareta',\n    'cihelna',\n    'cihla',\n    'cinkot',\n    'cirkus',\n    'cisterna',\n    'citace',\n    'citrus',\n    'cizinec',\n    'cizost',\n    'clona',\n    'cokoliv',\n    'couvat',\n    'ctitel',\n    'ctnost',\n    'cudnost',\n    'cuketa',\n    'cukr',\n    'cupot',\n    'cvaknout',\n    'cval',\n    'cvik',\n    'cvrkot',\n    'cyklista',\n    'daleko',\n    'dareba',\n    'datel',\n    'datum',\n    'dcera',\n    'debata',\n    'dechovka',\n    'decibel',\n    'deficit',\n    'deflace',\n    'dekl',\n    'dekret',\n    'demokrat',\n    'deprese',\n    'derby',\n    'deska',\n    'detektiv',\n    'dikobraz',\n    'diktovat',\n    'dioda',\n    'diplom',\n    'disk',\n    'displej',\n    'divadlo',\n    'divoch',\n    'dlaha',\n    'dlouho',\n    'dluhopis',\n    'dnes',\n    'dobro',\n    'dobytek',\n    'docent',\n    'dochutit',\n    'dodnes',\n    'dohled',\n    'dohoda',\n    'dohra',\n    'dojem',\n    'dojnice',\n    'doklad',\n    'dokola',\n    'doktor',\n    'dokument',\n    'dolar',\n    'doleva',\n    'dolina',\n    'doma',\n    'dominant',\n    'domluvit',\n    'domov',\n    'donutit',\n    'dopad',\n    'dopis',\n    'doplnit',\n    'doposud',\n    'doprovod',\n    'dopustit',\n    'dorazit',\n    'dorost',\n    'dort',\n    'dosah',\n    'doslov',\n    'dostatek',\n    'dosud',\n    'dosyta',\n    'dotaz',\n    'dotek',\n    'dotknout',\n    'doufat',\n    'doutnat',\n    'dovozce',\n    'dozadu',\n    'doznat',\n    'dozorce',\n    'drahota',\n    'drak',\n    'dramatik',\n    'dravec',\n    'draze',\n    'drdol',\n    'drobnost',\n    'drogerie',\n    'drozd',\n    'drsnost',\n    'drtit',\n    'drzost',\n    'duben',\n    'duchovno',\n    'dudek',\n    'duha',\n    'duhovka',\n    'dusit',\n    'dusno',\n    'dutost',\n    'dvojice',\n    'dvorec',\n    'dynamit',\n    'ekolog',\n    'ekonomie',\n    'elektron',\n    'elipsa',\n    'email',\n    'emise',\n    'emoce',\n    'empatie',\n    'epizoda',\n    'epocha',\n    'epopej',\n    'epos',\n    'esej',\n    'esence',\n    'eskorta',\n    'eskymo',\n    'etiketa',\n    'euforie',\n    'evoluce',\n    'exekuce',\n    'exkurze',\n    'expedice',\n    'exploze',\n    'export',\n    'extrakt',\n    'facka',\n    'fajfka',\n    'fakulta',\n    'fanatik',\n    'fantazie',\n    'farmacie',\n    'favorit',\n    'fazole',\n    'federace',\n    'fejeton',\n    'fenka',\n    'fialka',\n    'figurant',\n    'filozof',\n    'filtr',\n    'finance',\n    'finta',\n    'fixace',\n    'fjord',\n    'flanel',\n    'flirt',\n    'flotila',\n    'fond',\n    'fosfor',\n    'fotbal',\n    'fotka',\n    'foton',\n    'frakce',\n    'freska',\n    'fronta',\n    'fukar',\n    'funkce',\n    'fyzika',\n    'galeje',\n    'garant',\n    'genetika',\n    'geolog',\n    'gilotina',\n    'glazura',\n    'glejt',\n    'golem',\n    'golfista',\n    'gotika',\n    'graf',\n    'gramofon',\n    'granule',\n    'grep',\n    'gril',\n    'grog',\n    'groteska',\n    'guma',\n    'hadice',\n    'hadr',\n    'hala',\n    'halenka',\n    'hanba',\n    'hanopis',\n    'harfa',\n    'harpuna',\n    'havran',\n    'hebkost',\n    'hejkal',\n    'hejno',\n    'hejtman',\n    'hektar',\n    'helma',\n    'hematom',\n    'herec',\n    'herna',\n    'heslo',\n    'hezky',\n    'historik',\n    'hladovka',\n    'hlasivky',\n    'hlava',\n    'hledat',\n    'hlen',\n    'hlodavec',\n    'hloh',\n    'hloupost',\n    'hltat',\n    'hlubina',\n    'hluchota',\n    'hmat',\n    'hmota',\n    'hmyz',\n    'hnis',\n    'hnojivo',\n    'hnout',\n    'hoblina',\n    'hoboj',\n    'hoch',\n    'hodiny',\n    'hodlat',\n    'hodnota',\n    'hodovat',\n    'hojnost',\n    'hokej',\n    'holinka',\n    'holka',\n    'holub',\n    'homole',\n    'honitba',\n    'honorace',\n    'horal',\n    'horda',\n    'horizont',\n    'horko',\n    'horlivec',\n    'hormon',\n    'hornina',\n    'horoskop',\n    'horstvo',\n    'hospoda',\n    'hostina',\n    'hotovost',\n    'houba',\n    'houf',\n    'houpat',\n    'houska',\n    'hovor',\n    'hradba',\n    'hranice',\n    'hravost',\n    'hrazda',\n    'hrbolek',\n    'hrdina',\n    'hrdlo',\n    'hrdost',\n    'hrnek',\n    'hrobka',\n    'hromada',\n    'hrot',\n    'hrouda',\n    'hrozen',\n    'hrstka',\n    'hrubost',\n    'hryzat',\n    'hubenost',\n    'hubnout',\n    'hudba',\n    'hukot',\n    'humr',\n    'husita',\n    'hustota',\n    'hvozd',\n    'hybnost',\n    'hydrant',\n    'hygiena',\n    'hymna',\n    'hysterik',\n    'idylka',\n    'ihned',\n    'ikona',\n    'iluze',\n    'imunita',\n    'infekce',\n    'inflace',\n    'inkaso',\n    'inovace',\n    'inspekce',\n    'internet',\n    'invalida',\n    'investor',\n    'inzerce',\n    'ironie',\n    'jablko',\n    'jachta',\n    'jahoda',\n    'jakmile',\n    'jakost',\n    'jalovec',\n    'jantar',\n    'jarmark',\n    'jaro',\n    'jasan',\n    'jasno',\n    'jatka',\n    'javor',\n    'jazyk',\n    'jedinec',\n    'jedle',\n    'jednatel',\n    'jehlan',\n    'jekot',\n    'jelen',\n    'jelito',\n    'jemnost',\n    'jenom',\n    'jepice',\n    'jeseter',\n    'jevit',\n    'jezdec',\n    'jezero',\n    'jinak',\n    'jindy',\n    'jinoch',\n    'jiskra',\n    'jistota',\n    'jitrnice',\n    'jizva',\n    'jmenovat',\n    'jogurt',\n    'jurta',\n    'kabaret',\n    'kabel',\n    'kabinet',\n    'kachna',\n    'kadet',\n    'kadidlo',\n    'kahan',\n    'kajak',\n    'kajuta',\n    'kakao',\n    'kaktus',\n    'kalamita',\n    'kalhoty',\n    'kalibr',\n    'kalnost',\n    'kamera',\n    'kamkoliv',\n    'kamna',\n    'kanibal',\n    'kanoe',\n    'kantor',\n    'kapalina',\n    'kapela',\n    'kapitola',\n    'kapka',\n    'kaple',\n    'kapota',\n    'kapr',\n    'kapusta',\n    'kapybara',\n    'karamel',\n    'karotka',\n    'karton',\n    'kasa',\n    'katalog',\n    'katedra',\n    'kauce',\n    'kauza',\n    'kavalec',\n    'kazajka',\n    'kazeta',\n    'kazivost',\n    'kdekoliv',\n    'kdesi',\n    'kedluben',\n    'kemp',\n    'keramika',\n    'kino',\n    'klacek',\n    'kladivo',\n    'klam',\n    'klapot',\n    'klasika',\n    'klaun',\n    'klec',\n    'klenba',\n    'klepat',\n    'klesnout',\n    'klid',\n    'klima',\n    'klisna',\n    'klobouk',\n    'klokan',\n    'klopa',\n    'kloub',\n    'klubovna',\n    'klusat',\n    'kluzkost',\n    'kmen',\n    'kmitat',\n    'kmotr',\n    'kniha',\n    'knot',\n    'koalice',\n    'koberec',\n    'kobka',\n    'kobliha',\n    'kobyla',\n    'kocour',\n    'kohout',\n    'kojenec',\n    'kokos',\n    'koktejl',\n    'kolaps',\n    'koleda',\n    'kolize',\n    'kolo',\n    'komando',\n    'kometa',\n    'komik',\n    'komnata',\n    'komora',\n    'kompas',\n    'komunita',\n    'konat',\n    'koncept',\n    'kondice',\n    'konec',\n    'konfese',\n    'kongres',\n    'konina',\n    'konkurs',\n    'kontakt',\n    'konzerva',\n    'kopanec',\n    'kopie',\n    'kopnout',\n    'koprovka',\n    'korbel',\n    'korektor',\n    'kormidlo',\n    'koroptev',\n    'korpus',\n    'koruna',\n    'koryto',\n    'korzet',\n    'kosatec',\n    'kostka',\n    'kotel',\n    'kotleta',\n    'kotoul',\n    'koukat',\n    'koupelna',\n    'kousek',\n    'kouzlo',\n    'kovboj',\n    'koza',\n    'kozoroh',\n    'krabice',\n    'krach',\n    'krajina',\n    'kralovat',\n    'krasopis',\n    'kravata',\n    'kredit',\n    'krejcar',\n    'kresba',\n    'kreveta',\n    'kriket',\n    'kritik',\n    'krize',\n    'krkavec',\n    'krmelec',\n    'krmivo',\n    'krocan',\n    'krok',\n    'kronika',\n    'kropit',\n    'kroupa',\n    'krovka',\n    'krtek',\n    'kruhadlo',\n    'krupice',\n    'krutost',\n    'krvinka',\n    'krychle',\n    'krypta',\n    'krystal',\n    'kryt',\n    'kudlanka',\n    'kufr',\n    'kujnost',\n    'kukla',\n    'kulajda',\n    'kulich',\n    'kulka',\n    'kulomet',\n    'kultura',\n    'kuna',\n    'kupodivu',\n    'kurt',\n    'kurzor',\n    'kutil',\n    'kvalita',\n    'kvasinka',\n    'kvestor',\n    'kynolog',\n    'kyselina',\n    'kytara',\n    'kytice',\n    'kytka',\n    'kytovec',\n    'kyvadlo',\n    'labrador',\n    'lachtan',\n    'ladnost',\n    'laik',\n    'lakomec',\n    'lamela',\n    'lampa',\n    'lanovka',\n    'lasice',\n    'laso',\n    'lastura',\n    'latinka',\n    'lavina',\n    'lebka',\n    'leckdy',\n    'leden',\n    'lednice',\n    'ledovka',\n    'ledvina',\n    'legenda',\n    'legie',\n    'legrace',\n    'lehce',\n    'lehkost',\n    'lehnout',\n    'lektvar',\n    'lenochod',\n    'lentilka',\n    'lepenka',\n    'lepidlo',\n    'letadlo',\n    'letec',\n    'letmo',\n    'letokruh',\n    'levhart',\n    'levitace',\n    'levobok',\n    'libra',\n    'lichotka',\n    'lidojed',\n    'lidskost',\n    'lihovina',\n    'lijavec',\n    'lilek',\n    'limetka',\n    'linie',\n    'linka',\n    'linoleum',\n    'listopad',\n    'litina',\n    'litovat',\n    'lobista',\n    'lodivod',\n    'logika',\n    'logoped',\n    'lokalita',\n    'loket',\n    'lomcovat',\n    'lopata',\n    'lopuch',\n    'lord',\n    'losos',\n    'lotr',\n    'loudal',\n    'louh',\n    'louka',\n    'louskat',\n    'lovec',\n    'lstivost',\n    'lucerna',\n    'lucifer',\n    'lump',\n    'lusk',\n    'lustrace',\n    'lvice',\n    'lyra',\n    'lyrika',\n    'lysina',\n    'madam',\n    'madlo',\n    'magistr',\n    'mahagon',\n    'majetek',\n    'majitel',\n    'majorita',\n    'makak',\n    'makovice',\n    'makrela',\n    'malba',\n    'malina',\n    'malovat',\n    'malvice',\n    'maminka',\n    'mandle',\n    'manko',\n    'marnost',\n    'masakr',\n    'maskot',\n    'masopust',\n    'matice',\n    'matrika',\n    'maturita',\n    'mazanec',\n    'mazivo',\n    'mazlit',\n    'mazurka',\n    'mdloba',\n    'mechanik',\n    'meditace',\n    'medovina',\n    'melasa',\n    'meloun',\n    'mentolka',\n    'metla',\n    'metoda',\n    'metr',\n    'mezera',\n    'migrace',\n    'mihnout',\n    'mihule',\n    'mikina',\n    'mikrofon',\n    'milenec',\n    'milimetr',\n    'milost',\n    'mimika',\n    'mincovna',\n    'minibar',\n    'minomet',\n    'minulost',\n    'miska',\n    'mistr',\n    'mixovat',\n    'mladost',\n    'mlha',\n    'mlhovina',\n    'mlok',\n    'mlsat',\n    'mluvit',\n    'mnich',\n    'mnohem',\n    'mobil',\n    'mocnost',\n    'modelka',\n    'modlitba',\n    'mohyla',\n    'mokro',\n    'molekula',\n    'momentka',\n    'monarcha',\n    'monokl',\n    'monstrum',\n    'montovat',\n    'monzun',\n    'mosaz',\n    'moskyt',\n    'most',\n    'motivace',\n    'motorka',\n    'motyka',\n    'moucha',\n    'moudrost',\n    'mozaika',\n    'mozek',\n    'mozol',\n    'mramor',\n    'mravenec',\n    'mrkev',\n    'mrtvola',\n    'mrzet',\n    'mrzutost',\n    'mstitel',\n    'mudrc',\n    'muflon',\n    'mulat',\n    'mumie',\n    'munice',\n    'muset',\n    'mutace',\n    'muzeum',\n    'muzikant',\n    'myslivec',\n    'mzda',\n    'nabourat',\n    'nachytat',\n    'nadace',\n    'nadbytek',\n    'nadhoz',\n    'nadobro',\n    'nadpis',\n    'nahlas',\n    'nahnat',\n    'nahodile',\n    'nahradit',\n    'naivita',\n    'najednou',\n    'najisto',\n    'najmout',\n    'naklonit',\n    'nakonec',\n    'nakrmit',\n    'nalevo',\n    'namazat',\n    'namluvit',\n    'nanometr',\n    'naoko',\n    'naopak',\n    'naostro',\n    'napadat',\n    'napevno',\n    'naplnit',\n    'napnout',\n    'naposled',\n    'naprosto',\n    'narodit',\n    'naruby',\n    'narychlo',\n    'nasadit',\n    'nasekat',\n    'naslepo',\n    'nastat',\n    'natolik',\n    'navenek',\n    'navrch',\n    'navzdory',\n    'nazvat',\n    'nebe',\n    'nechat',\n    'necky',\n    'nedaleko',\n    'nedbat',\n    'neduh',\n    'negace',\n    'nehet',\n    'nehoda',\n    'nejen',\n    'nejprve',\n    'neklid',\n    'nelibost',\n    'nemilost',\n    'nemoc',\n    'neochota',\n    'neonka',\n    'nepokoj',\n    'nerost',\n    'nerv',\n    'nesmysl',\n    'nesoulad',\n    'netvor',\n    'neuron',\n    'nevina',\n    'nezvykle',\n    'nicota',\n    'nijak',\n    'nikam',\n    'nikdy',\n    'nikl',\n    'nikterak',\n    'nitro',\n    'nocleh',\n    'nohavice',\n    'nominace',\n    'nora',\n    'norek',\n    'nositel',\n    'nosnost',\n    'nouze',\n    'noviny',\n    'novota',\n    'nozdra',\n    'nuda',\n    'nudle',\n    'nuget',\n    'nutit',\n    'nutnost',\n    'nutrie',\n    'nymfa',\n    'obal',\n    'obarvit',\n    'obava',\n    'obdiv',\n    'obec',\n    'obehnat',\n    'obejmout',\n    'obezita',\n    'obhajoba',\n    'obilnice',\n    'objasnit',\n    'objekt',\n    'obklopit',\n    'oblast',\n    'oblek',\n    'obliba',\n    'obloha',\n    'obluda',\n    'obnos',\n    'obohatit',\n    'obojek',\n    'obout',\n    'obrazec',\n    'obrna',\n    'obruba',\n    'obrys',\n    'obsah',\n    'obsluha',\n    'obstarat',\n    'obuv',\n    'obvaz',\n    'obvinit',\n    'obvod',\n    'obvykle',\n    'obyvatel',\n    'obzor',\n    'ocas',\n    'ocel',\n    'ocenit',\n    'ochladit',\n    'ochota',\n    'ochrana',\n    'ocitnout',\n    'odboj',\n    'odbyt',\n    'odchod',\n    'odcizit',\n    'odebrat',\n    'odeslat',\n    'odevzdat',\n    'odezva',\n    'odhadce',\n    'odhodit',\n    'odjet',\n    'odjinud',\n    'odkaz',\n    'odkoupit',\n    'odliv',\n    'odluka',\n    'odmlka',\n    'odolnost',\n    'odpad',\n    'odpis',\n    'odplout',\n    'odpor',\n    'odpustit',\n    'odpykat',\n    'odrazka',\n    'odsoudit',\n    'odstup',\n    'odsun',\n    'odtok',\n    'odtud',\n    'odvaha',\n    'odveta',\n    'odvolat',\n    'odvracet',\n    'odznak',\n    'ofina',\n    'ofsajd',\n    'ohlas',\n    'ohnisko',\n    'ohrada',\n    'ohrozit',\n    'ohryzek',\n    'okap',\n    'okenice',\n    'oklika',\n    'okno',\n    'okouzlit',\n    'okovy',\n    'okrasa',\n    'okres',\n    'okrsek',\n    'okruh',\n    'okupant',\n    'okurka',\n    'okusit',\n    'olejnina',\n    'olizovat',\n    'omak',\n    'omeleta',\n    'omezit',\n    'omladina',\n    'omlouvat',\n    'omluva',\n    'omyl',\n    'onehdy',\n    'opakovat',\n    'opasek',\n    'operace',\n    'opice',\n    'opilost',\n    'opisovat',\n    'opora',\n    'opozice',\n    'opravdu',\n    'oproti',\n    'orbital',\n    'orchestr',\n    'orgie',\n    'orlice',\n    'orloj',\n    'ortel',\n    'osada',\n    'oschnout',\n    'osika',\n    'osivo',\n    'oslava',\n    'oslepit',\n    'oslnit',\n    'oslovit',\n    'osnova',\n    'osoba',\n    'osolit',\n    'ospalec',\n    'osten',\n    'ostraha',\n    'ostuda',\n    'ostych',\n    'osvojit',\n    'oteplit',\n    'otisk',\n    'otop',\n    'otrhat',\n    'otrlost',\n    'otrok',\n    'otruby',\n    'otvor',\n    'ovanout',\n    'ovar',\n    'oves',\n    'ovlivnit',\n    'ovoce',\n    'oxid',\n    'ozdoba',\n    'pachatel',\n    'pacient',\n    'padouch',\n    'pahorek',\n    'pakt',\n    'palanda',\n    'palec',\n    'palivo',\n    'paluba',\n    'pamflet',\n    'pamlsek',\n    'panenka',\n    'panika',\n    'panna',\n    'panovat',\n    'panstvo',\n    'pantofle',\n    'paprika',\n    'parketa',\n    'parodie',\n    'parta',\n    'paruka',\n    'paryba',\n    'paseka',\n    'pasivita',\n    'pastelka',\n    'patent',\n    'patrona',\n    'pavouk',\n    'pazneht',\n    'pazourek',\n    'pecka',\n    'pedagog',\n    'pejsek',\n    'peklo',\n    'peloton',\n    'penalta',\n    'pendrek',\n    'penze',\n    'periskop',\n    'pero',\n    'pestrost',\n    'petarda',\n    'petice',\n    'petrolej',\n    'pevnina',\n    'pexeso',\n    'pianista',\n    'piha',\n    'pijavice',\n    'pikle',\n    'piknik',\n    'pilina',\n    'pilnost',\n    'pilulka',\n    'pinzeta',\n    'pipeta',\n    'pisatel',\n    'pistole',\n    'pitevna',\n    'pivnice',\n    'pivovar',\n    'placenta',\n    'plakat',\n    'plamen',\n    'planeta',\n    'plastika',\n    'platit',\n    'plavidlo',\n    'plaz',\n    'plech',\n    'plemeno',\n    'plenta',\n    'ples',\n    'pletivo',\n    'plevel',\n    'plivat',\n    'plnit',\n    'plno',\n    'plocha',\n    'plodina',\n    'plomba',\n    'plout',\n    'pluk',\n    'plyn',\n    'pobavit',\n    'pobyt',\n    'pochod',\n    'pocit',\n    'poctivec',\n    'podat',\n    'podcenit',\n    'podepsat',\n    'podhled',\n    'podivit',\n    'podklad',\n    'podmanit',\n    'podnik',\n    'podoba',\n    'podpora',\n    'podraz',\n    'podstata',\n    'podvod',\n    'podzim',\n    'poezie',\n    'pohanka',\n    'pohnutka',\n    'pohovor',\n    'pohroma',\n    'pohyb',\n    'pointa',\n    'pojistka',\n    'pojmout',\n    'pokazit',\n    'pokles',\n    'pokoj',\n    'pokrok',\n    'pokuta',\n    'pokyn',\n    'poledne',\n    'polibek',\n    'polknout',\n    'poloha',\n    'polynom',\n    'pomalu',\n    'pominout',\n    'pomlka',\n    'pomoc',\n    'pomsta',\n    'pomyslet',\n    'ponechat',\n    'ponorka',\n    'ponurost',\n    'popadat',\n    'popel',\n    'popisek',\n    'poplach',\n    'poprosit',\n    'popsat',\n    'popud',\n    'poradce',\n    'porce',\n    'porod',\n    'porucha',\n    'poryv',\n    'posadit',\n    'posed',\n    'posila',\n    'poskok',\n    'poslanec',\n    'posoudit',\n    'pospolu',\n    'postava',\n    'posudek',\n    'posyp',\n    'potah',\n    'potkan',\n    'potlesk',\n    'potomek',\n    'potrava',\n    'potupa',\n    'potvora',\n    'poukaz',\n    'pouto',\n    'pouzdro',\n    'povaha',\n    'povidla',\n    'povlak',\n    'povoz',\n    'povrch',\n    'povstat',\n    'povyk',\n    'povzdech',\n    'pozdrav',\n    'pozemek',\n    'poznatek',\n    'pozor',\n    'pozvat',\n    'pracovat',\n    'prahory',\n    'praktika',\n    'prales',\n    'praotec',\n    'praporek',\n    'prase',\n    'pravda',\n    'princip',\n    'prkno',\n    'probudit',\n    'procento',\n    'prodej',\n    'profese',\n    'prohra',\n    'projekt',\n    'prolomit',\n    'promile',\n    'pronikat',\n    'propad',\n    'prorok',\n    'prosba',\n    'proton',\n    'proutek',\n    'provaz',\n    'prskavka',\n    'prsten',\n    'prudkost',\n    'prut',\n    'prvek',\n    'prvohory',\n    'psanec',\n    'psovod',\n    'pstruh',\n    'ptactvo',\n    'puberta',\n    'puch',\n    'pudl',\n    'pukavec',\n    'puklina',\n    'pukrle',\n    'pult',\n    'pumpa',\n    'punc',\n    'pupen',\n    'pusa',\n    'pusinka',\n    'pustina',\n    'putovat',\n    'putyka',\n    'pyramida',\n    'pysk',\n    'pytel',\n    'racek',\n    'rachot',\n    'radiace',\n    'radnice',\n    'radon',\n    'raft',\n    'ragby',\n    'raketa',\n    'rakovina',\n    'rameno',\n    'rampouch',\n    'rande',\n    'rarach',\n    'rarita',\n    'rasovna',\n    'rastr',\n    'ratolest',\n    'razance',\n    'razidlo',\n    'reagovat',\n    'reakce',\n    'recept',\n    'redaktor',\n    'referent',\n    'reflex',\n    'rejnok',\n    'reklama',\n    'rekord',\n    'rekrut',\n    'rektor',\n    'reputace',\n    'revize',\n    'revma',\n    'revolver',\n    'rezerva',\n    'riskovat',\n    'riziko',\n    'robotika',\n    'rodokmen',\n    'rohovka',\n    'rokle',\n    'rokoko',\n    'romaneto',\n    'ropovod',\n    'ropucha',\n    'rorejs',\n    'rosol',\n    'rostlina',\n    'rotmistr',\n    'rotoped',\n    'rotunda',\n    'roubenka',\n    'roucho',\n    'roup',\n    'roura',\n    'rovina',\n    'rovnice',\n    'rozbor',\n    'rozchod',\n    'rozdat',\n    'rozeznat',\n    'rozhodce',\n    'rozinka',\n    'rozjezd',\n    'rozkaz',\n    'rozloha',\n    'rozmar',\n    'rozpad',\n    'rozruch',\n    'rozsah',\n    'roztok',\n    'rozum',\n    'rozvod',\n    'rubrika',\n    'ruchadlo',\n    'rukavice',\n    'rukopis',\n    'ryba',\n    'rybolov',\n    'rychlost',\n    'rydlo',\n    'rypadlo',\n    'rytina',\n    'ryzost',\n    'sadista',\n    'sahat',\n    'sako',\n    'samec',\n    'samizdat',\n    'samota',\n    'sanitka',\n    'sardinka',\n    'sasanka',\n    'satelit',\n    'sazba',\n    'sazenice',\n    'sbor',\n    'schovat',\n    'sebranka',\n    'secese',\n    'sedadlo',\n    'sediment',\n    'sedlo',\n    'sehnat',\n    'sejmout',\n    'sekera',\n    'sekta',\n    'sekunda',\n    'sekvoje',\n    'semeno',\n    'seno',\n    'servis',\n    'sesadit',\n    'seshora',\n    'seskok',\n    'seslat',\n    'sestra',\n    'sesuv',\n    'sesypat',\n    'setba',\n    'setina',\n    'setkat',\n    'setnout',\n    'setrvat',\n    'sever',\n    'seznam',\n    'shoda',\n    'shrnout',\n    'sifon',\n    'silnice',\n    'sirka',\n    'sirotek',\n    'sirup',\n    'situace',\n    'skafandr',\n    'skalisko',\n    'skanzen',\n    'skaut',\n    'skeptik',\n    'skica',\n    'skladba',\n    'sklenice',\n    'sklo',\n    'skluz',\n    'skoba',\n    'skokan',\n    'skoro',\n    'skripta',\n    'skrz',\n    'skupina',\n    'skvost',\n    'skvrna',\n    'slabika',\n    'sladidlo',\n    'slanina',\n    'slast',\n    'slavnost',\n    'sledovat',\n    'slepec',\n    'sleva',\n    'slezina',\n    'slib',\n    'slina',\n    'sliznice',\n    'slon',\n    'sloupek',\n    'slovo',\n    'sluch',\n    'sluha',\n    'slunce',\n    'slupka',\n    'slza',\n    'smaragd',\n    'smetana',\n    'smilstvo',\n    'smlouva',\n    'smog',\n    'smrad',\n    'smrk',\n    'smrtka',\n    'smutek',\n    'smysl',\n    'snad',\n    'snaha',\n    'snob',\n    'sobota',\n    'socha',\n    'sodovka',\n    'sokol',\n    'sopka',\n    'sotva',\n    'souboj',\n    'soucit',\n    'soudce',\n    'souhlas',\n    'soulad',\n    'soumrak',\n    'souprava',\n    'soused',\n    'soutok',\n    'souviset',\n    'spalovna',\n    'spasitel',\n    'spis',\n    'splav',\n    'spodek',\n    'spojenec',\n    'spolu',\n    'sponzor',\n    'spornost',\n    'spousta',\n    'sprcha',\n    'spustit',\n    'sranda',\n    'sraz',\n    'srdce',\n    'srna',\n    'srnec',\n    'srovnat',\n    'srpen',\n    'srst',\n    'srub',\n    'stanice',\n    'starosta',\n    'statika',\n    'stavba',\n    'stehno',\n    'stezka',\n    'stodola',\n    'stolek',\n    'stopa',\n    'storno',\n    'stoupat',\n    'strach',\n    'stres',\n    'strhnout',\n    'strom',\n    'struna',\n    'studna',\n    'stupnice',\n    'stvol',\n    'styk',\n    'subjekt',\n    'subtropy',\n    'suchar',\n    'sudost',\n    'sukno',\n    'sundat',\n    'sunout',\n    'surikata',\n    'surovina',\n    'svah',\n    'svalstvo',\n    'svetr',\n    'svatba',\n    'svazek',\n    'svisle',\n    'svitek',\n    'svoboda',\n    'svodidlo',\n    'svorka',\n    'svrab',\n    'sykavka',\n    'sykot',\n    'synek',\n    'synovec',\n    'sypat',\n    'sypkost',\n    'syrovost',\n    'sysel',\n    'sytost',\n    'tabletka',\n    'tabule',\n    'tahoun',\n    'tajemno',\n    'tajfun',\n    'tajga',\n    'tajit',\n    'tajnost',\n    'taktika',\n    'tamhle',\n    'tampon',\n    'tancovat',\n    'tanec',\n    'tanker',\n    'tapeta',\n    'tavenina',\n    'tazatel',\n    'technika',\n    'tehdy',\n    'tekutina',\n    'telefon',\n    'temnota',\n    'tendence',\n    'tenista',\n    'tenor',\n    'teplota',\n    'tepna',\n    'teprve',\n    'terapie',\n    'termoska',\n    'textil',\n    'ticho',\n    'tiskopis',\n    'titulek',\n    'tkadlec',\n    'tkanina',\n    'tlapka',\n    'tleskat',\n    'tlukot',\n    'tlupa',\n    'tmel',\n    'toaleta',\n    'topinka',\n    'topol',\n    'torzo',\n    'touha',\n    'toulec',\n    'tradice',\n    'traktor',\n    'tramp',\n    'trasa',\n    'traverza',\n    'trefit',\n    'trest',\n    'trezor',\n    'trhavina',\n    'trhlina',\n    'trochu',\n    'trojice',\n    'troska',\n    'trouba',\n    'trpce',\n    'trpitel',\n    'trpkost',\n    'trubec',\n    'truchlit',\n    'truhlice',\n    'trus',\n    'trvat',\n    'tudy',\n    'tuhnout',\n    'tuhost',\n    'tundra',\n    'turista',\n    'turnaj',\n    'tuzemsko',\n    'tvaroh',\n    'tvorba',\n    'tvrdost',\n    'tvrz',\n    'tygr',\n    'tykev',\n    'ubohost',\n    'uboze',\n    'ubrat',\n    'ubrousek',\n    'ubrus',\n    'ubytovna',\n    'ucho',\n    'uctivost',\n    'udivit',\n    'uhradit',\n    'ujednat',\n    'ujistit',\n    'ujmout',\n    'ukazatel',\n    'uklidnit',\n    'uklonit',\n    'ukotvit',\n    'ukrojit',\n    'ulice',\n    'ulita',\n    'ulovit',\n    'umyvadlo',\n    'unavit',\n    'uniforma',\n    'uniknout',\n    'upadnout',\n    'uplatnit',\n    'uplynout',\n    'upoutat',\n    'upravit',\n    'uran',\n    'urazit',\n    'usednout',\n    'usilovat',\n    'usmrtit',\n    'usnadnit',\n    'usnout',\n    'usoudit',\n    'ustlat',\n    'ustrnout',\n    'utahovat',\n    'utkat',\n    'utlumit',\n    'utonout',\n    'utopenec',\n    'utrousit',\n    'uvalit',\n    'uvolnit',\n    'uvozovka',\n    'uzdravit',\n    'uzel',\n    'uzenina',\n    'uzlina',\n    'uznat',\n    'vagon',\n    'valcha',\n    'valoun',\n    'vana',\n    'vandal',\n    'vanilka',\n    'varan',\n    'varhany',\n    'varovat',\n    'vcelku',\n    'vchod',\n    'vdova',\n    'vedro',\n    'vegetace',\n    'vejce',\n    'velbloud',\n    'veletrh',\n    'velitel',\n    'velmoc',\n    'velryba',\n    'venkov',\n    'veranda',\n    'verze',\n    'veselka',\n    'veskrze',\n    'vesnice',\n    'vespodu',\n    'vesta',\n    'veterina',\n    'veverka',\n    'vibrace',\n    'vichr',\n    'videohra',\n    'vidina',\n    'vidle',\n    'vila',\n    'vinice',\n    'viset',\n    'vitalita',\n    'vize',\n    'vizitka',\n    'vjezd',\n    'vklad',\n    'vkus',\n    'vlajka',\n    'vlak',\n    'vlasec',\n    'vlevo',\n    'vlhkost',\n    'vliv',\n    'vlnovka',\n    'vloupat',\n    'vnucovat',\n    'vnuk',\n    'voda',\n    'vodivost',\n    'vodoznak',\n    'vodstvo',\n    'vojensky',\n    'vojna',\n    'vojsko',\n    'volant',\n    'volba',\n    'volit',\n    'volno',\n    'voskovka',\n    'vozidlo',\n    'vozovna',\n    'vpravo',\n    'vrabec',\n    'vracet',\n    'vrah',\n    'vrata',\n    'vrba',\n    'vrcholek',\n    'vrhat',\n    'vrstva',\n    'vrtule',\n    'vsadit',\n    'vstoupit',\n    'vstup',\n    'vtip',\n    'vybavit',\n    'vybrat',\n    'vychovat',\n    'vydat',\n    'vydra',\n    'vyfotit',\n    'vyhledat',\n    'vyhnout',\n    'vyhodit',\n    'vyhradit',\n    'vyhubit',\n    'vyjasnit',\n    'vyjet',\n    'vyjmout',\n    'vyklopit',\n    'vykonat',\n    'vylekat',\n    'vymazat',\n    'vymezit',\n    'vymizet',\n    'vymyslet',\n    'vynechat',\n    'vynikat',\n    'vynutit',\n    'vypadat',\n    'vyplatit',\n    'vypravit',\n    'vypustit',\n    'vyrazit',\n    'vyrovnat',\n    'vyrvat',\n    'vyslovit',\n    'vysoko',\n    'vystavit',\n    'vysunout',\n    'vysypat',\n    'vytasit',\n    'vytesat',\n    'vytratit',\n    'vyvinout',\n    'vyvolat',\n    'vyvrhel',\n    'vyzdobit',\n    'vyznat',\n    'vzadu',\n    'vzbudit',\n    'vzchopit',\n    'vzdor',\n    'vzduch',\n    'vzdychat',\n    'vzestup',\n    'vzhledem',\n    'vzkaz',\n    'vzlykat',\n    'vznik',\n    'vzorek',\n    'vzpoura',\n    'vztah',\n    'vztek',\n    'xylofon',\n    'zabrat',\n    'zabydlet',\n    'zachovat',\n    'zadarmo',\n    'zadusit',\n    'zafoukat',\n    'zahltit',\n    'zahodit',\n    'zahrada',\n    'zahynout',\n    'zajatec',\n    'zajet',\n    'zajistit',\n    'zaklepat',\n    'zakoupit',\n    'zalepit',\n    'zamezit',\n    'zamotat',\n    'zamyslet',\n    'zanechat',\n    'zanikat',\n    'zaplatit',\n    'zapojit',\n    'zapsat',\n    'zarazit',\n    'zastavit',\n    'zasunout',\n    'zatajit',\n    'zatemnit',\n    'zatknout',\n    'zaujmout',\n    'zavalit',\n    'zavelet',\n    'zavinit',\n    'zavolat',\n    'zavrtat',\n    'zazvonit',\n    'zbavit',\n    'zbrusu',\n    'zbudovat',\n    'zbytek',\n    'zdaleka',\n    'zdarma',\n    'zdatnost',\n    'zdivo',\n    'zdobit',\n    'zdroj',\n    'zdvih',\n    'zdymadlo',\n    'zelenina',\n    'zeman',\n    'zemina',\n    'zeptat',\n    'zezadu',\n    'zezdola',\n    'zhatit',\n    'zhltnout',\n    'zhluboka',\n    'zhotovit',\n    'zhruba',\n    'zima',\n    'zimnice',\n    'zjemnit',\n    'zklamat',\n    'zkoumat',\n    'zkratka',\n    'zkumavka',\n    'zlato',\n    'zlehka',\n    'zloba',\n    'zlom',\n    'zlost',\n    'zlozvyk',\n    'zmapovat',\n    'zmar',\n    'zmatek',\n    'zmije',\n    'zmizet',\n    'zmocnit',\n    'zmodrat',\n    'zmrzlina',\n    'zmutovat',\n    'znak',\n    'znalost',\n    'znamenat',\n    'znovu',\n    'zobrazit',\n    'zotavit',\n    'zoubek',\n    'zoufale',\n    'zplodit',\n    'zpomalit',\n    'zprava',\n    'zprostit',\n    'zprudka',\n    'zprvu',\n    'zrada',\n    'zranit',\n    'zrcadlo',\n    'zrnitost',\n    'zrno',\n    'zrovna',\n    'zrychlit',\n    'zrzavost',\n    'zticha',\n    'ztratit',\n    'zubovina',\n    'zubr',\n    'zvednout',\n    'zvenku',\n    'zvesela',\n    'zvon',\n    'zvrat',\n    'zvukovod',\n    'zvyk'\n];\n//# sourceMappingURL=czech.js.map","// SPDX-License-Identifier: MIT\nexport const WORDLIST = [\n    'abandon',\n    'ability',\n    'able',\n    'about',\n    'above',\n    'absent',\n    'absorb',\n    'abstract',\n    'absurd',\n    'abuse',\n    'access',\n    'accident',\n    'account',\n    'accuse',\n    'achieve',\n    'acid',\n    'acoustic',\n    'acquire',\n    'across',\n    'act',\n    'action',\n    'actor',\n    'actress',\n    'actual',\n    'adapt',\n    'add',\n    'addict',\n    'address',\n    'adjust',\n    'admit',\n    'adult',\n    'advance',\n    'advice',\n    'aerobic',\n    'affair',\n    'afford',\n    'afraid',\n    'again',\n    'age',\n    'agent',\n    'agree',\n    'ahead',\n    'aim',\n    'air',\n    'airport',\n    'aisle',\n    'alarm',\n    'album',\n    'alcohol',\n    'alert',\n    'alien',\n    'all',\n    'alley',\n    'allow',\n    'almost',\n    'alone',\n    'alpha',\n    'already',\n    'also',\n    'alter',\n    'always',\n    'amateur',\n    'amazing',\n    'among',\n    'amount',\n    'amused',\n    'analyst',\n    'anchor',\n    'ancient',\n    'anger',\n    'angle',\n    'angry',\n    'animal',\n    'ankle',\n    'announce',\n    'annual',\n    'another',\n    'answer',\n    'antenna',\n    'antique',\n    'anxiety',\n    'any',\n    'apart',\n    'apology',\n    'appear',\n    'apple',\n    'approve',\n    'april',\n    'arch',\n    'arctic',\n    'area',\n    'arena',\n    'argue',\n    'arm',\n    'armed',\n    'armor',\n    'army',\n    'around',\n    'arrange',\n    'arrest',\n    'arrive',\n    'arrow',\n    'art',\n    'artefact',\n    'artist',\n    'artwork',\n    'ask',\n    'aspect',\n    'assault',\n    'asset',\n    'assist',\n    'assume',\n    'asthma',\n    'athlete',\n    'atom',\n    'attack',\n    'attend',\n    'attitude',\n    'attract',\n    'auction',\n    'audit',\n    'august',\n    'aunt',\n    'author',\n    'auto',\n    'autumn',\n    'average',\n    'avocado',\n    'avoid',\n    'awake',\n    'aware',\n    'away',\n    'awesome',\n    'awful',\n    'awkward',\n    'axis',\n    'baby',\n    'bachelor',\n    'bacon',\n    'badge',\n    'bag',\n    'balance',\n    'balcony',\n    'ball',\n    'bamboo',\n    'banana',\n    'banner',\n    'bar',\n    'barely',\n    'bargain',\n    'barrel',\n    'base',\n    'basic',\n    'basket',\n    'battle',\n    'beach',\n    'bean',\n    'beauty',\n    'because',\n    'become',\n    'beef',\n    'before',\n    'begin',\n    'behave',\n    'behind',\n    'believe',\n    'below',\n    'belt',\n    'bench',\n    'benefit',\n    'best',\n    'betray',\n    'better',\n    'between',\n    'beyond',\n    'bicycle',\n    'bid',\n    'bike',\n    'bind',\n    'biology',\n    'bird',\n    'birth',\n    'bitter',\n    'black',\n    'blade',\n    'blame',\n    'blanket',\n    'blast',\n    'bleak',\n    'bless',\n    'blind',\n    'blood',\n    'blossom',\n    'blouse',\n    'blue',\n    'blur',\n    'blush',\n    'board',\n    'boat',\n    'body',\n    'boil',\n    'bomb',\n    'bone',\n    'bonus',\n    'book',\n    'boost',\n    'border',\n    'boring',\n    'borrow',\n    'boss',\n    'bottom',\n    'bounce',\n    'box',\n    'boy',\n    'bracket',\n    'brain',\n    'brand',\n    'brass',\n    'brave',\n    'bread',\n    'breeze',\n    'brick',\n    'bridge',\n    'brief',\n    'bright',\n    'bring',\n    'brisk',\n    'broccoli',\n    'broken',\n    'bronze',\n    'broom',\n    'brother',\n    'brown',\n    'brush',\n    'bubble',\n    'buddy',\n    'budget',\n    'buffalo',\n    'build',\n    'bulb',\n    'bulk',\n    'bullet',\n    'bundle',\n    'bunker',\n    'burden',\n    'burger',\n    'burst',\n    'bus',\n    'business',\n    'busy',\n    'butter',\n    'buyer',\n    'buzz',\n    'cabbage',\n    'cabin',\n    'cable',\n    'cactus',\n    'cage',\n    'cake',\n    'call',\n    'calm',\n    'camera',\n    'camp',\n    'can',\n    'canal',\n    'cancel',\n    'candy',\n    'cannon',\n    'canoe',\n    'canvas',\n    'canyon',\n    'capable',\n    'capital',\n    'captain',\n    'car',\n    'carbon',\n    'card',\n    'cargo',\n    'carpet',\n    'carry',\n    'cart',\n    'case',\n    'cash',\n    'casino',\n    'castle',\n    'casual',\n    'cat',\n    'catalog',\n    'catch',\n    'category',\n    'cattle',\n    'caught',\n    'cause',\n    'caution',\n    'cave',\n    'ceiling',\n    'celery',\n    'cement',\n    'census',\n    'century',\n    'cereal',\n    'certain',\n    'chair',\n    'chalk',\n    'champion',\n    'change',\n    'chaos',\n    'chapter',\n    'charge',\n    'chase',\n    'chat',\n    'cheap',\n    'check',\n    'cheese',\n    'chef',\n    'cherry',\n    'chest',\n    'chicken',\n    'chief',\n    'child',\n    'chimney',\n    'choice',\n    'choose',\n    'chronic',\n    'chuckle',\n    'chunk',\n    'churn',\n    'cigar',\n    'cinnamon',\n    'circle',\n    'citizen',\n    'city',\n    'civil',\n    'claim',\n    'clap',\n    'clarify',\n    'claw',\n    'clay',\n    'clean',\n    'clerk',\n    'clever',\n    'click',\n    'client',\n    'cliff',\n    'climb',\n    'clinic',\n    'clip',\n    'clock',\n    'clog',\n    'close',\n    'cloth',\n    'cloud',\n    'clown',\n    'club',\n    'clump',\n    'cluster',\n    'clutch',\n    'coach',\n    'coast',\n    'coconut',\n    'code',\n    'coffee',\n    'coil',\n    'coin',\n    'collect',\n    'color',\n    'column',\n    'combine',\n    'come',\n    'comfort',\n    'comic',\n    'common',\n    'company',\n    'concert',\n    'conduct',\n    'confirm',\n    'congress',\n    'connect',\n    'consider',\n    'control',\n    'convince',\n    'cook',\n    'cool',\n    'copper',\n    'copy',\n    'coral',\n    'core',\n    'corn',\n    'correct',\n    'cost',\n    'cotton',\n    'couch',\n    'country',\n    'couple',\n    'course',\n    'cousin',\n    'cover',\n    'coyote',\n    'crack',\n    'cradle',\n    'craft',\n    'cram',\n    'crane',\n    'crash',\n    'crater',\n    'crawl',\n    'crazy',\n    'cream',\n    'credit',\n    'creek',\n    'crew',\n    'cricket',\n    'crime',\n    'crisp',\n    'critic',\n    'crop',\n    'cross',\n    'crouch',\n    'crowd',\n    'crucial',\n    'cruel',\n    'cruise',\n    'crumble',\n    'crunch',\n    'crush',\n    'cry',\n    'crystal',\n    'cube',\n    'culture',\n    'cup',\n    'cupboard',\n    'curious',\n    'current',\n    'curtain',\n    'curve',\n    'cushion',\n    'custom',\n    'cute',\n    'cycle',\n    'dad',\n    'damage',\n    'damp',\n    'dance',\n    'danger',\n    'daring',\n    'dash',\n    'daughter',\n    'dawn',\n    'day',\n    'deal',\n    'debate',\n    'debris',\n    'decade',\n    'december',\n    'decide',\n    'decline',\n    'decorate',\n    'decrease',\n    'deer',\n    'defense',\n    'define',\n    'defy',\n    'degree',\n    'delay',\n    'deliver',\n    'demand',\n    'demise',\n    'denial',\n    'dentist',\n    'deny',\n    'depart',\n    'depend',\n    'deposit',\n    'depth',\n    'deputy',\n    'derive',\n    'describe',\n    'desert',\n    'design',\n    'desk',\n    'despair',\n    'destroy',\n    'detail',\n    'detect',\n    'develop',\n    'device',\n    'devote',\n    'diagram',\n    'dial',\n    'diamond',\n    'diary',\n    'dice',\n    'diesel',\n    'diet',\n    'differ',\n    'digital',\n    'dignity',\n    'dilemma',\n    'dinner',\n    'dinosaur',\n    'direct',\n    'dirt',\n    'disagree',\n    'discover',\n    'disease',\n    'dish',\n    'dismiss',\n    'disorder',\n    'display',\n    'distance',\n    'divert',\n    'divide',\n    'divorce',\n    'dizzy',\n    'doctor',\n    'document',\n    'dog',\n    'doll',\n    'dolphin',\n    'domain',\n    'donate',\n    'donkey',\n    'donor',\n    'door',\n    'dose',\n    'double',\n    'dove',\n    'draft',\n    'dragon',\n    'drama',\n    'drastic',\n    'draw',\n    'dream',\n    'dress',\n    'drift',\n    'drill',\n    'drink',\n    'drip',\n    'drive',\n    'drop',\n    'drum',\n    'dry',\n    'duck',\n    'dumb',\n    'dune',\n    'during',\n    'dust',\n    'dutch',\n    'duty',\n    'dwarf',\n    'dynamic',\n    'eager',\n    'eagle',\n    'early',\n    'earn',\n    'earth',\n    'easily',\n    'east',\n    'easy',\n    'echo',\n    'ecology',\n    'economy',\n    'edge',\n    'edit',\n    'educate',\n    'effort',\n    'egg',\n    'eight',\n    'either',\n    'elbow',\n    'elder',\n    'electric',\n    'elegant',\n    'element',\n    'elephant',\n    'elevator',\n    'elite',\n    'else',\n    'embark',\n    'embody',\n    'embrace',\n    'emerge',\n    'emotion',\n    'employ',\n    'empower',\n    'empty',\n    'enable',\n    'enact',\n    'end',\n    'endless',\n    'endorse',\n    'enemy',\n    'energy',\n    'enforce',\n    'engage',\n    'engine',\n    'enhance',\n    'enjoy',\n    'enlist',\n    'enough',\n    'enrich',\n    'enroll',\n    'ensure',\n    'enter',\n    'entire',\n    'entry',\n    'envelope',\n    'episode',\n    'equal',\n    'equip',\n    'era',\n    'erase',\n    'erode',\n    'erosion',\n    'error',\n    'erupt',\n    'escape',\n    'essay',\n    'essence',\n    'estate',\n    'eternal',\n    'ethics',\n    'evidence',\n    'evil',\n    'evoke',\n    'evolve',\n    'exact',\n    'example',\n    'excess',\n    'exchange',\n    'excite',\n    'exclude',\n    'excuse',\n    'execute',\n    'exercise',\n    'exhaust',\n    'exhibit',\n    'exile',\n    'exist',\n    'exit',\n    'exotic',\n    'expand',\n    'expect',\n    'expire',\n    'explain',\n    'expose',\n    'express',\n    'extend',\n    'extra',\n    'eye',\n    'eyebrow',\n    'fabric',\n    'face',\n    'faculty',\n    'fade',\n    'faint',\n    'faith',\n    'fall',\n    'false',\n    'fame',\n    'family',\n    'famous',\n    'fan',\n    'fancy',\n    'fantasy',\n    'farm',\n    'fashion',\n    'fat',\n    'fatal',\n    'father',\n    'fatigue',\n    'fault',\n    'favorite',\n    'feature',\n    'february',\n    'federal',\n    'fee',\n    'feed',\n    'feel',\n    'female',\n    'fence',\n    'festival',\n    'fetch',\n    'fever',\n    'few',\n    'fiber',\n    'fiction',\n    'field',\n    'figure',\n    'file',\n    'film',\n    'filter',\n    'final',\n    'find',\n    'fine',\n    'finger',\n    'finish',\n    'fire',\n    'firm',\n    'first',\n    'fiscal',\n    'fish',\n    'fit',\n    'fitness',\n    'fix',\n    'flag',\n    'flame',\n    'flash',\n    'flat',\n    'flavor',\n    'flee',\n    'flight',\n    'flip',\n    'float',\n    'flock',\n    'floor',\n    'flower',\n    'fluid',\n    'flush',\n    'fly',\n    'foam',\n    'focus',\n    'fog',\n    'foil',\n    'fold',\n    'follow',\n    'food',\n    'foot',\n    'force',\n    'forest',\n    'forget',\n    'fork',\n    'fortune',\n    'forum',\n    'forward',\n    'fossil',\n    'foster',\n    'found',\n    'fox',\n    'fragile',\n    'frame',\n    'frequent',\n    'fresh',\n    'friend',\n    'fringe',\n    'frog',\n    'front',\n    'frost',\n    'frown',\n    'frozen',\n    'fruit',\n    'fuel',\n    'fun',\n    'funny',\n    'furnace',\n    'fury',\n    'future',\n    'gadget',\n    'gain',\n    'galaxy',\n    'gallery',\n    'game',\n    'gap',\n    'garage',\n    'garbage',\n    'garden',\n    'garlic',\n    'garment',\n    'gas',\n    'gasp',\n    'gate',\n    'gather',\n    'gauge',\n    'gaze',\n    'general',\n    'genius',\n    'genre',\n    'gentle',\n    'genuine',\n    'gesture',\n    'ghost',\n    'giant',\n    'gift',\n    'giggle',\n    'ginger',\n    'giraffe',\n    'girl',\n    'give',\n    'glad',\n    'glance',\n    'glare',\n    'glass',\n    'glide',\n    'glimpse',\n    'globe',\n    'gloom',\n    'glory',\n    'glove',\n    'glow',\n    'glue',\n    'goat',\n    'goddess',\n    'gold',\n    'good',\n    'goose',\n    'gorilla',\n    'gospel',\n    'gossip',\n    'govern',\n    'gown',\n    'grab',\n    'grace',\n    'grain',\n    'grant',\n    'grape',\n    'grass',\n    'gravity',\n    'great',\n    'green',\n    'grid',\n    'grief',\n    'grit',\n    'grocery',\n    'group',\n    'grow',\n    'grunt',\n    'guard',\n    'guess',\n    'guide',\n    'guilt',\n    'guitar',\n    'gun',\n    'gym',\n    'habit',\n    'hair',\n    'half',\n    'hammer',\n    'hamster',\n    'hand',\n    'happy',\n    'harbor',\n    'hard',\n    'harsh',\n    'harvest',\n    'hat',\n    'have',\n    'hawk',\n    'hazard',\n    'head',\n    'health',\n    'heart',\n    'heavy',\n    'hedgehog',\n    'height',\n    'hello',\n    'helmet',\n    'help',\n    'hen',\n    'hero',\n    'hidden',\n    'high',\n    'hill',\n    'hint',\n    'hip',\n    'hire',\n    'history',\n    'hobby',\n    'hockey',\n    'hold',\n    'hole',\n    'holiday',\n    'hollow',\n    'home',\n    'honey',\n    'hood',\n    'hope',\n    'horn',\n    'horror',\n    'horse',\n    'hospital',\n    'host',\n    'hotel',\n    'hour',\n    'hover',\n    'hub',\n    'huge',\n    'human',\n    'humble',\n    'humor',\n    'hundred',\n    'hungry',\n    'hunt',\n    'hurdle',\n    'hurry',\n    'hurt',\n    'husband',\n    'hybrid',\n    'ice',\n    'icon',\n    'idea',\n    'identify',\n    'idle',\n    'ignore',\n    'ill',\n    'illegal',\n    'illness',\n    'image',\n    'imitate',\n    'immense',\n    'immune',\n    'impact',\n    'impose',\n    'improve',\n    'impulse',\n    'inch',\n    'include',\n    'income',\n    'increase',\n    'index',\n    'indicate',\n    'indoor',\n    'industry',\n    'infant',\n    'inflict',\n    'inform',\n    'inhale',\n    'inherit',\n    'initial',\n    'inject',\n    'injury',\n    'inmate',\n    'inner',\n    'innocent',\n    'input',\n    'inquiry',\n    'insane',\n    'insect',\n    'inside',\n    'inspire',\n    'install',\n    'intact',\n    'interest',\n    'into',\n    'invest',\n    'invite',\n    'involve',\n    'iron',\n    'island',\n    'isolate',\n    'issue',\n    'item',\n    'ivory',\n    'jacket',\n    'jaguar',\n    'jar',\n    'jazz',\n    'jealous',\n    'jeans',\n    'jelly',\n    'jewel',\n    'job',\n    'join',\n    'joke',\n    'journey',\n    'joy',\n    'judge',\n    'juice',\n    'jump',\n    'jungle',\n    'junior',\n    'junk',\n    'just',\n    'kangaroo',\n    'keen',\n    'keep',\n    'ketchup',\n    'key',\n    'kick',\n    'kid',\n    'kidney',\n    'kind',\n    'kingdom',\n    'kiss',\n    'kit',\n    'kitchen',\n    'kite',\n    'kitten',\n    'kiwi',\n    'knee',\n    'knife',\n    'knock',\n    'know',\n    'lab',\n    'label',\n    'labor',\n    'ladder',\n    'lady',\n    'lake',\n    'lamp',\n    'language',\n    'laptop',\n    'large',\n    'later',\n    'latin',\n    'laugh',\n    'laundry',\n    'lava',\n    'law',\n    'lawn',\n    'lawsuit',\n    'layer',\n    'lazy',\n    'leader',\n    'leaf',\n    'learn',\n    'leave',\n    'lecture',\n    'left',\n    'leg',\n    'legal',\n    'legend',\n    'leisure',\n    'lemon',\n    'lend',\n    'length',\n    'lens',\n    'leopard',\n    'lesson',\n    'letter',\n    'level',\n    'liar',\n    'liberty',\n    'library',\n    'license',\n    'life',\n    'lift',\n    'light',\n    'like',\n    'limb',\n    'limit',\n    'link',\n    'lion',\n    'liquid',\n    'list',\n    'little',\n    'live',\n    'lizard',\n    'load',\n    'loan',\n    'lobster',\n    'local',\n    'lock',\n    'logic',\n    'lonely',\n    'long',\n    'loop',\n    'lottery',\n    'loud',\n    'lounge',\n    'love',\n    'loyal',\n    'lucky',\n    'luggage',\n    'lumber',\n    'lunar',\n    'lunch',\n    'luxury',\n    'lyrics',\n    'machine',\n    'mad',\n    'magic',\n    'magnet',\n    'maid',\n    'mail',\n    'main',\n    'major',\n    'make',\n    'mammal',\n    'man',\n    'manage',\n    'mandate',\n    'mango',\n    'mansion',\n    'manual',\n    'maple',\n    'marble',\n    'march',\n    'margin',\n    'marine',\n    'market',\n    'marriage',\n    'mask',\n    'mass',\n    'master',\n    'match',\n    'material',\n    'math',\n    'matrix',\n    'matter',\n    'maximum',\n    'maze',\n    'meadow',\n    'mean',\n    'measure',\n    'meat',\n    'mechanic',\n    'medal',\n    'media',\n    'melody',\n    'melt',\n    'member',\n    'memory',\n    'mention',\n    'menu',\n    'mercy',\n    'merge',\n    'merit',\n    'merry',\n    'mesh',\n    'message',\n    'metal',\n    'method',\n    'middle',\n    'midnight',\n    'milk',\n    'million',\n    'mimic',\n    'mind',\n    'minimum',\n    'minor',\n    'minute',\n    'miracle',\n    'mirror',\n    'misery',\n    'miss',\n    'mistake',\n    'mix',\n    'mixed',\n    'mixture',\n    'mobile',\n    'model',\n    'modify',\n    'mom',\n    'moment',\n    'monitor',\n    'monkey',\n    'monster',\n    'month',\n    'moon',\n    'moral',\n    'more',\n    'morning',\n    'mosquito',\n    'mother',\n    'motion',\n    'motor',\n    'mountain',\n    'mouse',\n    'move',\n    'movie',\n    'much',\n    'muffin',\n    'mule',\n    'multiply',\n    'muscle',\n    'museum',\n    'mushroom',\n    'music',\n    'must',\n    'mutual',\n    'myself',\n    'mystery',\n    'myth',\n    'naive',\n    'name',\n    'napkin',\n    'narrow',\n    'nasty',\n    'nation',\n    'nature',\n    'near',\n    'neck',\n    'need',\n    'negative',\n    'neglect',\n    'neither',\n    'nephew',\n    'nerve',\n    'nest',\n    'net',\n    'network',\n    'neutral',\n    'never',\n    'news',\n    'next',\n    'nice',\n    'night',\n    'noble',\n    'noise',\n    'nominee',\n    'noodle',\n    'normal',\n    'north',\n    'nose',\n    'notable',\n    'note',\n    'nothing',\n    'notice',\n    'novel',\n    'now',\n    'nuclear',\n    'number',\n    'nurse',\n    'nut',\n    'oak',\n    'obey',\n    'object',\n    'oblige',\n    'obscure',\n    'observe',\n    'obtain',\n    'obvious',\n    'occur',\n    'ocean',\n    'october',\n    'odor',\n    'off',\n    'offer',\n    'office',\n    'often',\n    'oil',\n    'okay',\n    'old',\n    'olive',\n    'olympic',\n    'omit',\n    'once',\n    'one',\n    'onion',\n    'online',\n    'only',\n    'open',\n    'opera',\n    'opinion',\n    'oppose',\n    'option',\n    'orange',\n    'orbit',\n    'orchard',\n    'order',\n    'ordinary',\n    'organ',\n    'orient',\n    'original',\n    'orphan',\n    'ostrich',\n    'other',\n    'outdoor',\n    'outer',\n    'output',\n    'outside',\n    'oval',\n    'oven',\n    'over',\n    'own',\n    'owner',\n    'oxygen',\n    'oyster',\n    'ozone',\n    'pact',\n    'paddle',\n    'page',\n    'pair',\n    'palace',\n    'palm',\n    'panda',\n    'panel',\n    'panic',\n    'panther',\n    'paper',\n    'parade',\n    'parent',\n    'park',\n    'parrot',\n    'party',\n    'pass',\n    'patch',\n    'path',\n    'patient',\n    'patrol',\n    'pattern',\n    'pause',\n    'pave',\n    'payment',\n    'peace',\n    'peanut',\n    'pear',\n    'peasant',\n    'pelican',\n    'pen',\n    'penalty',\n    'pencil',\n    'people',\n    'pepper',\n    'perfect',\n    'permit',\n    'person',\n    'pet',\n    'phone',\n    'photo',\n    'phrase',\n    'physical',\n    'piano',\n    'picnic',\n    'picture',\n    'piece',\n    'pig',\n    'pigeon',\n    'pill',\n    'pilot',\n    'pink',\n    'pioneer',\n    'pipe',\n    'pistol',\n    'pitch',\n    'pizza',\n    'place',\n    'planet',\n    'plastic',\n    'plate',\n    'play',\n    'please',\n    'pledge',\n    'pluck',\n    'plug',\n    'plunge',\n    'poem',\n    'poet',\n    'point',\n    'polar',\n    'pole',\n    'police',\n    'pond',\n    'pony',\n    'pool',\n    'popular',\n    'portion',\n    'position',\n    'possible',\n    'post',\n    'potato',\n    'pottery',\n    'poverty',\n    'powder',\n    'power',\n    'practice',\n    'praise',\n    'predict',\n    'prefer',\n    'prepare',\n    'present',\n    'pretty',\n    'prevent',\n    'price',\n    'pride',\n    'primary',\n    'print',\n    'priority',\n    'prison',\n    'private',\n    'prize',\n    'problem',\n    'process',\n    'produce',\n    'profit',\n    'program',\n    'project',\n    'promote',\n    'proof',\n    'property',\n    'prosper',\n    'protect',\n    'proud',\n    'provide',\n    'public',\n    'pudding',\n    'pull',\n    'pulp',\n    'pulse',\n    'pumpkin',\n    'punch',\n    'pupil',\n    'puppy',\n    'purchase',\n    'purity',\n    'purpose',\n    'purse',\n    'push',\n    'put',\n    'puzzle',\n    'pyramid',\n    'quality',\n    'quantum',\n    'quarter',\n    'question',\n    'quick',\n    'quit',\n    'quiz',\n    'quote',\n    'rabbit',\n    'raccoon',\n    'race',\n    'rack',\n    'radar',\n    'radio',\n    'rail',\n    'rain',\n    'raise',\n    'rally',\n    'ramp',\n    'ranch',\n    'random',\n    'range',\n    'rapid',\n    'rare',\n    'rate',\n    'rather',\n    'raven',\n    'raw',\n    'razor',\n    'ready',\n    'real',\n    'reason',\n    'rebel',\n    'rebuild',\n    'recall',\n    'receive',\n    'recipe',\n    'record',\n    'recycle',\n    'reduce',\n    'reflect',\n    'reform',\n    'refuse',\n    'region',\n    'regret',\n    'regular',\n    'reject',\n    'relax',\n    'release',\n    'relief',\n    'rely',\n    'remain',\n    'remember',\n    'remind',\n    'remove',\n    'render',\n    'renew',\n    'rent',\n    'reopen',\n    'repair',\n    'repeat',\n    'replace',\n    'report',\n    'require',\n    'rescue',\n    'resemble',\n    'resist',\n    'resource',\n    'response',\n    'result',\n    'retire',\n    'retreat',\n    'return',\n    'reunion',\n    'reveal',\n    'review',\n    'reward',\n    'rhythm',\n    'rib',\n    'ribbon',\n    'rice',\n    'rich',\n    'ride',\n    'ridge',\n    'rifle',\n    'right',\n    'rigid',\n    'ring',\n    'riot',\n    'ripple',\n    'risk',\n    'ritual',\n    'rival',\n    'river',\n    'road',\n    'roast',\n    'robot',\n    'robust',\n    'rocket',\n    'romance',\n    'roof',\n    'rookie',\n    'room',\n    'rose',\n    'rotate',\n    'rough',\n    'round',\n    'route',\n    'royal',\n    'rubber',\n    'rude',\n    'rug',\n    'rule',\n    'run',\n    'runway',\n    'rural',\n    'sad',\n    'saddle',\n    'sadness',\n    'safe',\n    'sail',\n    'salad',\n    'salmon',\n    'salon',\n    'salt',\n    'salute',\n    'same',\n    'sample',\n    'sand',\n    'satisfy',\n    'satoshi',\n    'sauce',\n    'sausage',\n    'save',\n    'say',\n    'scale',\n    'scan',\n    'scare',\n    'scatter',\n    'scene',\n    'scheme',\n    'school',\n    'science',\n    'scissors',\n    'scorpion',\n    'scout',\n    'scrap',\n    'screen',\n    'script',\n    'scrub',\n    'sea',\n    'search',\n    'season',\n    'seat',\n    'second',\n    'secret',\n    'section',\n    'security',\n    'seed',\n    'seek',\n    'segment',\n    'select',\n    'sell',\n    'seminar',\n    'senior',\n    'sense',\n    'sentence',\n    'series',\n    'service',\n    'session',\n    'settle',\n    'setup',\n    'seven',\n    'shadow',\n    'shaft',\n    'shallow',\n    'share',\n    'shed',\n    'shell',\n    'sheriff',\n    'shield',\n    'shift',\n    'shine',\n    'ship',\n    'shiver',\n    'shock',\n    'shoe',\n    'shoot',\n    'shop',\n    'short',\n    'shoulder',\n    'shove',\n    'shrimp',\n    'shrug',\n    'shuffle',\n    'shy',\n    'sibling',\n    'sick',\n    'side',\n    'siege',\n    'sight',\n    'sign',\n    'silent',\n    'silk',\n    'silly',\n    'silver',\n    'similar',\n    'simple',\n    'since',\n    'sing',\n    'siren',\n    'sister',\n    'situate',\n    'six',\n    'size',\n    'skate',\n    'sketch',\n    'ski',\n    'skill',\n    'skin',\n    'skirt',\n    'skull',\n    'slab',\n    'slam',\n    'sleep',\n    'slender',\n    'slice',\n    'slide',\n    'slight',\n    'slim',\n    'slogan',\n    'slot',\n    'slow',\n    'slush',\n    'small',\n    'smart',\n    'smile',\n    'smoke',\n    'smooth',\n    'snack',\n    'snake',\n    'snap',\n    'sniff',\n    'snow',\n    'soap',\n    'soccer',\n    'social',\n    'sock',\n    'soda',\n    'soft',\n    'solar',\n    'soldier',\n    'solid',\n    'solution',\n    'solve',\n    'someone',\n    'song',\n    'soon',\n    'sorry',\n    'sort',\n    'soul',\n    'sound',\n    'soup',\n    'source',\n    'south',\n    'space',\n    'spare',\n    'spatial',\n    'spawn',\n    'speak',\n    'special',\n    'speed',\n    'spell',\n    'spend',\n    'sphere',\n    'spice',\n    'spider',\n    'spike',\n    'spin',\n    'spirit',\n    'split',\n    'spoil',\n    'sponsor',\n    'spoon',\n    'sport',\n    'spot',\n    'spray',\n    'spread',\n    'spring',\n    'spy',\n    'square',\n    'squeeze',\n    'squirrel',\n    'stable',\n    'stadium',\n    'staff',\n    'stage',\n    'stairs',\n    'stamp',\n    'stand',\n    'start',\n    'state',\n    'stay',\n    'steak',\n    'steel',\n    'stem',\n    'step',\n    'stereo',\n    'stick',\n    'still',\n    'sting',\n    'stock',\n    'stomach',\n    'stone',\n    'stool',\n    'story',\n    'stove',\n    'strategy',\n    'street',\n    'strike',\n    'strong',\n    'struggle',\n    'student',\n    'stuff',\n    'stumble',\n    'style',\n    'subject',\n    'submit',\n    'subway',\n    'success',\n    'such',\n    'sudden',\n    'suffer',\n    'sugar',\n    'suggest',\n    'suit',\n    'summer',\n    'sun',\n    'sunny',\n    'sunset',\n    'super',\n    'supply',\n    'supreme',\n    'sure',\n    'surface',\n    'surge',\n    'surprise',\n    'surround',\n    'survey',\n    'suspect',\n    'sustain',\n    'swallow',\n    'swamp',\n    'swap',\n    'swarm',\n    'swear',\n    'sweet',\n    'swift',\n    'swim',\n    'swing',\n    'switch',\n    'sword',\n    'symbol',\n    'symptom',\n    'syrup',\n    'system',\n    'table',\n    'tackle',\n    'tag',\n    'tail',\n    'talent',\n    'talk',\n    'tank',\n    'tape',\n    'target',\n    'task',\n    'taste',\n    'tattoo',\n    'taxi',\n    'teach',\n    'team',\n    'tell',\n    'ten',\n    'tenant',\n    'tennis',\n    'tent',\n    'term',\n    'test',\n    'text',\n    'thank',\n    'that',\n    'theme',\n    'then',\n    'theory',\n    'there',\n    'they',\n    'thing',\n    'this',\n    'thought',\n    'three',\n    'thrive',\n    'throw',\n    'thumb',\n    'thunder',\n    'ticket',\n    'tide',\n    'tiger',\n    'tilt',\n    'timber',\n    'time',\n    'tiny',\n    'tip',\n    'tired',\n    'tissue',\n    'title',\n    'toast',\n    'tobacco',\n    'today',\n    'toddler',\n    'toe',\n    'together',\n    'toilet',\n    'token',\n    'tomato',\n    'tomorrow',\n    'tone',\n    'tongue',\n    'tonight',\n    'tool',\n    'tooth',\n    'top',\n    'topic',\n    'topple',\n    'torch',\n    'tornado',\n    'tortoise',\n    'toss',\n    'total',\n    'tourist',\n    'toward',\n    'tower',\n    'town',\n    'toy',\n    'track',\n    'trade',\n    'traffic',\n    'tragic',\n    'train',\n    'transfer',\n    'trap',\n    'trash',\n    'travel',\n    'tray',\n    'treat',\n    'tree',\n    'trend',\n    'trial',\n    'tribe',\n    'trick',\n    'trigger',\n    'trim',\n    'trip',\n    'trophy',\n    'trouble',\n    'truck',\n    'true',\n    'truly',\n    'trumpet',\n    'trust',\n    'truth',\n    'try',\n    'tube',\n    'tuition',\n    'tumble',\n    'tuna',\n    'tunnel',\n    'turkey',\n    'turn',\n    'turtle',\n    'twelve',\n    'twenty',\n    'twice',\n    'twin',\n    'twist',\n    'two',\n    'type',\n    'typical',\n    'ugly',\n    'umbrella',\n    'unable',\n    'unaware',\n    'uncle',\n    'uncover',\n    'under',\n    'undo',\n    'unfair',\n    'unfold',\n    'unhappy',\n    'uniform',\n    'unique',\n    'unit',\n    'universe',\n    'unknown',\n    'unlock',\n    'until',\n    'unusual',\n    'unveil',\n    'update',\n    'upgrade',\n    'uphold',\n    'upon',\n    'upper',\n    'upset',\n    'urban',\n    'urge',\n    'usage',\n    'use',\n    'used',\n    'useful',\n    'useless',\n    'usual',\n    'utility',\n    'vacant',\n    'vacuum',\n    'vague',\n    'valid',\n    'valley',\n    'valve',\n    'van',\n    'vanish',\n    'vapor',\n    'various',\n    'vast',\n    'vault',\n    'vehicle',\n    'velvet',\n    'vendor',\n    'venture',\n    'venue',\n    'verb',\n    'verify',\n    'version',\n    'very',\n    'vessel',\n    'veteran',\n    'viable',\n    'vibrant',\n    'vicious',\n    'victory',\n    'video',\n    'view',\n    'village',\n    'vintage',\n    'violin',\n    'virtual',\n    'virus',\n    'visa',\n    'visit',\n    'visual',\n    'vital',\n    'vivid',\n    'vocal',\n    'voice',\n    'void',\n    'volcano',\n    'volume',\n    'vote',\n    'voyage',\n    'wage',\n    'wagon',\n    'wait',\n    'walk',\n    'wall',\n    'walnut',\n    'want',\n    'warfare',\n    'warm',\n    'warrior',\n    'wash',\n    'wasp',\n    'waste',\n    'water',\n    'wave',\n    'way',\n    'wealth',\n    'weapon',\n    'wear',\n    'weasel',\n    'weather',\n    'web',\n    'wedding',\n    'weekend',\n    'weird',\n    'welcome',\n    'west',\n    'wet',\n    'whale',\n    'what',\n    'wheat',\n    'wheel',\n    'when',\n    'where',\n    'whip',\n    'whisper',\n    'wide',\n    'width',\n    'wife',\n    'wild',\n    'will',\n    'win',\n    'window',\n    'wine',\n    'wing',\n    'wink',\n    'winner',\n    'winter',\n    'wire',\n    'wisdom',\n    'wise',\n    'wish',\n    'witness',\n    'wolf',\n    'woman',\n    'wonder',\n    'wood',\n    'wool',\n    'word',\n    'work',\n    'world',\n    'worry',\n    'worth',\n    'wrap',\n    'wreck',\n    'wrestle',\n    'wrist',\n    'write',\n    'wrong',\n    'yard',\n    'year',\n    'yellow',\n    'you',\n    'young',\n    'youth',\n    'zebra',\n    'zero',\n    'zone',\n    'zoo'\n];\n//# sourceMappingURL=english.js.map","// SPDX-License-Identifier: MIT\nexport const WORDLIST = [\n    'abaisser',\n    'abandon',\n    'abdiquer',\n    'abeille',\n    'abolir',\n    'aborder',\n    'aboutir',\n    'aboyer',\n    'abrasif',\n    'abreuver',\n    'abriter',\n    'abroger',\n    'abrupt',\n    'absence',\n    'absolu',\n    'absurde',\n    'abusif',\n    'abyssal',\n    'académie',\n    'acajou',\n    'acarien',\n    'accabler',\n    'accepter',\n    'acclamer',\n    'accolade',\n    'accroche',\n    'accuser',\n    'acerbe',\n    'achat',\n    'acheter',\n    'aciduler',\n    'acier',\n    'acompte',\n    'acquérir',\n    'acronyme',\n    'acteur',\n    'actif',\n    'actuel',\n    'adepte',\n    'adéquat',\n    'adhésif',\n    'adjectif',\n    'adjuger',\n    'admettre',\n    'admirer',\n    'adopter',\n    'adorer',\n    'adoucir',\n    'adresse',\n    'adroit',\n    'adulte',\n    'adverbe',\n    'aérer',\n    'aéronef',\n    'affaire',\n    'affecter',\n    'affiche',\n    'affreux',\n    'affubler',\n    'agacer',\n    'agencer',\n    'agile',\n    'agiter',\n    'agrafer',\n    'agréable',\n    'agrume',\n    'aider',\n    'aiguille',\n    'ailier',\n    'aimable',\n    'aisance',\n    'ajouter',\n    'ajuster',\n    'alarmer',\n    'alchimie',\n    'alerte',\n    'algèbre',\n    'algue',\n    'aliéner',\n    'aliment',\n    'alléger',\n    'alliage',\n    'allouer',\n    'allumer',\n    'alourdir',\n    'alpaga',\n    'altesse',\n    'alvéole',\n    'amateur',\n    'ambigu',\n    'ambre',\n    'aménager',\n    'amertume',\n    'amidon',\n    'amiral',\n    'amorcer',\n    'amour',\n    'amovible',\n    'amphibie',\n    'ampleur',\n    'amusant',\n    'analyse',\n    'anaphore',\n    'anarchie',\n    'anatomie',\n    'ancien',\n    'anéantir',\n    'angle',\n    'angoisse',\n    'anguleux',\n    'animal',\n    'annexer',\n    'annonce',\n    'annuel',\n    'anodin',\n    'anomalie',\n    'anonyme',\n    'anormal',\n    'antenne',\n    'antidote',\n    'anxieux',\n    'apaiser',\n    'apéritif',\n    'aplanir',\n    'apologie',\n    'appareil',\n    'appeler',\n    'apporter',\n    'appuyer',\n    'aquarium',\n    'aqueduc',\n    'arbitre',\n    'arbuste',\n    'ardeur',\n    'ardoise',\n    'argent',\n    'arlequin',\n    'armature',\n    'armement',\n    'armoire',\n    'armure',\n    'arpenter',\n    'arracher',\n    'arriver',\n    'arroser',\n    'arsenic',\n    'artériel',\n    'article',\n    'aspect',\n    'asphalte',\n    'aspirer',\n    'assaut',\n    'asservir',\n    'assiette',\n    'associer',\n    'assurer',\n    'asticot',\n    'astre',\n    'astuce',\n    'atelier',\n    'atome',\n    'atrium',\n    'atroce',\n    'attaque',\n    'attentif',\n    'attirer',\n    'attraper',\n    'aubaine',\n    'auberge',\n    'audace',\n    'audible',\n    'augurer',\n    'aurore',\n    'automne',\n    'autruche',\n    'avaler',\n    'avancer',\n    'avarice',\n    'avenir',\n    'averse',\n    'aveugle',\n    'aviateur',\n    'avide',\n    'avion',\n    'aviser',\n    'avoine',\n    'avouer',\n    'avril',\n    'axial',\n    'axiome',\n    'badge',\n    'bafouer',\n    'bagage',\n    'baguette',\n    'baignade',\n    'balancer',\n    'balcon',\n    'baleine',\n    'balisage',\n    'bambin',\n    'bancaire',\n    'bandage',\n    'banlieue',\n    'bannière',\n    'banquier',\n    'barbier',\n    'baril',\n    'baron',\n    'barque',\n    'barrage',\n    'bassin',\n    'bastion',\n    'bataille',\n    'bateau',\n    'batterie',\n    'baudrier',\n    'bavarder',\n    'belette',\n    'bélier',\n    'belote',\n    'bénéfice',\n    'berceau',\n    'berger',\n    'berline',\n    'bermuda',\n    'besace',\n    'besogne',\n    'bétail',\n    'beurre',\n    'biberon',\n    'bicycle',\n    'bidule',\n    'bijou',\n    'bilan',\n    'bilingue',\n    'billard',\n    'binaire',\n    'biologie',\n    'biopsie',\n    'biotype',\n    'biscuit',\n    'bison',\n    'bistouri',\n    'bitume',\n    'bizarre',\n    'blafard',\n    'blague',\n    'blanchir',\n    'blessant',\n    'blinder',\n    'blond',\n    'bloquer',\n    'blouson',\n    'bobard',\n    'bobine',\n    'boire',\n    'boiser',\n    'bolide',\n    'bonbon',\n    'bondir',\n    'bonheur',\n    'bonifier',\n    'bonus',\n    'bordure',\n    'borne',\n    'botte',\n    'boucle',\n    'boueux',\n    'bougie',\n    'boulon',\n    'bouquin',\n    'bourse',\n    'boussole',\n    'boutique',\n    'boxeur',\n    'branche',\n    'brasier',\n    'brave',\n    'brebis',\n    'brèche',\n    'breuvage',\n    'bricoler',\n    'brigade',\n    'brillant',\n    'brioche',\n    'brique',\n    'brochure',\n    'broder',\n    'bronzer',\n    'brousse',\n    'broyeur',\n    'brume',\n    'brusque',\n    'brutal',\n    'bruyant',\n    'buffle',\n    'buisson',\n    'bulletin',\n    'bureau',\n    'burin',\n    'bustier',\n    'butiner',\n    'butoir',\n    'buvable',\n    'buvette',\n    'cabanon',\n    'cabine',\n    'cachette',\n    'cadeau',\n    'cadre',\n    'caféine',\n    'caillou',\n    'caisson',\n    'calculer',\n    'calepin',\n    'calibre',\n    'calmer',\n    'calomnie',\n    'calvaire',\n    'camarade',\n    'caméra',\n    'camion',\n    'campagne',\n    'canal',\n    'caneton',\n    'canon',\n    'cantine',\n    'canular',\n    'capable',\n    'caporal',\n    'caprice',\n    'capsule',\n    'capter',\n    'capuche',\n    'carabine',\n    'carbone',\n    'caresser',\n    'caribou',\n    'carnage',\n    'carotte',\n    'carreau',\n    'carton',\n    'cascade',\n    'casier',\n    'casque',\n    'cassure',\n    'causer',\n    'caution',\n    'cavalier',\n    'caverne',\n    'caviar',\n    'cédille',\n    'ceinture',\n    'céleste',\n    'cellule',\n    'cendrier',\n    'censurer',\n    'central',\n    'cercle',\n    'cérébral',\n    'cerise',\n    'cerner',\n    'cerveau',\n    'cesser',\n    'chagrin',\n    'chaise',\n    'chaleur',\n    'chambre',\n    'chance',\n    'chapitre',\n    'charbon',\n    'chasseur',\n    'chaton',\n    'chausson',\n    'chavirer',\n    'chemise',\n    'chenille',\n    'chéquier',\n    'chercher',\n    'cheval',\n    'chien',\n    'chiffre',\n    'chignon',\n    'chimère',\n    'chiot',\n    'chlorure',\n    'chocolat',\n    'choisir',\n    'chose',\n    'chouette',\n    'chrome',\n    'chute',\n    'cigare',\n    'cigogne',\n    'cimenter',\n    'cinéma',\n    'cintrer',\n    'circuler',\n    'cirer',\n    'cirque',\n    'citerne',\n    'citoyen',\n    'citron',\n    'civil',\n    'clairon',\n    'clameur',\n    'claquer',\n    'classe',\n    'clavier',\n    'client',\n    'cligner',\n    'climat',\n    'clivage',\n    'cloche',\n    'clonage',\n    'cloporte',\n    'cobalt',\n    'cobra',\n    'cocasse',\n    'cocotier',\n    'coder',\n    'codifier',\n    'coffre',\n    'cogner',\n    'cohésion',\n    'coiffer',\n    'coincer',\n    'colère',\n    'colibri',\n    'colline',\n    'colmater',\n    'colonel',\n    'combat',\n    'comédie',\n    'commande',\n    'compact',\n    'concert',\n    'conduire',\n    'confier',\n    'congeler',\n    'connoter',\n    'consonne',\n    'contact',\n    'convexe',\n    'copain',\n    'copie',\n    'corail',\n    'corbeau',\n    'cordage',\n    'corniche',\n    'corpus',\n    'correct',\n    'cortège',\n    'cosmique',\n    'costume',\n    'coton',\n    'coude',\n    'coupure',\n    'courage',\n    'couteau',\n    'couvrir',\n    'coyote',\n    'crabe',\n    'crainte',\n    'cravate',\n    'crayon',\n    'créature',\n    'créditer',\n    'crémeux',\n    'creuser',\n    'crevette',\n    'cribler',\n    'crier',\n    'cristal',\n    'critère',\n    'croire',\n    'croquer',\n    'crotale',\n    'crucial',\n    'cruel',\n    'crypter',\n    'cubique',\n    'cueillir',\n    'cuillère',\n    'cuisine',\n    'cuivre',\n    'culminer',\n    'cultiver',\n    'cumuler',\n    'cupide',\n    'curatif',\n    'curseur',\n    'cyanure',\n    'cycle',\n    'cylindre',\n    'cynique',\n    'daigner',\n    'damier',\n    'danger',\n    'danseur',\n    'dauphin',\n    'débattre',\n    'débiter',\n    'déborder',\n    'débrider',\n    'débutant',\n    'décaler',\n    'décembre',\n    'déchirer',\n    'décider',\n    'déclarer',\n    'décorer',\n    'décrire',\n    'décupler',\n    'dédale',\n    'déductif',\n    'déesse',\n    'défensif',\n    'défiler',\n    'défrayer',\n    'dégager',\n    'dégivrer',\n    'déglutir',\n    'dégrafer',\n    'déjeuner',\n    'délice',\n    'déloger',\n    'demander',\n    'demeurer',\n    'démolir',\n    'dénicher',\n    'dénouer',\n    'dentelle',\n    'dénuder',\n    'départ',\n    'dépenser',\n    'déphaser',\n    'déplacer',\n    'déposer',\n    'déranger',\n    'dérober',\n    'désastre',\n    'descente',\n    'désert',\n    'désigner',\n    'désobéir',\n    'dessiner',\n    'destrier',\n    'détacher',\n    'détester',\n    'détourer',\n    'détresse',\n    'devancer',\n    'devenir',\n    'deviner',\n    'devoir',\n    'diable',\n    'dialogue',\n    'diamant',\n    'dicter',\n    'différer',\n    'digérer',\n    'digital',\n    'digne',\n    'diluer',\n    'dimanche',\n    'diminuer',\n    'dioxyde',\n    'directif',\n    'diriger',\n    'discuter',\n    'disposer',\n    'dissiper',\n    'distance',\n    'divertir',\n    'diviser',\n    'docile',\n    'docteur',\n    'dogme',\n    'doigt',\n    'domaine',\n    'domicile',\n    'dompter',\n    'donateur',\n    'donjon',\n    'donner',\n    'dopamine',\n    'dortoir',\n    'dorure',\n    'dosage',\n    'doseur',\n    'dossier',\n    'dotation',\n    'douanier',\n    'double',\n    'douceur',\n    'douter',\n    'doyen',\n    'dragon',\n    'draper',\n    'dresser',\n    'dribbler',\n    'droiture',\n    'duperie',\n    'duplexe',\n    'durable',\n    'durcir',\n    'dynastie',\n    'éblouir',\n    'écarter',\n    'écharpe',\n    'échelle',\n    'éclairer',\n    'éclipse',\n    'éclore',\n    'écluse',\n    'école',\n    'économie',\n    'écorce',\n    'écouter',\n    'écraser',\n    'écrémer',\n    'écrivain',\n    'écrou',\n    'écume',\n    'écureuil',\n    'édifier',\n    'éduquer',\n    'effacer',\n    'effectif',\n    'effigie',\n    'effort',\n    'effrayer',\n    'effusion',\n    'égaliser',\n    'égarer',\n    'éjecter',\n    'élaborer',\n    'élargir',\n    'électron',\n    'élégant',\n    'éléphant',\n    'élève',\n    'éligible',\n    'élitisme',\n    'éloge',\n    'élucider',\n    'éluder',\n    'emballer',\n    'embellir',\n    'embryon',\n    'émeraude',\n    'émission',\n    'emmener',\n    'émotion',\n    'émouvoir',\n    'empereur',\n    'employer',\n    'emporter',\n    'emprise',\n    'émulsion',\n    'encadrer',\n    'enchère',\n    'enclave',\n    'encoche',\n    'endiguer',\n    'endosser',\n    'endroit',\n    'enduire',\n    'énergie',\n    'enfance',\n    'enfermer',\n    'enfouir',\n    'engager',\n    'engin',\n    'englober',\n    'énigme',\n    'enjamber',\n    'enjeu',\n    'enlever',\n    'ennemi',\n    'ennuyeux',\n    'enrichir',\n    'enrobage',\n    'enseigne',\n    'entasser',\n    'entendre',\n    'entier',\n    'entourer',\n    'entraver',\n    'énumérer',\n    'envahir',\n    'enviable',\n    'envoyer',\n    'enzyme',\n    'éolien',\n    'épaissir',\n    'épargne',\n    'épatant',\n    'épaule',\n    'épicerie',\n    'épidémie',\n    'épier',\n    'épilogue',\n    'épine',\n    'épisode',\n    'épitaphe',\n    'époque',\n    'épreuve',\n    'éprouver',\n    'épuisant',\n    'équerre',\n    'équipe',\n    'ériger',\n    'érosion',\n    'erreur',\n    'éruption',\n    'escalier',\n    'espadon',\n    'espèce',\n    'espiègle',\n    'espoir',\n    'esprit',\n    'esquiver',\n    'essayer',\n    'essence',\n    'essieu',\n    'essorer',\n    'estime',\n    'estomac',\n    'estrade',\n    'étagère',\n    'étaler',\n    'étanche',\n    'étatique',\n    'éteindre',\n    'étendoir',\n    'éternel',\n    'éthanol',\n    'éthique',\n    'ethnie',\n    'étirer',\n    'étoffer',\n    'étoile',\n    'étonnant',\n    'étourdir',\n    'étrange',\n    'étroit',\n    'étude',\n    'euphorie',\n    'évaluer',\n    'évasion',\n    'éventail',\n    'évidence',\n    'éviter',\n    'évolutif',\n    'évoquer',\n    'exact',\n    'exagérer',\n    'exaucer',\n    'exceller',\n    'excitant',\n    'exclusif',\n    'excuse',\n    'exécuter',\n    'exemple',\n    'exercer',\n    'exhaler',\n    'exhorter',\n    'exigence',\n    'exiler',\n    'exister',\n    'exotique',\n    'expédier',\n    'explorer',\n    'exposer',\n    'exprimer',\n    'exquis',\n    'extensif',\n    'extraire',\n    'exulter',\n    'fable',\n    'fabuleux',\n    'facette',\n    'facile',\n    'facture',\n    'faiblir',\n    'falaise',\n    'fameux',\n    'famille',\n    'farceur',\n    'farfelu',\n    'farine',\n    'farouche',\n    'fasciner',\n    'fatal',\n    'fatigue',\n    'faucon',\n    'fautif',\n    'faveur',\n    'favori',\n    'fébrile',\n    'féconder',\n    'fédérer',\n    'félin',\n    'femme',\n    'fémur',\n    'fendoir',\n    'féodal',\n    'fermer',\n    'féroce',\n    'ferveur',\n    'festival',\n    'feuille',\n    'feutre',\n    'février',\n    'fiasco',\n    'ficeler',\n    'fictif',\n    'fidèle',\n    'figure',\n    'filature',\n    'filetage',\n    'filière',\n    'filleul',\n    'filmer',\n    'filou',\n    'filtrer',\n    'financer',\n    'finir',\n    'fiole',\n    'firme',\n    'fissure',\n    'fixer',\n    'flairer',\n    'flamme',\n    'flasque',\n    'flatteur',\n    'fléau',\n    'flèche',\n    'fleur',\n    'flexion',\n    'flocon',\n    'flore',\n    'fluctuer',\n    'fluide',\n    'fluvial',\n    'folie',\n    'fonderie',\n    'fongible',\n    'fontaine',\n    'forcer',\n    'forgeron',\n    'formuler',\n    'fortune',\n    'fossile',\n    'foudre',\n    'fougère',\n    'fouiller',\n    'foulure',\n    'fourmi',\n    'fragile',\n    'fraise',\n    'franchir',\n    'frapper',\n    'frayeur',\n    'frégate',\n    'freiner',\n    'frelon',\n    'frémir',\n    'frénésie',\n    'frère',\n    'friable',\n    'friction',\n    'frisson',\n    'frivole',\n    'froid',\n    'fromage',\n    'frontal',\n    'frotter',\n    'fruit',\n    'fugitif',\n    'fuite',\n    'fureur',\n    'furieux',\n    'furtif',\n    'fusion',\n    'futur',\n    'gagner',\n    'galaxie',\n    'galerie',\n    'gambader',\n    'garantir',\n    'gardien',\n    'garnir',\n    'garrigue',\n    'gazelle',\n    'gazon',\n    'géant',\n    'gélatine',\n    'gélule',\n    'gendarme',\n    'général',\n    'génie',\n    'genou',\n    'gentil',\n    'géologie',\n    'géomètre',\n    'géranium',\n    'germe',\n    'gestuel',\n    'geyser',\n    'gibier',\n    'gicler',\n    'girafe',\n    'givre',\n    'glace',\n    'glaive',\n    'glisser',\n    'globe',\n    'gloire',\n    'glorieux',\n    'golfeur',\n    'gomme',\n    'gonfler',\n    'gorge',\n    'gorille',\n    'goudron',\n    'gouffre',\n    'goulot',\n    'goupille',\n    'gourmand',\n    'goutte',\n    'graduel',\n    'graffiti',\n    'graine',\n    'grand',\n    'grappin',\n    'gratuit',\n    'gravir',\n    'grenat',\n    'griffure',\n    'griller',\n    'grimper',\n    'grogner',\n    'gronder',\n    'grotte',\n    'groupe',\n    'gruger',\n    'grutier',\n    'gruyère',\n    'guépard',\n    'guerrier',\n    'guide',\n    'guimauve',\n    'guitare',\n    'gustatif',\n    'gymnaste',\n    'gyrostat',\n    'habitude',\n    'hachoir',\n    'halte',\n    'hameau',\n    'hangar',\n    'hanneton',\n    'haricot',\n    'harmonie',\n    'harpon',\n    'hasard',\n    'hélium',\n    'hématome',\n    'herbe',\n    'hérisson',\n    'hermine',\n    'héron',\n    'hésiter',\n    'heureux',\n    'hiberner',\n    'hibou',\n    'hilarant',\n    'histoire',\n    'hiver',\n    'homard',\n    'hommage',\n    'homogène',\n    'honneur',\n    'honorer',\n    'honteux',\n    'horde',\n    'horizon',\n    'horloge',\n    'hormone',\n    'horrible',\n    'houleux',\n    'housse',\n    'hublot',\n    'huileux',\n    'humain',\n    'humble',\n    'humide',\n    'humour',\n    'hurler',\n    'hydromel',\n    'hygiène',\n    'hymne',\n    'hypnose',\n    'idylle',\n    'ignorer',\n    'iguane',\n    'illicite',\n    'illusion',\n    'image',\n    'imbiber',\n    'imiter',\n    'immense',\n    'immobile',\n    'immuable',\n    'impact',\n    'impérial',\n    'implorer',\n    'imposer',\n    'imprimer',\n    'imputer',\n    'incarner',\n    'incendie',\n    'incident',\n    'incliner',\n    'incolore',\n    'indexer',\n    'indice',\n    'inductif',\n    'inédit',\n    'ineptie',\n    'inexact',\n    'infini',\n    'infliger',\n    'informer',\n    'infusion',\n    'ingérer',\n    'inhaler',\n    'inhiber',\n    'injecter',\n    'injure',\n    'innocent',\n    'inoculer',\n    'inonder',\n    'inscrire',\n    'insecte',\n    'insigne',\n    'insolite',\n    'inspirer',\n    'instinct',\n    'insulter',\n    'intact',\n    'intense',\n    'intime',\n    'intrigue',\n    'intuitif',\n    'inutile',\n    'invasion',\n    'inventer',\n    'inviter',\n    'invoquer',\n    'ironique',\n    'irradier',\n    'irréel',\n    'irriter',\n    'isoler',\n    'ivoire',\n    'ivresse',\n    'jaguar',\n    'jaillir',\n    'jambe',\n    'janvier',\n    'jardin',\n    'jauger',\n    'jaune',\n    'javelot',\n    'jetable',\n    'jeton',\n    'jeudi',\n    'jeunesse',\n    'joindre',\n    'joncher',\n    'jongler',\n    'joueur',\n    'jouissif',\n    'journal',\n    'jovial',\n    'joyau',\n    'joyeux',\n    'jubiler',\n    'jugement',\n    'junior',\n    'jupon',\n    'juriste',\n    'justice',\n    'juteux',\n    'juvénile',\n    'kayak',\n    'kimono',\n    'kiosque',\n    'label',\n    'labial',\n    'labourer',\n    'lacérer',\n    'lactose',\n    'lagune',\n    'laine',\n    'laisser',\n    'laitier',\n    'lambeau',\n    'lamelle',\n    'lampe',\n    'lanceur',\n    'langage',\n    'lanterne',\n    'lapin',\n    'largeur',\n    'larme',\n    'laurier',\n    'lavabo',\n    'lavoir',\n    'lecture',\n    'légal',\n    'léger',\n    'légume',\n    'lessive',\n    'lettre',\n    'levier',\n    'lexique',\n    'lézard',\n    'liasse',\n    'libérer',\n    'libre',\n    'licence',\n    'licorne',\n    'liège',\n    'lièvre',\n    'ligature',\n    'ligoter',\n    'ligue',\n    'limer',\n    'limite',\n    'limonade',\n    'limpide',\n    'linéaire',\n    'lingot',\n    'lionceau',\n    'liquide',\n    'lisière',\n    'lister',\n    'lithium',\n    'litige',\n    'littoral',\n    'livreur',\n    'logique',\n    'lointain',\n    'loisir',\n    'lombric',\n    'loterie',\n    'louer',\n    'lourd',\n    'loutre',\n    'louve',\n    'loyal',\n    'lubie',\n    'lucide',\n    'lucratif',\n    'lueur',\n    'lugubre',\n    'luisant',\n    'lumière',\n    'lunaire',\n    'lundi',\n    'luron',\n    'lutter',\n    'luxueux',\n    'machine',\n    'magasin',\n    'magenta',\n    'magique',\n    'maigre',\n    'maillon',\n    'maintien',\n    'mairie',\n    'maison',\n    'majorer',\n    'malaxer',\n    'maléfice',\n    'malheur',\n    'malice',\n    'mallette',\n    'mammouth',\n    'mandater',\n    'maniable',\n    'manquant',\n    'manteau',\n    'manuel',\n    'marathon',\n    'marbre',\n    'marchand',\n    'mardi',\n    'maritime',\n    'marqueur',\n    'marron',\n    'marteler',\n    'mascotte',\n    'massif',\n    'matériel',\n    'matière',\n    'matraque',\n    'maudire',\n    'maussade',\n    'mauve',\n    'maximal',\n    'méchant',\n    'méconnu',\n    'médaille',\n    'médecin',\n    'méditer',\n    'méduse',\n    'meilleur',\n    'mélange',\n    'mélodie',\n    'membre',\n    'mémoire',\n    'menacer',\n    'mener',\n    'menhir',\n    'mensonge',\n    'mentor',\n    'mercredi',\n    'mérite',\n    'merle',\n    'messager',\n    'mesure',\n    'métal',\n    'météore',\n    'méthode',\n    'métier',\n    'meuble',\n    'miauler',\n    'microbe',\n    'miette',\n    'mignon',\n    'migrer',\n    'milieu',\n    'million',\n    'mimique',\n    'mince',\n    'minéral',\n    'minimal',\n    'minorer',\n    'minute',\n    'miracle',\n    'miroiter',\n    'missile',\n    'mixte',\n    'mobile',\n    'moderne',\n    'moelleux',\n    'mondial',\n    'moniteur',\n    'monnaie',\n    'monotone',\n    'monstre',\n    'montagne',\n    'monument',\n    'moqueur',\n    'morceau',\n    'morsure',\n    'mortier',\n    'moteur',\n    'motif',\n    'mouche',\n    'moufle',\n    'moulin',\n    'mousson',\n    'mouton',\n    'mouvant',\n    'multiple',\n    'munition',\n    'muraille',\n    'murène',\n    'murmure',\n    'muscle',\n    'muséum',\n    'musicien',\n    'mutation',\n    'muter',\n    'mutuel',\n    'myriade',\n    'myrtille',\n    'mystère',\n    'mythique',\n    'nageur',\n    'nappe',\n    'narquois',\n    'narrer',\n    'natation',\n    'nation',\n    'nature',\n    'naufrage',\n    'nautique',\n    'navire',\n    'nébuleux',\n    'nectar',\n    'néfaste',\n    'négation',\n    'négliger',\n    'négocier',\n    'neige',\n    'nerveux',\n    'nettoyer',\n    'neurone',\n    'neutron',\n    'neveu',\n    'niche',\n    'nickel',\n    'nitrate',\n    'niveau',\n    'noble',\n    'nocif',\n    'nocturne',\n    'noirceur',\n    'noisette',\n    'nomade',\n    'nombreux',\n    'nommer',\n    'normatif',\n    'notable',\n    'notifier',\n    'notoire',\n    'nourrir',\n    'nouveau',\n    'novateur',\n    'novembre',\n    'novice',\n    'nuage',\n    'nuancer',\n    'nuire',\n    'nuisible',\n    'numéro',\n    'nuptial',\n    'nuque',\n    'nutritif',\n    'obéir',\n    'objectif',\n    'obliger',\n    'obscur',\n    'observer',\n    'obstacle',\n    'obtenir',\n    'obturer',\n    'occasion',\n    'occuper',\n    'océan',\n    'octobre',\n    'octroyer',\n    'octupler',\n    'oculaire',\n    'odeur',\n    'odorant',\n    'offenser',\n    'officier',\n    'offrir',\n    'ogive',\n    'oiseau',\n    'oisillon',\n    'olfactif',\n    'olivier',\n    'ombrage',\n    'omettre',\n    'onctueux',\n    'onduler',\n    'onéreux',\n    'onirique',\n    'opale',\n    'opaque',\n    'opérer',\n    'opinion',\n    'opportun',\n    'opprimer',\n    'opter',\n    'optique',\n    'orageux',\n    'orange',\n    'orbite',\n    'ordonner',\n    'oreille',\n    'organe',\n    'orgueil',\n    'orifice',\n    'ornement',\n    'orque',\n    'ortie',\n    'osciller',\n    'osmose',\n    'ossature',\n    'otarie',\n    'ouragan',\n    'ourson',\n    'outil',\n    'outrager',\n    'ouvrage',\n    'ovation',\n    'oxyde',\n    'oxygène',\n    'ozone',\n    'paisible',\n    'palace',\n    'palmarès',\n    'palourde',\n    'palper',\n    'panache',\n    'panda',\n    'pangolin',\n    'paniquer',\n    'panneau',\n    'panorama',\n    'pantalon',\n    'papaye',\n    'papier',\n    'papoter',\n    'papyrus',\n    'paradoxe',\n    'parcelle',\n    'paresse',\n    'parfumer',\n    'parler',\n    'parole',\n    'parrain',\n    'parsemer',\n    'partager',\n    'parure',\n    'parvenir',\n    'passion',\n    'pastèque',\n    'paternel',\n    'patience',\n    'patron',\n    'pavillon',\n    'pavoiser',\n    'payer',\n    'paysage',\n    'peigne',\n    'peintre',\n    'pelage',\n    'pélican',\n    'pelle',\n    'pelouse',\n    'peluche',\n    'pendule',\n    'pénétrer',\n    'pénible',\n    'pensif',\n    'pénurie',\n    'pépite',\n    'péplum',\n    'perdrix',\n    'perforer',\n    'période',\n    'permuter',\n    'perplexe',\n    'persil',\n    'perte',\n    'peser',\n    'pétale',\n    'petit',\n    'pétrir',\n    'peuple',\n    'pharaon',\n    'phobie',\n    'phoque',\n    'photon',\n    'phrase',\n    'physique',\n    'piano',\n    'pictural',\n    'pièce',\n    'pierre',\n    'pieuvre',\n    'pilote',\n    'pinceau',\n    'pipette',\n    'piquer',\n    'pirogue',\n    'piscine',\n    'piston',\n    'pivoter',\n    'pixel',\n    'pizza',\n    'placard',\n    'plafond',\n    'plaisir',\n    'planer',\n    'plaque',\n    'plastron',\n    'plateau',\n    'pleurer',\n    'plexus',\n    'pliage',\n    'plomb',\n    'plonger',\n    'pluie',\n    'plumage',\n    'pochette',\n    'poésie',\n    'poète',\n    'pointe',\n    'poirier',\n    'poisson',\n    'poivre',\n    'polaire',\n    'policier',\n    'pollen',\n    'polygone',\n    'pommade',\n    'pompier',\n    'ponctuel',\n    'pondérer',\n    'poney',\n    'portique',\n    'position',\n    'posséder',\n    'posture',\n    'potager',\n    'poteau',\n    'potion',\n    'pouce',\n    'poulain',\n    'poumon',\n    'pourpre',\n    'poussin',\n    'pouvoir',\n    'prairie',\n    'pratique',\n    'précieux',\n    'prédire',\n    'préfixe',\n    'prélude',\n    'prénom',\n    'présence',\n    'prétexte',\n    'prévoir',\n    'primitif',\n    'prince',\n    'prison',\n    'priver',\n    'problème',\n    'procéder',\n    'prodige',\n    'profond',\n    'progrès',\n    'proie',\n    'projeter',\n    'prologue',\n    'promener',\n    'propre',\n    'prospère',\n    'protéger',\n    'prouesse',\n    'proverbe',\n    'prudence',\n    'pruneau',\n    'psychose',\n    'public',\n    'puceron',\n    'puiser',\n    'pulpe',\n    'pulsar',\n    'punaise',\n    'punitif',\n    'pupitre',\n    'purifier',\n    'puzzle',\n    'pyramide',\n    'quasar',\n    'querelle',\n    'question',\n    'quiétude',\n    'quitter',\n    'quotient',\n    'racine',\n    'raconter',\n    'radieux',\n    'ragondin',\n    'raideur',\n    'raisin',\n    'ralentir',\n    'rallonge',\n    'ramasser',\n    'rapide',\n    'rasage',\n    'ratisser',\n    'ravager',\n    'ravin',\n    'rayonner',\n    'réactif',\n    'réagir',\n    'réaliser',\n    'réanimer',\n    'recevoir',\n    'réciter',\n    'réclamer',\n    'récolter',\n    'recruter',\n    'reculer',\n    'recycler',\n    'rédiger',\n    'redouter',\n    'refaire',\n    'réflexe',\n    'réformer',\n    'refrain',\n    'refuge',\n    'régalien',\n    'région',\n    'réglage',\n    'régulier',\n    'réitérer',\n    'rejeter',\n    'rejouer',\n    'relatif',\n    'relever',\n    'relief',\n    'remarque',\n    'remède',\n    'remise',\n    'remonter',\n    'remplir',\n    'remuer',\n    'renard',\n    'renfort',\n    'renifler',\n    'renoncer',\n    'rentrer',\n    'renvoi',\n    'replier',\n    'reporter',\n    'reprise',\n    'reptile',\n    'requin',\n    'réserve',\n    'résineux',\n    'résoudre',\n    'respect',\n    'rester',\n    'résultat',\n    'rétablir',\n    'retenir',\n    'réticule',\n    'retomber',\n    'retracer',\n    'réunion',\n    'réussir',\n    'revanche',\n    'revivre',\n    'révolte',\n    'révulsif',\n    'richesse',\n    'rideau',\n    'rieur',\n    'rigide',\n    'rigoler',\n    'rincer',\n    'riposter',\n    'risible',\n    'risque',\n    'rituel',\n    'rival',\n    'rivière',\n    'rocheux',\n    'romance',\n    'rompre',\n    'ronce',\n    'rondin',\n    'roseau',\n    'rosier',\n    'rotatif',\n    'rotor',\n    'rotule',\n    'rouge',\n    'rouille',\n    'rouleau',\n    'routine',\n    'royaume',\n    'ruban',\n    'rubis',\n    'ruche',\n    'ruelle',\n    'rugueux',\n    'ruiner',\n    'ruisseau',\n    'ruser',\n    'rustique',\n    'rythme',\n    'sabler',\n    'saboter',\n    'sabre',\n    'sacoche',\n    'safari',\n    'sagesse',\n    'saisir',\n    'salade',\n    'salive',\n    'salon',\n    'saluer',\n    'samedi',\n    'sanction',\n    'sanglier',\n    'sarcasme',\n    'sardine',\n    'saturer',\n    'saugrenu',\n    'saumon',\n    'sauter',\n    'sauvage',\n    'savant',\n    'savonner',\n    'scalpel',\n    'scandale',\n    'scélérat',\n    'scénario',\n    'sceptre',\n    'schéma',\n    'science',\n    'scinder',\n    'score',\n    'scrutin',\n    'sculpter',\n    'séance',\n    'sécable',\n    'sécher',\n    'secouer',\n    'sécréter',\n    'sédatif',\n    'séduire',\n    'seigneur',\n    'séjour',\n    'sélectif',\n    'semaine',\n    'sembler',\n    'semence',\n    'séminal',\n    'sénateur',\n    'sensible',\n    'sentence',\n    'séparer',\n    'séquence',\n    'serein',\n    'sergent',\n    'sérieux',\n    'serrure',\n    'sérum',\n    'service',\n    'sésame',\n    'sévir',\n    'sevrage',\n    'sextuple',\n    'sidéral',\n    'siècle',\n    'siéger',\n    'siffler',\n    'sigle',\n    'signal',\n    'silence',\n    'silicium',\n    'simple',\n    'sincère',\n    'sinistre',\n    'siphon',\n    'sirop',\n    'sismique',\n    'situer',\n    'skier',\n    'social',\n    'socle',\n    'sodium',\n    'soigneux',\n    'soldat',\n    'soleil',\n    'solitude',\n    'soluble',\n    'sombre',\n    'sommeil',\n    'somnoler',\n    'sonde',\n    'songeur',\n    'sonnette',\n    'sonore',\n    'sorcier',\n    'sortir',\n    'sosie',\n    'sottise',\n    'soucieux',\n    'soudure',\n    'souffle',\n    'soulever',\n    'soupape',\n    'source',\n    'soutirer',\n    'souvenir',\n    'spacieux',\n    'spatial',\n    'spécial',\n    'sphère',\n    'spiral',\n    'stable',\n    'station',\n    'sternum',\n    'stimulus',\n    'stipuler',\n    'strict',\n    'studieux',\n    'stupeur',\n    'styliste',\n    'sublime',\n    'substrat',\n    'subtil',\n    'subvenir',\n    'succès',\n    'sucre',\n    'suffixe',\n    'suggérer',\n    'suiveur',\n    'sulfate',\n    'superbe',\n    'supplier',\n    'surface',\n    'suricate',\n    'surmener',\n    'surprise',\n    'sursaut',\n    'survie',\n    'suspect',\n    'syllabe',\n    'symbole',\n    'symétrie',\n    'synapse',\n    'syntaxe',\n    'système',\n    'tabac',\n    'tablier',\n    'tactile',\n    'tailler',\n    'talent',\n    'talisman',\n    'talonner',\n    'tambour',\n    'tamiser',\n    'tangible',\n    'tapis',\n    'taquiner',\n    'tarder',\n    'tarif',\n    'tartine',\n    'tasse',\n    'tatami',\n    'tatouage',\n    'taupe',\n    'taureau',\n    'taxer',\n    'témoin',\n    'temporel',\n    'tenaille',\n    'tendre',\n    'teneur',\n    'tenir',\n    'tension',\n    'terminer',\n    'terne',\n    'terrible',\n    'tétine',\n    'texte',\n    'thème',\n    'théorie',\n    'thérapie',\n    'thorax',\n    'tibia',\n    'tiède',\n    'timide',\n    'tirelire',\n    'tiroir',\n    'tissu',\n    'titane',\n    'titre',\n    'tituber',\n    'toboggan',\n    'tolérant',\n    'tomate',\n    'tonique',\n    'tonneau',\n    'toponyme',\n    'torche',\n    'tordre',\n    'tornade',\n    'torpille',\n    'torrent',\n    'torse',\n    'tortue',\n    'totem',\n    'toucher',\n    'tournage',\n    'tousser',\n    'toxine',\n    'traction',\n    'trafic',\n    'tragique',\n    'trahir',\n    'train',\n    'trancher',\n    'travail',\n    'trèfle',\n    'tremper',\n    'trésor',\n    'treuil',\n    'triage',\n    'tribunal',\n    'tricoter',\n    'trilogie',\n    'triomphe',\n    'tripler',\n    'triturer',\n    'trivial',\n    'trombone',\n    'tronc',\n    'tropical',\n    'troupeau',\n    'tuile',\n    'tulipe',\n    'tumulte',\n    'tunnel',\n    'turbine',\n    'tuteur',\n    'tutoyer',\n    'tuyau',\n    'tympan',\n    'typhon',\n    'typique',\n    'tyran',\n    'ubuesque',\n    'ultime',\n    'ultrason',\n    'unanime',\n    'unifier',\n    'union',\n    'unique',\n    'unitaire',\n    'univers',\n    'uranium',\n    'urbain',\n    'urticant',\n    'usage',\n    'usine',\n    'usuel',\n    'usure',\n    'utile',\n    'utopie',\n    'vacarme',\n    'vaccin',\n    'vagabond',\n    'vague',\n    'vaillant',\n    'vaincre',\n    'vaisseau',\n    'valable',\n    'valise',\n    'vallon',\n    'valve',\n    'vampire',\n    'vanille',\n    'vapeur',\n    'varier',\n    'vaseux',\n    'vassal',\n    'vaste',\n    'vecteur',\n    'vedette',\n    'végétal',\n    'véhicule',\n    'veinard',\n    'véloce',\n    'vendredi',\n    'vénérer',\n    'venger',\n    'venimeux',\n    'ventouse',\n    'verdure',\n    'vérin',\n    'vernir',\n    'verrou',\n    'verser',\n    'vertu',\n    'veston',\n    'vétéran',\n    'vétuste',\n    'vexant',\n    'vexer',\n    'viaduc',\n    'viande',\n    'victoire',\n    'vidange',\n    'vidéo',\n    'vignette',\n    'vigueur',\n    'vilain',\n    'village',\n    'vinaigre',\n    'violon',\n    'vipère',\n    'virement',\n    'virtuose',\n    'virus',\n    'visage',\n    'viseur',\n    'vision',\n    'visqueux',\n    'visuel',\n    'vital',\n    'vitesse',\n    'viticole',\n    'vitrine',\n    'vivace',\n    'vivipare',\n    'vocation',\n    'voguer',\n    'voile',\n    'voisin',\n    'voiture',\n    'volaille',\n    'volcan',\n    'voltiger',\n    'volume',\n    'vorace',\n    'vortex',\n    'voter',\n    'vouloir',\n    'voyage',\n    'voyelle',\n    'wagon',\n    'xénon',\n    'yacht',\n    'zèbre',\n    'zénith',\n    'zeste',\n    'zoologie'\n];\n//# sourceMappingURL=french.js.map","// SPDX-License-Identifier: MIT\nexport const WORDLIST = [\n    'abaco',\n    'abbaglio',\n    'abbinato',\n    'abete',\n    'abisso',\n    'abolire',\n    'abrasivo',\n    'abrogato',\n    'accadere',\n    'accenno',\n    'accusato',\n    'acetone',\n    'achille',\n    'acido',\n    'acqua',\n    'acre',\n    'acrilico',\n    'acrobata',\n    'acuto',\n    'adagio',\n    'addebito',\n    'addome',\n    'adeguato',\n    'aderire',\n    'adipe',\n    'adottare',\n    'adulare',\n    'affabile',\n    'affetto',\n    'affisso',\n    'affranto',\n    'aforisma',\n    'afoso',\n    'africano',\n    'agave',\n    'agente',\n    'agevole',\n    'aggancio',\n    'agire',\n    'agitare',\n    'agonismo',\n    'agricolo',\n    'agrumeto',\n    'aguzzo',\n    'alabarda',\n    'alato',\n    'albatro',\n    'alberato',\n    'albo',\n    'albume',\n    'alce',\n    'alcolico',\n    'alettone',\n    'alfa',\n    'algebra',\n    'aliante',\n    'alibi',\n    'alimento',\n    'allagato',\n    'allegro',\n    'allievo',\n    'allodola',\n    'allusivo',\n    'almeno',\n    'alogeno',\n    'alpaca',\n    'alpestre',\n    'altalena',\n    'alterno',\n    'alticcio',\n    'altrove',\n    'alunno',\n    'alveolo',\n    'alzare',\n    'amalgama',\n    'amanita',\n    'amarena',\n    'ambito',\n    'ambrato',\n    'ameba',\n    'america',\n    'ametista',\n    'amico',\n    'ammasso',\n    'ammenda',\n    'ammirare',\n    'ammonito',\n    'amore',\n    'ampio',\n    'ampliare',\n    'amuleto',\n    'anacardo',\n    'anagrafe',\n    'analista',\n    'anarchia',\n    'anatra',\n    'anca',\n    'ancella',\n    'ancora',\n    'andare',\n    'andrea',\n    'anello',\n    'angelo',\n    'angolare',\n    'angusto',\n    'anima',\n    'annegare',\n    'annidato',\n    'anno',\n    'annuncio',\n    'anonimo',\n    'anticipo',\n    'anzi',\n    'apatico',\n    'apertura',\n    'apode',\n    'apparire',\n    'appetito',\n    'appoggio',\n    'approdo',\n    'appunto',\n    'aprile',\n    'arabica',\n    'arachide',\n    'aragosta',\n    'araldica',\n    'arancio',\n    'aratura',\n    'arazzo',\n    'arbitro',\n    'archivio',\n    'ardito',\n    'arenile',\n    'argento',\n    'argine',\n    'arguto',\n    'aria',\n    'armonia',\n    'arnese',\n    'arredato',\n    'arringa',\n    'arrosto',\n    'arsenico',\n    'arso',\n    'artefice',\n    'arzillo',\n    'asciutto',\n    'ascolto',\n    'asepsi',\n    'asettico',\n    'asfalto',\n    'asino',\n    'asola',\n    'aspirato',\n    'aspro',\n    'assaggio',\n    'asse',\n    'assoluto',\n    'assurdo',\n    'asta',\n    'astenuto',\n    'astice',\n    'astratto',\n    'atavico',\n    'ateismo',\n    'atomico',\n    'atono',\n    'attesa',\n    'attivare',\n    'attorno',\n    'attrito',\n    'attuale',\n    'ausilio',\n    'austria',\n    'autista',\n    'autonomo',\n    'autunno',\n    'avanzato',\n    'avere',\n    'avvenire',\n    'avviso',\n    'avvolgere',\n    'azione',\n    'azoto',\n    'azzimo',\n    'azzurro',\n    'babele',\n    'baccano',\n    'bacino',\n    'baco',\n    'badessa',\n    'badilata',\n    'bagnato',\n    'baita',\n    'balcone',\n    'baldo',\n    'balena',\n    'ballata',\n    'balzano',\n    'bambino',\n    'bandire',\n    'baraonda',\n    'barbaro',\n    'barca',\n    'baritono',\n    'barlume',\n    'barocco',\n    'basilico',\n    'basso',\n    'batosta',\n    'battuto',\n    'baule',\n    'bava',\n    'bavosa',\n    'becco',\n    'beffa',\n    'belgio',\n    'belva',\n    'benda',\n    'benevole',\n    'benigno',\n    'benzina',\n    'bere',\n    'berlina',\n    'beta',\n    'bibita',\n    'bici',\n    'bidone',\n    'bifido',\n    'biga',\n    'bilancia',\n    'bimbo',\n    'binocolo',\n    'biologo',\n    'bipede',\n    'bipolare',\n    'birbante',\n    'birra',\n    'biscotto',\n    'bisesto',\n    'bisnonno',\n    'bisonte',\n    'bisturi',\n    'bizzarro',\n    'blando',\n    'blatta',\n    'bollito',\n    'bonifico',\n    'bordo',\n    'bosco',\n    'botanico',\n    'bottino',\n    'bozzolo',\n    'braccio',\n    'bradipo',\n    'brama',\n    'branca',\n    'bravura',\n    'bretella',\n    'brevetto',\n    'brezza',\n    'briglia',\n    'brillante',\n    'brindare',\n    'broccolo',\n    'brodo',\n    'bronzina',\n    'brullo',\n    'bruno',\n    'bubbone',\n    'buca',\n    'budino',\n    'buffone',\n    'buio',\n    'bulbo',\n    'buono',\n    'burlone',\n    'burrasca',\n    'bussola',\n    'busta',\n    'cadetto',\n    'caduco',\n    'calamaro',\n    'calcolo',\n    'calesse',\n    'calibro',\n    'calmo',\n    'caloria',\n    'cambusa',\n    'camerata',\n    'camicia',\n    'cammino',\n    'camola',\n    'campale',\n    'canapa',\n    'candela',\n    'cane',\n    'canino',\n    'canotto',\n    'cantina',\n    'capace',\n    'capello',\n    'capitolo',\n    'capogiro',\n    'cappero',\n    'capra',\n    'capsula',\n    'carapace',\n    'carcassa',\n    'cardo',\n    'carisma',\n    'carovana',\n    'carretto',\n    'cartolina',\n    'casaccio',\n    'cascata',\n    'caserma',\n    'caso',\n    'cassone',\n    'castello',\n    'casuale',\n    'catasta',\n    'catena',\n    'catrame',\n    'cauto',\n    'cavillo',\n    'cedibile',\n    'cedrata',\n    'cefalo',\n    'celebre',\n    'cellulare',\n    'cena',\n    'cenone',\n    'centesimo',\n    'ceramica',\n    'cercare',\n    'certo',\n    'cerume',\n    'cervello',\n    'cesoia',\n    'cespo',\n    'ceto',\n    'chela',\n    'chiaro',\n    'chicca',\n    'chiedere',\n    'chimera',\n    'china',\n    'chirurgo',\n    'chitarra',\n    'ciao',\n    'ciclismo',\n    'cifrare',\n    'cigno',\n    'cilindro',\n    'ciottolo',\n    'circa',\n    'cirrosi',\n    'citrico',\n    'cittadino',\n    'ciuffo',\n    'civetta',\n    'civile',\n    'classico',\n    'clinica',\n    'cloro',\n    'cocco',\n    'codardo',\n    'codice',\n    'coerente',\n    'cognome',\n    'collare',\n    'colmato',\n    'colore',\n    'colposo',\n    'coltivato',\n    'colza',\n    'coma',\n    'cometa',\n    'commando',\n    'comodo',\n    'computer',\n    'comune',\n    'conciso',\n    'condurre',\n    'conferma',\n    'congelare',\n    'coniuge',\n    'connesso',\n    'conoscere',\n    'consumo',\n    'continuo',\n    'convegno',\n    'coperto',\n    'copione',\n    'coppia',\n    'copricapo',\n    'corazza',\n    'cordata',\n    'coricato',\n    'cornice',\n    'corolla',\n    'corpo',\n    'corredo',\n    'corsia',\n    'cortese',\n    'cosmico',\n    'costante',\n    'cottura',\n    'covato',\n    'cratere',\n    'cravatta',\n    'creato',\n    'credere',\n    'cremoso',\n    'crescita',\n    'creta',\n    'criceto',\n    'crinale',\n    'crisi',\n    'critico',\n    'croce',\n    'cronaca',\n    'crostata',\n    'cruciale',\n    'crusca',\n    'cucire',\n    'cuculo',\n    'cugino',\n    'cullato',\n    'cupola',\n    'curatore',\n    'cursore',\n    'curvo',\n    'cuscino',\n    'custode',\n    'dado',\n    'daino',\n    'dalmata',\n    'damerino',\n    'daniela',\n    'dannoso',\n    'danzare',\n    'datato',\n    'davanti',\n    'davvero',\n    'debutto',\n    'decennio',\n    'deciso',\n    'declino',\n    'decollo',\n    'decreto',\n    'dedicato',\n    'definito',\n    'deforme',\n    'degno',\n    'delegare',\n    'delfino',\n    'delirio',\n    'delta',\n    'demenza',\n    'denotato',\n    'dentro',\n    'deposito',\n    'derapata',\n    'derivare',\n    'deroga',\n    'descritto',\n    'deserto',\n    'desiderio',\n    'desumere',\n    'detersivo',\n    'devoto',\n    'diametro',\n    'dicembre',\n    'diedro',\n    'difeso',\n    'diffuso',\n    'digerire',\n    'digitale',\n    'diluvio',\n    'dinamico',\n    'dinnanzi',\n    'dipinto',\n    'diploma',\n    'dipolo',\n    'diradare',\n    'dire',\n    'dirotto',\n    'dirupo',\n    'disagio',\n    'discreto',\n    'disfare',\n    'disgelo',\n    'disposto',\n    'distanza',\n    'disumano',\n    'dito',\n    'divano',\n    'divelto',\n    'dividere',\n    'divorato',\n    'doblone',\n    'docente',\n    'doganale',\n    'dogma',\n    'dolce',\n    'domato',\n    'domenica',\n    'dominare',\n    'dondolo',\n    'dono',\n    'dormire',\n    'dote',\n    'dottore',\n    'dovuto',\n    'dozzina',\n    'drago',\n    'druido',\n    'dubbio',\n    'dubitare',\n    'ducale',\n    'duna',\n    'duomo',\n    'duplice',\n    'duraturo',\n    'ebano',\n    'eccesso',\n    'ecco',\n    'eclissi',\n    'economia',\n    'edera',\n    'edicola',\n    'edile',\n    'editoria',\n    'educare',\n    'egemonia',\n    'egli',\n    'egoismo',\n    'egregio',\n    'elaborato',\n    'elargire',\n    'elegante',\n    'elencato',\n    'eletto',\n    'elevare',\n    'elfico',\n    'elica',\n    'elmo',\n    'elsa',\n    'eluso',\n    'emanato',\n    'emblema',\n    'emesso',\n    'emiro',\n    'emotivo',\n    'emozione',\n    'empirico',\n    'emulo',\n    'endemico',\n    'enduro',\n    'energia',\n    'enfasi',\n    'enoteca',\n    'entrare',\n    'enzima',\n    'epatite',\n    'epilogo',\n    'episodio',\n    'epocale',\n    'eppure',\n    'equatore',\n    'erario',\n    'erba',\n    'erboso',\n    'erede',\n    'eremita',\n    'erigere',\n    'ermetico',\n    'eroe',\n    'erosivo',\n    'errante',\n    'esagono',\n    'esame',\n    'esanime',\n    'esaudire',\n    'esca',\n    'esempio',\n    'esercito',\n    'esibito',\n    'esigente',\n    'esistere',\n    'esito',\n    'esofago',\n    'esortato',\n    'esoso',\n    'espanso',\n    'espresso',\n    'essenza',\n    'esso',\n    'esteso',\n    'estimare',\n    'estonia',\n    'estroso',\n    'esultare',\n    'etilico',\n    'etnico',\n    'etrusco',\n    'etto',\n    'euclideo',\n    'europa',\n    'evaso',\n    'evidenza',\n    'evitato',\n    'evoluto',\n    'evviva',\n    'fabbrica',\n    'faccenda',\n    'fachiro',\n    'falco',\n    'famiglia',\n    'fanale',\n    'fanfara',\n    'fango',\n    'fantasma',\n    'fare',\n    'farfalla',\n    'farinoso',\n    'farmaco',\n    'fascia',\n    'fastoso',\n    'fasullo',\n    'faticare',\n    'fato',\n    'favoloso',\n    'febbre',\n    'fecola',\n    'fede',\n    'fegato',\n    'felpa',\n    'feltro',\n    'femmina',\n    'fendere',\n    'fenomeno',\n    'fermento',\n    'ferro',\n    'fertile',\n    'fessura',\n    'festivo',\n    'fetta',\n    'feudo',\n    'fiaba',\n    'fiducia',\n    'fifa',\n    'figurato',\n    'filo',\n    'finanza',\n    'finestra',\n    'finire',\n    'fiore',\n    'fiscale',\n    'fisico',\n    'fiume',\n    'flacone',\n    'flamenco',\n    'flebo',\n    'flemma',\n    'florido',\n    'fluente',\n    'fluoro',\n    'fobico',\n    'focaccia',\n    'focoso',\n    'foderato',\n    'foglio',\n    'folata',\n    'folclore',\n    'folgore',\n    'fondente',\n    'fonetico',\n    'fonia',\n    'fontana',\n    'forbito',\n    'forchetta',\n    'foresta',\n    'formica',\n    'fornaio',\n    'foro',\n    'fortezza',\n    'forzare',\n    'fosfato',\n    'fosso',\n    'fracasso',\n    'frana',\n    'frassino',\n    'fratello',\n    'freccetta',\n    'frenata',\n    'fresco',\n    'frigo',\n    'frollino',\n    'fronde',\n    'frugale',\n    'frutta',\n    'fucilata',\n    'fucsia',\n    'fuggente',\n    'fulmine',\n    'fulvo',\n    'fumante',\n    'fumetto',\n    'fumoso',\n    'fune',\n    'funzione',\n    'fuoco',\n    'furbo',\n    'furgone',\n    'furore',\n    'fuso',\n    'futile',\n    'gabbiano',\n    'gaffe',\n    'galateo',\n    'gallina',\n    'galoppo',\n    'gambero',\n    'gamma',\n    'garanzia',\n    'garbo',\n    'garofano',\n    'garzone',\n    'gasdotto',\n    'gasolio',\n    'gastrico',\n    'gatto',\n    'gaudio',\n    'gazebo',\n    'gazzella',\n    'geco',\n    'gelatina',\n    'gelso',\n    'gemello',\n    'gemmato',\n    'gene',\n    'genitore',\n    'gennaio',\n    'genotipo',\n    'gergo',\n    'ghepardo',\n    'ghiaccio',\n    'ghisa',\n    'giallo',\n    'gilda',\n    'ginepro',\n    'giocare',\n    'gioiello',\n    'giorno',\n    'giove',\n    'girato',\n    'girone',\n    'gittata',\n    'giudizio',\n    'giurato',\n    'giusto',\n    'globulo',\n    'glutine',\n    'gnomo',\n    'gobba',\n    'golf',\n    'gomito',\n    'gommone',\n    'gonfio',\n    'gonna',\n    'governo',\n    'gracile',\n    'grado',\n    'grafico',\n    'grammo',\n    'grande',\n    'grattare',\n    'gravoso',\n    'grazia',\n    'greca',\n    'gregge',\n    'grifone',\n    'grigio',\n    'grinza',\n    'grotta',\n    'gruppo',\n    'guadagno',\n    'guaio',\n    'guanto',\n    'guardare',\n    'gufo',\n    'guidare',\n    'ibernato',\n    'icona',\n    'identico',\n    'idillio',\n    'idolo',\n    'idra',\n    'idrico',\n    'idrogeno',\n    'igiene',\n    'ignaro',\n    'ignorato',\n    'ilare',\n    'illeso',\n    'illogico',\n    'illudere',\n    'imballo',\n    'imbevuto',\n    'imbocco',\n    'imbuto',\n    'immane',\n    'immerso',\n    'immolato',\n    'impacco',\n    'impeto',\n    'impiego',\n    'importo',\n    'impronta',\n    'inalare',\n    'inarcare',\n    'inattivo',\n    'incanto',\n    'incendio',\n    'inchino',\n    'incisivo',\n    'incluso',\n    'incontro',\n    'incrocio',\n    'incubo',\n    'indagine',\n    'india',\n    'indole',\n    'inedito',\n    'infatti',\n    'infilare',\n    'inflitto',\n    'ingaggio',\n    'ingegno',\n    'inglese',\n    'ingordo',\n    'ingrosso',\n    'innesco',\n    'inodore',\n    'inoltrare',\n    'inondato',\n    'insano',\n    'insetto',\n    'insieme',\n    'insonnia',\n    'insulina',\n    'intasato',\n    'intero',\n    'intonaco',\n    'intuito',\n    'inumidire',\n    'invalido',\n    'invece',\n    'invito',\n    'iperbole',\n    'ipnotico',\n    'ipotesi',\n    'ippica',\n    'iride',\n    'irlanda',\n    'ironico',\n    'irrigato',\n    'irrorare',\n    'isolato',\n    'isotopo',\n    'isterico',\n    'istituto',\n    'istrice',\n    'italia',\n    'iterare',\n    'labbro',\n    'labirinto',\n    'lacca',\n    'lacerato',\n    'lacrima',\n    'lacuna',\n    'laddove',\n    'lago',\n    'lampo',\n    'lancetta',\n    'lanterna',\n    'lardoso',\n    'larga',\n    'laringe',\n    'lastra',\n    'latenza',\n    'latino',\n    'lattuga',\n    'lavagna',\n    'lavoro',\n    'legale',\n    'leggero',\n    'lembo',\n    'lentezza',\n    'lenza',\n    'leone',\n    'lepre',\n    'lesivo',\n    'lessato',\n    'lesto',\n    'letterale',\n    'leva',\n    'levigato',\n    'libero',\n    'lido',\n    'lievito',\n    'lilla',\n    'limatura',\n    'limitare',\n    'limpido',\n    'lineare',\n    'lingua',\n    'liquido',\n    'lira',\n    'lirica',\n    'lisca',\n    'lite',\n    'litigio',\n    'livrea',\n    'locanda',\n    'lode',\n    'logica',\n    'lombare',\n    'londra',\n    'longevo',\n    'loquace',\n    'lorenzo',\n    'loto',\n    'lotteria',\n    'luce',\n    'lucidato',\n    'lumaca',\n    'luminoso',\n    'lungo',\n    'lupo',\n    'luppolo',\n    'lusinga',\n    'lusso',\n    'lutto',\n    'macabro',\n    'macchina',\n    'macero',\n    'macinato',\n    'madama',\n    'magico',\n    'maglia',\n    'magnete',\n    'magro',\n    'maiolica',\n    'malafede',\n    'malgrado',\n    'malinteso',\n    'malsano',\n    'malto',\n    'malumore',\n    'mana',\n    'mancia',\n    'mandorla',\n    'mangiare',\n    'manifesto',\n    'mannaro',\n    'manovra',\n    'mansarda',\n    'mantide',\n    'manubrio',\n    'mappa',\n    'maratona',\n    'marcire',\n    'maretta',\n    'marmo',\n    'marsupio',\n    'maschera',\n    'massaia',\n    'mastino',\n    'materasso',\n    'matricola',\n    'mattone',\n    'maturo',\n    'mazurca',\n    'meandro',\n    'meccanico',\n    'mecenate',\n    'medesimo',\n    'meditare',\n    'mega',\n    'melassa',\n    'melis',\n    'melodia',\n    'meninge',\n    'meno',\n    'mensola',\n    'mercurio',\n    'merenda',\n    'merlo',\n    'meschino',\n    'mese',\n    'messere',\n    'mestolo',\n    'metallo',\n    'metodo',\n    'mettere',\n    'miagolare',\n    'mica',\n    'micelio',\n    'michele',\n    'microbo',\n    'midollo',\n    'miele',\n    'migliore',\n    'milano',\n    'milite',\n    'mimosa',\n    'minerale',\n    'mini',\n    'minore',\n    'mirino',\n    'mirtillo',\n    'miscela',\n    'missiva',\n    'misto',\n    'misurare',\n    'mitezza',\n    'mitigare',\n    'mitra',\n    'mittente',\n    'mnemonico',\n    'modello',\n    'modifica',\n    'modulo',\n    'mogano',\n    'mogio',\n    'mole',\n    'molosso',\n    'monastero',\n    'monco',\n    'mondina',\n    'monetario',\n    'monile',\n    'monotono',\n    'monsone',\n    'montato',\n    'monviso',\n    'mora',\n    'mordere',\n    'morsicato',\n    'mostro',\n    'motivato',\n    'motosega',\n    'motto',\n    'movenza',\n    'movimento',\n    'mozzo',\n    'mucca',\n    'mucosa',\n    'muffa',\n    'mughetto',\n    'mugnaio',\n    'mulatto',\n    'mulinello',\n    'multiplo',\n    'mummia',\n    'munto',\n    'muovere',\n    'murale',\n    'musa',\n    'muscolo',\n    'musica',\n    'mutevole',\n    'muto',\n    'nababbo',\n    'nafta',\n    'nanometro',\n    'narciso',\n    'narice',\n    'narrato',\n    'nascere',\n    'nastrare',\n    'naturale',\n    'nautica',\n    'naviglio',\n    'nebulosa',\n    'necrosi',\n    'negativo',\n    'negozio',\n    'nemmeno',\n    'neofita',\n    'neretto',\n    'nervo',\n    'nessuno',\n    'nettuno',\n    'neutrale',\n    'neve',\n    'nevrotico',\n    'nicchia',\n    'ninfa',\n    'nitido',\n    'nobile',\n    'nocivo',\n    'nodo',\n    'nome',\n    'nomina',\n    'nordico',\n    'normale',\n    'norvegese',\n    'nostrano',\n    'notare',\n    'notizia',\n    'notturno',\n    'novella',\n    'nucleo',\n    'nulla',\n    'numero',\n    'nuovo',\n    'nutrire',\n    'nuvola',\n    'nuziale',\n    'oasi',\n    'obbedire',\n    'obbligo',\n    'obelisco',\n    'oblio',\n    'obolo',\n    'obsoleto',\n    'occasione',\n    'occhio',\n    'occidente',\n    'occorrere',\n    'occultare',\n    'ocra',\n    'oculato',\n    'odierno',\n    'odorare',\n    'offerta',\n    'offrire',\n    'offuscato',\n    'oggetto',\n    'oggi',\n    'ognuno',\n    'olandese',\n    'olfatto',\n    'oliato',\n    'oliva',\n    'ologramma',\n    'oltre',\n    'omaggio',\n    'ombelico',\n    'ombra',\n    'omega',\n    'omissione',\n    'ondoso',\n    'onere',\n    'onice',\n    'onnivoro',\n    'onorevole',\n    'onta',\n    'operato',\n    'opinione',\n    'opposto',\n    'oracolo',\n    'orafo',\n    'ordine',\n    'orecchino',\n    'orefice',\n    'orfano',\n    'organico',\n    'origine',\n    'orizzonte',\n    'orma',\n    'ormeggio',\n    'ornativo',\n    'orologio',\n    'orrendo',\n    'orribile',\n    'ortensia',\n    'ortica',\n    'orzata',\n    'orzo',\n    'osare',\n    'oscurare',\n    'osmosi',\n    'ospedale',\n    'ospite',\n    'ossa',\n    'ossidare',\n    'ostacolo',\n    'oste',\n    'otite',\n    'otre',\n    'ottagono',\n    'ottimo',\n    'ottobre',\n    'ovale',\n    'ovest',\n    'ovino',\n    'oviparo',\n    'ovocito',\n    'ovunque',\n    'ovviare',\n    'ozio',\n    'pacchetto',\n    'pace',\n    'pacifico',\n    'padella',\n    'padrone',\n    'paese',\n    'paga',\n    'pagina',\n    'palazzina',\n    'palesare',\n    'pallido',\n    'palo',\n    'palude',\n    'pandoro',\n    'pannello',\n    'paolo',\n    'paonazzo',\n    'paprica',\n    'parabola',\n    'parcella',\n    'parere',\n    'pargolo',\n    'pari',\n    'parlato',\n    'parola',\n    'partire',\n    'parvenza',\n    'parziale',\n    'passivo',\n    'pasticca',\n    'patacca',\n    'patologia',\n    'pattume',\n    'pavone',\n    'peccato',\n    'pedalare',\n    'pedonale',\n    'peggio',\n    'peloso',\n    'penare',\n    'pendice',\n    'penisola',\n    'pennuto',\n    'penombra',\n    'pensare',\n    'pentola',\n    'pepe',\n    'pepita',\n    'perbene',\n    'percorso',\n    'perdonato',\n    'perforare',\n    'pergamena',\n    'periodo',\n    'permesso',\n    'perno',\n    'perplesso',\n    'persuaso',\n    'pertugio',\n    'pervaso',\n    'pesatore',\n    'pesista',\n    'peso',\n    'pestifero',\n    'petalo',\n    'pettine',\n    'petulante',\n    'pezzo',\n    'piacere',\n    'pianta',\n    'piattino',\n    'piccino',\n    'picozza',\n    'piega',\n    'pietra',\n    'piffero',\n    'pigiama',\n    'pigolio',\n    'pigro',\n    'pila',\n    'pilifero',\n    'pillola',\n    'pilota',\n    'pimpante',\n    'pineta',\n    'pinna',\n    'pinolo',\n    'pioggia',\n    'piombo',\n    'piramide',\n    'piretico',\n    'pirite',\n    'pirolisi',\n    'pitone',\n    'pizzico',\n    'placebo',\n    'planare',\n    'plasma',\n    'platano',\n    'plenario',\n    'pochezza',\n    'poderoso',\n    'podismo',\n    'poesia',\n    'poggiare',\n    'polenta',\n    'poligono',\n    'pollice',\n    'polmonite',\n    'polpetta',\n    'polso',\n    'poltrona',\n    'polvere',\n    'pomice',\n    'pomodoro',\n    'ponte',\n    'popoloso',\n    'porfido',\n    'poroso',\n    'porpora',\n    'porre',\n    'portata',\n    'posa',\n    'positivo',\n    'possesso',\n    'postulato',\n    'potassio',\n    'potere',\n    'pranzo',\n    'prassi',\n    'pratica',\n    'precluso',\n    'predica',\n    'prefisso',\n    'pregiato',\n    'prelievo',\n    'premere',\n    'prenotare',\n    'preparato',\n    'presenza',\n    'pretesto',\n    'prevalso',\n    'prima',\n    'principe',\n    'privato',\n    'problema',\n    'procura',\n    'produrre',\n    'profumo',\n    'progetto',\n    'prolunga',\n    'promessa',\n    'pronome',\n    'proposta',\n    'proroga',\n    'proteso',\n    'prova',\n    'prudente',\n    'prugna',\n    'prurito',\n    'psiche',\n    'pubblico',\n    'pudica',\n    'pugilato',\n    'pugno',\n    'pulce',\n    'pulito',\n    'pulsante',\n    'puntare',\n    'pupazzo',\n    'pupilla',\n    'puro',\n    'quadro',\n    'qualcosa',\n    'quasi',\n    'querela',\n    'quota',\n    'raccolto',\n    'raddoppio',\n    'radicale',\n    'radunato',\n    'raffica',\n    'ragazzo',\n    'ragione',\n    'ragno',\n    'ramarro',\n    'ramingo',\n    'ramo',\n    'randagio',\n    'rantolare',\n    'rapato',\n    'rapina',\n    'rappreso',\n    'rasatura',\n    'raschiato',\n    'rasente',\n    'rassegna',\n    'rastrello',\n    'rata',\n    'ravveduto',\n    'reale',\n    'recepire',\n    'recinto',\n    'recluta',\n    'recondito',\n    'recupero',\n    'reddito',\n    'redimere',\n    'regalato',\n    'registro',\n    'regola',\n    'regresso',\n    'relazione',\n    'remare',\n    'remoto',\n    'renna',\n    'replica',\n    'reprimere',\n    'reputare',\n    'resa',\n    'residente',\n    'responso',\n    'restauro',\n    'rete',\n    'retina',\n    'retorica',\n    'rettifica',\n    'revocato',\n    'riassunto',\n    'ribadire',\n    'ribelle',\n    'ribrezzo',\n    'ricarica',\n    'ricco',\n    'ricevere',\n    'riciclato',\n    'ricordo',\n    'ricreduto',\n    'ridicolo',\n    'ridurre',\n    'rifasare',\n    'riflesso',\n    'riforma',\n    'rifugio',\n    'rigare',\n    'rigettato',\n    'righello',\n    'rilassato',\n    'rilevato',\n    'rimanere',\n    'rimbalzo',\n    'rimedio',\n    'rimorchio',\n    'rinascita',\n    'rincaro',\n    'rinforzo',\n    'rinnovo',\n    'rinomato',\n    'rinsavito',\n    'rintocco',\n    'rinuncia',\n    'rinvenire',\n    'riparato',\n    'ripetuto',\n    'ripieno',\n    'riportare',\n    'ripresa',\n    'ripulire',\n    'risata',\n    'rischio',\n    'riserva',\n    'risibile',\n    'riso',\n    'rispetto',\n    'ristoro',\n    'risultato',\n    'risvolto',\n    'ritardo',\n    'ritegno',\n    'ritmico',\n    'ritrovo',\n    'riunione',\n    'riva',\n    'riverso',\n    'rivincita',\n    'rivolto',\n    'rizoma',\n    'roba',\n    'robotico',\n    'robusto',\n    'roccia',\n    'roco',\n    'rodaggio',\n    'rodere',\n    'roditore',\n    'rogito',\n    'rollio',\n    'romantico',\n    'rompere',\n    'ronzio',\n    'rosolare',\n    'rospo',\n    'rotante',\n    'rotondo',\n    'rotula',\n    'rovescio',\n    'rubizzo',\n    'rubrica',\n    'ruga',\n    'rullino',\n    'rumine',\n    'rumoroso',\n    'ruolo',\n    'rupe',\n    'russare',\n    'rustico',\n    'sabato',\n    'sabbiare',\n    'sabotato',\n    'sagoma',\n    'salasso',\n    'saldatura',\n    'salgemma',\n    'salivare',\n    'salmone',\n    'salone',\n    'saltare',\n    'saluto',\n    'salvo',\n    'sapere',\n    'sapido',\n    'saporito',\n    'saraceno',\n    'sarcasmo',\n    'sarto',\n    'sassoso',\n    'satellite',\n    'satira',\n    'satollo',\n    'saturno',\n    'savana',\n    'savio',\n    'saziato',\n    'sbadiglio',\n    'sbalzo',\n    'sbancato',\n    'sbarra',\n    'sbattere',\n    'sbavare',\n    'sbendare',\n    'sbirciare',\n    'sbloccato',\n    'sbocciato',\n    'sbrinare',\n    'sbruffone',\n    'sbuffare',\n    'scabroso',\n    'scadenza',\n    'scala',\n    'scambiare',\n    'scandalo',\n    'scapola',\n    'scarso',\n    'scatenare',\n    'scavato',\n    'scelto',\n    'scenico',\n    'scettro',\n    'scheda',\n    'schiena',\n    'sciarpa',\n    'scienza',\n    'scindere',\n    'scippo',\n    'sciroppo',\n    'scivolo',\n    'sclerare',\n    'scodella',\n    'scolpito',\n    'scomparto',\n    'sconforto',\n    'scoprire',\n    'scorta',\n    'scossone',\n    'scozzese',\n    'scriba',\n    'scrollare',\n    'scrutinio',\n    'scuderia',\n    'scultore',\n    'scuola',\n    'scuro',\n    'scusare',\n    'sdebitare',\n    'sdoganare',\n    'seccatura',\n    'secondo',\n    'sedano',\n    'seggiola',\n    'segnalato',\n    'segregato',\n    'seguito',\n    'selciato',\n    'selettivo',\n    'sella',\n    'selvaggio',\n    'semaforo',\n    'sembrare',\n    'seme',\n    'seminato',\n    'sempre',\n    'senso',\n    'sentire',\n    'sepolto',\n    'sequenza',\n    'serata',\n    'serbato',\n    'sereno',\n    'serio',\n    'serpente',\n    'serraglio',\n    'servire',\n    'sestina',\n    'setola',\n    'settimana',\n    'sfacelo',\n    'sfaldare',\n    'sfamato',\n    'sfarzoso',\n    'sfaticato',\n    'sfera',\n    'sfida',\n    'sfilato',\n    'sfinge',\n    'sfocato',\n    'sfoderare',\n    'sfogo',\n    'sfoltire',\n    'sforzato',\n    'sfratto',\n    'sfruttato',\n    'sfuggito',\n    'sfumare',\n    'sfuso',\n    'sgabello',\n    'sgarbato',\n    'sgonfiare',\n    'sgorbio',\n    'sgrassato',\n    'sguardo',\n    'sibilo',\n    'siccome',\n    'sierra',\n    'sigla',\n    'signore',\n    'silenzio',\n    'sillaba',\n    'simbolo',\n    'simpatico',\n    'simulato',\n    'sinfonia',\n    'singolo',\n    'sinistro',\n    'sino',\n    'sintesi',\n    'sinusoide',\n    'sipario',\n    'sisma',\n    'sistole',\n    'situato',\n    'slitta',\n    'slogatura',\n    'sloveno',\n    'smarrito',\n    'smemorato',\n    'smentito',\n    'smeraldo',\n    'smilzo',\n    'smontare',\n    'smottato',\n    'smussato',\n    'snellire',\n    'snervato',\n    'snodo',\n    'sobbalzo',\n    'sobrio',\n    'soccorso',\n    'sociale',\n    'sodale',\n    'soffitto',\n    'sogno',\n    'soldato',\n    'solenne',\n    'solido',\n    'sollazzo',\n    'solo',\n    'solubile',\n    'solvente',\n    'somatico',\n    'somma',\n    'sonda',\n    'sonetto',\n    'sonnifero',\n    'sopire',\n    'soppeso',\n    'sopra',\n    'sorgere',\n    'sorpasso',\n    'sorriso',\n    'sorso',\n    'sorteggio',\n    'sorvolato',\n    'sospiro',\n    'sosta',\n    'sottile',\n    'spada',\n    'spalla',\n    'spargere',\n    'spatola',\n    'spavento',\n    'spazzola',\n    'specie',\n    'spedire',\n    'spegnere',\n    'spelatura',\n    'speranza',\n    'spessore',\n    'spettrale',\n    'spezzato',\n    'spia',\n    'spigoloso',\n    'spillato',\n    'spinoso',\n    'spirale',\n    'splendido',\n    'sportivo',\n    'sposo',\n    'spranga',\n    'sprecare',\n    'spronato',\n    'spruzzo',\n    'spuntino',\n    'squillo',\n    'sradicare',\n    'srotolato',\n    'stabile',\n    'stacco',\n    'staffa',\n    'stagnare',\n    'stampato',\n    'stantio',\n    'starnuto',\n    'stasera',\n    'statuto',\n    'stelo',\n    'steppa',\n    'sterzo',\n    'stiletto',\n    'stima',\n    'stirpe',\n    'stivale',\n    'stizzoso',\n    'stonato',\n    'storico',\n    'strappo',\n    'stregato',\n    'stridulo',\n    'strozzare',\n    'strutto',\n    'stuccare',\n    'stufo',\n    'stupendo',\n    'subentro',\n    'succoso',\n    'sudore',\n    'suggerito',\n    'sugo',\n    'sultano',\n    'suonare',\n    'superbo',\n    'supporto',\n    'surgelato',\n    'surrogato',\n    'sussurro',\n    'sutura',\n    'svagare',\n    'svedese',\n    'sveglio',\n    'svelare',\n    'svenuto',\n    'svezia',\n    'sviluppo',\n    'svista',\n    'svizzera',\n    'svolta',\n    'svuotare',\n    'tabacco',\n    'tabulato',\n    'tacciare',\n    'taciturno',\n    'tale',\n    'talismano',\n    'tampone',\n    'tannino',\n    'tara',\n    'tardivo',\n    'targato',\n    'tariffa',\n    'tarpare',\n    'tartaruga',\n    'tasto',\n    'tattico',\n    'taverna',\n    'tavolata',\n    'tazza',\n    'teca',\n    'tecnico',\n    'telefono',\n    'temerario',\n    'tempo',\n    'temuto',\n    'tendone',\n    'tenero',\n    'tensione',\n    'tentacolo',\n    'teorema',\n    'terme',\n    'terrazzo',\n    'terzetto',\n    'tesi',\n    'tesserato',\n    'testato',\n    'tetro',\n    'tettoia',\n    'tifare',\n    'tigella',\n    'timbro',\n    'tinto',\n    'tipico',\n    'tipografo',\n    'tiraggio',\n    'tiro',\n    'titanio',\n    'titolo',\n    'titubante',\n    'tizio',\n    'tizzone',\n    'toccare',\n    'tollerare',\n    'tolto',\n    'tombola',\n    'tomo',\n    'tonfo',\n    'tonsilla',\n    'topazio',\n    'topologia',\n    'toppa',\n    'torba',\n    'tornare',\n    'torrone',\n    'tortora',\n    'toscano',\n    'tossire',\n    'tostatura',\n    'totano',\n    'trabocco',\n    'trachea',\n    'trafila',\n    'tragedia',\n    'tralcio',\n    'tramonto',\n    'transito',\n    'trapano',\n    'trarre',\n    'trasloco',\n    'trattato',\n    'trave',\n    'treccia',\n    'tremolio',\n    'trespolo',\n    'tributo',\n    'tricheco',\n    'trifoglio',\n    'trillo',\n    'trincea',\n    'trio',\n    'tristezza',\n    'triturato',\n    'trivella',\n    'tromba',\n    'trono',\n    'troppo',\n    'trottola',\n    'trovare',\n    'truccato',\n    'tubatura',\n    'tuffato',\n    'tulipano',\n    'tumulto',\n    'tunisia',\n    'turbare',\n    'turchino',\n    'tuta',\n    'tutela',\n    'ubicato',\n    'uccello',\n    'uccisore',\n    'udire',\n    'uditivo',\n    'uffa',\n    'ufficio',\n    'uguale',\n    'ulisse',\n    'ultimato',\n    'umano',\n    'umile',\n    'umorismo',\n    'uncinetto',\n    'ungere',\n    'ungherese',\n    'unicorno',\n    'unificato',\n    'unisono',\n    'unitario',\n    'unte',\n    'uovo',\n    'upupa',\n    'uragano',\n    'urgenza',\n    'urlo',\n    'usanza',\n    'usato',\n    'uscito',\n    'usignolo',\n    'usuraio',\n    'utensile',\n    'utilizzo',\n    'utopia',\n    'vacante',\n    'vaccinato',\n    'vagabondo',\n    'vagliato',\n    'valanga',\n    'valgo',\n    'valico',\n    'valletta',\n    'valoroso',\n    'valutare',\n    'valvola',\n    'vampata',\n    'vangare',\n    'vanitoso',\n    'vano',\n    'vantaggio',\n    'vanvera',\n    'vapore',\n    'varano',\n    'varcato',\n    'variante',\n    'vasca',\n    'vedetta',\n    'vedova',\n    'veduto',\n    'vegetale',\n    'veicolo',\n    'velcro',\n    'velina',\n    'velluto',\n    'veloce',\n    'venato',\n    'vendemmia',\n    'vento',\n    'verace',\n    'verbale',\n    'vergogna',\n    'verifica',\n    'vero',\n    'verruca',\n    'verticale',\n    'vescica',\n    'vessillo',\n    'vestale',\n    'veterano',\n    'vetrina',\n    'vetusto',\n    'viandante',\n    'vibrante',\n    'vicenda',\n    'vichingo',\n    'vicinanza',\n    'vidimare',\n    'vigilia',\n    'vigneto',\n    'vigore',\n    'vile',\n    'villano',\n    'vimini',\n    'vincitore',\n    'viola',\n    'vipera',\n    'virgola',\n    'virologo',\n    'virulento',\n    'viscoso',\n    'visione',\n    'vispo',\n    'vissuto',\n    'visura',\n    'vita',\n    'vitello',\n    'vittima',\n    'vivanda',\n    'vivido',\n    'viziare',\n    'voce',\n    'voga',\n    'volatile',\n    'volere',\n    'volpe',\n    'voragine',\n    'vulcano',\n    'zampogna',\n    'zanna',\n    'zappato',\n    'zattera',\n    'zavorra',\n    'zefiro',\n    'zelante',\n    'zelo',\n    'zenzero',\n    'zerbino',\n    'zibetto',\n    'zinco',\n    'zircone',\n    'zitto',\n    'zolla',\n    'zotico',\n    'zucchero',\n    'zufolo',\n    'zulu',\n    'zuppa'\n];\n//# sourceMappingURL=italian.js.map","// SPDX-License-Identifier: MIT\nexport const WORDLIST = [\n    'あいこくしん',\n    'あいさつ',\n    'あいだ',\n    'あおぞら',\n    'あかちゃん',\n    'あきる',\n    'あけがた',\n    'あける',\n    'あこがれる',\n    'あさい',\n    'あさひ',\n    'あしあと',\n    'あじわう',\n    'あずかる',\n    'あずき',\n    'あそぶ',\n    'あたえる',\n    'あたためる',\n    'あたりまえ',\n    'あたる',\n    'あつい',\n    'あつかう',\n    'あっしゅく',\n    'あつまり',\n    'あつめる',\n    'あてな',\n    'あてはまる',\n    'あひる',\n    'あぶら',\n    'あぶる',\n    'あふれる',\n    'あまい',\n    'あまど',\n    'あまやかす',\n    'あまり',\n    'あみもの',\n    'あめりか',\n    'あやまる',\n    'あゆむ',\n    'あらいぐま',\n    'あらし',\n    'あらすじ',\n    'あらためる',\n    'あらゆる',\n    'あらわす',\n    'ありがとう',\n    'あわせる',\n    'あわてる',\n    'あんい',\n    'あんがい',\n    'あんこ',\n    'あんぜん',\n    'あんてい',\n    'あんない',\n    'あんまり',\n    'いいだす',\n    'いおん',\n    'いがい',\n    'いがく',\n    'いきおい',\n    'いきなり',\n    'いきもの',\n    'いきる',\n    'いくじ',\n    'いくぶん',\n    'いけばな',\n    'いけん',\n    'いこう',\n    'いこく',\n    'いこつ',\n    'いさましい',\n    'いさん',\n    'いしき',\n    'いじゅう',\n    'いじょう',\n    'いじわる',\n    'いずみ',\n    'いずれ',\n    'いせい',\n    'いせえび',\n    'いせかい',\n    'いせき',\n    'いぜん',\n    'いそうろう',\n    'いそがしい',\n    'いだい',\n    'いだく',\n    'いたずら',\n    'いたみ',\n    'いたりあ',\n    'いちおう',\n    'いちじ',\n    'いちど',\n    'いちば',\n    'いちぶ',\n    'いちりゅう',\n    'いつか',\n    'いっしゅん',\n    'いっせい',\n    'いっそう',\n    'いったん',\n    'いっち',\n    'いってい',\n    'いっぽう',\n    'いてざ',\n    'いてん',\n    'いどう',\n    'いとこ',\n    'いない',\n    'いなか',\n    'いねむり',\n    'いのち',\n    'いのる',\n    'いはつ',\n    'いばる',\n    'いはん',\n    'いびき',\n    'いひん',\n    'いふく',\n    'いへん',\n    'いほう',\n    'いみん',\n    'いもうと',\n    'いもたれ',\n    'いもり',\n    'いやがる',\n    'いやす',\n    'いよかん',\n    'いよく',\n    'いらい',\n    'いらすと',\n    'いりぐち',\n    'いりょう',\n    'いれい',\n    'いれもの',\n    'いれる',\n    'いろえんぴつ',\n    'いわい',\n    'いわう',\n    'いわかん',\n    'いわば',\n    'いわゆる',\n    'いんげんまめ',\n    'いんさつ',\n    'いんしょう',\n    'いんよう',\n    'うえき',\n    'うえる',\n    'うおざ',\n    'うがい',\n    'うかぶ',\n    'うかべる',\n    'うきわ',\n    'うくらいな',\n    'うくれれ',\n    'うけたまわる',\n    'うけつけ',\n    'うけとる',\n    'うけもつ',\n    'うける',\n    'うごかす',\n    'うごく',\n    'うこん',\n    'うさぎ',\n    'うしなう',\n    'うしろがみ',\n    'うすい',\n    'うすぎ',\n    'うすぐらい',\n    'うすめる',\n    'うせつ',\n    'うちあわせ',\n    'うちがわ',\n    'うちき',\n    'うちゅう',\n    'うっかり',\n    'うつくしい',\n    'うったえる',\n    'うつる',\n    'うどん',\n    'うなぎ',\n    'うなじ',\n    'うなずく',\n    'うなる',\n    'うねる',\n    'うのう',\n    'うぶげ',\n    'うぶごえ',\n    'うまれる',\n    'うめる',\n    'うもう',\n    'うやまう',\n    'うよく',\n    'うらがえす',\n    'うらぐち',\n    'うらない',\n    'うりあげ',\n    'うりきれ',\n    'うるさい',\n    'うれしい',\n    'うれゆき',\n    'うれる',\n    'うろこ',\n    'うわき',\n    'うわさ',\n    'うんこう',\n    'うんちん',\n    'うんてん',\n    'うんどう',\n    'えいえん',\n    'えいが',\n    'えいきょう',\n    'えいご',\n    'えいせい',\n    'えいぶん',\n    'えいよう',\n    'えいわ',\n    'えおり',\n    'えがお',\n    'えがく',\n    'えきたい',\n    'えくせる',\n    'えしゃく',\n    'えすて',\n    'えつらん',\n    'えのぐ',\n    'えほうまき',\n    'えほん',\n    'えまき',\n    'えもじ',\n    'えもの',\n    'えらい',\n    'えらぶ',\n    'えりあ',\n    'えんえん',\n    'えんかい',\n    'えんぎ',\n    'えんげき',\n    'えんしゅう',\n    'えんぜつ',\n    'えんそく',\n    'えんちょう',\n    'えんとつ',\n    'おいかける',\n    'おいこす',\n    'おいしい',\n    'おいつく',\n    'おうえん',\n    'おうさま',\n    'おうじ',\n    'おうせつ',\n    'おうたい',\n    'おうふく',\n    'おうべい',\n    'おうよう',\n    'おえる',\n    'おおい',\n    'おおう',\n    'おおどおり',\n    'おおや',\n    'おおよそ',\n    'おかえり',\n    'おかず',\n    'おがむ',\n    'おかわり',\n    'おぎなう',\n    'おきる',\n    'おくさま',\n    'おくじょう',\n    'おくりがな',\n    'おくる',\n    'おくれる',\n    'おこす',\n    'おこなう',\n    'おこる',\n    'おさえる',\n    'おさない',\n    'おさめる',\n    'おしいれ',\n    'おしえる',\n    'おじぎ',\n    'おじさん',\n    'おしゃれ',\n    'おそらく',\n    'おそわる',\n    'おたがい',\n    'おたく',\n    'おだやか',\n    'おちつく',\n    'おっと',\n    'おつり',\n    'おでかけ',\n    'おとしもの',\n    'おとなしい',\n    'おどり',\n    'おどろかす',\n    'おばさん',\n    'おまいり',\n    'おめでとう',\n    'おもいで',\n    'おもう',\n    'おもたい',\n    'おもちゃ',\n    'おやつ',\n    'おやゆび',\n    'およぼす',\n    'おらんだ',\n    'おろす',\n    'おんがく',\n    'おんけい',\n    'おんしゃ',\n    'おんせん',\n    'おんだん',\n    'おんちゅう',\n    'おんどけい',\n    'かあつ',\n    'かいが',\n    'がいき',\n    'がいけん',\n    'がいこう',\n    'かいさつ',\n    'かいしゃ',\n    'かいすいよく',\n    'かいぜん',\n    'かいぞうど',\n    'かいつう',\n    'かいてん',\n    'かいとう',\n    'かいふく',\n    'がいへき',\n    'かいほう',\n    'かいよう',\n    'がいらい',\n    'かいわ',\n    'かえる',\n    'かおり',\n    'かかえる',\n    'かがく',\n    'かがし',\n    'かがみ',\n    'かくご',\n    'かくとく',\n    'かざる',\n    'がぞう',\n    'かたい',\n    'かたち',\n    'がちょう',\n    'がっきゅう',\n    'がっこう',\n    'がっさん',\n    'がっしょう',\n    'かなざわし',\n    'かのう',\n    'がはく',\n    'かぶか',\n    'かほう',\n    'かほご',\n    'かまう',\n    'かまぼこ',\n    'かめれおん',\n    'かゆい',\n    'かようび',\n    'からい',\n    'かるい',\n    'かろう',\n    'かわく',\n    'かわら',\n    'がんか',\n    'かんけい',\n    'かんこう',\n    'かんしゃ',\n    'かんそう',\n    'かんたん',\n    'かんち',\n    'がんばる',\n    'きあい',\n    'きあつ',\n    'きいろ',\n    'ぎいん',\n    'きうい',\n    'きうん',\n    'きえる',\n    'きおう',\n    'きおく',\n    'きおち',\n    'きおん',\n    'きかい',\n    'きかく',\n    'きかんしゃ',\n    'ききて',\n    'きくばり',\n    'きくらげ',\n    'きけんせい',\n    'きこう',\n    'きこえる',\n    'きこく',\n    'きさい',\n    'きさく',\n    'きさま',\n    'きさらぎ',\n    'ぎじかがく',\n    'ぎしき',\n    'ぎじたいけん',\n    'ぎじにってい',\n    'ぎじゅつしゃ',\n    'きすう',\n    'きせい',\n    'きせき',\n    'きせつ',\n    'きそう',\n    'きぞく',\n    'きぞん',\n    'きたえる',\n    'きちょう',\n    'きつえん',\n    'ぎっちり',\n    'きつつき',\n    'きつね',\n    'きてい',\n    'きどう',\n    'きどく',\n    'きない',\n    'きなが',\n    'きなこ',\n    'きぬごし',\n    'きねん',\n    'きのう',\n    'きのした',\n    'きはく',\n    'きびしい',\n    'きひん',\n    'きふく',\n    'きぶん',\n    'きぼう',\n    'きほん',\n    'きまる',\n    'きみつ',\n    'きむずかしい',\n    'きめる',\n    'きもだめし',\n    'きもち',\n    'きもの',\n    'きゃく',\n    'きやく',\n    'ぎゅうにく',\n    'きよう',\n    'きょうりゅう',\n    'きらい',\n    'きらく',\n    'きりん',\n    'きれい',\n    'きれつ',\n    'きろく',\n    'ぎろん',\n    'きわめる',\n    'ぎんいろ',\n    'きんかくじ',\n    'きんじょ',\n    'きんようび',\n    'ぐあい',\n    'くいず',\n    'くうかん',\n    'くうき',\n    'くうぐん',\n    'くうこう',\n    'ぐうせい',\n    'くうそう',\n    'ぐうたら',\n    'くうふく',\n    'くうぼ',\n    'くかん',\n    'くきょう',\n    'くげん',\n    'ぐこう',\n    'くさい',\n    'くさき',\n    'くさばな',\n    'くさる',\n    'くしゃみ',\n    'くしょう',\n    'くすのき',\n    'くすりゆび',\n    'くせげ',\n    'くせん',\n    'ぐたいてき',\n    'くださる',\n    'くたびれる',\n    'くちこみ',\n    'くちさき',\n    'くつした',\n    'ぐっすり',\n    'くつろぐ',\n    'くとうてん',\n    'くどく',\n    'くなん',\n    'くねくね',\n    'くのう',\n    'くふう',\n    'くみあわせ',\n    'くみたてる',\n    'くめる',\n    'くやくしょ',\n    'くらす',\n    'くらべる',\n    'くるま',\n    'くれる',\n    'くろう',\n    'くわしい',\n    'ぐんかん',\n    'ぐんしょく',\n    'ぐんたい',\n    'ぐんて',\n    'けあな',\n    'けいかく',\n    'けいけん',\n    'けいこ',\n    'けいさつ',\n    'げいじゅつ',\n    'けいたい',\n    'げいのうじん',\n    'けいれき',\n    'けいろ',\n    'けおとす',\n    'けおりもの',\n    'げきか',\n    'げきげん',\n    'げきだん',\n    'げきちん',\n    'げきとつ',\n    'げきは',\n    'げきやく',\n    'げこう',\n    'げこくじょう',\n    'げざい',\n    'けさき',\n    'げざん',\n    'けしき',\n    'けしごむ',\n    'けしょう',\n    'げすと',\n    'けたば',\n    'けちゃっぷ',\n    'けちらす',\n    'けつあつ',\n    'けつい',\n    'けつえき',\n    'けっこん',\n    'けつじょ',\n    'けっせき',\n    'けってい',\n    'けつまつ',\n    'げつようび',\n    'げつれい',\n    'けつろん',\n    'げどく',\n    'けとばす',\n    'けとる',\n    'けなげ',\n    'けなす',\n    'けなみ',\n    'けぬき',\n    'げねつ',\n    'けねん',\n    'けはい',\n    'げひん',\n    'けぶかい',\n    'げぼく',\n    'けまり',\n    'けみかる',\n    'けむし',\n    'けむり',\n    'けもの',\n    'けらい',\n    'けろけろ',\n    'けわしい',\n    'けんい',\n    'けんえつ',\n    'けんお',\n    'けんか',\n    'げんき',\n    'けんげん',\n    'けんこう',\n    'けんさく',\n    'けんしゅう',\n    'けんすう',\n    'げんそう',\n    'けんちく',\n    'けんてい',\n    'けんとう',\n    'けんない',\n    'けんにん',\n    'げんぶつ',\n    'けんま',\n    'けんみん',\n    'けんめい',\n    'けんらん',\n    'けんり',\n    'こあくま',\n    'こいぬ',\n    'こいびと',\n    'ごうい',\n    'こうえん',\n    'こうおん',\n    'こうかん',\n    'ごうきゅう',\n    'ごうけい',\n    'こうこう',\n    'こうさい',\n    'こうじ',\n    'こうすい',\n    'ごうせい',\n    'こうそく',\n    'こうたい',\n    'こうちゃ',\n    'こうつう',\n    'こうてい',\n    'こうどう',\n    'こうない',\n    'こうはい',\n    'ごうほう',\n    'ごうまん',\n    'こうもく',\n    'こうりつ',\n    'こえる',\n    'こおり',\n    'ごかい',\n    'ごがつ',\n    'ごかん',\n    'こくご',\n    'こくさい',\n    'こくとう',\n    'こくない',\n    'こくはく',\n    'こぐま',\n    'こけい',\n    'こける',\n    'ここのか',\n    'こころ',\n    'こさめ',\n    'こしつ',\n    'こすう',\n    'こせい',\n    'こせき',\n    'こぜん',\n    'こそだて',\n    'こたい',\n    'こたえる',\n    'こたつ',\n    'こちょう',\n    'こっか',\n    'こつこつ',\n    'こつばん',\n    'こつぶ',\n    'こてい',\n    'こてん',\n    'ことがら',\n    'ことし',\n    'ことば',\n    'ことり',\n    'こなごな',\n    'こねこね',\n    'このまま',\n    'このみ',\n    'このよ',\n    'ごはん',\n    'こひつじ',\n    'こふう',\n    'こふん',\n    'こぼれる',\n    'ごまあぶら',\n    'こまかい',\n    'ごますり',\n    'こまつな',\n    'こまる',\n    'こむぎこ',\n    'こもじ',\n    'こもち',\n    'こもの',\n    'こもん',\n    'こやく',\n    'こやま',\n    'こゆう',\n    'こゆび',\n    'こよい',\n    'こよう',\n    'こりる',\n    'これくしょん',\n    'ころっけ',\n    'こわもて',\n    'こわれる',\n    'こんいん',\n    'こんかい',\n    'こんき',\n    'こんしゅう',\n    'こんすい',\n    'こんだて',\n    'こんとん',\n    'こんなん',\n    'こんびに',\n    'こんぽん',\n    'こんまけ',\n    'こんや',\n    'こんれい',\n    'こんわく',\n    'ざいえき',\n    'さいかい',\n    'さいきん',\n    'ざいげん',\n    'ざいこ',\n    'さいしょ',\n    'さいせい',\n    'ざいたく',\n    'ざいちゅう',\n    'さいてき',\n    'ざいりょう',\n    'さうな',\n    'さかいし',\n    'さがす',\n    'さかな',\n    'さかみち',\n    'さがる',\n    'さぎょう',\n    'さくし',\n    'さくひん',\n    'さくら',\n    'さこく',\n    'さこつ',\n    'さずかる',\n    'ざせき',\n    'さたん',\n    'さつえい',\n    'ざつおん',\n    'ざっか',\n    'ざつがく',\n    'さっきょく',\n    'ざっし',\n    'さつじん',\n    'ざっそう',\n    'さつたば',\n    'さつまいも',\n    'さてい',\n    'さといも',\n    'さとう',\n    'さとおや',\n    'さとし',\n    'さとる',\n    'さのう',\n    'さばく',\n    'さびしい',\n    'さべつ',\n    'さほう',\n    'さほど',\n    'さます',\n    'さみしい',\n    'さみだれ',\n    'さむけ',\n    'さめる',\n    'さやえんどう',\n    'さゆう',\n    'さよう',\n    'さよく',\n    'さらだ',\n    'ざるそば',\n    'さわやか',\n    'さわる',\n    'さんいん',\n    'さんか',\n    'さんきゃく',\n    'さんこう',\n    'さんさい',\n    'ざんしょ',\n    'さんすう',\n    'さんせい',\n    'さんそ',\n    'さんち',\n    'さんま',\n    'さんみ',\n    'さんらん',\n    'しあい',\n    'しあげ',\n    'しあさって',\n    'しあわせ',\n    'しいく',\n    'しいん',\n    'しうち',\n    'しえい',\n    'しおけ',\n    'しかい',\n    'しかく',\n    'じかん',\n    'しごと',\n    'しすう',\n    'じだい',\n    'したうけ',\n    'したぎ',\n    'したて',\n    'したみ',\n    'しちょう',\n    'しちりん',\n    'しっかり',\n    'しつじ',\n    'しつもん',\n    'してい',\n    'してき',\n    'してつ',\n    'じてん',\n    'じどう',\n    'しなぎれ',\n    'しなもの',\n    'しなん',\n    'しねま',\n    'しねん',\n    'しのぐ',\n    'しのぶ',\n    'しはい',\n    'しばかり',\n    'しはつ',\n    'しはらい',\n    'しはん',\n    'しひょう',\n    'しふく',\n    'じぶん',\n    'しへい',\n    'しほう',\n    'しほん',\n    'しまう',\n    'しまる',\n    'しみん',\n    'しむける',\n    'じむしょ',\n    'しめい',\n    'しめる',\n    'しもん',\n    'しゃいん',\n    'しゃうん',\n    'しゃおん',\n    'じゃがいも',\n    'しやくしょ',\n    'しゃくほう',\n    'しゃけん',\n    'しゃこ',\n    'しゃざい',\n    'しゃしん',\n    'しゃせん',\n    'しゃそう',\n    'しゃたい',\n    'しゃちょう',\n    'しゃっきん',\n    'じゃま',\n    'しゃりん',\n    'しゃれい',\n    'じゆう',\n    'じゅうしょ',\n    'しゅくはく',\n    'じゅしん',\n    'しゅっせき',\n    'しゅみ',\n    'しゅらば',\n    'じゅんばん',\n    'しょうかい',\n    'しょくたく',\n    'しょっけん',\n    'しょどう',\n    'しょもつ',\n    'しらせる',\n    'しらべる',\n    'しんか',\n    'しんこう',\n    'じんじゃ',\n    'しんせいじ',\n    'しんちく',\n    'しんりん',\n    'すあげ',\n    'すあし',\n    'すあな',\n    'ずあん',\n    'すいえい',\n    'すいか',\n    'すいとう',\n    'ずいぶん',\n    'すいようび',\n    'すうがく',\n    'すうじつ',\n    'すうせん',\n    'すおどり',\n    'すきま',\n    'すくう',\n    'すくない',\n    'すける',\n    'すごい',\n    'すこし',\n    'ずさん',\n    'すずしい',\n    'すすむ',\n    'すすめる',\n    'すっかり',\n    'ずっしり',\n    'ずっと',\n    'すてき',\n    'すてる',\n    'すねる',\n    'すのこ',\n    'すはだ',\n    'すばらしい',\n    'ずひょう',\n    'ずぶぬれ',\n    'すぶり',\n    'すふれ',\n    'すべて',\n    'すべる',\n    'ずほう',\n    'すぼん',\n    'すまい',\n    'すめし',\n    'すもう',\n    'すやき',\n    'すらすら',\n    'するめ',\n    'すれちがう',\n    'すろっと',\n    'すわる',\n    'すんぜん',\n    'すんぽう',\n    'せあぶら',\n    'せいかつ',\n    'せいげん',\n    'せいじ',\n    'せいよう',\n    'せおう',\n    'せかいかん',\n    'せきにん',\n    'せきむ',\n    'せきゆ',\n    'せきらんうん',\n    'せけん',\n    'せこう',\n    'せすじ',\n    'せたい',\n    'せたけ',\n    'せっかく',\n    'せっきゃく',\n    'ぜっく',\n    'せっけん',\n    'せっこつ',\n    'せっさたくま',\n    'せつぞく',\n    'せつだん',\n    'せつでん',\n    'せっぱん',\n    'せつび',\n    'せつぶん',\n    'せつめい',\n    'せつりつ',\n    'せなか',\n    'せのび',\n    'せはば',\n    'せびろ',\n    'せぼね',\n    'せまい',\n    'せまる',\n    'せめる',\n    'せもたれ',\n    'せりふ',\n    'ぜんあく',\n    'せんい',\n    'せんえい',\n    'せんか',\n    'せんきょ',\n    'せんく',\n    'せんげん',\n    'ぜんご',\n    'せんさい',\n    'せんしゅ',\n    'せんすい',\n    'せんせい',\n    'せんぞ',\n    'せんたく',\n    'せんちょう',\n    'せんてい',\n    'せんとう',\n    'せんぬき',\n    'せんねん',\n    'せんぱい',\n    'ぜんぶ',\n    'ぜんぽう',\n    'せんむ',\n    'せんめんじょ',\n    'せんもん',\n    'せんやく',\n    'せんゆう',\n    'せんよう',\n    'ぜんら',\n    'ぜんりゃく',\n    'せんれい',\n    'せんろ',\n    'そあく',\n    'そいとげる',\n    'そいね',\n    'そうがんきょう',\n    'そうき',\n    'そうご',\n    'そうしん',\n    'そうだん',\n    'そうなん',\n    'そうび',\n    'そうめん',\n    'そうり',\n    'そえもの',\n    'そえん',\n    'そがい',\n    'そげき',\n    'そこう',\n    'そこそこ',\n    'そざい',\n    'そしな',\n    'そせい',\n    'そせん',\n    'そそぐ',\n    'そだてる',\n    'そつう',\n    'そつえん',\n    'そっかん',\n    'そつぎょう',\n    'そっけつ',\n    'そっこう',\n    'そっせん',\n    'そっと',\n    'そとがわ',\n    'そとづら',\n    'そなえる',\n    'そなた',\n    'そふぼ',\n    'そぼく',\n    'そぼろ',\n    'そまつ',\n    'そまる',\n    'そむく',\n    'そむりえ',\n    'そめる',\n    'そもそも',\n    'そよかぜ',\n    'そらまめ',\n    'そろう',\n    'そんかい',\n    'そんけい',\n    'そんざい',\n    'そんしつ',\n    'そんぞく',\n    'そんちょう',\n    'ぞんび',\n    'ぞんぶん',\n    'そんみん',\n    'たあい',\n    'たいいん',\n    'たいうん',\n    'たいえき',\n    'たいおう',\n    'だいがく',\n    'たいき',\n    'たいぐう',\n    'たいけん',\n    'たいこ',\n    'たいざい',\n    'だいじょうぶ',\n    'だいすき',\n    'たいせつ',\n    'たいそう',\n    'だいたい',\n    'たいちょう',\n    'たいてい',\n    'だいどころ',\n    'たいない',\n    'たいねつ',\n    'たいのう',\n    'たいはん',\n    'だいひょう',\n    'たいふう',\n    'たいへん',\n    'たいほ',\n    'たいまつばな',\n    'たいみんぐ',\n    'たいむ',\n    'たいめん',\n    'たいやき',\n    'たいよう',\n    'たいら',\n    'たいりょく',\n    'たいる',\n    'たいわん',\n    'たうえ',\n    'たえる',\n    'たおす',\n    'たおる',\n    'たおれる',\n    'たかい',\n    'たかね',\n    'たきび',\n    'たくさん',\n    'たこく',\n    'たこやき',\n    'たさい',\n    'たしざん',\n    'だじゃれ',\n    'たすける',\n    'たずさわる',\n    'たそがれ',\n    'たたかう',\n    'たたく',\n    'ただしい',\n    'たたみ',\n    'たちばな',\n    'だっかい',\n    'だっきゃく',\n    'だっこ',\n    'だっしゅつ',\n    'だったい',\n    'たてる',\n    'たとえる',\n    'たなばた',\n    'たにん',\n    'たぬき',\n    'たのしみ',\n    'たはつ',\n    'たぶん',\n    'たべる',\n    'たぼう',\n    'たまご',\n    'たまる',\n    'だむる',\n    'ためいき',\n    'ためす',\n    'ためる',\n    'たもつ',\n    'たやすい',\n    'たよる',\n    'たらす',\n    'たりきほんがん',\n    'たりょう',\n    'たりる',\n    'たると',\n    'たれる',\n    'たれんと',\n    'たろっと',\n    'たわむれる',\n    'だんあつ',\n    'たんい',\n    'たんおん',\n    'たんか',\n    'たんき',\n    'たんけん',\n    'たんご',\n    'たんさん',\n    'たんじょうび',\n    'だんせい',\n    'たんそく',\n    'たんたい',\n    'だんち',\n    'たんてい',\n    'たんとう',\n    'だんな',\n    'たんにん',\n    'だんねつ',\n    'たんのう',\n    'たんぴん',\n    'だんぼう',\n    'たんまつ',\n    'たんめい',\n    'だんれつ',\n    'だんろ',\n    'だんわ',\n    'ちあい',\n    'ちあん',\n    'ちいき',\n    'ちいさい',\n    'ちえん',\n    'ちかい',\n    'ちから',\n    'ちきゅう',\n    'ちきん',\n    'ちけいず',\n    'ちけん',\n    'ちこく',\n    'ちさい',\n    'ちしき',\n    'ちしりょう',\n    'ちせい',\n    'ちそう',\n    'ちたい',\n    'ちたん',\n    'ちちおや',\n    'ちつじょ',\n    'ちてき',\n    'ちてん',\n    'ちぬき',\n    'ちぬり',\n    'ちのう',\n    'ちひょう',\n    'ちへいせん',\n    'ちほう',\n    'ちまた',\n    'ちみつ',\n    'ちみどろ',\n    'ちめいど',\n    'ちゃんこなべ',\n    'ちゅうい',\n    'ちゆりょく',\n    'ちょうし',\n    'ちょさくけん',\n    'ちらし',\n    'ちらみ',\n    'ちりがみ',\n    'ちりょう',\n    'ちるど',\n    'ちわわ',\n    'ちんたい',\n    'ちんもく',\n    'ついか',\n    'ついたち',\n    'つうか',\n    'つうじょう',\n    'つうはん',\n    'つうわ',\n    'つかう',\n    'つかれる',\n    'つくね',\n    'つくる',\n    'つけね',\n    'つける',\n    'つごう',\n    'つたえる',\n    'つづく',\n    'つつじ',\n    'つつむ',\n    'つとめる',\n    'つながる',\n    'つなみ',\n    'つねづね',\n    'つのる',\n    'つぶす',\n    'つまらない',\n    'つまる',\n    'つみき',\n    'つめたい',\n    'つもり',\n    'つもる',\n    'つよい',\n    'つるぼ',\n    'つるみく',\n    'つわもの',\n    'つわり',\n    'てあし',\n    'てあて',\n    'てあみ',\n    'ていおん',\n    'ていか',\n    'ていき',\n    'ていけい',\n    'ていこく',\n    'ていさつ',\n    'ていし',\n    'ていせい',\n    'ていたい',\n    'ていど',\n    'ていねい',\n    'ていひょう',\n    'ていへん',\n    'ていぼう',\n    'てうち',\n    'ておくれ',\n    'てきとう',\n    'てくび',\n    'でこぼこ',\n    'てさぎょう',\n    'てさげ',\n    'てすり',\n    'てそう',\n    'てちがい',\n    'てちょう',\n    'てつがく',\n    'てつづき',\n    'でっぱ',\n    'てつぼう',\n    'てつや',\n    'でぬかえ',\n    'てぬき',\n    'てぬぐい',\n    'てのひら',\n    'てはい',\n    'てぶくろ',\n    'てふだ',\n    'てほどき',\n    'てほん',\n    'てまえ',\n    'てまきずし',\n    'てみじか',\n    'てみやげ',\n    'てらす',\n    'てれび',\n    'てわけ',\n    'てわたし',\n    'でんあつ',\n    'てんいん',\n    'てんかい',\n    'てんき',\n    'てんぐ',\n    'てんけん',\n    'てんごく',\n    'てんさい',\n    'てんし',\n    'てんすう',\n    'でんち',\n    'てんてき',\n    'てんとう',\n    'てんない',\n    'てんぷら',\n    'てんぼうだい',\n    'てんめつ',\n    'てんらんかい',\n    'でんりょく',\n    'でんわ',\n    'どあい',\n    'といれ',\n    'どうかん',\n    'とうきゅう',\n    'どうぐ',\n    'とうし',\n    'とうむぎ',\n    'とおい',\n    'とおか',\n    'とおく',\n    'とおす',\n    'とおる',\n    'とかい',\n    'とかす',\n    'ときおり',\n    'ときどき',\n    'とくい',\n    'とくしゅう',\n    'とくてん',\n    'とくに',\n    'とくべつ',\n    'とけい',\n    'とける',\n    'とこや',\n    'とさか',\n    'としょかん',\n    'とそう',\n    'とたん',\n    'とちゅう',\n    'とっきゅう',\n    'とっくん',\n    'とつぜん',\n    'とつにゅう',\n    'とどける',\n    'ととのえる',\n    'とない',\n    'となえる',\n    'となり',\n    'とのさま',\n    'とばす',\n    'どぶがわ',\n    'とほう',\n    'とまる',\n    'とめる',\n    'ともだち',\n    'ともる',\n    'どようび',\n    'とらえる',\n    'とんかつ',\n    'どんぶり',\n    'ないかく',\n    'ないこう',\n    'ないしょ',\n    'ないす',\n    'ないせん',\n    'ないそう',\n    'なおす',\n    'ながい',\n    'なくす',\n    'なげる',\n    'なこうど',\n    'なさけ',\n    'なたでここ',\n    'なっとう',\n    'なつやすみ',\n    'ななおし',\n    'なにごと',\n    'なにもの',\n    'なにわ',\n    'なのか',\n    'なふだ',\n    'なまいき',\n    'なまえ',\n    'なまみ',\n    'なみだ',\n    'なめらか',\n    'なめる',\n    'なやむ',\n    'ならう',\n    'ならび',\n    'ならぶ',\n    'なれる',\n    'なわとび',\n    'なわばり',\n    'にあう',\n    'にいがた',\n    'にうけ',\n    'におい',\n    'にかい',\n    'にがて',\n    'にきび',\n    'にくしみ',\n    'にくまん',\n    'にげる',\n    'にさんかたんそ',\n    'にしき',\n    'にせもの',\n    'にちじょう',\n    'にちようび',\n    'にっか',\n    'にっき',\n    'にっけい',\n    'にっこう',\n    'にっさん',\n    'にっしょく',\n    'にっすう',\n    'にっせき',\n    'にってい',\n    'になう',\n    'にほん',\n    'にまめ',\n    'にもつ',\n    'にやり',\n    'にゅういん',\n    'にりんしゃ',\n    'にわとり',\n    'にんい',\n    'にんか',\n    'にんき',\n    'にんげん',\n    'にんしき',\n    'にんずう',\n    'にんそう',\n    'にんたい',\n    'にんち',\n    'にんてい',\n    'にんにく',\n    'にんぷ',\n    'にんまり',\n    'にんむ',\n    'にんめい',\n    'にんよう',\n    'ぬいくぎ',\n    'ぬかす',\n    'ぬぐいとる',\n    'ぬぐう',\n    'ぬくもり',\n    'ぬすむ',\n    'ぬまえび',\n    'ぬめり',\n    'ぬらす',\n    'ぬんちゃく',\n    'ねあげ',\n    'ねいき',\n    'ねいる',\n    'ねいろ',\n    'ねぐせ',\n    'ねくたい',\n    'ねくら',\n    'ねこぜ',\n    'ねこむ',\n    'ねさげ',\n    'ねすごす',\n    'ねそべる',\n    'ねだん',\n    'ねつい',\n    'ねっしん',\n    'ねつぞう',\n    'ねったいぎょ',\n    'ねぶそく',\n    'ねふだ',\n    'ねぼう',\n    'ねほりはほり',\n    'ねまき',\n    'ねまわし',\n    'ねみみ',\n    'ねむい',\n    'ねむたい',\n    'ねもと',\n    'ねらう',\n    'ねわざ',\n    'ねんいり',\n    'ねんおし',\n    'ねんかん',\n    'ねんきん',\n    'ねんぐ',\n    'ねんざ',\n    'ねんし',\n    'ねんちゃく',\n    'ねんど',\n    'ねんぴ',\n    'ねんぶつ',\n    'ねんまつ',\n    'ねんりょう',\n    'ねんれい',\n    'のいず',\n    'のおづま',\n    'のがす',\n    'のきなみ',\n    'のこぎり',\n    'のこす',\n    'のこる',\n    'のせる',\n    'のぞく',\n    'のぞむ',\n    'のたまう',\n    'のちほど',\n    'のっく',\n    'のばす',\n    'のはら',\n    'のべる',\n    'のぼる',\n    'のみもの',\n    'のやま',\n    'のらいぬ',\n    'のらねこ',\n    'のりもの',\n    'のりゆき',\n    'のれん',\n    'のんき',\n    'ばあい',\n    'はあく',\n    'ばあさん',\n    'ばいか',\n    'ばいく',\n    'はいけん',\n    'はいご',\n    'はいしん',\n    'はいすい',\n    'はいせん',\n    'はいそう',\n    'はいち',\n    'ばいばい',\n    'はいれつ',\n    'はえる',\n    'はおる',\n    'はかい',\n    'ばかり',\n    'はかる',\n    'はくしゅ',\n    'はけん',\n    'はこぶ',\n    'はさみ',\n    'はさん',\n    'はしご',\n    'ばしょ',\n    'はしる',\n    'はせる',\n    'ぱそこん',\n    'はそん',\n    'はたん',\n    'はちみつ',\n    'はつおん',\n    'はっかく',\n    'はづき',\n    'はっきり',\n    'はっくつ',\n    'はっけん',\n    'はっこう',\n    'はっさん',\n    'はっしん',\n    'はったつ',\n    'はっちゅう',\n    'はってん',\n    'はっぴょう',\n    'はっぽう',\n    'はなす',\n    'はなび',\n    'はにかむ',\n    'はぶらし',\n    'はみがき',\n    'はむかう',\n    'はめつ',\n    'はやい',\n    'はやし',\n    'はらう',\n    'はろうぃん',\n    'はわい',\n    'はんい',\n    'はんえい',\n    'はんおん',\n    'はんかく',\n    'はんきょう',\n    'ばんぐみ',\n    'はんこ',\n    'はんしゃ',\n    'はんすう',\n    'はんだん',\n    'ぱんち',\n    'ぱんつ',\n    'はんてい',\n    'はんとし',\n    'はんのう',\n    'はんぱ',\n    'はんぶん',\n    'はんぺん',\n    'はんぼうき',\n    'はんめい',\n    'はんらん',\n    'はんろん',\n    'ひいき',\n    'ひうん',\n    'ひえる',\n    'ひかく',\n    'ひかり',\n    'ひかる',\n    'ひかん',\n    'ひくい',\n    'ひけつ',\n    'ひこうき',\n    'ひこく',\n    'ひさい',\n    'ひさしぶり',\n    'ひさん',\n    'びじゅつかん',\n    'ひしょ',\n    'ひそか',\n    'ひそむ',\n    'ひたむき',\n    'ひだり',\n    'ひたる',\n    'ひつぎ',\n    'ひっこし',\n    'ひっし',\n    'ひつじゅひん',\n    'ひっす',\n    'ひつぜん',\n    'ぴったり',\n    'ぴっちり',\n    'ひつよう',\n    'ひてい',\n    'ひとごみ',\n    'ひなまつり',\n    'ひなん',\n    'ひねる',\n    'ひはん',\n    'ひびく',\n    'ひひょう',\n    'ひほう',\n    'ひまわり',\n    'ひまん',\n    'ひみつ',\n    'ひめい',\n    'ひめじし',\n    'ひやけ',\n    'ひやす',\n    'ひよう',\n    'びょうき',\n    'ひらがな',\n    'ひらく',\n    'ひりつ',\n    'ひりょう',\n    'ひるま',\n    'ひるやすみ',\n    'ひれい',\n    'ひろい',\n    'ひろう',\n    'ひろき',\n    'ひろゆき',\n    'ひんかく',\n    'ひんけつ',\n    'ひんこん',\n    'ひんしゅ',\n    'ひんそう',\n    'ぴんち',\n    'ひんぱん',\n    'びんぼう',\n    'ふあん',\n    'ふいうち',\n    'ふうけい',\n    'ふうせん',\n    'ぷうたろう',\n    'ふうとう',\n    'ふうふ',\n    'ふえる',\n    'ふおん',\n    'ふかい',\n    'ふきん',\n    'ふくざつ',\n    'ふくぶくろ',\n    'ふこう',\n    'ふさい',\n    'ふしぎ',\n    'ふじみ',\n    'ふすま',\n    'ふせい',\n    'ふせぐ',\n    'ふそく',\n    'ぶたにく',\n    'ふたん',\n    'ふちょう',\n    'ふつう',\n    'ふつか',\n    'ふっかつ',\n    'ふっき',\n    'ふっこく',\n    'ぶどう',\n    'ふとる',\n    'ふとん',\n    'ふのう',\n    'ふはい',\n    'ふひょう',\n    'ふへん',\n    'ふまん',\n    'ふみん',\n    'ふめつ',\n    'ふめん',\n    'ふよう',\n    'ふりこ',\n    'ふりる',\n    'ふるい',\n    'ふんいき',\n    'ぶんがく',\n    'ぶんぐ',\n    'ふんしつ',\n    'ぶんせき',\n    'ふんそう',\n    'ぶんぽう',\n    'へいあん',\n    'へいおん',\n    'へいがい',\n    'へいき',\n    'へいげん',\n    'へいこう',\n    'へいさ',\n    'へいしゃ',\n    'へいせつ',\n    'へいそ',\n    'へいたく',\n    'へいてん',\n    'へいねつ',\n    'へいわ',\n    'へきが',\n    'へこむ',\n    'べにいろ',\n    'べにしょうが',\n    'へらす',\n    'へんかん',\n    'べんきょう',\n    'べんごし',\n    'へんさい',\n    'へんたい',\n    'べんり',\n    'ほあん',\n    'ほいく',\n    'ぼうぎょ',\n    'ほうこく',\n    'ほうそう',\n    'ほうほう',\n    'ほうもん',\n    'ほうりつ',\n    'ほえる',\n    'ほおん',\n    'ほかん',\n    'ほきょう',\n    'ぼきん',\n    'ほくろ',\n    'ほけつ',\n    'ほけん',\n    'ほこう',\n    'ほこる',\n    'ほしい',\n    'ほしつ',\n    'ほしゅ',\n    'ほしょう',\n    'ほせい',\n    'ほそい',\n    'ほそく',\n    'ほたて',\n    'ほたる',\n    'ぽちぶくろ',\n    'ほっきょく',\n    'ほっさ',\n    'ほったん',\n    'ほとんど',\n    'ほめる',\n    'ほんい',\n    'ほんき',\n    'ほんけ',\n    'ほんしつ',\n    'ほんやく',\n    'まいにち',\n    'まかい',\n    'まかせる',\n    'まがる',\n    'まける',\n    'まこと',\n    'まさつ',\n    'まじめ',\n    'ますく',\n    'まぜる',\n    'まつり',\n    'まとめ',\n    'まなぶ',\n    'まぬけ',\n    'まねく',\n    'まほう',\n    'まもる',\n    'まゆげ',\n    'まよう',\n    'まろやか',\n    'まわす',\n    'まわり',\n    'まわる',\n    'まんが',\n    'まんきつ',\n    'まんぞく',\n    'まんなか',\n    'みいら',\n    'みうち',\n    'みえる',\n    'みがく',\n    'みかた',\n    'みかん',\n    'みけん',\n    'みこん',\n    'みじかい',\n    'みすい',\n    'みすえる',\n    'みせる',\n    'みっか',\n    'みつかる',\n    'みつける',\n    'みてい',\n    'みとめる',\n    'みなと',\n    'みなみかさい',\n    'みねらる',\n    'みのう',\n    'みのがす',\n    'みほん',\n    'みもと',\n    'みやげ',\n    'みらい',\n    'みりょく',\n    'みわく',\n    'みんか',\n    'みんぞく',\n    'むいか',\n    'むえき',\n    'むえん',\n    'むかい',\n    'むかう',\n    'むかえ',\n    'むかし',\n    'むぎちゃ',\n    'むける',\n    'むげん',\n    'むさぼる',\n    'むしあつい',\n    'むしば',\n    'むじゅん',\n    'むしろ',\n    'むすう',\n    'むすこ',\n    'むすぶ',\n    'むすめ',\n    'むせる',\n    'むせん',\n    'むちゅう',\n    'むなしい',\n    'むのう',\n    'むやみ',\n    'むよう',\n    'むらさき',\n    'むりょう',\n    'むろん',\n    'めいあん',\n    'めいうん',\n    'めいえん',\n    'めいかく',\n    'めいきょく',\n    'めいさい',\n    'めいし',\n    'めいそう',\n    'めいぶつ',\n    'めいれい',\n    'めいわく',\n    'めぐまれる',\n    'めざす',\n    'めした',\n    'めずらしい',\n    'めだつ',\n    'めまい',\n    'めやす',\n    'めんきょ',\n    'めんせき',\n    'めんどう',\n    'もうしあげる',\n    'もうどうけん',\n    'もえる',\n    'もくし',\n    'もくてき',\n    'もくようび',\n    'もちろん',\n    'もどる',\n    'もらう',\n    'もんく',\n    'もんだい',\n    'やおや',\n    'やける',\n    'やさい',\n    'やさしい',\n    'やすい',\n    'やすたろう',\n    'やすみ',\n    'やせる',\n    'やそう',\n    'やたい',\n    'やちん',\n    'やっと',\n    'やっぱり',\n    'やぶる',\n    'やめる',\n    'ややこしい',\n    'やよい',\n    'やわらかい',\n    'ゆうき',\n    'ゆうびんきょく',\n    'ゆうべ',\n    'ゆうめい',\n    'ゆけつ',\n    'ゆしゅつ',\n    'ゆせん',\n    'ゆそう',\n    'ゆたか',\n    'ゆちゃく',\n    'ゆでる',\n    'ゆにゅう',\n    'ゆびわ',\n    'ゆらい',\n    'ゆれる',\n    'ようい',\n    'ようか',\n    'ようきゅう',\n    'ようじ',\n    'ようす',\n    'ようちえん',\n    'よかぜ',\n    'よかん',\n    'よきん',\n    'よくせい',\n    'よくぼう',\n    'よけい',\n    'よごれる',\n    'よさん',\n    'よしゅう',\n    'よそう',\n    'よそく',\n    'よっか',\n    'よてい',\n    'よどがわく',\n    'よねつ',\n    'よやく',\n    'よゆう',\n    'よろこぶ',\n    'よろしい',\n    'らいう',\n    'らくがき',\n    'らくご',\n    'らくさつ',\n    'らくだ',\n    'らしんばん',\n    'らせん',\n    'らぞく',\n    'らたい',\n    'らっか',\n    'られつ',\n    'りえき',\n    'りかい',\n    'りきさく',\n    'りきせつ',\n    'りくぐん',\n    'りくつ',\n    'りけん',\n    'りこう',\n    'りせい',\n    'りそう',\n    'りそく',\n    'りてん',\n    'りねん',\n    'りゆう',\n    'りゅうがく',\n    'りよう',\n    'りょうり',\n    'りょかん',\n    'りょくちゃ',\n    'りょこう',\n    'りりく',\n    'りれき',\n    'りろん',\n    'りんご',\n    'るいけい',\n    'るいさい',\n    'るいじ',\n    'るいせき',\n    'るすばん',\n    'るりがわら',\n    'れいかん',\n    'れいぎ',\n    'れいせい',\n    'れいぞうこ',\n    'れいとう',\n    'れいぼう',\n    'れきし',\n    'れきだい',\n    'れんあい',\n    'れんけい',\n    'れんこん',\n    'れんさい',\n    'れんしゅう',\n    'れんぞく',\n    'れんらく',\n    'ろうか',\n    'ろうご',\n    'ろうじん',\n    'ろうそく',\n    'ろくが',\n    'ろこつ',\n    'ろじうら',\n    'ろしゅつ',\n    'ろせん',\n    'ろてん',\n    'ろめん',\n    'ろれつ',\n    'ろんぎ',\n    'ろんぱ',\n    'ろんぶん',\n    'ろんり',\n    'わかす',\n    'わかめ',\n    'わかやま',\n    'わかれる',\n    'わしつ',\n    'わじまし',\n    'わすれもの',\n    'わらう',\n    'われる'\n];\n//# sourceMappingURL=japanese.js.map","// SPDX-License-Identifier: MIT\nexport const WORDLIST = [\n    '가격',\n    '가끔',\n    '가난',\n    '가능',\n    '가득',\n    '가르침',\n    '가뭄',\n    '가방',\n    '가상',\n    '가슴',\n    '가운데',\n    '가을',\n    '가이드',\n    '가입',\n    '가장',\n    '가정',\n    '가족',\n    '가죽',\n    '각오',\n    '각자',\n    '간격',\n    '간부',\n    '간섭',\n    '간장',\n    '간접',\n    '간판',\n    '갈등',\n    '갈비',\n    '갈색',\n    '갈증',\n    '감각',\n    '감기',\n    '감소',\n    '감수성',\n    '감자',\n    '감정',\n    '갑자기',\n    '강남',\n    '강당',\n    '강도',\n    '강력히',\n    '강변',\n    '강북',\n    '강사',\n    '강수량',\n    '강아지',\n    '강원도',\n    '강의',\n    '강제',\n    '강조',\n    '같이',\n    '개구리',\n    '개나리',\n    '개방',\n    '개별',\n    '개선',\n    '개성',\n    '개인',\n    '객관적',\n    '거실',\n    '거액',\n    '거울',\n    '거짓',\n    '거품',\n    '걱정',\n    '건강',\n    '건물',\n    '건설',\n    '건조',\n    '건축',\n    '걸음',\n    '검사',\n    '검토',\n    '게시판',\n    '게임',\n    '겨울',\n    '견해',\n    '결과',\n    '결국',\n    '결론',\n    '결석',\n    '결승',\n    '결심',\n    '결정',\n    '결혼',\n    '경계',\n    '경고',\n    '경기',\n    '경력',\n    '경복궁',\n    '경비',\n    '경상도',\n    '경영',\n    '경우',\n    '경쟁',\n    '경제',\n    '경주',\n    '경찰',\n    '경치',\n    '경향',\n    '경험',\n    '계곡',\n    '계단',\n    '계란',\n    '계산',\n    '계속',\n    '계약',\n    '계절',\n    '계층',\n    '계획',\n    '고객',\n    '고구려',\n    '고궁',\n    '고급',\n    '고등학생',\n    '고무신',\n    '고민',\n    '고양이',\n    '고장',\n    '고전',\n    '고집',\n    '고춧가루',\n    '고통',\n    '고향',\n    '곡식',\n    '골목',\n    '골짜기',\n    '골프',\n    '공간',\n    '공개',\n    '공격',\n    '공군',\n    '공급',\n    '공기',\n    '공동',\n    '공무원',\n    '공부',\n    '공사',\n    '공식',\n    '공업',\n    '공연',\n    '공원',\n    '공장',\n    '공짜',\n    '공책',\n    '공통',\n    '공포',\n    '공항',\n    '공휴일',\n    '과목',\n    '과일',\n    '과장',\n    '과정',\n    '과학',\n    '관객',\n    '관계',\n    '관광',\n    '관념',\n    '관람',\n    '관련',\n    '관리',\n    '관습',\n    '관심',\n    '관점',\n    '관찰',\n    '광경',\n    '광고',\n    '광장',\n    '광주',\n    '괴로움',\n    '굉장히',\n    '교과서',\n    '교문',\n    '교복',\n    '교실',\n    '교양',\n    '교육',\n    '교장',\n    '교직',\n    '교통',\n    '교환',\n    '교훈',\n    '구경',\n    '구름',\n    '구멍',\n    '구별',\n    '구분',\n    '구석',\n    '구성',\n    '구속',\n    '구역',\n    '구입',\n    '구청',\n    '구체적',\n    '국가',\n    '국기',\n    '국내',\n    '국립',\n    '국물',\n    '국민',\n    '국수',\n    '국어',\n    '국왕',\n    '국적',\n    '국제',\n    '국회',\n    '군대',\n    '군사',\n    '군인',\n    '궁극적',\n    '권리',\n    '권위',\n    '권투',\n    '귀국',\n    '귀신',\n    '규정',\n    '규칙',\n    '균형',\n    '그날',\n    '그냥',\n    '그늘',\n    '그러나',\n    '그룹',\n    '그릇',\n    '그림',\n    '그제서야',\n    '그토록',\n    '극복',\n    '극히',\n    '근거',\n    '근교',\n    '근래',\n    '근로',\n    '근무',\n    '근본',\n    '근원',\n    '근육',\n    '근처',\n    '글씨',\n    '글자',\n    '금강산',\n    '금고',\n    '금년',\n    '금메달',\n    '금액',\n    '금연',\n    '금요일',\n    '금지',\n    '긍정적',\n    '기간',\n    '기관',\n    '기념',\n    '기능',\n    '기독교',\n    '기둥',\n    '기록',\n    '기름',\n    '기법',\n    '기본',\n    '기분',\n    '기쁨',\n    '기숙사',\n    '기술',\n    '기억',\n    '기업',\n    '기온',\n    '기운',\n    '기원',\n    '기적',\n    '기준',\n    '기침',\n    '기혼',\n    '기획',\n    '긴급',\n    '긴장',\n    '길이',\n    '김밥',\n    '김치',\n    '김포공항',\n    '깍두기',\n    '깜빡',\n    '깨달음',\n    '깨소금',\n    '껍질',\n    '꼭대기',\n    '꽃잎',\n    '나들이',\n    '나란히',\n    '나머지',\n    '나물',\n    '나침반',\n    '나흘',\n    '낙엽',\n    '난방',\n    '날개',\n    '날씨',\n    '날짜',\n    '남녀',\n    '남대문',\n    '남매',\n    '남산',\n    '남자',\n    '남편',\n    '남학생',\n    '낭비',\n    '낱말',\n    '내년',\n    '내용',\n    '내일',\n    '냄비',\n    '냄새',\n    '냇물',\n    '냉동',\n    '냉면',\n    '냉방',\n    '냉장고',\n    '넥타이',\n    '넷째',\n    '노동',\n    '노란색',\n    '노력',\n    '노인',\n    '녹음',\n    '녹차',\n    '녹화',\n    '논리',\n    '논문',\n    '논쟁',\n    '놀이',\n    '농구',\n    '농담',\n    '농민',\n    '농부',\n    '농업',\n    '농장',\n    '농촌',\n    '높이',\n    '눈동자',\n    '눈물',\n    '눈썹',\n    '뉴욕',\n    '느낌',\n    '늑대',\n    '능동적',\n    '능력',\n    '다방',\n    '다양성',\n    '다음',\n    '다이어트',\n    '다행',\n    '단계',\n    '단골',\n    '단독',\n    '단맛',\n    '단순',\n    '단어',\n    '단위',\n    '단점',\n    '단체',\n    '단추',\n    '단편',\n    '단풍',\n    '달걀',\n    '달러',\n    '달력',\n    '달리',\n    '닭고기',\n    '담당',\n    '담배',\n    '담요',\n    '담임',\n    '답변',\n    '답장',\n    '당근',\n    '당분간',\n    '당연히',\n    '당장',\n    '대규모',\n    '대낮',\n    '대단히',\n    '대답',\n    '대도시',\n    '대략',\n    '대량',\n    '대륙',\n    '대문',\n    '대부분',\n    '대신',\n    '대응',\n    '대장',\n    '대전',\n    '대접',\n    '대중',\n    '대책',\n    '대출',\n    '대충',\n    '대통령',\n    '대학',\n    '대한민국',\n    '대합실',\n    '대형',\n    '덩어리',\n    '데이트',\n    '도대체',\n    '도덕',\n    '도둑',\n    '도망',\n    '도서관',\n    '도심',\n    '도움',\n    '도입',\n    '도자기',\n    '도저히',\n    '도전',\n    '도중',\n    '도착',\n    '독감',\n    '독립',\n    '독서',\n    '독일',\n    '독창적',\n    '동화책',\n    '뒷모습',\n    '뒷산',\n    '딸아이',\n    '마누라',\n    '마늘',\n    '마당',\n    '마라톤',\n    '마련',\n    '마무리',\n    '마사지',\n    '마약',\n    '마요네즈',\n    '마을',\n    '마음',\n    '마이크',\n    '마중',\n    '마지막',\n    '마찬가지',\n    '마찰',\n    '마흔',\n    '막걸리',\n    '막내',\n    '막상',\n    '만남',\n    '만두',\n    '만세',\n    '만약',\n    '만일',\n    '만점',\n    '만족',\n    '만화',\n    '많이',\n    '말기',\n    '말씀',\n    '말투',\n    '맘대로',\n    '망원경',\n    '매년',\n    '매달',\n    '매력',\n    '매번',\n    '매스컴',\n    '매일',\n    '매장',\n    '맥주',\n    '먹이',\n    '먼저',\n    '먼지',\n    '멀리',\n    '메일',\n    '며느리',\n    '며칠',\n    '면담',\n    '멸치',\n    '명단',\n    '명령',\n    '명예',\n    '명의',\n    '명절',\n    '명칭',\n    '명함',\n    '모금',\n    '모니터',\n    '모델',\n    '모든',\n    '모범',\n    '모습',\n    '모양',\n    '모임',\n    '모조리',\n    '모집',\n    '모퉁이',\n    '목걸이',\n    '목록',\n    '목사',\n    '목소리',\n    '목숨',\n    '목적',\n    '목표',\n    '몰래',\n    '몸매',\n    '몸무게',\n    '몸살',\n    '몸속',\n    '몸짓',\n    '몸통',\n    '몹시',\n    '무관심',\n    '무궁화',\n    '무더위',\n    '무덤',\n    '무릎',\n    '무슨',\n    '무엇',\n    '무역',\n    '무용',\n    '무조건',\n    '무지개',\n    '무척',\n    '문구',\n    '문득',\n    '문법',\n    '문서',\n    '문제',\n    '문학',\n    '문화',\n    '물가',\n    '물건',\n    '물결',\n    '물고기',\n    '물론',\n    '물리학',\n    '물음',\n    '물질',\n    '물체',\n    '미국',\n    '미디어',\n    '미사일',\n    '미술',\n    '미역',\n    '미용실',\n    '미움',\n    '미인',\n    '미팅',\n    '미혼',\n    '민간',\n    '민족',\n    '민주',\n    '믿음',\n    '밀가루',\n    '밀리미터',\n    '밑바닥',\n    '바가지',\n    '바구니',\n    '바나나',\n    '바늘',\n    '바닥',\n    '바닷가',\n    '바람',\n    '바이러스',\n    '바탕',\n    '박물관',\n    '박사',\n    '박수',\n    '반대',\n    '반드시',\n    '반말',\n    '반발',\n    '반성',\n    '반응',\n    '반장',\n    '반죽',\n    '반지',\n    '반찬',\n    '받침',\n    '발가락',\n    '발걸음',\n    '발견',\n    '발달',\n    '발레',\n    '발목',\n    '발바닥',\n    '발생',\n    '발음',\n    '발자국',\n    '발전',\n    '발톱',\n    '발표',\n    '밤하늘',\n    '밥그릇',\n    '밥맛',\n    '밥상',\n    '밥솥',\n    '방금',\n    '방면',\n    '방문',\n    '방바닥',\n    '방법',\n    '방송',\n    '방식',\n    '방안',\n    '방울',\n    '방지',\n    '방학',\n    '방해',\n    '방향',\n    '배경',\n    '배꼽',\n    '배달',\n    '배드민턴',\n    '백두산',\n    '백색',\n    '백성',\n    '백인',\n    '백제',\n    '백화점',\n    '버릇',\n    '버섯',\n    '버튼',\n    '번개',\n    '번역',\n    '번지',\n    '번호',\n    '벌금',\n    '벌레',\n    '벌써',\n    '범위',\n    '범인',\n    '범죄',\n    '법률',\n    '법원',\n    '법적',\n    '법칙',\n    '베이징',\n    '벨트',\n    '변경',\n    '변동',\n    '변명',\n    '변신',\n    '변호사',\n    '변화',\n    '별도',\n    '별명',\n    '별일',\n    '병실',\n    '병아리',\n    '병원',\n    '보관',\n    '보너스',\n    '보라색',\n    '보람',\n    '보름',\n    '보상',\n    '보안',\n    '보자기',\n    '보장',\n    '보전',\n    '보존',\n    '보통',\n    '보편적',\n    '보험',\n    '복도',\n    '복사',\n    '복숭아',\n    '복습',\n    '볶음',\n    '본격적',\n    '본래',\n    '본부',\n    '본사',\n    '본성',\n    '본인',\n    '본질',\n    '볼펜',\n    '봉사',\n    '봉지',\n    '봉투',\n    '부근',\n    '부끄러움',\n    '부담',\n    '부동산',\n    '부문',\n    '부분',\n    '부산',\n    '부상',\n    '부엌',\n    '부인',\n    '부작용',\n    '부장',\n    '부정',\n    '부족',\n    '부지런히',\n    '부친',\n    '부탁',\n    '부품',\n    '부회장',\n    '북부',\n    '북한',\n    '분노',\n    '분량',\n    '분리',\n    '분명',\n    '분석',\n    '분야',\n    '분위기',\n    '분필',\n    '분홍색',\n    '불고기',\n    '불과',\n    '불교',\n    '불꽃',\n    '불만',\n    '불법',\n    '불빛',\n    '불안',\n    '불이익',\n    '불행',\n    '브랜드',\n    '비극',\n    '비난',\n    '비닐',\n    '비둘기',\n    '비디오',\n    '비로소',\n    '비만',\n    '비명',\n    '비밀',\n    '비바람',\n    '비빔밥',\n    '비상',\n    '비용',\n    '비율',\n    '비중',\n    '비타민',\n    '비판',\n    '빌딩',\n    '빗물',\n    '빗방울',\n    '빗줄기',\n    '빛깔',\n    '빨간색',\n    '빨래',\n    '빨리',\n    '사건',\n    '사계절',\n    '사나이',\n    '사냥',\n    '사람',\n    '사랑',\n    '사립',\n    '사모님',\n    '사물',\n    '사방',\n    '사상',\n    '사생활',\n    '사설',\n    '사슴',\n    '사실',\n    '사업',\n    '사용',\n    '사월',\n    '사장',\n    '사전',\n    '사진',\n    '사촌',\n    '사춘기',\n    '사탕',\n    '사투리',\n    '사흘',\n    '산길',\n    '산부인과',\n    '산업',\n    '산책',\n    '살림',\n    '살인',\n    '살짝',\n    '삼계탕',\n    '삼국',\n    '삼십',\n    '삼월',\n    '삼촌',\n    '상관',\n    '상금',\n    '상대',\n    '상류',\n    '상반기',\n    '상상',\n    '상식',\n    '상업',\n    '상인',\n    '상자',\n    '상점',\n    '상처',\n    '상추',\n    '상태',\n    '상표',\n    '상품',\n    '상황',\n    '새벽',\n    '색깔',\n    '색연필',\n    '생각',\n    '생명',\n    '생물',\n    '생방송',\n    '생산',\n    '생선',\n    '생신',\n    '생일',\n    '생활',\n    '서랍',\n    '서른',\n    '서명',\n    '서민',\n    '서비스',\n    '서양',\n    '서울',\n    '서적',\n    '서점',\n    '서쪽',\n    '서클',\n    '석사',\n    '석유',\n    '선거',\n    '선물',\n    '선배',\n    '선생',\n    '선수',\n    '선원',\n    '선장',\n    '선전',\n    '선택',\n    '선풍기',\n    '설거지',\n    '설날',\n    '설렁탕',\n    '설명',\n    '설문',\n    '설사',\n    '설악산',\n    '설치',\n    '설탕',\n    '섭씨',\n    '성공',\n    '성당',\n    '성명',\n    '성별',\n    '성인',\n    '성장',\n    '성적',\n    '성질',\n    '성함',\n    '세금',\n    '세미나',\n    '세상',\n    '세월',\n    '세종대왕',\n    '세탁',\n    '센터',\n    '센티미터',\n    '셋째',\n    '소규모',\n    '소극적',\n    '소금',\n    '소나기',\n    '소년',\n    '소득',\n    '소망',\n    '소문',\n    '소설',\n    '소속',\n    '소아과',\n    '소용',\n    '소원',\n    '소음',\n    '소중히',\n    '소지품',\n    '소질',\n    '소풍',\n    '소형',\n    '속담',\n    '속도',\n    '속옷',\n    '손가락',\n    '손길',\n    '손녀',\n    '손님',\n    '손등',\n    '손목',\n    '손뼉',\n    '손실',\n    '손질',\n    '손톱',\n    '손해',\n    '솔직히',\n    '솜씨',\n    '송아지',\n    '송이',\n    '송편',\n    '쇠고기',\n    '쇼핑',\n    '수건',\n    '수년',\n    '수단',\n    '수돗물',\n    '수동적',\n    '수면',\n    '수명',\n    '수박',\n    '수상',\n    '수석',\n    '수술',\n    '수시로',\n    '수업',\n    '수염',\n    '수영',\n    '수입',\n    '수준',\n    '수집',\n    '수출',\n    '수컷',\n    '수필',\n    '수학',\n    '수험생',\n    '수화기',\n    '숙녀',\n    '숙소',\n    '숙제',\n    '순간',\n    '순서',\n    '순수',\n    '순식간',\n    '순위',\n    '숟가락',\n    '술병',\n    '술집',\n    '숫자',\n    '스님',\n    '스물',\n    '스스로',\n    '스승',\n    '스웨터',\n    '스위치',\n    '스케이트',\n    '스튜디오',\n    '스트레스',\n    '스포츠',\n    '슬쩍',\n    '슬픔',\n    '습관',\n    '습기',\n    '승객',\n    '승리',\n    '승부',\n    '승용차',\n    '승진',\n    '시각',\n    '시간',\n    '시골',\n    '시금치',\n    '시나리오',\n    '시댁',\n    '시리즈',\n    '시멘트',\n    '시민',\n    '시부모',\n    '시선',\n    '시설',\n    '시스템',\n    '시아버지',\n    '시어머니',\n    '시월',\n    '시인',\n    '시일',\n    '시작',\n    '시장',\n    '시절',\n    '시점',\n    '시중',\n    '시즌',\n    '시집',\n    '시청',\n    '시합',\n    '시험',\n    '식구',\n    '식기',\n    '식당',\n    '식량',\n    '식료품',\n    '식물',\n    '식빵',\n    '식사',\n    '식생활',\n    '식초',\n    '식탁',\n    '식품',\n    '신고',\n    '신규',\n    '신념',\n    '신문',\n    '신발',\n    '신비',\n    '신사',\n    '신세',\n    '신용',\n    '신제품',\n    '신청',\n    '신체',\n    '신화',\n    '실감',\n    '실내',\n    '실력',\n    '실례',\n    '실망',\n    '실수',\n    '실습',\n    '실시',\n    '실장',\n    '실정',\n    '실질적',\n    '실천',\n    '실체',\n    '실컷',\n    '실태',\n    '실패',\n    '실험',\n    '실현',\n    '심리',\n    '심부름',\n    '심사',\n    '심장',\n    '심정',\n    '심판',\n    '쌍둥이',\n    '씨름',\n    '씨앗',\n    '아가씨',\n    '아나운서',\n    '아드님',\n    '아들',\n    '아쉬움',\n    '아스팔트',\n    '아시아',\n    '아울러',\n    '아저씨',\n    '아줌마',\n    '아직',\n    '아침',\n    '아파트',\n    '아프리카',\n    '아픔',\n    '아홉',\n    '아흔',\n    '악기',\n    '악몽',\n    '악수',\n    '안개',\n    '안경',\n    '안과',\n    '안내',\n    '안녕',\n    '안동',\n    '안방',\n    '안부',\n    '안주',\n    '알루미늄',\n    '알코올',\n    '암시',\n    '암컷',\n    '압력',\n    '앞날',\n    '앞문',\n    '애인',\n    '애정',\n    '액수',\n    '앨범',\n    '야간',\n    '야단',\n    '야옹',\n    '약간',\n    '약국',\n    '약속',\n    '약수',\n    '약점',\n    '약품',\n    '약혼녀',\n    '양념',\n    '양력',\n    '양말',\n    '양배추',\n    '양주',\n    '양파',\n    '어둠',\n    '어려움',\n    '어른',\n    '어젯밤',\n    '어쨌든',\n    '어쩌다가',\n    '어쩐지',\n    '언니',\n    '언덕',\n    '언론',\n    '언어',\n    '얼굴',\n    '얼른',\n    '얼음',\n    '얼핏',\n    '엄마',\n    '업무',\n    '업종',\n    '업체',\n    '엉덩이',\n    '엉망',\n    '엉터리',\n    '엊그제',\n    '에너지',\n    '에어컨',\n    '엔진',\n    '여건',\n    '여고생',\n    '여관',\n    '여군',\n    '여권',\n    '여대생',\n    '여덟',\n    '여동생',\n    '여든',\n    '여론',\n    '여름',\n    '여섯',\n    '여성',\n    '여왕',\n    '여인',\n    '여전히',\n    '여직원',\n    '여학생',\n    '여행',\n    '역사',\n    '역시',\n    '역할',\n    '연결',\n    '연구',\n    '연극',\n    '연기',\n    '연락',\n    '연설',\n    '연세',\n    '연속',\n    '연습',\n    '연애',\n    '연예인',\n    '연인',\n    '연장',\n    '연주',\n    '연출',\n    '연필',\n    '연합',\n    '연휴',\n    '열기',\n    '열매',\n    '열쇠',\n    '열심히',\n    '열정',\n    '열차',\n    '열흘',\n    '염려',\n    '엽서',\n    '영국',\n    '영남',\n    '영상',\n    '영양',\n    '영역',\n    '영웅',\n    '영원히',\n    '영하',\n    '영향',\n    '영혼',\n    '영화',\n    '옆구리',\n    '옆방',\n    '옆집',\n    '예감',\n    '예금',\n    '예방',\n    '예산',\n    '예상',\n    '예선',\n    '예술',\n    '예습',\n    '예식장',\n    '예약',\n    '예전',\n    '예절',\n    '예정',\n    '예컨대',\n    '옛날',\n    '오늘',\n    '오락',\n    '오랫동안',\n    '오렌지',\n    '오로지',\n    '오른발',\n    '오븐',\n    '오십',\n    '오염',\n    '오월',\n    '오전',\n    '오직',\n    '오징어',\n    '오페라',\n    '오피스텔',\n    '오히려',\n    '옥상',\n    '옥수수',\n    '온갖',\n    '온라인',\n    '온몸',\n    '온종일',\n    '온통',\n    '올가을',\n    '올림픽',\n    '올해',\n    '옷차림',\n    '와이셔츠',\n    '와인',\n    '완성',\n    '완전',\n    '왕비',\n    '왕자',\n    '왜냐하면',\n    '왠지',\n    '외갓집',\n    '외국',\n    '외로움',\n    '외삼촌',\n    '외출',\n    '외침',\n    '외할머니',\n    '왼발',\n    '왼손',\n    '왼쪽',\n    '요금',\n    '요일',\n    '요즘',\n    '요청',\n    '용기',\n    '용서',\n    '용어',\n    '우산',\n    '우선',\n    '우승',\n    '우연히',\n    '우정',\n    '우체국',\n    '우편',\n    '운동',\n    '운명',\n    '운반',\n    '운전',\n    '운행',\n    '울산',\n    '울음',\n    '움직임',\n    '웃어른',\n    '웃음',\n    '워낙',\n    '원고',\n    '원래',\n    '원서',\n    '원숭이',\n    '원인',\n    '원장',\n    '원피스',\n    '월급',\n    '월드컵',\n    '월세',\n    '월요일',\n    '웨이터',\n    '위반',\n    '위법',\n    '위성',\n    '위원',\n    '위험',\n    '위협',\n    '윗사람',\n    '유난히',\n    '유럽',\n    '유명',\n    '유물',\n    '유산',\n    '유적',\n    '유치원',\n    '유학',\n    '유행',\n    '유형',\n    '육군',\n    '육상',\n    '육십',\n    '육체',\n    '은행',\n    '음력',\n    '음료',\n    '음반',\n    '음성',\n    '음식',\n    '음악',\n    '음주',\n    '의견',\n    '의논',\n    '의문',\n    '의복',\n    '의식',\n    '의심',\n    '의외로',\n    '의욕',\n    '의원',\n    '의학',\n    '이것',\n    '이곳',\n    '이념',\n    '이놈',\n    '이달',\n    '이대로',\n    '이동',\n    '이렇게',\n    '이력서',\n    '이론적',\n    '이름',\n    '이민',\n    '이발소',\n    '이별',\n    '이불',\n    '이빨',\n    '이상',\n    '이성',\n    '이슬',\n    '이야기',\n    '이용',\n    '이웃',\n    '이월',\n    '이윽고',\n    '이익',\n    '이전',\n    '이중',\n    '이튿날',\n    '이틀',\n    '이혼',\n    '인간',\n    '인격',\n    '인공',\n    '인구',\n    '인근',\n    '인기',\n    '인도',\n    '인류',\n    '인물',\n    '인생',\n    '인쇄',\n    '인연',\n    '인원',\n    '인재',\n    '인종',\n    '인천',\n    '인체',\n    '인터넷',\n    '인하',\n    '인형',\n    '일곱',\n    '일기',\n    '일단',\n    '일대',\n    '일등',\n    '일반',\n    '일본',\n    '일부',\n    '일상',\n    '일생',\n    '일손',\n    '일요일',\n    '일월',\n    '일정',\n    '일종',\n    '일주일',\n    '일찍',\n    '일체',\n    '일치',\n    '일행',\n    '일회용',\n    '임금',\n    '임무',\n    '입대',\n    '입력',\n    '입맛',\n    '입사',\n    '입술',\n    '입시',\n    '입원',\n    '입장',\n    '입학',\n    '자가용',\n    '자격',\n    '자극',\n    '자동',\n    '자랑',\n    '자부심',\n    '자식',\n    '자신',\n    '자연',\n    '자원',\n    '자율',\n    '자전거',\n    '자정',\n    '자존심',\n    '자판',\n    '작가',\n    '작년',\n    '작성',\n    '작업',\n    '작용',\n    '작은딸',\n    '작품',\n    '잔디',\n    '잔뜩',\n    '잔치',\n    '잘못',\n    '잠깐',\n    '잠수함',\n    '잠시',\n    '잠옷',\n    '잠자리',\n    '잡지',\n    '장관',\n    '장군',\n    '장기간',\n    '장래',\n    '장례',\n    '장르',\n    '장마',\n    '장면',\n    '장모',\n    '장미',\n    '장비',\n    '장사',\n    '장소',\n    '장식',\n    '장애인',\n    '장인',\n    '장점',\n    '장차',\n    '장학금',\n    '재능',\n    '재빨리',\n    '재산',\n    '재생',\n    '재작년',\n    '재정',\n    '재채기',\n    '재판',\n    '재학',\n    '재활용',\n    '저것',\n    '저고리',\n    '저곳',\n    '저녁',\n    '저런',\n    '저렇게',\n    '저번',\n    '저울',\n    '저절로',\n    '저축',\n    '적극',\n    '적당히',\n    '적성',\n    '적용',\n    '적응',\n    '전개',\n    '전공',\n    '전기',\n    '전달',\n    '전라도',\n    '전망',\n    '전문',\n    '전반',\n    '전부',\n    '전세',\n    '전시',\n    '전용',\n    '전자',\n    '전쟁',\n    '전주',\n    '전철',\n    '전체',\n    '전통',\n    '전혀',\n    '전후',\n    '절대',\n    '절망',\n    '절반',\n    '절약',\n    '절차',\n    '점검',\n    '점수',\n    '점심',\n    '점원',\n    '점점',\n    '점차',\n    '접근',\n    '접시',\n    '접촉',\n    '젓가락',\n    '정거장',\n    '정도',\n    '정류장',\n    '정리',\n    '정말',\n    '정면',\n    '정문',\n    '정반대',\n    '정보',\n    '정부',\n    '정비',\n    '정상',\n    '정성',\n    '정오',\n    '정원',\n    '정장',\n    '정지',\n    '정치',\n    '정확히',\n    '제공',\n    '제과점',\n    '제대로',\n    '제목',\n    '제발',\n    '제법',\n    '제삿날',\n    '제안',\n    '제일',\n    '제작',\n    '제주도',\n    '제출',\n    '제품',\n    '제한',\n    '조각',\n    '조건',\n    '조금',\n    '조깅',\n    '조명',\n    '조미료',\n    '조상',\n    '조선',\n    '조용히',\n    '조절',\n    '조정',\n    '조직',\n    '존댓말',\n    '존재',\n    '졸업',\n    '졸음',\n    '종교',\n    '종로',\n    '종류',\n    '종소리',\n    '종업원',\n    '종종',\n    '종합',\n    '좌석',\n    '죄인',\n    '주관적',\n    '주름',\n    '주말',\n    '주머니',\n    '주먹',\n    '주문',\n    '주민',\n    '주방',\n    '주변',\n    '주식',\n    '주인',\n    '주일',\n    '주장',\n    '주전자',\n    '주택',\n    '준비',\n    '줄거리',\n    '줄기',\n    '줄무늬',\n    '중간',\n    '중계방송',\n    '중국',\n    '중년',\n    '중단',\n    '중독',\n    '중반',\n    '중부',\n    '중세',\n    '중소기업',\n    '중순',\n    '중앙',\n    '중요',\n    '중학교',\n    '즉석',\n    '즉시',\n    '즐거움',\n    '증가',\n    '증거',\n    '증권',\n    '증상',\n    '증세',\n    '지각',\n    '지갑',\n    '지경',\n    '지극히',\n    '지금',\n    '지급',\n    '지능',\n    '지름길',\n    '지리산',\n    '지방',\n    '지붕',\n    '지식',\n    '지역',\n    '지우개',\n    '지원',\n    '지적',\n    '지점',\n    '지진',\n    '지출',\n    '직선',\n    '직업',\n    '직원',\n    '직장',\n    '진급',\n    '진동',\n    '진로',\n    '진료',\n    '진리',\n    '진짜',\n    '진찰',\n    '진출',\n    '진통',\n    '진행',\n    '질문',\n    '질병',\n    '질서',\n    '짐작',\n    '집단',\n    '집안',\n    '집중',\n    '짜증',\n    '찌꺼기',\n    '차남',\n    '차라리',\n    '차량',\n    '차림',\n    '차별',\n    '차선',\n    '차츰',\n    '착각',\n    '찬물',\n    '찬성',\n    '참가',\n    '참기름',\n    '참새',\n    '참석',\n    '참여',\n    '참외',\n    '참조',\n    '찻잔',\n    '창가',\n    '창고',\n    '창구',\n    '창문',\n    '창밖',\n    '창작',\n    '창조',\n    '채널',\n    '채점',\n    '책가방',\n    '책방',\n    '책상',\n    '책임',\n    '챔피언',\n    '처벌',\n    '처음',\n    '천국',\n    '천둥',\n    '천장',\n    '천재',\n    '천천히',\n    '철도',\n    '철저히',\n    '철학',\n    '첫날',\n    '첫째',\n    '청년',\n    '청바지',\n    '청소',\n    '청춘',\n    '체계',\n    '체력',\n    '체온',\n    '체육',\n    '체중',\n    '체험',\n    '초등학생',\n    '초반',\n    '초밥',\n    '초상화',\n    '초순',\n    '초여름',\n    '초원',\n    '초저녁',\n    '초점',\n    '초청',\n    '초콜릿',\n    '촛불',\n    '총각',\n    '총리',\n    '총장',\n    '촬영',\n    '최근',\n    '최상',\n    '최선',\n    '최신',\n    '최악',\n    '최종',\n    '추석',\n    '추억',\n    '추진',\n    '추천',\n    '추측',\n    '축구',\n    '축소',\n    '축제',\n    '축하',\n    '출근',\n    '출발',\n    '출산',\n    '출신',\n    '출연',\n    '출입',\n    '출장',\n    '출판',\n    '충격',\n    '충고',\n    '충돌',\n    '충분히',\n    '충청도',\n    '취업',\n    '취직',\n    '취향',\n    '치약',\n    '친구',\n    '친척',\n    '칠십',\n    '칠월',\n    '칠판',\n    '침대',\n    '침묵',\n    '침실',\n    '칫솔',\n    '칭찬',\n    '카메라',\n    '카운터',\n    '칼국수',\n    '캐릭터',\n    '캠퍼스',\n    '캠페인',\n    '커튼',\n    '컨디션',\n    '컬러',\n    '컴퓨터',\n    '코끼리',\n    '코미디',\n    '콘서트',\n    '콜라',\n    '콤플렉스',\n    '콩나물',\n    '쾌감',\n    '쿠데타',\n    '크림',\n    '큰길',\n    '큰딸',\n    '큰소리',\n    '큰아들',\n    '큰어머니',\n    '큰일',\n    '큰절',\n    '클래식',\n    '클럽',\n    '킬로',\n    '타입',\n    '타자기',\n    '탁구',\n    '탁자',\n    '탄생',\n    '태권도',\n    '태양',\n    '태풍',\n    '택시',\n    '탤런트',\n    '터널',\n    '터미널',\n    '테니스',\n    '테스트',\n    '테이블',\n    '텔레비전',\n    '토론',\n    '토마토',\n    '토요일',\n    '통계',\n    '통과',\n    '통로',\n    '통신',\n    '통역',\n    '통일',\n    '통장',\n    '통제',\n    '통증',\n    '통합',\n    '통화',\n    '퇴근',\n    '퇴원',\n    '퇴직금',\n    '튀김',\n    '트럭',\n    '특급',\n    '특별',\n    '특성',\n    '특수',\n    '특징',\n    '특히',\n    '튼튼히',\n    '티셔츠',\n    '파란색',\n    '파일',\n    '파출소',\n    '판결',\n    '판단',\n    '판매',\n    '판사',\n    '팔십',\n    '팔월',\n    '팝송',\n    '패션',\n    '팩스',\n    '팩시밀리',\n    '팬티',\n    '퍼센트',\n    '페인트',\n    '편견',\n    '편의',\n    '편지',\n    '편히',\n    '평가',\n    '평균',\n    '평생',\n    '평소',\n    '평양',\n    '평일',\n    '평화',\n    '포스터',\n    '포인트',\n    '포장',\n    '포함',\n    '표면',\n    '표정',\n    '표준',\n    '표현',\n    '품목',\n    '품질',\n    '풍경',\n    '풍속',\n    '풍습',\n    '프랑스',\n    '프린터',\n    '플라스틱',\n    '피곤',\n    '피망',\n    '피아노',\n    '필름',\n    '필수',\n    '필요',\n    '필자',\n    '필통',\n    '핑계',\n    '하느님',\n    '하늘',\n    '하드웨어',\n    '하룻밤',\n    '하반기',\n    '하숙집',\n    '하순',\n    '하여튼',\n    '하지만',\n    '하천',\n    '하품',\n    '하필',\n    '학과',\n    '학교',\n    '학급',\n    '학기',\n    '학년',\n    '학력',\n    '학번',\n    '학부모',\n    '학비',\n    '학생',\n    '학술',\n    '학습',\n    '학용품',\n    '학원',\n    '학위',\n    '학자',\n    '학점',\n    '한계',\n    '한글',\n    '한꺼번에',\n    '한낮',\n    '한눈',\n    '한동안',\n    '한때',\n    '한라산',\n    '한마디',\n    '한문',\n    '한번',\n    '한복',\n    '한식',\n    '한여름',\n    '한쪽',\n    '할머니',\n    '할아버지',\n    '할인',\n    '함께',\n    '함부로',\n    '합격',\n    '합리적',\n    '항공',\n    '항구',\n    '항상',\n    '항의',\n    '해결',\n    '해군',\n    '해답',\n    '해당',\n    '해물',\n    '해석',\n    '해설',\n    '해수욕장',\n    '해안',\n    '핵심',\n    '핸드백',\n    '햄버거',\n    '햇볕',\n    '햇살',\n    '행동',\n    '행복',\n    '행사',\n    '행운',\n    '행위',\n    '향기',\n    '향상',\n    '향수',\n    '허락',\n    '허용',\n    '헬기',\n    '현관',\n    '현금',\n    '현대',\n    '현상',\n    '현실',\n    '현장',\n    '현재',\n    '현지',\n    '혈액',\n    '협력',\n    '형부',\n    '형사',\n    '형수',\n    '형식',\n    '형제',\n    '형태',\n    '형편',\n    '혜택',\n    '호기심',\n    '호남',\n    '호랑이',\n    '호박',\n    '호텔',\n    '호흡',\n    '혹시',\n    '홀로',\n    '홈페이지',\n    '홍보',\n    '홍수',\n    '홍차',\n    '화면',\n    '화분',\n    '화살',\n    '화요일',\n    '화장',\n    '화학',\n    '확보',\n    '확인',\n    '확장',\n    '확정',\n    '환갑',\n    '환경',\n    '환영',\n    '환율',\n    '환자',\n    '활기',\n    '활동',\n    '활발히',\n    '활용',\n    '활짝',\n    '회견',\n    '회관',\n    '회복',\n    '회색',\n    '회원',\n    '회장',\n    '회전',\n    '횟수',\n    '횡단보도',\n    '효율적',\n    '후반',\n    '후춧가루',\n    '훈련',\n    '훨씬',\n    '휴식',\n    '휴일',\n    '흉내',\n    '흐름',\n    '흑백',\n    '흑인',\n    '흔적',\n    '흔히',\n    '흥미',\n    '흥분',\n    '희곡',\n    '희망',\n    '희생',\n    '흰색',\n    '힘껏'\n];\n//# sourceMappingURL=korean.js.map","// SPDX-License-Identifier: MIT\nexport const WORDLIST = [\n    'abacate',\n    'abaixo',\n    'abalar',\n    'abater',\n    'abduzir',\n    'abelha',\n    'aberto',\n    'abismo',\n    'abotoar',\n    'abranger',\n    'abreviar',\n    'abrigar',\n    'abrupto',\n    'absinto',\n    'absoluto',\n    'absurdo',\n    'abutre',\n    'acabado',\n    'acalmar',\n    'acampar',\n    'acanhar',\n    'acaso',\n    'aceitar',\n    'acelerar',\n    'acenar',\n    'acervo',\n    'acessar',\n    'acetona',\n    'achatar',\n    'acidez',\n    'acima',\n    'acionado',\n    'acirrar',\n    'aclamar',\n    'aclive',\n    'acolhida',\n    'acomodar',\n    'acoplar',\n    'acordar',\n    'acumular',\n    'acusador',\n    'adaptar',\n    'adega',\n    'adentro',\n    'adepto',\n    'adequar',\n    'aderente',\n    'adesivo',\n    'adeus',\n    'adiante',\n    'aditivo',\n    'adjetivo',\n    'adjunto',\n    'admirar',\n    'adorar',\n    'adquirir',\n    'adubo',\n    'adverso',\n    'advogado',\n    'aeronave',\n    'afastar',\n    'aferir',\n    'afetivo',\n    'afinador',\n    'afivelar',\n    'aflito',\n    'afluente',\n    'afrontar',\n    'agachar',\n    'agarrar',\n    'agasalho',\n    'agenciar',\n    'agilizar',\n    'agiota',\n    'agitado',\n    'agora',\n    'agradar',\n    'agreste',\n    'agrupar',\n    'aguardar',\n    'agulha',\n    'ajoelhar',\n    'ajudar',\n    'ajustar',\n    'alameda',\n    'alarme',\n    'alastrar',\n    'alavanca',\n    'albergue',\n    'albino',\n    'alcatra',\n    'aldeia',\n    'alecrim',\n    'alegria',\n    'alertar',\n    'alface',\n    'alfinete',\n    'algum',\n    'alheio',\n    'aliar',\n    'alicate',\n    'alienar',\n    'alinhar',\n    'aliviar',\n    'almofada',\n    'alocar',\n    'alpiste',\n    'alterar',\n    'altitude',\n    'alucinar',\n    'alugar',\n    'aluno',\n    'alusivo',\n    'alvo',\n    'amaciar',\n    'amador',\n    'amarelo',\n    'amassar',\n    'ambas',\n    'ambiente',\n    'ameixa',\n    'amenizar',\n    'amido',\n    'amistoso',\n    'amizade',\n    'amolador',\n    'amontoar',\n    'amoroso',\n    'amostra',\n    'amparar',\n    'ampliar',\n    'ampola',\n    'anagrama',\n    'analisar',\n    'anarquia',\n    'anatomia',\n    'andaime',\n    'anel',\n    'anexo',\n    'angular',\n    'animar',\n    'anjo',\n    'anomalia',\n    'anotado',\n    'ansioso',\n    'anterior',\n    'anuidade',\n    'anunciar',\n    'anzol',\n    'apagador',\n    'apalpar',\n    'apanhado',\n    'apego',\n    'apelido',\n    'apertada',\n    'apesar',\n    'apetite',\n    'apito',\n    'aplauso',\n    'aplicada',\n    'apoio',\n    'apontar',\n    'aposta',\n    'aprendiz',\n    'aprovar',\n    'aquecer',\n    'arame',\n    'aranha',\n    'arara',\n    'arcada',\n    'ardente',\n    'areia',\n    'arejar',\n    'arenito',\n    'aresta',\n    'argiloso',\n    'argola',\n    'arma',\n    'arquivo',\n    'arraial',\n    'arrebate',\n    'arriscar',\n    'arroba',\n    'arrumar',\n    'arsenal',\n    'arterial',\n    'artigo',\n    'arvoredo',\n    'asfaltar',\n    'asilado',\n    'aspirar',\n    'assador',\n    'assinar',\n    'assoalho',\n    'assunto',\n    'astral',\n    'atacado',\n    'atadura',\n    'atalho',\n    'atarefar',\n    'atear',\n    'atender',\n    'aterro',\n    'ateu',\n    'atingir',\n    'atirador',\n    'ativo',\n    'atoleiro',\n    'atracar',\n    'atrevido',\n    'atriz',\n    'atual',\n    'atum',\n    'auditor',\n    'aumentar',\n    'aura',\n    'aurora',\n    'autismo',\n    'autoria',\n    'autuar',\n    'avaliar',\n    'avante',\n    'avaria',\n    'avental',\n    'avesso',\n    'aviador',\n    'avisar',\n    'avulso',\n    'axila',\n    'azarar',\n    'azedo',\n    'azeite',\n    'azulejo',\n    'babar',\n    'babosa',\n    'bacalhau',\n    'bacharel',\n    'bacia',\n    'bagagem',\n    'baiano',\n    'bailar',\n    'baioneta',\n    'bairro',\n    'baixista',\n    'bajular',\n    'baleia',\n    'baliza',\n    'balsa',\n    'banal',\n    'bandeira',\n    'banho',\n    'banir',\n    'banquete',\n    'barato',\n    'barbado',\n    'baronesa',\n    'barraca',\n    'barulho',\n    'baseado',\n    'bastante',\n    'batata',\n    'batedor',\n    'batida',\n    'batom',\n    'batucar',\n    'baunilha',\n    'beber',\n    'beijo',\n    'beirada',\n    'beisebol',\n    'beldade',\n    'beleza',\n    'belga',\n    'beliscar',\n    'bendito',\n    'bengala',\n    'benzer',\n    'berimbau',\n    'berlinda',\n    'berro',\n    'besouro',\n    'bexiga',\n    'bezerro',\n    'bico',\n    'bicudo',\n    'bienal',\n    'bifocal',\n    'bifurcar',\n    'bigorna',\n    'bilhete',\n    'bimestre',\n    'bimotor',\n    'biologia',\n    'biombo',\n    'biosfera',\n    'bipolar',\n    'birrento',\n    'biscoito',\n    'bisneto',\n    'bispo',\n    'bissexto',\n    'bitola',\n    'bizarro',\n    'blindado',\n    'bloco',\n    'bloquear',\n    'boato',\n    'bobagem',\n    'bocado',\n    'bocejo',\n    'bochecha',\n    'boicotar',\n    'bolada',\n    'boletim',\n    'bolha',\n    'bolo',\n    'bombeiro',\n    'bonde',\n    'boneco',\n    'bonita',\n    'borbulha',\n    'borda',\n    'boreal',\n    'borracha',\n    'bovino',\n    'boxeador',\n    'branco',\n    'brasa',\n    'braveza',\n    'breu',\n    'briga',\n    'brilho',\n    'brincar',\n    'broa',\n    'brochura',\n    'bronzear',\n    'broto',\n    'bruxo',\n    'bucha',\n    'budismo',\n    'bufar',\n    'bule',\n    'buraco',\n    'busca',\n    'busto',\n    'buzina',\n    'cabana',\n    'cabelo',\n    'cabide',\n    'cabo',\n    'cabrito',\n    'cacau',\n    'cacetada',\n    'cachorro',\n    'cacique',\n    'cadastro',\n    'cadeado',\n    'cafezal',\n    'caiaque',\n    'caipira',\n    'caixote',\n    'cajado',\n    'caju',\n    'calafrio',\n    'calcular',\n    'caldeira',\n    'calibrar',\n    'calmante',\n    'calota',\n    'camada',\n    'cambista',\n    'camisa',\n    'camomila',\n    'campanha',\n    'camuflar',\n    'canavial',\n    'cancelar',\n    'caneta',\n    'canguru',\n    'canhoto',\n    'canivete',\n    'canoa',\n    'cansado',\n    'cantar',\n    'canudo',\n    'capacho',\n    'capela',\n    'capinar',\n    'capotar',\n    'capricho',\n    'captador',\n    'capuz',\n    'caracol',\n    'carbono',\n    'cardeal',\n    'careca',\n    'carimbar',\n    'carneiro',\n    'carpete',\n    'carreira',\n    'cartaz',\n    'carvalho',\n    'casaco',\n    'casca',\n    'casebre',\n    'castelo',\n    'casulo',\n    'catarata',\n    'cativar',\n    'caule',\n    'causador',\n    'cautelar',\n    'cavalo',\n    'caverna',\n    'cebola',\n    'cedilha',\n    'cegonha',\n    'celebrar',\n    'celular',\n    'cenoura',\n    'censo',\n    'centeio',\n    'cercar',\n    'cerrado',\n    'certeiro',\n    'cerveja',\n    'cetim',\n    'cevada',\n    'chacota',\n    'chaleira',\n    'chamado',\n    'chapada',\n    'charme',\n    'chatice',\n    'chave',\n    'chefe',\n    'chegada',\n    'cheiro',\n    'cheque',\n    'chicote',\n    'chifre',\n    'chinelo',\n    'chocalho',\n    'chover',\n    'chumbo',\n    'chutar',\n    'chuva',\n    'cicatriz',\n    'ciclone',\n    'cidade',\n    'cidreira',\n    'ciente',\n    'cigana',\n    'cimento',\n    'cinto',\n    'cinza',\n    'ciranda',\n    'circuito',\n    'cirurgia',\n    'citar',\n    'clareza',\n    'clero',\n    'clicar',\n    'clone',\n    'clube',\n    'coado',\n    'coagir',\n    'cobaia',\n    'cobertor',\n    'cobrar',\n    'cocada',\n    'coelho',\n    'coentro',\n    'coeso',\n    'cogumelo',\n    'coibir',\n    'coifa',\n    'coiote',\n    'colar',\n    'coleira',\n    'colher',\n    'colidir',\n    'colmeia',\n    'colono',\n    'coluna',\n    'comando',\n    'combinar',\n    'comentar',\n    'comitiva',\n    'comover',\n    'complexo',\n    'comum',\n    'concha',\n    'condor',\n    'conectar',\n    'confuso',\n    'congelar',\n    'conhecer',\n    'conjugar',\n    'consumir',\n    'contrato',\n    'convite',\n    'cooperar',\n    'copeiro',\n    'copiador',\n    'copo',\n    'coquetel',\n    'coragem',\n    'cordial',\n    'corneta',\n    'coronha',\n    'corporal',\n    'correio',\n    'cortejo',\n    'coruja',\n    'corvo',\n    'cosseno',\n    'costela',\n    'cotonete',\n    'couro',\n    'couve',\n    'covil',\n    'cozinha',\n    'cratera',\n    'cravo',\n    'creche',\n    'credor',\n    'creme',\n    'crer',\n    'crespo',\n    'criada',\n    'criminal',\n    'crioulo',\n    'crise',\n    'criticar',\n    'crosta',\n    'crua',\n    'cruzeiro',\n    'cubano',\n    'cueca',\n    'cuidado',\n    'cujo',\n    'culatra',\n    'culminar',\n    'culpar',\n    'cultura',\n    'cumprir',\n    'cunhado',\n    'cupido',\n    'curativo',\n    'curral',\n    'cursar',\n    'curto',\n    'cuspir',\n    'custear',\n    'cutelo',\n    'damasco',\n    'datar',\n    'debater',\n    'debitar',\n    'deboche',\n    'debulhar',\n    'decalque',\n    'decimal',\n    'declive',\n    'decote',\n    'decretar',\n    'dedal',\n    'dedicado',\n    'deduzir',\n    'defesa',\n    'defumar',\n    'degelo',\n    'degrau',\n    'degustar',\n    'deitado',\n    'deixar',\n    'delator',\n    'delegado',\n    'delinear',\n    'delonga',\n    'demanda',\n    'demitir',\n    'demolido',\n    'dentista',\n    'depenado',\n    'depilar',\n    'depois',\n    'depressa',\n    'depurar',\n    'deriva',\n    'derramar',\n    'desafio',\n    'desbotar',\n    'descanso',\n    'desenho',\n    'desfiado',\n    'desgaste',\n    'desigual',\n    'deslize',\n    'desmamar',\n    'desova',\n    'despesa',\n    'destaque',\n    'desviar',\n    'detalhar',\n    'detentor',\n    'detonar',\n    'detrito',\n    'deusa',\n    'dever',\n    'devido',\n    'devotado',\n    'dezena',\n    'diagrama',\n    'dialeto',\n    'didata',\n    'difuso',\n    'digitar',\n    'dilatado',\n    'diluente',\n    'diminuir',\n    'dinastia',\n    'dinheiro',\n    'diocese',\n    'direto',\n    'discreta',\n    'disfarce',\n    'disparo',\n    'disquete',\n    'dissipar',\n    'distante',\n    'ditador',\n    'diurno',\n    'diverso',\n    'divisor',\n    'divulgar',\n    'dizer',\n    'dobrador',\n    'dolorido',\n    'domador',\n    'dominado',\n    'donativo',\n    'donzela',\n    'dormente',\n    'dorsal',\n    'dosagem',\n    'dourado',\n    'doutor',\n    'drenagem',\n    'drible',\n    'drogaria',\n    'duelar',\n    'duende',\n    'dueto',\n    'duplo',\n    'duquesa',\n    'durante',\n    'duvidoso',\n    'eclodir',\n    'ecoar',\n    'ecologia',\n    'edificar',\n    'edital',\n    'educado',\n    'efeito',\n    'efetivar',\n    'ejetar',\n    'elaborar',\n    'eleger',\n    'eleitor',\n    'elenco',\n    'elevador',\n    'eliminar',\n    'elogiar',\n    'embargo',\n    'embolado',\n    'embrulho',\n    'embutido',\n    'emenda',\n    'emergir',\n    'emissor',\n    'empatia',\n    'empenho',\n    'empinado',\n    'empolgar',\n    'emprego',\n    'empurrar',\n    'emulador',\n    'encaixe',\n    'encenado',\n    'enchente',\n    'encontro',\n    'endeusar',\n    'endossar',\n    'enfaixar',\n    'enfeite',\n    'enfim',\n    'engajado',\n    'engenho',\n    'englobar',\n    'engomado',\n    'engraxar',\n    'enguia',\n    'enjoar',\n    'enlatar',\n    'enquanto',\n    'enraizar',\n    'enrolado',\n    'enrugar',\n    'ensaio',\n    'enseada',\n    'ensino',\n    'ensopado',\n    'entanto',\n    'enteado',\n    'entidade',\n    'entortar',\n    'entrada',\n    'entulho',\n    'envergar',\n    'enviado',\n    'envolver',\n    'enxame',\n    'enxerto',\n    'enxofre',\n    'enxuto',\n    'epiderme',\n    'equipar',\n    'ereto',\n    'erguido',\n    'errata',\n    'erva',\n    'ervilha',\n    'esbanjar',\n    'esbelto',\n    'escama',\n    'escola',\n    'escrita',\n    'escuta',\n    'esfinge',\n    'esfolar',\n    'esfregar',\n    'esfumado',\n    'esgrima',\n    'esmalte',\n    'espanto',\n    'espelho',\n    'espiga',\n    'esponja',\n    'espreita',\n    'espumar',\n    'esquerda',\n    'estaca',\n    'esteira',\n    'esticar',\n    'estofado',\n    'estrela',\n    'estudo',\n    'esvaziar',\n    'etanol',\n    'etiqueta',\n    'euforia',\n    'europeu',\n    'evacuar',\n    'evaporar',\n    'evasivo',\n    'eventual',\n    'evidente',\n    'evoluir',\n    'exagero',\n    'exalar',\n    'examinar',\n    'exato',\n    'exausto',\n    'excesso',\n    'excitar',\n    'exclamar',\n    'executar',\n    'exemplo',\n    'exibir',\n    'exigente',\n    'exonerar',\n    'expandir',\n    'expelir',\n    'expirar',\n    'explanar',\n    'exposto',\n    'expresso',\n    'expulsar',\n    'externo',\n    'extinto',\n    'extrato',\n    'fabricar',\n    'fabuloso',\n    'faceta',\n    'facial',\n    'fada',\n    'fadiga',\n    'faixa',\n    'falar',\n    'falta',\n    'familiar',\n    'fandango',\n    'fanfarra',\n    'fantoche',\n    'fardado',\n    'farelo',\n    'farinha',\n    'farofa',\n    'farpa',\n    'fartura',\n    'fatia',\n    'fator',\n    'favorita',\n    'faxina',\n    'fazenda',\n    'fechado',\n    'feijoada',\n    'feirante',\n    'felino',\n    'feminino',\n    'fenda',\n    'feno',\n    'fera',\n    'feriado',\n    'ferrugem',\n    'ferver',\n    'festejar',\n    'fetal',\n    'feudal',\n    'fiapo',\n    'fibrose',\n    'ficar',\n    'ficheiro',\n    'figurado',\n    'fileira',\n    'filho',\n    'filme',\n    'filtrar',\n    'firmeza',\n    'fisgada',\n    'fissura',\n    'fita',\n    'fivela',\n    'fixador',\n    'fixo',\n    'flacidez',\n    'flamingo',\n    'flanela',\n    'flechada',\n    'flora',\n    'flutuar',\n    'fluxo',\n    'focal',\n    'focinho',\n    'fofocar',\n    'fogo',\n    'foguete',\n    'foice',\n    'folgado',\n    'folheto',\n    'forjar',\n    'formiga',\n    'forno',\n    'forte',\n    'fosco',\n    'fossa',\n    'fragata',\n    'fralda',\n    'frango',\n    'frasco',\n    'fraterno',\n    'freira',\n    'frente',\n    'fretar',\n    'frieza',\n    'friso',\n    'fritura',\n    'fronha',\n    'frustrar',\n    'fruteira',\n    'fugir',\n    'fulano',\n    'fuligem',\n    'fundar',\n    'fungo',\n    'funil',\n    'furador',\n    'furioso',\n    'futebol',\n    'gabarito',\n    'gabinete',\n    'gado',\n    'gaiato',\n    'gaiola',\n    'gaivota',\n    'galega',\n    'galho',\n    'galinha',\n    'galocha',\n    'ganhar',\n    'garagem',\n    'garfo',\n    'gargalo',\n    'garimpo',\n    'garoupa',\n    'garrafa',\n    'gasoduto',\n    'gasto',\n    'gata',\n    'gatilho',\n    'gaveta',\n    'gazela',\n    'gelado',\n    'geleia',\n    'gelo',\n    'gemada',\n    'gemer',\n    'gemido',\n    'generoso',\n    'gengiva',\n    'genial',\n    'genoma',\n    'genro',\n    'geologia',\n    'gerador',\n    'germinar',\n    'gesso',\n    'gestor',\n    'ginasta',\n    'gincana',\n    'gingado',\n    'girafa',\n    'girino',\n    'glacial',\n    'glicose',\n    'global',\n    'glorioso',\n    'goela',\n    'goiaba',\n    'golfe',\n    'golpear',\n    'gordura',\n    'gorjeta',\n    'gorro',\n    'gostoso',\n    'goteira',\n    'governar',\n    'gracejo',\n    'gradual',\n    'grafite',\n    'gralha',\n    'grampo',\n    'granada',\n    'gratuito',\n    'graveto',\n    'graxa',\n    'grego',\n    'grelhar',\n    'greve',\n    'grilo',\n    'grisalho',\n    'gritaria',\n    'grosso',\n    'grotesco',\n    'grudado',\n    'grunhido',\n    'gruta',\n    'guache',\n    'guarani',\n    'guaxinim',\n    'guerrear',\n    'guiar',\n    'guincho',\n    'guisado',\n    'gula',\n    'guloso',\n    'guru',\n    'habitar',\n    'harmonia',\n    'haste',\n    'haver',\n    'hectare',\n    'herdar',\n    'heresia',\n    'hesitar',\n    'hiato',\n    'hibernar',\n    'hidratar',\n    'hiena',\n    'hino',\n    'hipismo',\n    'hipnose',\n    'hipoteca',\n    'hoje',\n    'holofote',\n    'homem',\n    'honesto',\n    'honrado',\n    'hormonal',\n    'hospedar',\n    'humorado',\n    'iate',\n    'ideia',\n    'idoso',\n    'ignorado',\n    'igreja',\n    'iguana',\n    'ileso',\n    'ilha',\n    'iludido',\n    'iluminar',\n    'ilustrar',\n    'imagem',\n    'imediato',\n    'imenso',\n    'imersivo',\n    'iminente',\n    'imitador',\n    'imortal',\n    'impacto',\n    'impedir',\n    'implante',\n    'impor',\n    'imprensa',\n    'impune',\n    'imunizar',\n    'inalador',\n    'inapto',\n    'inativo',\n    'incenso',\n    'inchar',\n    'incidir',\n    'incluir',\n    'incolor',\n    'indeciso',\n    'indireto',\n    'indutor',\n    'ineficaz',\n    'inerente',\n    'infantil',\n    'infestar',\n    'infinito',\n    'inflamar',\n    'informal',\n    'infrator',\n    'ingerir',\n    'inibido',\n    'inicial',\n    'inimigo',\n    'injetar',\n    'inocente',\n    'inodoro',\n    'inovador',\n    'inox',\n    'inquieto',\n    'inscrito',\n    'inseto',\n    'insistir',\n    'inspetor',\n    'instalar',\n    'insulto',\n    'intacto',\n    'integral',\n    'intimar',\n    'intocado',\n    'intriga',\n    'invasor',\n    'inverno',\n    'invicto',\n    'invocar',\n    'iogurte',\n    'iraniano',\n    'ironizar',\n    'irreal',\n    'irritado',\n    'isca',\n    'isento',\n    'isolado',\n    'isqueiro',\n    'italiano',\n    'janeiro',\n    'jangada',\n    'janta',\n    'jararaca',\n    'jardim',\n    'jarro',\n    'jasmim',\n    'jato',\n    'javali',\n    'jazida',\n    'jejum',\n    'joaninha',\n    'joelhada',\n    'jogador',\n    'joia',\n    'jornal',\n    'jorrar',\n    'jovem',\n    'juba',\n    'judeu',\n    'judoca',\n    'juiz',\n    'julgador',\n    'julho',\n    'jurado',\n    'jurista',\n    'juro',\n    'justa',\n    'labareda',\n    'laboral',\n    'lacre',\n    'lactante',\n    'ladrilho',\n    'lagarta',\n    'lagoa',\n    'laje',\n    'lamber',\n    'lamentar',\n    'laminar',\n    'lampejo',\n    'lanche',\n    'lapidar',\n    'lapso',\n    'laranja',\n    'lareira',\n    'largura',\n    'lasanha',\n    'lastro',\n    'lateral',\n    'latido',\n    'lavanda',\n    'lavoura',\n    'lavrador',\n    'laxante',\n    'lazer',\n    'lealdade',\n    'lebre',\n    'legado',\n    'legendar',\n    'legista',\n    'leigo',\n    'leiloar',\n    'leitura',\n    'lembrete',\n    'leme',\n    'lenhador',\n    'lentilha',\n    'leoa',\n    'lesma',\n    'leste',\n    'letivo',\n    'letreiro',\n    'levar',\n    'leveza',\n    'levitar',\n    'liberal',\n    'libido',\n    'liderar',\n    'ligar',\n    'ligeiro',\n    'limitar',\n    'limoeiro',\n    'limpador',\n    'linda',\n    'linear',\n    'linhagem',\n    'liquidez',\n    'listagem',\n    'lisura',\n    'litoral',\n    'livro',\n    'lixa',\n    'lixeira',\n    'locador',\n    'locutor',\n    'lojista',\n    'lombo',\n    'lona',\n    'longe',\n    'lontra',\n    'lorde',\n    'lotado',\n    'loteria',\n    'loucura',\n    'lousa',\n    'louvar',\n    'luar',\n    'lucidez',\n    'lucro',\n    'luneta',\n    'lustre',\n    'lutador',\n    'luva',\n    'macaco',\n    'macete',\n    'machado',\n    'macio',\n    'madeira',\n    'madrinha',\n    'magnata',\n    'magreza',\n    'maior',\n    'mais',\n    'malandro',\n    'malha',\n    'malote',\n    'maluco',\n    'mamilo',\n    'mamoeiro',\n    'mamute',\n    'manada',\n    'mancha',\n    'mandato',\n    'manequim',\n    'manhoso',\n    'manivela',\n    'manobrar',\n    'mansa',\n    'manter',\n    'manusear',\n    'mapeado',\n    'maquinar',\n    'marcador',\n    'maresia',\n    'marfim',\n    'margem',\n    'marinho',\n    'marmita',\n    'maroto',\n    'marquise',\n    'marreco',\n    'martelo',\n    'marujo',\n    'mascote',\n    'masmorra',\n    'massagem',\n    'mastigar',\n    'matagal',\n    'materno',\n    'matinal',\n    'matutar',\n    'maxilar',\n    'medalha',\n    'medida',\n    'medusa',\n    'megafone',\n    'meiga',\n    'melancia',\n    'melhor',\n    'membro',\n    'memorial',\n    'menino',\n    'menos',\n    'mensagem',\n    'mental',\n    'merecer',\n    'mergulho',\n    'mesada',\n    'mesclar',\n    'mesmo',\n    'mesquita',\n    'mestre',\n    'metade',\n    'meteoro',\n    'metragem',\n    'mexer',\n    'mexicano',\n    'micro',\n    'migalha',\n    'migrar',\n    'milagre',\n    'milenar',\n    'milhar',\n    'mimado',\n    'minerar',\n    'minhoca',\n    'ministro',\n    'minoria',\n    'miolo',\n    'mirante',\n    'mirtilo',\n    'misturar',\n    'mocidade',\n    'moderno',\n    'modular',\n    'moeda',\n    'moer',\n    'moinho',\n    'moita',\n    'moldura',\n    'moleza',\n    'molho',\n    'molinete',\n    'molusco',\n    'montanha',\n    'moqueca',\n    'morango',\n    'morcego',\n    'mordomo',\n    'morena',\n    'mosaico',\n    'mosquete',\n    'mostarda',\n    'motel',\n    'motim',\n    'moto',\n    'motriz',\n    'muda',\n    'muito',\n    'mulata',\n    'mulher',\n    'multar',\n    'mundial',\n    'munido',\n    'muralha',\n    'murcho',\n    'muscular',\n    'museu',\n    'musical',\n    'nacional',\n    'nadador',\n    'naja',\n    'namoro',\n    'narina',\n    'narrado',\n    'nascer',\n    'nativa',\n    'natureza',\n    'navalha',\n    'navegar',\n    'navio',\n    'neblina',\n    'nebuloso',\n    'negativa',\n    'negociar',\n    'negrito',\n    'nervoso',\n    'neta',\n    'neural',\n    'nevasca',\n    'nevoeiro',\n    'ninar',\n    'ninho',\n    'nitidez',\n    'nivelar',\n    'nobreza',\n    'noite',\n    'noiva',\n    'nomear',\n    'nominal',\n    'nordeste',\n    'nortear',\n    'notar',\n    'noticiar',\n    'noturno',\n    'novelo',\n    'novilho',\n    'novo',\n    'nublado',\n    'nudez',\n    'numeral',\n    'nupcial',\n    'nutrir',\n    'nuvem',\n    'obcecado',\n    'obedecer',\n    'objetivo',\n    'obrigado',\n    'obscuro',\n    'obstetra',\n    'obter',\n    'obturar',\n    'ocidente',\n    'ocioso',\n    'ocorrer',\n    'oculista',\n    'ocupado',\n    'ofegante',\n    'ofensiva',\n    'oferenda',\n    'oficina',\n    'ofuscado',\n    'ogiva',\n    'olaria',\n    'oleoso',\n    'olhar',\n    'oliveira',\n    'ombro',\n    'omelete',\n    'omisso',\n    'omitir',\n    'ondulado',\n    'oneroso',\n    'ontem',\n    'opcional',\n    'operador',\n    'oponente',\n    'oportuno',\n    'oposto',\n    'orar',\n    'orbitar',\n    'ordem',\n    'ordinal',\n    'orfanato',\n    'orgasmo',\n    'orgulho',\n    'oriental',\n    'origem',\n    'oriundo',\n    'orla',\n    'ortodoxo',\n    'orvalho',\n    'oscilar',\n    'ossada',\n    'osso',\n    'ostentar',\n    'otimismo',\n    'ousadia',\n    'outono',\n    'outubro',\n    'ouvido',\n    'ovelha',\n    'ovular',\n    'oxidar',\n    'oxigenar',\n    'pacato',\n    'paciente',\n    'pacote',\n    'pactuar',\n    'padaria',\n    'padrinho',\n    'pagar',\n    'pagode',\n    'painel',\n    'pairar',\n    'paisagem',\n    'palavra',\n    'palestra',\n    'palheta',\n    'palito',\n    'palmada',\n    'palpitar',\n    'pancada',\n    'panela',\n    'panfleto',\n    'panqueca',\n    'pantanal',\n    'papagaio',\n    'papelada',\n    'papiro',\n    'parafina',\n    'parcial',\n    'pardal',\n    'parede',\n    'partida',\n    'pasmo',\n    'passado',\n    'pastel',\n    'patamar',\n    'patente',\n    'patinar',\n    'patrono',\n    'paulada',\n    'pausar',\n    'peculiar',\n    'pedalar',\n    'pedestre',\n    'pediatra',\n    'pedra',\n    'pegada',\n    'peitoral',\n    'peixe',\n    'pele',\n    'pelicano',\n    'penca',\n    'pendurar',\n    'peneira',\n    'penhasco',\n    'pensador',\n    'pente',\n    'perceber',\n    'perfeito',\n    'pergunta',\n    'perito',\n    'permitir',\n    'perna',\n    'perplexo',\n    'persiana',\n    'pertence',\n    'peruca',\n    'pescado',\n    'pesquisa',\n    'pessoa',\n    'petiscar',\n    'piada',\n    'picado',\n    'piedade',\n    'pigmento',\n    'pilastra',\n    'pilhado',\n    'pilotar',\n    'pimenta',\n    'pincel',\n    'pinguim',\n    'pinha',\n    'pinote',\n    'pintar',\n    'pioneiro',\n    'pipoca',\n    'piquete',\n    'piranha',\n    'pires',\n    'pirueta',\n    'piscar',\n    'pistola',\n    'pitanga',\n    'pivete',\n    'planta',\n    'plaqueta',\n    'platina',\n    'plebeu',\n    'plumagem',\n    'pluvial',\n    'pneu',\n    'poda',\n    'poeira',\n    'poetisa',\n    'polegada',\n    'policiar',\n    'poluente',\n    'polvilho',\n    'pomar',\n    'pomba',\n    'ponderar',\n    'pontaria',\n    'populoso',\n    'porta',\n    'possuir',\n    'postal',\n    'pote',\n    'poupar',\n    'pouso',\n    'povoar',\n    'praia',\n    'prancha',\n    'prato',\n    'praxe',\n    'prece',\n    'predador',\n    'prefeito',\n    'premiar',\n    'prensar',\n    'preparar',\n    'presilha',\n    'pretexto',\n    'prevenir',\n    'prezar',\n    'primata',\n    'princesa',\n    'prisma',\n    'privado',\n    'processo',\n    'produto',\n    'profeta',\n    'proibido',\n    'projeto',\n    'prometer',\n    'propagar',\n    'prosa',\n    'protetor',\n    'provador',\n    'publicar',\n    'pudim',\n    'pular',\n    'pulmonar',\n    'pulseira',\n    'punhal',\n    'punir',\n    'pupilo',\n    'pureza',\n    'puxador',\n    'quadra',\n    'quantia',\n    'quarto',\n    'quase',\n    'quebrar',\n    'queda',\n    'queijo',\n    'quente',\n    'querido',\n    'quimono',\n    'quina',\n    'quiosque',\n    'rabanada',\n    'rabisco',\n    'rachar',\n    'racionar',\n    'radial',\n    'raiar',\n    'rainha',\n    'raio',\n    'raiva',\n    'rajada',\n    'ralado',\n    'ramal',\n    'ranger',\n    'ranhura',\n    'rapadura',\n    'rapel',\n    'rapidez',\n    'raposa',\n    'raquete',\n    'raridade',\n    'rasante',\n    'rascunho',\n    'rasgar',\n    'raspador',\n    'rasteira',\n    'rasurar',\n    'ratazana',\n    'ratoeira',\n    'realeza',\n    'reanimar',\n    'reaver',\n    'rebaixar',\n    'rebelde',\n    'rebolar',\n    'recado',\n    'recente',\n    'recheio',\n    'recibo',\n    'recordar',\n    'recrutar',\n    'recuar',\n    'rede',\n    'redimir',\n    'redonda',\n    'reduzida',\n    'reenvio',\n    'refinar',\n    'refletir',\n    'refogar',\n    'refresco',\n    'refugiar',\n    'regalia',\n    'regime',\n    'regra',\n    'reinado',\n    'reitor',\n    'rejeitar',\n    'relativo',\n    'remador',\n    'remendo',\n    'remorso',\n    'renovado',\n    'reparo',\n    'repelir',\n    'repleto',\n    'repolho',\n    'represa',\n    'repudiar',\n    'requerer',\n    'resenha',\n    'resfriar',\n    'resgatar',\n    'residir',\n    'resolver',\n    'respeito',\n    'ressaca',\n    'restante',\n    'resumir',\n    'retalho',\n    'reter',\n    'retirar',\n    'retomada',\n    'retratar',\n    'revelar',\n    'revisor',\n    'revolta',\n    'riacho',\n    'rica',\n    'rigidez',\n    'rigoroso',\n    'rimar',\n    'ringue',\n    'risada',\n    'risco',\n    'risonho',\n    'robalo',\n    'rochedo',\n    'rodada',\n    'rodeio',\n    'rodovia',\n    'roedor',\n    'roleta',\n    'romano',\n    'roncar',\n    'rosado',\n    'roseira',\n    'rosto',\n    'rota',\n    'roteiro',\n    'rotina',\n    'rotular',\n    'rouco',\n    'roupa',\n    'roxo',\n    'rubro',\n    'rugido',\n    'rugoso',\n    'ruivo',\n    'rumo',\n    'rupestre',\n    'russo',\n    'sabor',\n    'saciar',\n    'sacola',\n    'sacudir',\n    'sadio',\n    'safira',\n    'saga',\n    'sagrada',\n    'saibro',\n    'salada',\n    'saleiro',\n    'salgado',\n    'saliva',\n    'salpicar',\n    'salsicha',\n    'saltar',\n    'salvador',\n    'sambar',\n    'samurai',\n    'sanar',\n    'sanfona',\n    'sangue',\n    'sanidade',\n    'sapato',\n    'sarda',\n    'sargento',\n    'sarjeta',\n    'saturar',\n    'saudade',\n    'saxofone',\n    'sazonal',\n    'secar',\n    'secular',\n    'seda',\n    'sedento',\n    'sediado',\n    'sedoso',\n    'sedutor',\n    'segmento',\n    'segredo',\n    'segundo',\n    'seiva',\n    'seleto',\n    'selvagem',\n    'semanal',\n    'semente',\n    'senador',\n    'senhor',\n    'sensual',\n    'sentado',\n    'separado',\n    'sereia',\n    'seringa',\n    'serra',\n    'servo',\n    'setembro',\n    'setor',\n    'sigilo',\n    'silhueta',\n    'silicone',\n    'simetria',\n    'simpatia',\n    'simular',\n    'sinal',\n    'sincero',\n    'singular',\n    'sinopse',\n    'sintonia',\n    'sirene',\n    'siri',\n    'situado',\n    'soberano',\n    'sobra',\n    'socorro',\n    'sogro',\n    'soja',\n    'solda',\n    'soletrar',\n    'solteiro',\n    'sombrio',\n    'sonata',\n    'sondar',\n    'sonegar',\n    'sonhador',\n    'sono',\n    'soprano',\n    'soquete',\n    'sorrir',\n    'sorteio',\n    'sossego',\n    'sotaque',\n    'soterrar',\n    'sovado',\n    'sozinho',\n    'suavizar',\n    'subida',\n    'submerso',\n    'subsolo',\n    'subtrair',\n    'sucata',\n    'sucesso',\n    'suco',\n    'sudeste',\n    'sufixo',\n    'sugador',\n    'sugerir',\n    'sujeito',\n    'sulfato',\n    'sumir',\n    'suor',\n    'superior',\n    'suplicar',\n    'suposto',\n    'suprimir',\n    'surdina',\n    'surfista',\n    'surpresa',\n    'surreal',\n    'surtir',\n    'suspiro',\n    'sustento',\n    'tabela',\n    'tablete',\n    'tabuada',\n    'tacho',\n    'tagarela',\n    'talher',\n    'talo',\n    'talvez',\n    'tamanho',\n    'tamborim',\n    'tampa',\n    'tangente',\n    'tanto',\n    'tapar',\n    'tapioca',\n    'tardio',\n    'tarefa',\n    'tarja',\n    'tarraxa',\n    'tatuagem',\n    'taurino',\n    'taxativo',\n    'taxista',\n    'teatral',\n    'tecer',\n    'tecido',\n    'teclado',\n    'tedioso',\n    'teia',\n    'teimar',\n    'telefone',\n    'telhado',\n    'tempero',\n    'tenente',\n    'tensor',\n    'tentar',\n    'termal',\n    'terno',\n    'terreno',\n    'tese',\n    'tesoura',\n    'testado',\n    'teto',\n    'textura',\n    'texugo',\n    'tiara',\n    'tigela',\n    'tijolo',\n    'timbrar',\n    'timidez',\n    'tingido',\n    'tinteiro',\n    'tiragem',\n    'titular',\n    'toalha',\n    'tocha',\n    'tolerar',\n    'tolice',\n    'tomada',\n    'tomilho',\n    'tonel',\n    'tontura',\n    'topete',\n    'tora',\n    'torcido',\n    'torneio',\n    'torque',\n    'torrada',\n    'torto',\n    'tostar',\n    'touca',\n    'toupeira',\n    'toxina',\n    'trabalho',\n    'tracejar',\n    'tradutor',\n    'trafegar',\n    'trajeto',\n    'trama',\n    'trancar',\n    'trapo',\n    'traseiro',\n    'tratador',\n    'travar',\n    'treino',\n    'tremer',\n    'trepidar',\n    'trevo',\n    'triagem',\n    'tribo',\n    'triciclo',\n    'tridente',\n    'trilogia',\n    'trindade',\n    'triplo',\n    'triturar',\n    'triunfal',\n    'trocar',\n    'trombeta',\n    'trova',\n    'trunfo',\n    'truque',\n    'tubular',\n    'tucano',\n    'tudo',\n    'tulipa',\n    'tupi',\n    'turbo',\n    'turma',\n    'turquesa',\n    'tutelar',\n    'tutorial',\n    'uivar',\n    'umbigo',\n    'unha',\n    'unidade',\n    'uniforme',\n    'urologia',\n    'urso',\n    'urtiga',\n    'urubu',\n    'usado',\n    'usina',\n    'usufruir',\n    'vacina',\n    'vadiar',\n    'vagaroso',\n    'vaidoso',\n    'vala',\n    'valente',\n    'validade',\n    'valores',\n    'vantagem',\n    'vaqueiro',\n    'varanda',\n    'vareta',\n    'varrer',\n    'vascular',\n    'vasilha',\n    'vassoura',\n    'vazar',\n    'vazio',\n    'veado',\n    'vedar',\n    'vegetar',\n    'veicular',\n    'veleiro',\n    'velhice',\n    'veludo',\n    'vencedor',\n    'vendaval',\n    'venerar',\n    'ventre',\n    'verbal',\n    'verdade',\n    'vereador',\n    'vergonha',\n    'vermelho',\n    'verniz',\n    'versar',\n    'vertente',\n    'vespa',\n    'vestido',\n    'vetorial',\n    'viaduto',\n    'viagem',\n    'viajar',\n    'viatura',\n    'vibrador',\n    'videira',\n    'vidraria',\n    'viela',\n    'viga',\n    'vigente',\n    'vigiar',\n    'vigorar',\n    'vilarejo',\n    'vinco',\n    'vinheta',\n    'vinil',\n    'violeta',\n    'virada',\n    'virtude',\n    'visitar',\n    'visto',\n    'vitral',\n    'viveiro',\n    'vizinho',\n    'voador',\n    'voar',\n    'vogal',\n    'volante',\n    'voleibol',\n    'voltagem',\n    'volumoso',\n    'vontade',\n    'vulto',\n    'vuvuzela',\n    'xadrez',\n    'xarope',\n    'xeque',\n    'xeretar',\n    'xerife',\n    'xingar',\n    'zangado',\n    'zarpar',\n    'zebu',\n    'zelador',\n    'zombar',\n    'zoologia',\n    'zumbido'\n];\n//# sourceMappingURL=portuguese.js.map","// SPDX-License-Identifier: MIT\nexport const WORDLIST = [\n    'абзац',\n    'абонент',\n    'абсурд',\n    'авангард',\n    'авария',\n    'август',\n    'авиация',\n    'автор',\n    'агент',\n    'агитация',\n    'агрегат',\n    'адвокат',\n    'адмирал',\n    'адрес',\n    'азарт',\n    'азот',\n    'академия',\n    'аквариум',\n    'аксиома',\n    'акула',\n    'акцент',\n    'акция',\n    'аллея',\n    'алмаз',\n    'алтарь',\n    'альбом',\n    'альянс',\n    'амбиция',\n    'анализ',\n    'анекдот',\n    'анкета',\n    'ансамбль',\n    'антенна',\n    'апельсин',\n    'аппарат',\n    'аппетит',\n    'апрель',\n    'аптека',\n    'арбуз',\n    'аргумент',\n    'аренда',\n    'арест',\n    'армия',\n    'аромат',\n    'арсенал',\n    'артерия',\n    'артист',\n    'архив',\n    'аспирант',\n    'асфальт',\n    'атака',\n    'атомный',\n    'атрибут',\n    'аукцион',\n    'афиша',\n    'аэропорт',\n    'бабочка',\n    'бабушка',\n    'багаж',\n    'база',\n    'бактерия',\n    'баланс',\n    'балерина',\n    'балкон',\n    'бандит',\n    'банк',\n    'барабан',\n    'барон',\n    'барышня',\n    'барьер',\n    'бассейн',\n    'батарея',\n    'башмак',\n    'башня',\n    'бедный',\n    'беженец',\n    'бездна',\n    'белка',\n    'белый',\n    'бензин',\n    'берег',\n    'беседа',\n    'бешеный',\n    'билет',\n    'бинокль',\n    'биржа',\n    'битва',\n    'благо',\n    'блеск',\n    'близкий',\n    'блин',\n    'блок',\n    'блюдо',\n    'богатый',\n    'бодрый',\n    'боец',\n    'бокал',\n    'боковой',\n    'бокс',\n    'более',\n    'болото',\n    'болтать',\n    'большой',\n    'бомба',\n    'борт',\n    'борьба',\n    'босой',\n    'ботинок',\n    'бояться',\n    'брак',\n    'брать',\n    'бревно',\n    'бред',\n    'бригада',\n    'бродяга',\n    'броня',\n    'бросить',\n    'брызги',\n    'брюки',\n    'брюхо',\n    'бугор',\n    'будка',\n    'будни',\n    'будущее',\n    'буква',\n    'букет',\n    'бульвар',\n    'бумага',\n    'бунт',\n    'бурный',\n    'буря',\n    'бутылка',\n    'бухта',\n    'бывший',\n    'быстро',\n    'бытовой',\n    'быть',\n    'бюджет',\n    'бюро',\n    'бюст',\n    'вагон',\n    'важный',\n    'вакцина',\n    'валенок',\n    'вальс',\n    'валюта',\n    'ванная',\n    'варенье',\n    'вариант',\n    'вблизи',\n    'вверх',\n    'вводить',\n    'вдали',\n    'вдвое',\n    'вдова',\n    'вдоль',\n    'вдруг',\n    'ведро',\n    'ведущий',\n    'ведьма',\n    'вежливо',\n    'везде',\n    'веко',\n    'вексель',\n    'велеть',\n    'великий',\n    'венец',\n    'веник',\n    'веранда',\n    'верблюд',\n    'верить',\n    'верный',\n    'версия',\n    'вертеть',\n    'верхний',\n    'вершина',\n    'весело',\n    'весна',\n    'весомый',\n    'вести',\n    'весь',\n    'ветеран',\n    'ветхий',\n    'вечер',\n    'вечно',\n    'вешалка',\n    'вещество',\n    'взамен',\n    'взгляд',\n    'вздох',\n    'взнос',\n    'взойти',\n    'взор',\n    'взрыв',\n    'взять',\n    'видеть',\n    'видимо',\n    'визг',\n    'визит',\n    'вилка',\n    'вина',\n    'вирус',\n    'висок',\n    'витамин',\n    'витрина',\n    'вихрь',\n    'вишня',\n    'вкус',\n    'влага',\n    'владелец',\n    'власть',\n    'влево',\n    'влияние',\n    'вложить',\n    'вместе',\n    'внешний',\n    'вникать',\n    'внимание',\n    'вновь',\n    'внук',\n    'внутри',\n    'внучка',\n    'внушать',\n    'вовлечь',\n    'вовремя',\n    'вовсю',\n    'вода',\n    'водород',\n    'водяной',\n    'воевать',\n    'возврат',\n    'возглас',\n    'воздух',\n    'возить',\n    'возле',\n    'возня',\n    'возраст',\n    'война',\n    'войско',\n    'вокзал',\n    'волос',\n    'волчий',\n    'вольный',\n    'воля',\n    'вообще',\n    'вопль',\n    'вопрос',\n    'ворота',\n    'восемь',\n    'восток',\n    'вплоть',\n    'вполне',\n    'вправе',\n    'впредь',\n    'впрочем',\n    'врач',\n    'вредный',\n    'время',\n    'вручить',\n    'всадник',\n    'всегда',\n    'вскоре',\n    'вскрыть',\n    'всплеск',\n    'вспышка',\n    'встреча',\n    'всюду',\n    'всякий',\n    'второй',\n    'вход',\n    'вчера',\n    'выбор',\n    'вывод',\n    'выгнать',\n    'выдать',\n    'выехать',\n    'вызов',\n    'выйти',\n    'выкуп',\n    'вылезти',\n    'вымыть',\n    'выпасть',\n    'выпить',\n    'выплата',\n    'выпуск',\n    'вырасти',\n    'выручка',\n    'выслать',\n    'высокий',\n    'выставка',\n    'вышка',\n    'вязать',\n    'вялый',\n    'газета',\n    'газовый',\n    'галерея',\n    'галстук',\n    'гамма',\n    'гарантия',\n    'гармония',\n    'гарнизон',\n    'гастроли',\n    'гвардия',\n    'гвоздь',\n    'гектар',\n    'генерал',\n    'гений',\n    'геном',\n    'геолог',\n    'герб',\n    'герой',\n    'гибкий',\n    'гигант',\n    'гимн',\n    'гипотеза',\n    'гитара',\n    'главный',\n    'глагол',\n    'гладить',\n    'глаз',\n    'глина',\n    'глоток',\n    'глубокий',\n    'глупый',\n    'глухой',\n    'глыба',\n    'глядеть',\n    'гнев',\n    'гнездо',\n    'гнилой',\n    'годовой',\n    'голова',\n    'голубой',\n    'голый',\n    'гонорар',\n    'гордость',\n    'горизонт',\n    'горло',\n    'горный',\n    'город',\n    'горшок',\n    'горький',\n    'горючее',\n    'горячий',\n    'готовый',\n    'градус',\n    'грамм',\n    'граница',\n    'граф',\n    'гребень',\n    'гриб',\n    'гримаса',\n    'грозить',\n    'грохот',\n    'грош',\n    'грубый',\n    'грудь',\n    'груз',\n    'грунт',\n    'группа',\n    'груша',\n    'грязный',\n    'губа',\n    'гудок',\n    'гулкий',\n    'гулять',\n    'гусеница',\n    'густо',\n    'гусь',\n    'давление',\n    'давно',\n    'даже',\n    'дальний',\n    'данный',\n    'дарить',\n    'датчик',\n    'дать',\n    'дача',\n    'двадцать',\n    'дважды',\n    'дверь',\n    'двигать',\n    'движение',\n    'двойной',\n    'двор',\n    'дебют',\n    'девятый',\n    'дежурный',\n    'действие',\n    'декабрь',\n    'деление',\n    'дело',\n    'дельфин',\n    'день',\n    'дерево',\n    'держать',\n    'дерзкий',\n    'десять',\n    'деталь',\n    'детский',\n    'дефект',\n    'дефицит',\n    'деятель',\n    'джаз',\n    'джинсы',\n    'джунгли',\n    'диагноз',\n    'диалог',\n    'диапазон',\n    'диван',\n    'дивизия',\n    'дивный',\n    'диета',\n    'дизайн',\n    'дикарь',\n    'дилер',\n    'динамика',\n    'диплом',\n    'директор',\n    'дитя',\n    'длинный',\n    'дневник',\n    'добрый',\n    'добыча',\n    'доверие',\n    'догадка',\n    'догнать',\n    'дождь',\n    'доклад',\n    'доктор',\n    'документ',\n    'долго',\n    'должен',\n    'долина',\n    'донос',\n    'дорога',\n    'досада',\n    'доска',\n    'достать',\n    'досуг',\n    'доход',\n    'доцент',\n    'дощатый',\n    'драка',\n    'древний',\n    'дремать',\n    'дробный',\n    'дрова',\n    'дрожать',\n    'другой',\n    'дружба',\n    'дубовый',\n    'дуга',\n    'думать',\n    'дурной',\n    'духи',\n    'душный',\n    'дуэль',\n    'дуэт',\n    'дыра',\n    'дыхание',\n    'дюжина',\n    'дядя',\n    'едва',\n    'единый',\n    'ерунда',\n    'если',\n    'ехать',\n    'жадный',\n    'жажда',\n    'жалеть',\n    'жалоба',\n    'жанр',\n    'жареный',\n    'жаркий',\n    'жгучий',\n    'жевать',\n    'желание',\n    'желудок',\n    'жена',\n    'женщина',\n    'жертва',\n    'жест',\n    'жидкость',\n    'житель',\n    'жить',\n    'жрец',\n    'жулик',\n    'журнал',\n    'жуткий',\n    'забрать',\n    'забыть',\n    'завести',\n    'завод',\n    'завтра',\n    'загадка',\n    'загнать',\n    'заговор',\n    'задача',\n    'задеть',\n    'задний',\n    'задолго',\n    'заехать',\n    'заказ',\n    'закон',\n    'закрыть',\n    'закуска',\n    'залезть',\n    'залить',\n    'залп',\n    'замок',\n    'замуж',\n    'замысел',\n    'занавес',\n    'заново',\n    'занять',\n    'заодно',\n    'запись',\n    'запрос',\n    'запуск',\n    'запястье',\n    'заранее',\n    'заросль',\n    'зарплата',\n    'заря',\n    'засада',\n    'заслуга',\n    'заснуть',\n    'застать',\n    'затвор',\n    'затеять',\n    'затрата',\n    'затылок',\n    'захват',\n    'зачем',\n    'защита',\n    'заявить',\n    'заяц',\n    'звезда',\n    'звено',\n    'звонить',\n    'здесь',\n    'зелень',\n    'земля',\n    'зеркало',\n    'зерно',\n    'зима',\n    'злой',\n    'змея',\n    'знамя',\n    'знание',\n    'значит',\n    'золотой',\n    'зона',\n    'зонтик',\n    'зоопарк',\n    'зрачок',\n    'зрение',\n    'зритель',\n    'зубной',\n    'зубр',\n    'игла',\n    'идеал',\n    'идеолог',\n    'идея',\n    'идол',\n    'идти',\n    'изба',\n    'избить',\n    'избрать',\n    'избыток',\n    'извлечь',\n    'извне',\n    'изгиб',\n    'изгнать',\n    'издание',\n    'изделие',\n    'изнутри',\n    'изобилие',\n    'изоляция',\n    'изредка',\n    'изрядно',\n    'изучение',\n    'изъять',\n    'изящный',\n    'икона',\n    'икра',\n    'иллюзия',\n    'именно',\n    'иметь',\n    'имидж',\n    'империя',\n    'импульс',\n    'иначе',\n    'инвалид',\n    'индекс',\n    'индивид',\n    'инерция',\n    'инженер',\n    'иногда',\n    'иной',\n    'институт',\n    'интерес',\n    'интрига',\n    'интуиция',\n    'инфаркт',\n    'инцидент',\n    'ирония',\n    'искать',\n    'испуг',\n    'история',\n    'итог',\n    'июнь',\n    'кабель',\n    'кабинет',\n    'каблук',\n    'кавалер',\n    'кадр',\n    'каждый',\n    'кажется',\n    'казино',\n    'калитка',\n    'камень',\n    'камин',\n    'канал',\n    'кандидат',\n    'каникулы',\n    'канон',\n    'капитан',\n    'капля',\n    'капот',\n    'капуста',\n    'карандаш',\n    'карета',\n    'каркас',\n    'карман',\n    'картина',\n    'карьера',\n    'каска',\n    'кассета',\n    'кастрюля',\n    'каталог',\n    'катер',\n    'каток',\n    'катушка',\n    'кафедра',\n    'качество',\n    'каша',\n    'кашлять',\n    'каюта',\n    'квадрат',\n    'квартира',\n    'квота',\n    'кепка',\n    'кивнуть',\n    'километр',\n    'кино',\n    'киоск',\n    'кипяток',\n    'кирпич',\n    'кислота',\n    'кисть',\n    'клавиша',\n    'клапан',\n    'класс',\n    'клей',\n    'клетка',\n    'клиент',\n    'климат',\n    'клиника',\n    'кличка',\n    'клоун',\n    'клочок',\n    'клуб',\n    'клумба',\n    'ключ',\n    'книга',\n    'кнопка',\n    'кнут',\n    'княгиня',\n    'князь',\n    'кобура',\n    'когда',\n    'кодекс',\n    'кожа',\n    'коктейль',\n    'колено',\n    'коллега',\n    'колонна',\n    'колпак',\n    'кольцо',\n    'колючий',\n    'коляска',\n    'команда',\n    'комедия',\n    'комиссия',\n    'коммуна',\n    'комната',\n    'комок',\n    'компания',\n    'комфорт',\n    'конвейер',\n    'конгресс',\n    'конечно',\n    'конкурс',\n    'контроль',\n    'концерт',\n    'конь',\n    'конюшня',\n    'копать',\n    'копейка',\n    'копыто',\n    'корабль',\n    'корень',\n    'корзина',\n    'коридор',\n    'кормить',\n    'корпус',\n    'космос',\n    'костюм',\n    'косяк',\n    'котел',\n    'котлета',\n    'который',\n    'коттедж',\n    'кофе',\n    'кофта',\n    'кошка',\n    'кража',\n    'край',\n    'красный',\n    'краткий',\n    'кредит',\n    'крем',\n    'крепкий',\n    'кресло',\n    'кривой',\n    'кризис',\n    'кристалл',\n    'критерий',\n    'кричать',\n    'кровь',\n    'крокодил',\n    'кролик',\n    'кроме',\n    'крона',\n    'круг',\n    'кружка',\n    'крупный',\n    'крутой',\n    'крушение',\n    'крыло',\n    'крыша',\n    'крючок',\n    'кстати',\n    'кубик',\n    'куда',\n    'кузов',\n    'кукла',\n    'кулак',\n    'кулиса',\n    'культура',\n    'кумир',\n    'купе',\n    'купить',\n    'купол',\n    'купюра',\n    'курица',\n    'курорт',\n    'курс',\n    'куртка',\n    'кусок',\n    'куст',\n    'кухня',\n    'кушать',\n    'лабиринт',\n    'лавка',\n    'лагерь',\n    'ладно',\n    'ладонь',\n    'лапа',\n    'лауреат',\n    'лгать',\n    'лебедь',\n    'левый',\n    'легенда',\n    'легкий',\n    'ледяной',\n    'лежать',\n    'лезвие',\n    'лезть',\n    'лекция',\n    'ленивый',\n    'лента',\n    'лепесток',\n    'лесной',\n    'лестница',\n    'лететь',\n    'лето',\n    'лечить',\n    'лига',\n    'лидер',\n    'лиловый',\n    'лимон',\n    'линия',\n    'липкий',\n    'лист',\n    'литр',\n    'лихой',\n    'лицо',\n    'лишить',\n    'лишний',\n    'ловить',\n    'логика',\n    'лодка',\n    'ложь',\n    'лозунг',\n    'локоть',\n    'лопата',\n    'лошадь',\n    'лукавый',\n    'луна',\n    'лучший',\n    'лысый',\n    'льгота',\n    'любить',\n    'любой',\n    'людской',\n    'люстра',\n    'лютый',\n    'лягушка',\n    'магазин',\n    'магия',\n    'майор',\n    'майский',\n    'максимум',\n    'макушка',\n    'мало',\n    'мальчик',\n    'мама',\n    'манера',\n    'марка',\n    'март',\n    'маршрут',\n    'масса',\n    'мастер',\n    'масштаб',\n    'материал',\n    'матч',\n    'махать',\n    'машина',\n    'маяк',\n    'мебель',\n    'медаль',\n    'медведь',\n    'медицина',\n    'медь',\n    'между',\n    'мелкий',\n    'мелочь',\n    'мемуары',\n    'меньше',\n    'меню',\n    'менять',\n    'мера',\n    'мерцать',\n    'место',\n    'месяц',\n    'металл',\n    'метод',\n    'метр',\n    'механизм',\n    'меховой',\n    'мечтать',\n    'мешать',\n    'мешок',\n    'миграция',\n    'микрофон',\n    'милиция',\n    'миллион',\n    'милость',\n    'миля',\n    'мимо',\n    'минерал',\n    'министр',\n    'минута',\n    'мирный',\n    'миска',\n    'миссия',\n    'митинг',\n    'мишень',\n    'младший',\n    'мнение',\n    'мнимый',\n    'много',\n    'могучий',\n    'модель',\n    'может',\n    'мозг',\n    'мокрый',\n    'молекула',\n    'молния',\n    'молодой',\n    'молчать',\n    'момент',\n    'монета',\n    'монитор',\n    'монолог',\n    'монстр',\n    'монтаж',\n    'мораль',\n    'море',\n    'морковь',\n    'мороз',\n    'морщина',\n    'мостовая',\n    'мотать',\n    'мотив',\n    'мотор',\n    'мохнатый',\n    'мрамор',\n    'мрачный',\n    'мстить',\n    'мудрый',\n    'мужество',\n    'мужчина',\n    'музей',\n    'музыка',\n    'мундир',\n    'муравей',\n    'мусор',\n    'муха',\n    'мчаться',\n    'мысль',\n    'мыться',\n    'мышца',\n    'мышь',\n    'мюзикл',\n    'мягкий',\n    'мясо',\n    'набор',\n    'навык',\n    'наглый',\n    'нагрузка',\n    'надежда',\n    'надзор',\n    'надо',\n    'наедине',\n    'назад',\n    'название',\n    'назло',\n    'наивный',\n    'найти',\n    'наконец',\n    'налево',\n    'наличие',\n    'налог',\n    'намерен',\n    'нанести',\n    'напасть',\n    'например',\n    'народ',\n    'наследие',\n    'натура',\n    'наука',\n    'наутро',\n    'начать',\n    'небо',\n    'неважно',\n    'невеста',\n    'негодяй',\n    'недавно',\n    'неделя',\n    'недолго',\n    'недра',\n    'недуг',\n    'нежный',\n    'незачем',\n    'некто',\n    'нелепый',\n    'неловко',\n    'нельзя',\n    'немало',\n    'немой',\n    'неплохо',\n    'нервный',\n    'нередко',\n    'нестись',\n    'неудача',\n    'неужели',\n    'нефть',\n    'неясный',\n    'нигде',\n    'низкий',\n    'никакой',\n    'никогда',\n    'никуда',\n    'ничто',\n    'ничуть',\n    'ниша',\n    'нищий',\n    'новость',\n    'новый',\n    'нога',\n    'ноготь',\n    'ножницы',\n    'ноздря',\n    'номер',\n    'носить',\n    'носок',\n    'ночь',\n    'ноябрь',\n    'нрав',\n    'нуль',\n    'нынче',\n    'нырять',\n    'нюанс',\n    'няня',\n    'обаяние',\n    'обед',\n    'обезьяна',\n    'обещать',\n    'обжечь',\n    'обзор',\n    'обилие',\n    'обитать',\n    'область',\n    'облик',\n    'обложка',\n    'обмен',\n    'обморок',\n    'обожать',\n    'обои',\n    'оболочка',\n    'оборона',\n    'обочина',\n    'образ',\n    'обрести',\n    'обрыв',\n    'обувь',\n    'обучение',\n    'обход',\n    'общество',\n    'общий',\n    'объект',\n    'обыск',\n    'обычно',\n    'обязать',\n    'овощи',\n    'овраг',\n    'овца',\n    'оговорка',\n    'ограда',\n    'огурец',\n    'одежда',\n    'одеяло',\n    'один',\n    'однако',\n    'одолеть',\n    'ожидать',\n    'озеро',\n    'океан',\n    'окно',\n    'около',\n    'окоп',\n    'окраина',\n    'октябрь',\n    'опасный',\n    'опека',\n    'операция',\n    'описание',\n    'оплата',\n    'опора',\n    'оппонент',\n    'оптимизм',\n    'оптовый',\n    'опухоль',\n    'опыт',\n    'оратор',\n    'орбита',\n    'орган',\n    'орден',\n    'орел',\n    'оригинал',\n    'ориентир',\n    'оркестр',\n    'оружие',\n    'осенний',\n    'осколок',\n    'осмотр',\n    'остров',\n    'отбор',\n    'отбыть',\n    'отвлечь',\n    'отдать',\n    'отдел',\n    'отдых',\n    'отель',\n    'отец',\n    'отзыв',\n    'отказ',\n    'отклик',\n    'открыть',\n    'откуда',\n    'отличие',\n    'отныне',\n    'отойти',\n    'отпуск',\n    'отрасль',\n    'отросток',\n    'отрывок',\n    'отряд',\n    'отсек',\n    'отставка',\n    'отсюда',\n    'оттенок',\n    'оттого',\n    'отчего',\n    'отъезд',\n    'офис',\n    'офицер',\n    'охота',\n    'охрана',\n    'оценка',\n    'очаг',\n    'очень',\n    'очередь',\n    'очищать',\n    'ошибка',\n    'ощущение',\n    'павильон',\n    'падать',\n    'пазуха',\n    'пакет',\n    'палата',\n    'палец',\n    'палуба',\n    'пальто',\n    'память',\n    'панель',\n    'паника',\n    'пара',\n    'парень',\n    'пароход',\n    'партия',\n    'парус',\n    'паспорт',\n    'пассажир',\n    'пастух',\n    'патент',\n    'патрон',\n    'пауза',\n    'паук',\n    'паутина',\n    'пафос',\n    'пахнуть',\n    'пациент',\n    'пачка',\n    'певец',\n    'педагог',\n    'пейзаж',\n    'пенсия',\n    'пепел',\n    'первый',\n    'перед',\n    'период',\n    'перо',\n    'перрон',\n    'персонаж',\n    'перчатка',\n    'песня',\n    'песок',\n    'петля',\n    'петрушка',\n    'петух',\n    'пехота',\n    'печать',\n    'печень',\n    'пешком',\n    'пещера',\n    'пианист',\n    'пиджак',\n    'пилот',\n    'пионер',\n    'пирамида',\n    'пирожок',\n    'письмо',\n    'пища',\n    'плавание',\n    'плакать',\n    'пламя',\n    'план',\n    'пласт',\n    'платить',\n    'пленный',\n    'плечо',\n    'плита',\n    'плод',\n    'плоский',\n    'плотный',\n    'плохой',\n    'площадь',\n    'плыть',\n    'плюс',\n    'пляж',\n    'плясать',\n    'победа',\n    'повар',\n    'повод',\n    'повсюду',\n    'повязка',\n    'погода',\n    'погреб',\n    'подбор',\n    'подвиг',\n    'подделка',\n    'поджать',\n    'поднос',\n    'подпись',\n    'подруга',\n    'подход',\n    'подчас',\n    'подъезд',\n    'поединок',\n    'поезд',\n    'поесть',\n    'поехать',\n    'пожалуй',\n    'пожилой',\n    'позади',\n    'позвать',\n    'поздний',\n    'позиция',\n    'позор',\n    'поиск',\n    'поймать',\n    'пойти',\n    'поклон',\n    'покой',\n    'покрыть',\n    'полдень',\n    'полезный',\n    'ползти',\n    'полк',\n    'полный',\n    'половина',\n    'полтора',\n    'польза',\n    'поляна',\n    'помидор',\n    'помнить',\n    'помощь',\n    'попасть',\n    'поперек',\n    'поплыть',\n    'пополам',\n    'поправка',\n    'попугай',\n    'попытка',\n    'порог',\n    'портрет',\n    'порция',\n    'порыв',\n    'порядок',\n    'после',\n    'посол',\n    'посреди',\n    'постель',\n    'посуда',\n    'потом',\n    'похвала',\n    'похожий',\n    'поцелуй',\n    'почва',\n    'почему',\n    'пошлина',\n    'поэма',\n    'поэтому',\n    'право',\n    'праздник',\n    'практика',\n    'прах',\n    'преграда',\n    'предмет',\n    'прежде',\n    'прелесть',\n    'премия',\n    'препарат',\n    'пресса',\n    'прибыть',\n    'прижать',\n    'прийти',\n    'приказ',\n    'прилавок',\n    'пример',\n    'принять',\n    'природа',\n    'притом',\n    'прихожая',\n    'прицел',\n    'причина',\n    'приют',\n    'прогноз',\n    'продукт',\n    'проект',\n    'прожить',\n    'прокат',\n    'промысел',\n    'пропуск',\n    'просто',\n    'против',\n    'профиль',\n    'процесс',\n    'прочий',\n    'прошлый',\n    'прощать',\n    'пружина',\n    'прут',\n    'прыжок',\n    'прямой',\n    'птица',\n    'публика',\n    'пугать',\n    'пуговица',\n    'пузырь',\n    'пульт',\n    'пуля',\n    'пункт',\n    'пускать',\n    'пустой',\n    'путь',\n    'пухлый',\n    'пучок',\n    'пушистый',\n    'пушка',\n    'пчела',\n    'пшеница',\n    'пылать',\n    'пыль',\n    'пышный',\n    'пьеса',\n    'пятка',\n    'пятно',\n    'пятый',\n    'пятьсот',\n    'работа',\n    'равнина',\n    'ради',\n    'радость',\n    'радуга',\n    'разбить',\n    'развитие',\n    'разговор',\n    'раздел',\n    'различие',\n    'размер',\n    'разный',\n    'разрыв',\n    'разум',\n    'район',\n    'ракета',\n    'раковина',\n    'рамка',\n    'рано',\n    'рапорт',\n    'распад',\n    'рассказ',\n    'расти',\n    'расход',\n    'расцвет',\n    'рация',\n    'рвануть',\n    'рваться',\n    'реакция',\n    'ребро',\n    'реветь',\n    'редактор',\n    'редкий',\n    'реестр',\n    'режим',\n    'резать',\n    'резерв',\n    'резина',\n    'резко',\n    'резной',\n    'рейс',\n    'реклама',\n    'рекорд',\n    'религия',\n    'рельс',\n    'ремень',\n    'ремонт',\n    'реплика',\n    'репортаж',\n    'ресница',\n    'ресторан',\n    'реформа',\n    'рецепт',\n    'речь',\n    'решение',\n    'ржавый',\n    'риск',\n    'рисунок',\n    'ритуал',\n    'рифма',\n    'робко',\n    'робот',\n    'ровесник',\n    'ровно',\n    'родной',\n    'рождение',\n    'роза',\n    'розовый',\n    'розыск',\n    'роль',\n    'роман',\n    'роскошь',\n    'роспись',\n    'рост',\n    'рубашка',\n    'рубеж',\n    'рубить',\n    'рубрика',\n    'рудник',\n    'рука',\n    'рукопись',\n    'румяный',\n    'русло',\n    'рухнуть',\n    'ручей',\n    'ручной',\n    'рыба',\n    'рыжий',\n    'рынок',\n    'рыхлый',\n    'рыцарь',\n    'рычаг',\n    'рюкзак',\n    'рядом',\n    'садовый',\n    'сажать',\n    'салон',\n    'салфетка',\n    'салют',\n    'самец',\n    'самовар',\n    'самый',\n    'сани',\n    'санкция',\n    'сапог',\n    'сарай',\n    'сатира',\n    'сахар',\n    'сбить',\n    'сбоку',\n    'сборная',\n    'сбыт',\n    'свадьба',\n    'свалка',\n    'сварить',\n    'свежий',\n    'сверху',\n    'свет',\n    'свеча',\n    'свинья',\n    'свист',\n    'свитер',\n    'свобода',\n    'сводка',\n    'свой',\n    'свыше',\n    'связь',\n    'сдаться',\n    'сделать',\n    'сегмент',\n    'сегодня',\n    'седло',\n    'седой',\n    'седьмой',\n    'сезон',\n    'сейф',\n    'сейчас',\n    'секрет',\n    'сектор',\n    'секунда',\n    'семинар',\n    'семья',\n    'сенатор',\n    'сено',\n    'сенсация',\n    'сентябрь',\n    'сервис',\n    'сердце',\n    'середина',\n    'сержант',\n    'серия',\n    'серый',\n    'сессия',\n    'сесть',\n    'сетевой',\n    'сжатый',\n    'сжечь',\n    'сзади',\n    'сигнал',\n    'сиденье',\n    'сила',\n    'силуэт',\n    'сильный',\n    'символ',\n    'симпатия',\n    'симфония',\n    'синий',\n    'синтез',\n    'синяк',\n    'сирень',\n    'система',\n    'ситуация',\n    'сияние',\n    'сказать',\n    'скала',\n    'скамейка',\n    'скандал',\n    'скатерть',\n    'скачок',\n    'скважина',\n    'сквер',\n    'сквозь',\n    'скелет',\n    'скидка',\n    'склад',\n    'сколько',\n    'скорый',\n    'скосить',\n    'скот',\n    'скрипка',\n    'скудный',\n    'скука',\n    'слабый',\n    'слава',\n    'сладкий',\n    'слегка',\n    'след',\n    'слеза',\n    'слепой',\n    'слесарь',\n    'слишком',\n    'слово',\n    'слог',\n    'сложный',\n    'сломать',\n    'служба',\n    'слух',\n    'случай',\n    'слышать',\n    'слюна',\n    'смежный',\n    'смелый',\n    'сменить',\n    'смесь',\n    'сметана',\n    'смех',\n    'смола',\n    'смуглый',\n    'смутный',\n    'смущать',\n    'смысл',\n    'снайпер',\n    'снаряд',\n    'сначала',\n    'снег',\n    'снизу',\n    'сниться',\n    'сно��а',\n    'снять',\n    'собака',\n    'соблазн',\n    'собрание',\n    'событие',\n    'совесть',\n    'совсем',\n    'согласие',\n    'создать',\n    'сознание',\n    'созреть',\n    'сойтись',\n    'сокол',\n    'солдат',\n    'соленый',\n    'солнце',\n    'солома',\n    'сомнение',\n    'сонный',\n    'соперник',\n    'соратник',\n    'сорвать',\n    'сосед',\n    'сосиска',\n    'состав',\n    'сотня',\n    'соус',\n    'союз',\n    'спад',\n    'спальня',\n    'спасти',\n    'спектр',\n    'сперва',\n    'спешить',\n    'спина',\n    'спирт',\n    'список',\n    'спичка',\n    'сплав',\n    'спонсор',\n    'спор',\n    'способ',\n    'справка',\n    'спустя',\n    'спутник',\n    'сразу',\n    'средство',\n    'срок',\n    'срыв',\n    'ссора',\n    'ссылка',\n    'ставить',\n    'стадия',\n    'стакан',\n    'станция',\n    'старый',\n    'стая',\n    'стебель',\n    'стекло',\n    'стена',\n    'степень',\n    'стереть',\n    'стиль',\n    'стимул',\n    'стирать',\n    'стихи',\n    'стоить',\n    'стойка',\n    'стол',\n    'стонать',\n    'стопа',\n    'сторона',\n    'стоянка',\n    'страна',\n    'стричь',\n    'строгий',\n    'струя',\n    'студент',\n    'стук',\n    'ступня',\n    'стыдно',\n    'суббота',\n    'субъект',\n    'сувенир',\n    'сугроб',\n    'сугубо',\n    'судить',\n    'судно',\n    'судьба',\n    'суета',\n    'суметь',\n    'сумма',\n    'сумрак',\n    'сундук',\n    'супруг',\n    'суровый',\n    'сутки',\n    'сухой',\n    'суша',\n    'существо',\n    'сфера',\n    'схема',\n    'схожий',\n    'сценарий',\n    'счастье',\n    'считать',\n    'съезд',\n    'сыграть',\n    'сырой',\n    'сытый',\n    'сыщик',\n    'сюда',\n    'сюжет',\n    'сюрприз',\n    'тайна',\n    'также',\n    'такой',\n    'такси',\n    'тактика',\n    'талия',\n    'таможня',\n    'танец',\n    'таракан',\n    'тарелка',\n    'тариф',\n    'тащить',\n    'таять',\n    'тварь',\n    'театр',\n    'тезис',\n    'текст',\n    'текущий',\n    'телефон',\n    'тема',\n    'темнота',\n    'теневой',\n    'теннис',\n    'теория',\n    'теперь',\n    'тепло',\n    'терапия',\n    'терзать',\n    'термин',\n    'терпеть',\n    'терраса',\n    'терять',\n    'тесный',\n    'тетрадь',\n    'техника',\n    'течение',\n    'тигр',\n    'типовой',\n    'тираж',\n    'титул',\n    'тихий',\n    'ткань',\n    'товарищ',\n    'тоже',\n    'толпа',\n    'толстый',\n    'толчок',\n    'толщина',\n    'только',\n    'тонкий',\n    'тонна',\n    'топить',\n    'топор',\n    'торговля',\n    'тормоз',\n    'торчать',\n    'тотчас',\n    'точка',\n    'точно',\n    'тощий',\n    'трава',\n    'традиция',\n    'трактор',\n    'трамвай',\n    'траншея',\n    'трасса',\n    'тревога',\n    'трезвый',\n    'тренер',\n    'трепет',\n    'треск',\n    'третий',\n    'трещина',\n    'трибуна',\n    'тридцать',\n    'триста',\n    'триумф',\n    'трогать',\n    'тройка',\n    'тронуть',\n    'тропа',\n    'тротуар',\n    'трубка',\n    'труд',\n    'трюк',\n    'тряпка',\n    'туго',\n    'туловище',\n    'туман',\n    'тумбочка',\n    'тундра',\n    'тупик',\n    'турист',\n    'турнир',\n    'тусклый',\n    'туфля',\n    'туча',\n    'тысяча',\n    'тяга',\n    'тяжело',\n    'убежать',\n    'убогий',\n    'уборка',\n    'уважение',\n    'увезти',\n    'уволить',\n    'угадать',\n    'угол',\n    'угощать',\n    'угроза',\n    'угрюмый',\n    'удар',\n    'удачный',\n    'уделять',\n    'удивить',\n    'удобный',\n    'удочка',\n    'уезжать',\n    'ужин',\n    'узел',\n    'узкий',\n    'уйти',\n    'указание',\n    'уклон',\n    'украсть',\n    'укусить',\n    'улетать',\n    'улица',\n    'улыбка',\n    'умело',\n    'умение',\n    'умный',\n    'умолять',\n    'унести',\n    'унижать',\n    'унылый',\n    'упаковка',\n    'упасть',\n    'упорно',\n    'упрек',\n    'урна',\n    'уровень',\n    'урожай',\n    'уронить',\n    'усадьба',\n    'усатый',\n    'усвоить',\n    'усилие',\n    'условие',\n    'услуга',\n    'усмешка',\n    'успеть',\n    'устав',\n    'устоять',\n    'утечка',\n    'утешать',\n    'утро',\n    'уцелеть',\n    'участие',\n    'ученик',\n    'учесть',\n    'ущелье',\n    'ущерб',\n    'уютный',\n    'фабрика',\n    'фаворит',\n    'факел',\n    'факт',\n    'фамилия',\n    'фантазия',\n    'фасад',\n    'февраль',\n    'феномен',\n    'фермер',\n    'фигура',\n    'физика',\n    'филиал',\n    'философ',\n    'фильм',\n    'финал',\n    'флаг',\n    'флот',\n    'фойе',\n    'фокус',\n    'фонарь',\n    'фонд',\n    'фонтан',\n    'форма',\n    'форум',\n    'фото',\n    'фрагмент',\n    'фраза',\n    'фракция',\n    'фронт',\n    'фрукт',\n    'функция',\n    'фуражка',\n    'футбол',\n    'футляр',\n    'халат',\n    'хаос',\n    'характер',\n    'хата',\n    'хвалить',\n    'хватать',\n    'хвойный',\n    'хвост',\n    'химия',\n    'хирург',\n    'хитрый',\n    'хищник',\n    'хлеб',\n    'хлынуть',\n    'хмурый',\n    'ходить',\n    'хозяин',\n    'хоккей',\n    'холм',\n    'холст',\n    'хорошо',\n    'хотеть',\n    'храбрый',\n    'храм',\n    'хранить',\n    'хребет',\n    'хрен',\n    'хрипло',\n    'хроника',\n    'хрупкий',\n    'художник',\n    'худший',\n    'хулиган',\n    'хутор',\n    'царь',\n    'цветок',\n    'целевой',\n    'целиком',\n    'целое',\n    'цель',\n    'цензура',\n    'ценить',\n    'центр',\n    'цепной',\n    'цикл',\n    'цилиндр',\n    'цирк',\n    'цитата',\n    'цифра',\n    'чайник',\n    'часы',\n    'чашка',\n    'человек',\n    'челюсть',\n    'чемодан',\n    'чемпион',\n    'чепуха',\n    'червь',\n    'чердак',\n    'через',\n    'чернила',\n    'черта',\n    'чеснок',\n    'честно',\n    'четверть',\n    'четыре',\n    'число',\n    'чистый',\n    'читатель',\n    'чтение',\n    'чтобы',\n    'чувство',\n    'чудак',\n    'чудный',\n    'чудо',\n    'чужой',\n    'чулок',\n    'чума',\n    'чушь',\n    'чуять',\n    'шагать',\n    'шанс',\n    'шапка',\n    'шарик',\n    'шарф',\n    'шахматы',\n    'шашлык',\n    'шедевр',\n    'шептать',\n    'шерсть',\n    'шестой',\n    'шинель',\n    'ширина',\n    'шишка',\n    'шкаф',\n    'школа',\n    'шкура',\n    'шланг',\n    'шлем',\n    'шнур',\n    'шоколад',\n    'шорох',\n    'шоссе',\n    'шпион',\n    'шприц',\n    'штаб',\n    'штамм',\n    'штаны',\n    'штатный',\n    'штора',\n    'штраф',\n    'штурм',\n    'штык',\n    'шумно',\n    'шуршать',\n    'шутить',\n    'шутка',\n    'щедрый',\n    'щека',\n    'щенок',\n    'экзамен',\n    'экипаж',\n    'экономия',\n    'экран',\n    'эксперт',\n    'элемент',\n    'элитный',\n    'эмоция',\n    'энергия',\n    'эпизод',\n    'эпоха',\n    'эскиз',\n    'эстрада',\n    'этап',\n    'этика',\n    'этот',\n    'эфир',\n    'эффект',\n    'эшелон',\n    'юбилей',\n    'юбка',\n    'южный',\n    'юмор',\n    'юность',\n    'юрист',\n    'юстиция',\n    'яблоко',\n    'явление',\n    'ягода',\n    'ядро',\n    'язык',\n    'яйцо',\n    'якобы',\n    'якорь',\n    'январь',\n    'яркий',\n    'ярмарка',\n    'ярость',\n    'ясный',\n    'яхта',\n    'ячейка',\n    'ящик'\n];\n//# sourceMappingURL=russian.js.map","// SPDX-License-Identifier: MIT\nexport const WORDLIST = [\n    'ábaco',\n    'abdomen',\n    'abeja',\n    'abierto',\n    'abogado',\n    'abono',\n    'aborto',\n    'abrazo',\n    'abrir',\n    'abuelo',\n    'abuso',\n    'acabar',\n    'academia',\n    'acceso',\n    'acción',\n    'aceite',\n    'acelga',\n    'acento',\n    'aceptar',\n    'ácido',\n    'aclarar',\n    'acné',\n    'acoger',\n    'acoso',\n    'activo',\n    'acto',\n    'actriz',\n    'actuar',\n    'acudir',\n    'acuerdo',\n    'acusar',\n    'adicto',\n    'admitir',\n    'adoptar',\n    'adorno',\n    'aduana',\n    'adulto',\n    'aéreo',\n    'afectar',\n    'afición',\n    'afinar',\n    'afirmar',\n    'ágil',\n    'agitar',\n    'agonía',\n    'agosto',\n    'agotar',\n    'agregar',\n    'agrio',\n    'agua',\n    'agudo',\n    'águila',\n    'aguja',\n    'ahogo',\n    'ahorro',\n    'aire',\n    'aislar',\n    'ajedrez',\n    'ajeno',\n    'ajuste',\n    'alacrán',\n    'alambre',\n    'alarma',\n    'alba',\n    'álbum',\n    'alcalde',\n    'aldea',\n    'alegre',\n    'alejar',\n    'alerta',\n    'aleta',\n    'alfiler',\n    'alga',\n    'algodón',\n    'aliado',\n    'aliento',\n    'alivio',\n    'alma',\n    'almeja',\n    'almíbar',\n    'altar',\n    'alteza',\n    'altivo',\n    'alto',\n    'altura',\n    'alumno',\n    'alzar',\n    'amable',\n    'amante',\n    'amapola',\n    'amargo',\n    'amasar',\n    'ámbar',\n    'ámbito',\n    'ameno',\n    'amigo',\n    'amistad',\n    'amor',\n    'amparo',\n    'amplio',\n    'ancho',\n    'anciano',\n    'ancla',\n    'andar',\n    'andén',\n    'anemia',\n    'ángulo',\n    'anillo',\n    'ánimo',\n    'anís',\n    'anotar',\n    'antena',\n    'antiguo',\n    'antojo',\n    'anual',\n    'anular',\n    'anuncio',\n    'añadir',\n    'añejo',\n    'año',\n    'apagar',\n    'aparato',\n    'apetito',\n    'apio',\n    'aplicar',\n    'apodo',\n    'aporte',\n    'apoyo',\n    'aprender',\n    'aprobar',\n    'apuesta',\n    'apuro',\n    'arado',\n    'araña',\n    'arar',\n    'árbitro',\n    'árbol',\n    'arbusto',\n    'archivo',\n    'arco',\n    'arder',\n    'ardilla',\n    'arduo',\n    'área',\n    'árido',\n    'aries',\n    'armonía',\n    'arnés',\n    'aroma',\n    'arpa',\n    'arpón',\n    'arreglo',\n    'arroz',\n    'arruga',\n    'arte',\n    'artista',\n    'asa',\n    'asado',\n    'asalto',\n    'ascenso',\n    'asegurar',\n    'aseo',\n    'asesor',\n    'asiento',\n    'asilo',\n    'asistir',\n    'asno',\n    'asombro',\n    'áspero',\n    'astilla',\n    'astro',\n    'astuto',\n    'asumir',\n    'asunto',\n    'atajo',\n    'ataque',\n    'atar',\n    'atento',\n    'ateo',\n    'ático',\n    'atleta',\n    'átomo',\n    'atraer',\n    'atroz',\n    'atún',\n    'audaz',\n    'audio',\n    'auge',\n    'aula',\n    'aumento',\n    'ausente',\n    'autor',\n    'aval',\n    'avance',\n    'avaro',\n    'ave',\n    'avellana',\n    'avena',\n    'avestruz',\n    'avión',\n    'aviso',\n    'ayer',\n    'ayuda',\n    'ayuno',\n    'azafrán',\n    'azar',\n    'azote',\n    'azúcar',\n    'azufre',\n    'azul',\n    'baba',\n    'babor',\n    'bache',\n    'bahía',\n    'baile',\n    'bajar',\n    'balanza',\n    'balcón',\n    'balde',\n    'bambú',\n    'banco',\n    'banda',\n    'baño',\n    'barba',\n    'barco',\n    'barniz',\n    'barro',\n    'báscula',\n    'bastón',\n    'basura',\n    'batalla',\n    'batería',\n    'batir',\n    'batuta',\n    'baúl',\n    'bazar',\n    'bebé',\n    'bebida',\n    'bello',\n    'besar',\n    'beso',\n    'bestia',\n    'bicho',\n    'bien',\n    'bingo',\n    'blanco',\n    'bloque',\n    'blusa',\n    'boa',\n    'bobina',\n    'bobo',\n    'boca',\n    'bocina',\n    'boda',\n    'bodega',\n    'boina',\n    'bola',\n    'bolero',\n    'bolsa',\n    'bomba',\n    'bondad',\n    'bonito',\n    'bono',\n    'bonsái',\n    'borde',\n    'borrar',\n    'bosque',\n    'bote',\n    'botín',\n    'bóveda',\n    'bozal',\n    'bravo',\n    'brazo',\n    'brecha',\n    'breve',\n    'brillo',\n    'brinco',\n    'brisa',\n    'broca',\n    'broma',\n    'bronce',\n    'brote',\n    'bruja',\n    'brusco',\n    'bruto',\n    'buceo',\n    'bucle',\n    'bueno',\n    'buey',\n    'bufanda',\n    'bufón',\n    'búho',\n    'buitre',\n    'bulto',\n    'burbuja',\n    'burla',\n    'burro',\n    'buscar',\n    'butaca',\n    'buzón',\n    'caballo',\n    'cabeza',\n    'cabina',\n    'cabra',\n    'cacao',\n    'cadáver',\n    'cadena',\n    'caer',\n    'café',\n    'caída',\n    'caimán',\n    'caja',\n    'cajón',\n    'cal',\n    'calamar',\n    'calcio',\n    'caldo',\n    'calidad',\n    'calle',\n    'calma',\n    'calor',\n    'calvo',\n    'cama',\n    'cambio',\n    'camello',\n    'camino',\n    'campo',\n    'cáncer',\n    'candil',\n    'canela',\n    'canguro',\n    'canica',\n    'canto',\n    'caña',\n    'cañón',\n    'caoba',\n    'caos',\n    'capaz',\n    'capitán',\n    'capote',\n    'captar',\n    'capucha',\n    'cara',\n    'carbón',\n    'cárcel',\n    'careta',\n    'carga',\n    'cariño',\n    'carne',\n    'carpeta',\n    'carro',\n    'carta',\n    'casa',\n    'casco',\n    'casero',\n    'caspa',\n    'castor',\n    'catorce',\n    'catre',\n    'caudal',\n    'causa',\n    'cazo',\n    'cebolla',\n    'ceder',\n    'cedro',\n    'celda',\n    'célebre',\n    'celoso',\n    'célula',\n    'cemento',\n    'ceniza',\n    'centro',\n    'cerca',\n    'cerdo',\n    'cereza',\n    'cero',\n    'cerrar',\n    'certeza',\n    'césped',\n    'cetro',\n    'chacal',\n    'chaleco',\n    'champú',\n    'chancla',\n    'chapa',\n    'charla',\n    'chico',\n    'chiste',\n    'chivo',\n    'choque',\n    'choza',\n    'chuleta',\n    'chupar',\n    'ciclón',\n    'ciego',\n    'cielo',\n    'cien',\n    'cierto',\n    'cifra',\n    'cigarro',\n    'cima',\n    'cinco',\n    'cine',\n    'cinta',\n    'ciprés',\n    'circo',\n    'ciruela',\n    'cisne',\n    'cita',\n    'ciudad',\n    'clamor',\n    'clan',\n    'claro',\n    'clase',\n    'clave',\n    'cliente',\n    'clima',\n    'clínica',\n    'cobre',\n    'cocción',\n    'cochino',\n    'cocina',\n    'coco',\n    'código',\n    'codo',\n    'cofre',\n    'coger',\n    'cohete',\n    'cojín',\n    'cojo',\n    'cola',\n    'colcha',\n    'colegio',\n    'colgar',\n    'colina',\n    'collar',\n    'colmo',\n    'columna',\n    'combate',\n    'comer',\n    'comida',\n    'cómodo',\n    'compra',\n    'conde',\n    'conejo',\n    'conga',\n    'conocer',\n    'consejo',\n    'contar',\n    'copa',\n    'copia',\n    'corazón',\n    'corbata',\n    'corcho',\n    'cordón',\n    'corona',\n    'correr',\n    'coser',\n    'cosmos',\n    'costa',\n    'cráneo',\n    'cráter',\n    'crear',\n    'crecer',\n    'creído',\n    'crema',\n    'cría',\n    'crimen',\n    'cripta',\n    'crisis',\n    'cromo',\n    'crónica',\n    'croqueta',\n    'crudo',\n    'cruz',\n    'cuadro',\n    'cuarto',\n    'cuatro',\n    'cubo',\n    'cubrir',\n    'cuchara',\n    'cuello',\n    'cuento',\n    'cuerda',\n    'cuesta',\n    'cueva',\n    'cuidar',\n    'culebra',\n    'culpa',\n    'culto',\n    'cumbre',\n    'cumplir',\n    'cuna',\n    'cuneta',\n    'cuota',\n    'cupón',\n    'cúpula',\n    'curar',\n    'curioso',\n    'curso',\n    'curva',\n    'cutis',\n    'dama',\n    'danza',\n    'dar',\n    'dardo',\n    'dátil',\n    'deber',\n    'débil',\n    'década',\n    'decir',\n    'dedo',\n    'defensa',\n    'definir',\n    'dejar',\n    'delfín',\n    'delgado',\n    'delito',\n    'demora',\n    'denso',\n    'dental',\n    'deporte',\n    'derecho',\n    'derrota',\n    'desayuno',\n    'deseo',\n    'desfile',\n    'desnudo',\n    'destino',\n    'desvío',\n    'detalle',\n    'detener',\n    'deuda',\n    'día',\n    'diablo',\n    'diadema',\n    'diamante',\n    'diana',\n    'diario',\n    'dibujo',\n    'dictar',\n    'diente',\n    'dieta',\n    'diez',\n    'difícil',\n    'digno',\n    'dilema',\n    'diluir',\n    'dinero',\n    'directo',\n    'dirigir',\n    'disco',\n    'diseño',\n    'disfraz',\n    'diva',\n    'divino',\n    'doble',\n    'doce',\n    'dolor',\n    'domingo',\n    'don',\n    'donar',\n    'dorado',\n    'dormir',\n    'dorso',\n    'dos',\n    'dosis',\n    'dragón',\n    'droga',\n    'ducha',\n    'duda',\n    'duelo',\n    'dueño',\n    'dulce',\n    'dúo',\n    'duque',\n    'durar',\n    'dureza',\n    'duro',\n    'ébano',\n    'ebrio',\n    'echar',\n    'eco',\n    'ecuador',\n    'edad',\n    'edición',\n    'edificio',\n    'editor',\n    'educar',\n    'efecto',\n    'eficaz',\n    'eje',\n    'ejemplo',\n    'elefante',\n    'elegir',\n    'elemento',\n    'elevar',\n    'elipse',\n    'élite',\n    'elixir',\n    'elogio',\n    'eludir',\n    'embudo',\n    'emitir',\n    'emoción',\n    'empate',\n    'empeño',\n    'empleo',\n    'empresa',\n    'enano',\n    'encargo',\n    'enchufe',\n    'encía',\n    'enemigo',\n    'enero',\n    'enfado',\n    'enfermo',\n    'engaño',\n    'enigma',\n    'enlace',\n    'enorme',\n    'enredo',\n    'ensayo',\n    'enseñar',\n    'entero',\n    'entrar',\n    'envase',\n    'envío',\n    'época',\n    'equipo',\n    'erizo',\n    'escala',\n    'escena',\n    'escolar',\n    'escribir',\n    'escudo',\n    'esencia',\n    'esfera',\n    'esfuerzo',\n    'espada',\n    'espejo',\n    'espía',\n    'esposa',\n    'espuma',\n    'esquí',\n    'estar',\n    'este',\n    'estilo',\n    'estufa',\n    'etapa',\n    'eterno',\n    'ética',\n    'etnia',\n    'evadir',\n    'evaluar',\n    'evento',\n    'evitar',\n    'exacto',\n    'examen',\n    'exceso',\n    'excusa',\n    'exento',\n    'exigir',\n    'exilio',\n    'existir',\n    'éxito',\n    'experto',\n    'explicar',\n    'exponer',\n    'extremo',\n    'fábrica',\n    'fábula',\n    'fachada',\n    'fácil',\n    'factor',\n    'faena',\n    'faja',\n    'falda',\n    'fallo',\n    'falso',\n    'faltar',\n    'fama',\n    'familia',\n    'famoso',\n    'faraón',\n    'farmacia',\n    'farol',\n    'farsa',\n    'fase',\n    'fatiga',\n    'fauna',\n    'favor',\n    'fax',\n    'febrero',\n    'fecha',\n    'feliz',\n    'feo',\n    'feria',\n    'feroz',\n    'fértil',\n    'fervor',\n    'festín',\n    'fiable',\n    'fianza',\n    'fiar',\n    'fibra',\n    'ficción',\n    'ficha',\n    'fideo',\n    'fiebre',\n    'fiel',\n    'fiera',\n    'fiesta',\n    'figura',\n    'fijar',\n    'fijo',\n    'fila',\n    'filete',\n    'filial',\n    'filtro',\n    'fin',\n    'finca',\n    'fingir',\n    'finito',\n    'firma',\n    'flaco',\n    'flauta',\n    'flecha',\n    'flor',\n    'flota',\n    'fluir',\n    'flujo',\n    'flúor',\n    'fobia',\n    'foca',\n    'fogata',\n    'fogón',\n    'folio',\n    'folleto',\n    'fondo',\n    'forma',\n    'forro',\n    'fortuna',\n    'forzar',\n    'fosa',\n    'foto',\n    'fracaso',\n    'frágil',\n    'franja',\n    'frase',\n    'fraude',\n    'freír',\n    'freno',\n    'fresa',\n    'frío',\n    'frito',\n    'fruta',\n    'fuego',\n    'fuente',\n    'fuerza',\n    'fuga',\n    'fumar',\n    'función',\n    'funda',\n    'furgón',\n    'furia',\n    'fusil',\n    'fútbol',\n    'futuro',\n    'gacela',\n    'gafas',\n    'gaita',\n    'gajo',\n    'gala',\n    'galería',\n    'gallo',\n    'gamba',\n    'ganar',\n    'gancho',\n    'ganga',\n    'ganso',\n    'garaje',\n    'garza',\n    'gasolina',\n    'gastar',\n    'gato',\n    'gavilán',\n    'gemelo',\n    'gemir',\n    'gen',\n    'género',\n    'genio',\n    'gente',\n    'geranio',\n    'gerente',\n    'germen',\n    'gesto',\n    'gigante',\n    'gimnasio',\n    'girar',\n    'giro',\n    'glaciar',\n    'globo',\n    'gloria',\n    'gol',\n    'golfo',\n    'goloso',\n    'golpe',\n    'goma',\n    'gordo',\n    'gorila',\n    'gorra',\n    'gota',\n    'goteo',\n    'gozar',\n    'grada',\n    'gráfico',\n    'grano',\n    'grasa',\n    'gratis',\n    'grave',\n    'grieta',\n    'grillo',\n    'gripe',\n    'gris',\n    'grito',\n    'grosor',\n    'grúa',\n    'grueso',\n    'grumo',\n    'grupo',\n    'guante',\n    'guapo',\n    'guardia',\n    'guerra',\n    'guía',\n    'guiño',\n    'guion',\n    'guiso',\n    'guitarra',\n    'gusano',\n    'gustar',\n    'haber',\n    'hábil',\n    'hablar',\n    'hacer',\n    'hacha',\n    'hada',\n    'hallar',\n    'hamaca',\n    'harina',\n    'haz',\n    'hazaña',\n    'hebilla',\n    'hebra',\n    'hecho',\n    'helado',\n    'helio',\n    'hembra',\n    'herir',\n    'hermano',\n    'héroe',\n    'hervir',\n    'hielo',\n    'hierro',\n    'hígado',\n    'higiene',\n    'hijo',\n    'himno',\n    'historia',\n    'hocico',\n    'hogar',\n    'hoguera',\n    'hoja',\n    'hombre',\n    'hongo',\n    'honor',\n    'honra',\n    'hora',\n    'hormiga',\n    'horno',\n    'hostil',\n    'hoyo',\n    'hueco',\n    'huelga',\n    'huerta',\n    'hueso',\n    'huevo',\n    'huida',\n    'huir',\n    'humano',\n    'húmedo',\n    'humilde',\n    'humo',\n    'hundir',\n    'huracán',\n    'hurto',\n    'icono',\n    'ideal',\n    'idioma',\n    'ídolo',\n    'iglesia',\n    'iglú',\n    'igual',\n    'ilegal',\n    'ilusión',\n    'imagen',\n    'imán',\n    'imitar',\n    'impar',\n    'imperio',\n    'imponer',\n    'impulso',\n    'incapaz',\n    'índice',\n    'inerte',\n    'infiel',\n    'informe',\n    'ingenio',\n    'inicio',\n    'inmenso',\n    'inmune',\n    'innato',\n    'insecto',\n    'instante',\n    'interés',\n    'íntimo',\n    'intuir',\n    'inútil',\n    'invierno',\n    'ira',\n    'iris',\n    'ironía',\n    'isla',\n    'islote',\n    'jabalí',\n    'jabón',\n    'jamón',\n    'jarabe',\n    'jardín',\n    'jarra',\n    'jaula',\n    'jazmín',\n    'jefe',\n    'jeringa',\n    'jinete',\n    'jornada',\n    'joroba',\n    'joven',\n    'joya',\n    'juerga',\n    'jueves',\n    'juez',\n    'jugador',\n    'jugo',\n    'juguete',\n    'juicio',\n    'junco',\n    'jungla',\n    'junio',\n    'juntar',\n    'júpiter',\n    'jurar',\n    'justo',\n    'juvenil',\n    'juzgar',\n    'kilo',\n    'koala',\n    'labio',\n    'lacio',\n    'lacra',\n    'lado',\n    'ladrón',\n    'lagarto',\n    'lágrima',\n    'laguna',\n    'laico',\n    'lamer',\n    'lámina',\n    'lámpara',\n    'lana',\n    'lancha',\n    'langosta',\n    'lanza',\n    'lápiz',\n    'largo',\n    'larva',\n    'lástima',\n    'lata',\n    'látex',\n    'latir',\n    'laurel',\n    'lavar',\n    'lazo',\n    'leal',\n    'lección',\n    'leche',\n    'lector',\n    'leer',\n    'legión',\n    'legumbre',\n    'lejano',\n    'lengua',\n    'lento',\n    'leña',\n    'león',\n    'leopardo',\n    'lesión',\n    'letal',\n    'letra',\n    'leve',\n    'leyenda',\n    'libertad',\n    'libro',\n    'licor',\n    'líder',\n    'lidiar',\n    'lienzo',\n    'liga',\n    'ligero',\n    'lima',\n    'límite',\n    'limón',\n    'limpio',\n    'lince',\n    'lindo',\n    'línea',\n    'lingote',\n    'lino',\n    'linterna',\n    'líquido',\n    'liso',\n    'lista',\n    'litera',\n    'litio',\n    'litro',\n    'llaga',\n    'llama',\n    'llanto',\n    'llave',\n    'llegar',\n    'llenar',\n    'llevar',\n    'llorar',\n    'llover',\n    'lluvia',\n    'lobo',\n    'loción',\n    'loco',\n    'locura',\n    'lógica',\n    'logro',\n    'lombriz',\n    'lomo',\n    'lonja',\n    'lote',\n    'lucha',\n    'lucir',\n    'lugar',\n    'lujo',\n    'luna',\n    'lunes',\n    'lupa',\n    'lustro',\n    'luto',\n    'luz',\n    'maceta',\n    'macho',\n    'madera',\n    'madre',\n    'maduro',\n    'maestro',\n    'mafia',\n    'magia',\n    'mago',\n    'maíz',\n    'maldad',\n    'maleta',\n    'malla',\n    'malo',\n    'mamá',\n    'mambo',\n    'mamut',\n    'manco',\n    'mando',\n    'manejar',\n    'manga',\n    'maniquí',\n    'manjar',\n    'mano',\n    'manso',\n    'manta',\n    'mañana',\n    'mapa',\n    'máquina',\n    'mar',\n    'marco',\n    'marea',\n    'marfil',\n    'margen',\n    'marido',\n    'mármol',\n    'marrón',\n    'martes',\n    'marzo',\n    'masa',\n    'máscara',\n    'masivo',\n    'matar',\n    'materia',\n    'matiz',\n    'matriz',\n    'máximo',\n    'mayor',\n    'mazorca',\n    'mecha',\n    'medalla',\n    'medio',\n    'médula',\n    'mejilla',\n    'mejor',\n    'melena',\n    'melón',\n    'memoria',\n    'menor',\n    'mensaje',\n    'mente',\n    'menú',\n    'mercado',\n    'merengue',\n    'mérito',\n    'mes',\n    'mesón',\n    'meta',\n    'meter',\n    'método',\n    'metro',\n    'mezcla',\n    'miedo',\n    'miel',\n    'miembro',\n    'miga',\n    'mil',\n    'milagro',\n    'militar',\n    'millón',\n    'mimo',\n    'mina',\n    'minero',\n    'mínimo',\n    'minuto',\n    'miope',\n    'mirar',\n    'misa',\n    'miseria',\n    'misil',\n    'mismo',\n    'mitad',\n    'mito',\n    'mochila',\n    'moción',\n    'moda',\n    'modelo',\n    'moho',\n    'mojar',\n    'molde',\n    'moler',\n    'molino',\n    'momento',\n    'momia',\n    'monarca',\n    'moneda',\n    'monja',\n    'monto',\n    'moño',\n    'morada',\n    'morder',\n    'moreno',\n    'morir',\n    'morro',\n    'morsa',\n    'mortal',\n    'mosca',\n    'mostrar',\n    'motivo',\n    'mover',\n    'móvil',\n    'mozo',\n    'mucho',\n    'mudar',\n    'mueble',\n    'muela',\n    'muerte',\n    'muestra',\n    'mugre',\n    'mujer',\n    'mula',\n    'muleta',\n    'multa',\n    'mundo',\n    'muñeca',\n    'mural',\n    'muro',\n    'músculo',\n    'museo',\n    'musgo',\n    'música',\n    'muslo',\n    'nácar',\n    'nación',\n    'nadar',\n    'naipe',\n    'naranja',\n    'nariz',\n    'narrar',\n    'nasal',\n    'natal',\n    'nativo',\n    'natural',\n    'náusea',\n    'naval',\n    'nave',\n    'navidad',\n    'necio',\n    'néctar',\n    'negar',\n    'negocio',\n    'negro',\n    'neón',\n    'nervio',\n    'neto',\n    'neutro',\n    'nevar',\n    'nevera',\n    'nicho',\n    'nido',\n    'niebla',\n    'nieto',\n    'niñez',\n    'niño',\n    'nítido',\n    'nivel',\n    'nobleza',\n    'noche',\n    'nómina',\n    'noria',\n    'norma',\n    'norte',\n    'nota',\n    'noticia',\n    'novato',\n    'novela',\n    'novio',\n    'nube',\n    'nuca',\n    'núcleo',\n    'nudillo',\n    'nudo',\n    'nuera',\n    'nueve',\n    'nuez',\n    'nulo',\n    'número',\n    'nutria',\n    'oasis',\n    'obeso',\n    'obispo',\n    'objeto',\n    'obra',\n    'obrero',\n    'observar',\n    'obtener',\n    'obvio',\n    'oca',\n    'ocaso',\n    'océano',\n    'ochenta',\n    'ocho',\n    'ocio',\n    'ocre',\n    'octavo',\n    'octubre',\n    'oculto',\n    'ocupar',\n    'ocurrir',\n    'odiar',\n    'odio',\n    'odisea',\n    'oeste',\n    'ofensa',\n    'oferta',\n    'oficio',\n    'ofrecer',\n    'ogro',\n    'oído',\n    'oír',\n    'ojo',\n    'ola',\n    'oleada',\n    'olfato',\n    'olivo',\n    'olla',\n    'olmo',\n    'olor',\n    'olvido',\n    'ombligo',\n    'onda',\n    'onza',\n    'opaco',\n    'opción',\n    'ópera',\n    'opinar',\n    'oponer',\n    'optar',\n    'óptica',\n    'opuesto',\n    'oración',\n    'orador',\n    'oral',\n    'órbita',\n    'orca',\n    'orden',\n    'oreja',\n    'órgano',\n    'orgía',\n    'orgullo',\n    'oriente',\n    'origen',\n    'orilla',\n    'oro',\n    'orquesta',\n    'oruga',\n    'osadía',\n    'oscuro',\n    'osezno',\n    'oso',\n    'ostra',\n    'otoño',\n    'otro',\n    'oveja',\n    'óvulo',\n    'óxido',\n    'oxígeno',\n    'oyente',\n    'ozono',\n    'pacto',\n    'padre',\n    'paella',\n    'página',\n    'pago',\n    'país',\n    'pájaro',\n    'palabra',\n    'palco',\n    'paleta',\n    'pálido',\n    'palma',\n    'paloma',\n    'palpar',\n    'pan',\n    'panal',\n    'pánico',\n    'pantera',\n    'pañuelo',\n    'papá',\n    'papel',\n    'papilla',\n    'paquete',\n    'parar',\n    'parcela',\n    'pared',\n    'parir',\n    'paro',\n    'párpado',\n    'parque',\n    'párrafo',\n    'parte',\n    'pasar',\n    'paseo',\n    'pasión',\n    'paso',\n    'pasta',\n    'pata',\n    'patio',\n    'patria',\n    'pausa',\n    'pauta',\n    'pavo',\n    'payaso',\n    'peatón',\n    'pecado',\n    'pecera',\n    'pecho',\n    'pedal',\n    'pedir',\n    'pegar',\n    'peine',\n    'pelar',\n    'peldaño',\n    'pelea',\n    'peligro',\n    'pellejo',\n    'pelo',\n    'peluca',\n    'pena',\n    'pensar',\n    'peñón',\n    'peón',\n    'peor',\n    'pepino',\n    'pequeño',\n    'pera',\n    'percha',\n    'perder',\n    'pereza',\n    'perfil',\n    'perico',\n    'perla',\n    'permiso',\n    'perro',\n    'persona',\n    'pesa',\n    'pesca',\n    'pésimo',\n    'pestaña',\n    'pétalo',\n    'petróleo',\n    'pez',\n    'pezuña',\n    'picar',\n    'pichón',\n    'pie',\n    'piedra',\n    'pierna',\n    'pieza',\n    'pijama',\n    'pilar',\n    'piloto',\n    'pimienta',\n    'pino',\n    'pintor',\n    'pinza',\n    'piña',\n    'piojo',\n    'pipa',\n    'pirata',\n    'pisar',\n    'piscina',\n    'piso',\n    'pista',\n    'pitón',\n    'pizca',\n    'placa',\n    'plan',\n    'plata',\n    'playa',\n    'plaza',\n    'pleito',\n    'pleno',\n    'plomo',\n    'pluma',\n    'plural',\n    'pobre',\n    'poco',\n    'poder',\n    'podio',\n    'poema',\n    'poesía',\n    'poeta',\n    'polen',\n    'policía',\n    'pollo',\n    'polvo',\n    'pomada',\n    'pomelo',\n    'pomo',\n    'pompa',\n    'poner',\n    'porción',\n    'portal',\n    'posada',\n    'poseer',\n    'posible',\n    'poste',\n    'potencia',\n    'potro',\n    'pozo',\n    'prado',\n    'precoz',\n    'pregunta',\n    'premio',\n    'prensa',\n    'preso',\n    'previo',\n    'primo',\n    'príncipe',\n    'prisión',\n    'privar',\n    'proa',\n    'probar',\n    'proceso',\n    'producto',\n    'proeza',\n    'profesor',\n    'programa',\n    'prole',\n    'promesa',\n    'pronto',\n    'propio',\n    'próximo',\n    'prueba',\n    'público',\n    'puchero',\n    'pudor',\n    'pueblo',\n    'puerta',\n    'puesto',\n    'pulga',\n    'pulir',\n    'pulmón',\n    'pulpo',\n    'pulso',\n    'puma',\n    'punto',\n    'puñal',\n    'puño',\n    'pupa',\n    'pupila',\n    'puré',\n    'quedar',\n    'queja',\n    'quemar',\n    'querer',\n    'queso',\n    'quieto',\n    'química',\n    'quince',\n    'quitar',\n    'rábano',\n    'rabia',\n    'rabo',\n    'ración',\n    'radical',\n    'raíz',\n    'rama',\n    'rampa',\n    'rancho',\n    'rango',\n    'rapaz',\n    'rápido',\n    'rapto',\n    'rasgo',\n    'raspa',\n    'rato',\n    'rayo',\n    'raza',\n    'razón',\n    'reacción',\n    'realidad',\n    'rebaño',\n    'rebote',\n    'recaer',\n    'receta',\n    'rechazo',\n    'recoger',\n    'recreo',\n    'recto',\n    'recurso',\n    'red',\n    'redondo',\n    'reducir',\n    'reflejo',\n    'reforma',\n    'refrán',\n    'refugio',\n    'regalo',\n    'regir',\n    'regla',\n    'regreso',\n    'rehén',\n    'reino',\n    'reír',\n    'reja',\n    'relato',\n    'relevo',\n    'relieve',\n    'relleno',\n    'reloj',\n    'remar',\n    'remedio',\n    'remo',\n    'rencor',\n    'rendir',\n    'renta',\n    'reparto',\n    'repetir',\n    'reposo',\n    'reptil',\n    'res',\n    'rescate',\n    'resina',\n    'respeto',\n    'resto',\n    'resumen',\n    'retiro',\n    'retorno',\n    'retrato',\n    'reunir',\n    'revés',\n    'revista',\n    'rey',\n    'rezar',\n    'rico',\n    'riego',\n    'rienda',\n    'riesgo',\n    'rifa',\n    'rígido',\n    'rigor',\n    'rincón',\n    'riñón',\n    'río',\n    'riqueza',\n    'risa',\n    'ritmo',\n    'rito',\n    'rizo',\n    'roble',\n    'roce',\n    'rociar',\n    'rodar',\n    'rodeo',\n    'rodilla',\n    'roer',\n    'rojizo',\n    'rojo',\n    'romero',\n    'romper',\n    'ron',\n    'ronco',\n    'ronda',\n    'ropa',\n    'ropero',\n    'rosa',\n    'rosca',\n    'rostro',\n    'rotar',\n    'rubí',\n    'rubor',\n    'rudo',\n    'rueda',\n    'rugir',\n    'ruido',\n    'ruina',\n    'ruleta',\n    'rulo',\n    'rumbo',\n    'rumor',\n    'ruptura',\n    'ruta',\n    'rutina',\n    'sábado',\n    'saber',\n    'sabio',\n    'sable',\n    'sacar',\n    'sagaz',\n    'sagrado',\n    'sala',\n    'saldo',\n    'salero',\n    'salir',\n    'salmón',\n    'salón',\n    'salsa',\n    'salto',\n    'salud',\n    'salvar',\n    'samba',\n    'sanción',\n    'sandía',\n    'sanear',\n    'sangre',\n    'sanidad',\n    'sano',\n    'santo',\n    'sapo',\n    'saque',\n    'sardina',\n    'sartén',\n    'sastre',\n    'satán',\n    'sauna',\n    'saxofón',\n    'sección',\n    'seco',\n    'secreto',\n    'secta',\n    'sed',\n    'seguir',\n    'seis',\n    'sello',\n    'selva',\n    'semana',\n    'semilla',\n    'senda',\n    'sensor',\n    'señal',\n    'señor',\n    'separar',\n    'sepia',\n    'sequía',\n    'ser',\n    'serie',\n    'sermón',\n    'servir',\n    'sesenta',\n    'sesión',\n    'seta',\n    'setenta',\n    'severo',\n    'sexo',\n    'sexto',\n    'sidra',\n    'siesta',\n    'siete',\n    'siglo',\n    'signo',\n    'sílaba',\n    'silbar',\n    'silencio',\n    'silla',\n    'símbolo',\n    'simio',\n    'sirena',\n    'sistema',\n    'sitio',\n    'situar',\n    'sobre',\n    'socio',\n    'sodio',\n    'sol',\n    'solapa',\n    'soldado',\n    'soledad',\n    'sólido',\n    'soltar',\n    'solución',\n    'sombra',\n    'sondeo',\n    'sonido',\n    'sonoro',\n    'sonrisa',\n    'sopa',\n    'soplar',\n    'soporte',\n    'sordo',\n    'sorpresa',\n    'sorteo',\n    'sostén',\n    'sótano',\n    'suave',\n    'subir',\n    'suceso',\n    'sudor',\n    'suegra',\n    'suelo',\n    'sueño',\n    'suerte',\n    'sufrir',\n    'sujeto',\n    'sultán',\n    'sumar',\n    'superar',\n    'suplir',\n    'suponer',\n    'supremo',\n    'sur',\n    'surco',\n    'sureño',\n    'surgir',\n    'susto',\n    'sutil',\n    'tabaco',\n    'tabique',\n    'tabla',\n    'tabú',\n    'taco',\n    'tacto',\n    'tajo',\n    'talar',\n    'talco',\n    'talento',\n    'talla',\n    'talón',\n    'tamaño',\n    'tambor',\n    'tango',\n    'tanque',\n    'tapa',\n    'tapete',\n    'tapia',\n    'tapón',\n    'taquilla',\n    'tarde',\n    'tarea',\n    'tarifa',\n    'tarjeta',\n    'tarot',\n    'tarro',\n    'tarta',\n    'tatuaje',\n    'tauro',\n    'taza',\n    'tazón',\n    'teatro',\n    'techo',\n    'tecla',\n    'técnica',\n    'tejado',\n    'tejer',\n    'tejido',\n    'tela',\n    'teléfono',\n    'tema',\n    'temor',\n    'templo',\n    'tenaz',\n    'tender',\n    'tener',\n    'tenis',\n    'tenso',\n    'teoría',\n    'terapia',\n    'terco',\n    'término',\n    'ternura',\n    'terror',\n    'tesis',\n    'tesoro',\n    'testigo',\n    'tetera',\n    'texto',\n    'tez',\n    'tibio',\n    'tiburón',\n    'tiempo',\n    'tienda',\n    'tierra',\n    'tieso',\n    'tigre',\n    'tijera',\n    'tilde',\n    'timbre',\n    'tímido',\n    'timo',\n    'tinta',\n    'tío',\n    'típico',\n    'tipo',\n    'tira',\n    'tirón',\n    'titán',\n    'títere',\n    'título',\n    'tiza',\n    'toalla',\n    'tobillo',\n    'tocar',\n    'tocino',\n    'todo',\n    'toga',\n    'toldo',\n    'tomar',\n    'tono',\n    'tonto',\n    'topar',\n    'tope',\n    'toque',\n    'tórax',\n    'torero',\n    'tormenta',\n    'torneo',\n    'toro',\n    'torpedo',\n    'torre',\n    'torso',\n    'tortuga',\n    'tos',\n    'tosco',\n    'toser',\n    'tóxico',\n    'trabajo',\n    'tractor',\n    'traer',\n    'tráfico',\n    'trago',\n    'traje',\n    'tramo',\n    'trance',\n    'trato',\n    'trauma',\n    'trazar',\n    'trébol',\n    'tregua',\n    'treinta',\n    'tren',\n    'trepar',\n    'tres',\n    'tribu',\n    'trigo',\n    'tripa',\n    'triste',\n    'triunfo',\n    'trofeo',\n    'trompa',\n    'tronco',\n    'tropa',\n    'trote',\n    'trozo',\n    'truco',\n    'trueno',\n    'trufa',\n    'tubería',\n    'tubo',\n    'tuerto',\n    'tumba',\n    'tumor',\n    'túnel',\n    'túnica',\n    'turbina',\n    'turismo',\n    'turno',\n    'tutor',\n    'ubicar',\n    'úlcera',\n    'umbral',\n    'unidad',\n    'unir',\n    'universo',\n    'uno',\n    'untar',\n    'uña',\n    'urbano',\n    'urbe',\n    'urgente',\n    'urna',\n    'usar',\n    'usuario',\n    'útil',\n    'utopía',\n    'uva',\n    'vaca',\n    'vacío',\n    'vacuna',\n    'vagar',\n    'vago',\n    'vaina',\n    'vajilla',\n    'vale',\n    'válido',\n    'valle',\n    'valor',\n    'válvula',\n    'vampiro',\n    'vara',\n    'variar',\n    'varón',\n    'vaso',\n    'vecino',\n    'vector',\n    'vehículo',\n    'veinte',\n    'vejez',\n    'vela',\n    'velero',\n    'veloz',\n    'vena',\n    'vencer',\n    'venda',\n    'veneno',\n    'vengar',\n    'venir',\n    'venta',\n    'venus',\n    'ver',\n    'verano',\n    'verbo',\n    'verde',\n    'vereda',\n    'verja',\n    'verso',\n    'verter',\n    'vía',\n    'viaje',\n    'vibrar',\n    'vicio',\n    'víctima',\n    'vida',\n    'vídeo',\n    'vidrio',\n    'viejo',\n    'viernes',\n    'vigor',\n    'vil',\n    'villa',\n    'vinagre',\n    'vino',\n    'viñedo',\n    'violín',\n    'viral',\n    'virgo',\n    'virtud',\n    'visor',\n    'víspera',\n    'vista',\n    'vitamina',\n    'viudo',\n    'vivaz',\n    'vivero',\n    'vivir',\n    'vivo',\n    'volcán',\n    'volumen',\n    'volver',\n    'voraz',\n    'votar',\n    'voto',\n    'voz',\n    'vuelo',\n    'vulgar',\n    'yacer',\n    'yate',\n    'yegua',\n    'yema',\n    'yerno',\n    'yeso',\n    'yodo',\n    'yoga',\n    'yogur',\n    'zafiro',\n    'zanja',\n    'zapato',\n    'zarza',\n    'zona',\n    'zorro',\n    'zumo',\n    'zurdo'\n];\n//# sourceMappingURL=spanish.js.map","// SPDX-License-Identifier: MIT\nexport const WORDLIST = [\n    'abajur',\n    'abaküs',\n    'abartı',\n    'abdal',\n    'abdest',\n    'abiye',\n    'abluka',\n    'abone',\n    'absorbe',\n    'absürt',\n    'acayip',\n    'acele',\n    'acemi',\n    'açıkgöz',\n    'adalet',\n    'adam',\n    'adezyon',\n    'adisyon',\n    'adliye',\n    'adres',\n    'afacan',\n    'afili',\n    'afiş',\n    'afiyet',\n    'aforizm',\n    'afra',\n    'ağaç',\n    'ağır',\n    'ahbap',\n    'ahkam',\n    'ahlak',\n    'ahtapot',\n    'aidat',\n    'aile',\n    'ajan',\n    'akademi',\n    'akarsu',\n    'akbaş',\n    'akciğer',\n    'akdeniz',\n    'akıbet',\n    'akıl',\n    'akıntı',\n    'akide',\n    'akrep',\n    'akrobasi',\n    'aksiyon',\n    'akşam',\n    'aktif',\n    'aktör',\n    'aktris',\n    'akustik',\n    'alaca',\n    'albüm',\n    'alçak',\n    'aldanma',\n    'aleni',\n    'alet',\n    'alfabe',\n    'algılama',\n    'alıngan',\n    'alkış',\n    'alkol',\n    'alpay',\n    'alperen',\n    'altın',\n    'altüst',\n    'altyapı',\n    'alyuvar',\n    'amade',\n    'amatör',\n    'amazon',\n    'ambalaj',\n    'amblem',\n    'ambulans',\n    'amca',\n    'amel',\n    'amigo',\n    'amir',\n    'amiyane',\n    'amorti',\n    'ampul',\n    'anadolu',\n    'anahtar',\n    'anakonda',\n    'anaokul',\n    'anapara',\n    'anarşi',\n    'anatomi',\n    'anayasa',\n    'anekdot',\n    'anestezi',\n    'angaje',\n    'anka',\n    'anket',\n    'anlamlı',\n    'anne',\n    'anomali',\n    'anonim',\n    'anten',\n    'antlaşma',\n    'apse',\n    'araba',\n    'aracı',\n    'araf',\n    'arbede',\n    'arda',\n    'arefe',\n    'arena',\n    'argo',\n    'argüman',\n    'arkadaş',\n    'armoni',\n    'aroma',\n    'arsa',\n    'arsız',\n    'artı',\n    'artist',\n    'aruz',\n    'asansör',\n    'asayiş',\n    'asfalt',\n    'asgari',\n    'asil',\n    'asker',\n    'askı',\n    'aslan',\n    'asosyal',\n    'astsubay',\n    'asya',\n    'aşçı',\n    'aşırı',\n    'aşure',\n    'atabey',\n    'ataman',\n    'ateş',\n    'atmaca',\n    'atmosfer',\n    'atom',\n    'atölye',\n    'avcı',\n    'avdet',\n    'avize',\n    'avlu',\n    'avokado',\n    'avrupa',\n    'avukat',\n    'ayaz',\n    'ayçiçeği',\n    'aydın',\n    'aygıt',\n    'ayna',\n    'ayran',\n    'ayrıntı',\n    'azim',\n    'baca',\n    'bagaj',\n    'bağlantı',\n    'bahadır',\n    'bahçe',\n    'baki',\n    'bakkal',\n    'baklava',\n    'bakteri',\n    'balçık',\n    'balina',\n    'balo',\n    'balta',\n    'bant',\n    'banyo',\n    'bardak',\n    'barış',\n    'başbuğ',\n    'başıboş',\n    'başkan',\n    'başlık',\n    'bavul',\n    'bayındır',\n    'baykuş',\n    'bazlama',\n    'bedel',\n    'begüm',\n    'bekçi',\n    'bekle',\n    'belge',\n    'belki',\n    'bencil',\n    'benek',\n    'bengi',\n    'benzer',\n    'berjer',\n    'berk',\n    'bermuda',\n    'berrak',\n    'beşik',\n    'beton',\n    'beyin',\n    'beyoğlu',\n    'bıçak',\n    'biberiye',\n    'bidon',\n    'biftek',\n    'bihaber',\n    'bikini',\n    'bilezik',\n    'bilinç',\n    'bilye',\n    'bina',\n    'binbaşı',\n    'binyıl',\n    'bisiklet',\n    'bisküvi',\n    'bitki',\n    'bizzat',\n    'bodrum',\n    'boğaz',\n    'bohça',\n    'bolero',\n    'boncuk',\n    'bonfile',\n    'borsa',\n    'boru',\n    'bostan',\n    'boşboğaz',\n    'botanik',\n    'boya',\n    'boykot',\n    'boynuz',\n    'bozgun',\n    'bozkır',\n    'bölüm',\n    'börek',\n    'buçuk',\n    'bugün',\n    'buğday',\n    'buhar',\n    'buhran',\n    'bulvar',\n    'buram',\n    'burçak',\n    'burs',\n    'burun',\n    'butik',\n    'buzdağı',\n    'buzkıran',\n    'bücür',\n    'büfe',\n    'bülten',\n    'bütçe',\n    'bütün',\n    'büyük',\n    'cacık',\n    'cadı',\n    'cahil',\n    'cambaz',\n    'canhıraş',\n    'casus',\n    'cazibe',\n    'cehalet',\n    'cehennem',\n    'ceket',\n    'cemre',\n    'cenin',\n    'cennet',\n    'cepken',\n    'cerrah',\n    'cesur',\n    'cetvel',\n    'cevher',\n    'ceylan',\n    'cılız',\n    'cıva',\n    'cilt',\n    'cisim',\n    'ciyak',\n    'coğrafya',\n    'cömert',\n    'cumba',\n    'cüzdan',\n    'çabucak',\n    'çadır',\n    'çağdaş',\n    'çağlayan',\n    'çağrı',\n    'çakmak',\n    'çalışkan',\n    'çamaşır',\n    'çapa',\n    'çaput',\n    'çarık',\n    'çarpan',\n    'çarşaf',\n    'çayhane',\n    'çekirdek',\n    'çelebi',\n    'çember',\n    'çenet',\n    'çengel',\n    'çerçeve',\n    'çerez',\n    'çeşit',\n    'çeşme',\n    'çete',\n    'çevre',\n    'çeyiz',\n    'çeyrek',\n    'çığır',\n    'çılgın',\n    'çıngırak',\n    'çift',\n    'çiğdem',\n    'çikolata',\n    'çilek',\n    'çimen',\n    'çivi',\n    'çoban',\n    'çocuk',\n    'çokgen',\n    'çomak',\n    'çorba',\n    'çözelti',\n    'çubuk',\n    'çukur',\n    'çuval',\n    'çürük',\n    'dağbaşı',\n    'dağılım',\n    'daktilo',\n    'daldırış',\n    'dalga',\n    'dalkavuk',\n    'damak',\n    'damıtma',\n    'damla',\n    'dana',\n    'dandik',\n    'danışman',\n    'daniska',\n    'dantel',\n    'dargeçit',\n    'darphane',\n    'davet',\n    'dayı',\n    'defter',\n    'değer',\n    'değirmen',\n    'dehşet',\n    'delgeç',\n    'demir',\n    'deneyim',\n    'denge',\n    'depo',\n    'deprem',\n    'derdest',\n    'dere',\n    'derhal',\n    'derman',\n    'dernek',\n    'derviş',\n    'desen',\n    'destan',\n    'dışarı',\n    'dışbükey',\n    'dijital',\n    'dikbaşlı',\n    'dilekçe',\n    'dimağ',\n    'dinamik',\n    'dindar',\n    'dinleme',\n    'dinozor',\n    'dipçik',\n    'dipnot',\n    'direniş',\n    'dirsek',\n    'disiplin',\n    'disk',\n    'divriği',\n    'dizüstü',\n    'dobra',\n    'dodurga',\n    'doğalgaz',\n    'doktor',\n    'doküman',\n    'dolap',\n    'donanım',\n    'dondurma',\n    'donör',\n    'doruk',\n    'dosdoğru',\n    'dost',\n    'dosya',\n    'dozer',\n    'döküm',\n    'dönence',\n    'dörtyol',\n    'dövme',\n    'dram',\n    'dublaj',\n    'durum',\n    'duvak',\n    'duyarga',\n    'duyma',\n    'duyuru',\n    'düğme',\n    'düğüm',\n    'dükkan',\n    'dünür',\n    'düpedüz',\n    'dürbün',\n    'düşünür',\n    'düzayak',\n    'düzeltme',\n    'ebeveyn',\n    'ebru',\n    'ecel',\n    'ecnebi',\n    'ecza',\n    'edat',\n    'edilgen',\n    'efendi',\n    'efor',\n    'efsane',\n    'egemen',\n    'egzersiz',\n    'eğrelti',\n    'ekarte',\n    'ekip',\n    'eklem',\n    'ekmek',\n    'ekol',\n    'ekonomi',\n    'ekose',\n    'ekran',\n    'ekvator',\n    'elaman',\n    'elastik',\n    'elbet',\n    'elbise',\n    'elçi',\n    'eldiven',\n    'elebaşı',\n    'eleştiri',\n    'elma',\n    'eloğlu',\n    'elveda',\n    'emare',\n    'emekçi',\n    'emisyon',\n    'emniyet',\n    'empati',\n    'emsal',\n    'emzik',\n    'endüstri',\n    'enerji',\n    'engebe',\n    'engin',\n    'enişte',\n    'enkaz',\n    'entari',\n    'entegre',\n    'entrika',\n    'enzim',\n    'erdem',\n    'ergen',\n    'erguvan',\n    'erkek',\n    'erozyon',\n    'ertesi',\n    'erzak',\n    'esaret',\n    'esenlik',\n    'eser',\n    'eski',\n    'esnek',\n    'eşarp',\n    'eşofman',\n    'eşraf',\n    'eşya',\n    'eşzaman',\n    'etik',\n    'etken',\n    'etkinlik',\n    'etüt',\n    'evet',\n    'evire',\n    'evrak',\n    'evrim',\n    'eyalet',\n    'eyvah',\n    'ezber',\n    'fabrika',\n    'fanatik',\n    'fanus',\n    'fason',\n    'fasulye',\n    'fatih',\n    'fatura',\n    'fauna',\n    'favori',\n    'fayans',\n    'fayton',\n    'fazıl',\n    'fazilet',\n    'federal',\n    'felsefe',\n    'fener',\n    'feribot',\n    'fersah',\n    'fesih',\n    'festival',\n    'feveran',\n    'feza',\n    'fıçı',\n    'fıldır',\n    'fındık',\n    'fırça',\n    'fırsat',\n    'fırtına',\n    'fıtık',\n    'fidan',\n    'fidye',\n    'figür',\n    'fihrist',\n    'fikir',\n    'fildişi',\n    'filo',\n    'filtre',\n    'fincan',\n    'firuze',\n    'fitil',\n    'fiyaka',\n    'fizik',\n    'flaş',\n    'flüt',\n    'fosil',\n    'fren',\n    'fukara',\n    'futbol',\n    'garabet',\n    'gariban',\n    'garnitür',\n    'gazi',\n    'gece',\n    'gedik',\n    'gelenek',\n    'gelin',\n    'gemi',\n    'genç',\n    'geniş',\n    'geometri',\n    'gerçek',\n    'gevrek',\n    'gezegen',\n    'gezgin',\n    'geziyolu',\n    'gıcık',\n    'gıda',\n    'gıybet',\n    'girdap',\n    'girişim',\n    'gitar',\n    'giyecek',\n    'giysi',\n    'gizem',\n    'gofret',\n    'goril',\n    'göbek',\n    'göçebe',\n    'göğüs',\n    'gökdelen',\n    'gökmen',\n    'gökyüzü',\n    'gölge',\n    'gömlek',\n    'gönül',\n    'görenek',\n    'görkemli',\n    'görsel',\n    'gösteri',\n    'gövde',\n    'gözaltı',\n    'gözcü',\n    'gözdağı',\n    'gözleme',\n    'gözyaşı',\n    'grup',\n    'gurbet',\n    'gusül',\n    'gübre',\n    'güfte',\n    'gümüş',\n    'günaydın',\n    'güncel',\n    'gündüz',\n    'güneş',\n    'günyüzü',\n    'gürbüz',\n    'güvercin',\n    'güzel',\n    'haber',\n    'hacamat',\n    'hacim',\n    'hademe',\n    'hafız',\n    'hafriyat',\n    'hafta',\n    'hakan',\n    'hakem',\n    'hakikat',\n    'haksever',\n    'halı',\n    'hançer',\n    'hane',\n    'hangar',\n    'hapis',\n    'hapşırık',\n    'harf',\n    'haseki',\n    'hasret',\n    'hatun',\n    'havuç',\n    'haylaz',\n    'haysiyet',\n    'hayvan',\n    'hedef',\n    'hektar',\n    'hemen',\n    'hemfikir',\n    'hendek',\n    'hepsi',\n    'hergele',\n    'herhangi',\n    'hesap',\n    'heyecan',\n    'heykel',\n    'hezimet',\n    'hıçkırık',\n    'hızölçer',\n    'hicviye',\n    'hikaye',\n    'hikmet',\n    'hile',\n    'hisse',\n    'hobi',\n    'hoca',\n    'horlama',\n    'hormon',\n    'hoşbeş',\n    'hoşgörü',\n    'hoyrat',\n    'hörgüç',\n    'höyük',\n    'hudut',\n    'hukuk',\n    'hunhar',\n    'hurda',\n    'huysuz',\n    'huzur',\n    'hücum',\n    'hükümet',\n    'hünkar',\n    'hüviyet',\n    'ırmak',\n    'ısıölçer',\n    'ısıtıcı',\n    'ıspanak',\n    'ısrar',\n    'ışıldak',\n    'ızdırap',\n    'ızgara',\n    'ibadet',\n    'icat',\n    'içbükey',\n    'içecek',\n    'içgüdü',\n    'içsel',\n    'idman',\n    'iftihar',\n    'iğne',\n    'ihanet',\n    'ihbar',\n    'ihdas',\n    'ihmal',\n    'ihracat',\n    'ihsan',\n    'ikilem',\n    'ikindi',\n    'ikircik',\n    'iklim',\n    'iksir',\n    'iktibas',\n    'ilaç',\n    'ilçe',\n    'ileri',\n    'iletişim',\n    'ilgi',\n    'ilhak',\n    'ilkbahar',\n    'ilkokul',\n    'ilmek',\n    'imkan',\n    'imleç',\n    'imsak',\n    'imtihan',\n    'imza',\n    'ince',\n    'inkar',\n    'inşa',\n    'ipek',\n    'ipucu',\n    'irade',\n    'irfan',\n    'irmik',\n    'isabet',\n    'iskele',\n    'israf',\n    'isyan',\n    'işçi',\n    'işgal',\n    'işgüzar',\n    'işlem',\n    'itibar',\n    'itiraf',\n    'ivedi',\n    'ivme',\n    'iyileşme',\n    'iyimser',\n    'izbandut',\n    'izci',\n    'izdiham',\n    'izin',\n    'jakoben',\n    'jandarma',\n    'jargon',\n    'kabadayı',\n    'kablo',\n    'kabus',\n    'kaçamak',\n    'kadeh',\n    'kadın',\n    'kadraj',\n    'kafa',\n    'kafkas',\n    'kağıt',\n    'kağnı',\n    'kahkaha',\n    'kahraman',\n    'kahvaltı',\n    'kakül',\n    'kaldırım',\n    'kale',\n    'kalibre',\n    'kalkan',\n    'kalpak',\n    'kamış',\n    'kamyon',\n    'kanat',\n    'kandaş',\n    'kanepe',\n    'kanser',\n    'kanun',\n    'kaos',\n    'kapı',\n    'kaplıca',\n    'kaptan',\n    'karanlık',\n    'kardeş',\n    'karga',\n    'karınca',\n    'karmaşa',\n    'karşıt',\n    'kasırga',\n    'kask',\n    'kasvet',\n    'katkı',\n    'katman',\n    'kavram',\n    'kaygan',\n    'kaynakça',\n    'kayyum',\n    'kedi',\n    'kehanet',\n    'kekik',\n    'kelebek',\n    'kenar',\n    'kerkenez',\n    'kerpiç',\n    'kesirli',\n    'kesmece',\n    'kestane',\n    'keşkek',\n    'ketçap',\n    'keyfiyet',\n    'kıble',\n    'kıdemli',\n    'kılavuz',\n    'kılçık',\n    'kılıf',\n    'kıraç',\n    'kırmızı',\n    'kırsal',\n    'kısayol',\n    'kısım',\n    'kıskanç',\n    'kısmet',\n    'kışla',\n    'kıvanç',\n    'kıvılcım',\n    'kıvrık',\n    'kıyafet',\n    'kıymetli',\n    'kızak',\n    'kızılcık',\n    'kibar',\n    'kinaye',\n    'kira',\n    'kiremit',\n    'kirli',\n    'kirpik',\n    'kişisel',\n    'kitap',\n    'koçbaşı',\n    'kodaman',\n    'koğuş',\n    'kokteyl',\n    'kolaycı',\n    'kolbastı',\n    'kolonya',\n    'koltuk',\n    'kolye',\n    'kombine',\n    'komedyen',\n    'komiser',\n    'komposto',\n    'komşu',\n    'komuta',\n    'konak',\n    'konfor',\n    'koni',\n    'konsül',\n    'kopya',\n    'korkusuz',\n    'korna',\n    'korse',\n    'korunak',\n    'korvet',\n    'kostüm',\n    'koşul',\n    'koyu',\n    'kozmik',\n    'köfte',\n    'kökensel',\n    'köprücük',\n    'köpük',\n    'kördüğüm',\n    'körfez',\n    'köstebek',\n    'köşegen',\n    'kötü',\n    'kravat',\n    'kriter',\n    'kuantum',\n    'kudurma',\n    'kuluçka',\n    'kulübe',\n    'kumanya',\n    'kumbara',\n    'kumlu',\n    'kumpir',\n    'kumral',\n    'kundura',\n    'kupa',\n    'kupkuru',\n    'kuramsal',\n    'kurbağa',\n    'kurdele',\n    'kurgu',\n    'kurmay',\n    'kurşun',\n    'kurtuluş',\n    'kurultay',\n    'kurye',\n    'kusursuz',\n    'kuşak',\n    'kuşbaşı',\n    'kuşkulu',\n    'kutlama',\n    'kutsal',\n    'kutup',\n    'kuver',\n    'kuyruk',\n    'kuzey',\n    'kuzgun',\n    'küçük',\n    'külçe',\n    'külfet',\n    'külliye',\n    'kültürel',\n    'kümes',\n    'künefe',\n    'küresel',\n    'kütle',\n    'lahana',\n    'lahmacun',\n    'lamba',\n    'lansman',\n    'lavaş',\n    'layık',\n    'leğen',\n    'levent',\n    'leziz',\n    'lezzet',\n    'lider',\n    'likide',\n    'liman',\n    'liste',\n    'litre',\n    'liyakat',\n    'lodos',\n    'lokanta',\n    'lokman',\n    'lokum',\n    'lunapark',\n    'lütfen',\n    'lüzum',\n    'nokta',\n    'mabet',\n    'macera',\n    'macun',\n    'madalya',\n    'madde',\n    'madem',\n    'mağara',\n    'mağdur',\n    'mağfiret',\n    'mağlup',\n    'mahalle',\n    'mahcup',\n    'mahir',\n    'mahkeme',\n    'mahlas',\n    'mahrum',\n    'mahsul',\n    'makas',\n    'makbuz',\n    'makine',\n    'makro',\n    'maksat',\n    'makul',\n    'maliye',\n    'manav',\n    'mangal',\n    'manidar',\n    'manken',\n    'mantık',\n    'manzara',\n    'mareşal',\n    'margarin',\n    'marifet',\n    'market',\n    'marmelat',\n    'masaüstü',\n    'masmavi',\n    'masraf',\n    'masum',\n    'matah',\n    'materyal',\n    'matrak',\n    'maval',\n    'mavra',\n    'maydanoz',\n    'mayhoş',\n    'maytap',\n    'mazbata',\n    'mazeret',\n    'mazlum',\n    'mazot',\n    'mazur',\n    'meblağ',\n    'mebus',\n    'mecaz',\n    'mecbur',\n    'meclis',\n    'mecmua',\n    'mecnun',\n    'meçhul',\n    'medeni',\n    'mehtap',\n    'mekanik',\n    'melodi',\n    'meltem',\n    'memur',\n    'mendil',\n    'menekşe',\n    'menteşe',\n    'meraklı',\n    'mercek',\n    'merdiven',\n    'merhaba',\n    'merinos',\n    'merkez',\n    'mermi',\n    'mert',\n    'mesafe',\n    'mesele',\n    'mesken',\n    'meslek',\n    'meşale',\n    'meşgul',\n    'meşhur',\n    'metafor',\n    'metin',\n    'metre',\n    'mevcut',\n    'mevkidaş',\n    'meydan',\n    'meyil',\n    'meyve',\n    'meziyet',\n    'mezun',\n    'mıknatıs',\n    'mısra',\n    'mızıka',\n    'miğfer',\n    'mihrak',\n    'mikrofon',\n    'miktar',\n    'milat',\n    'milli',\n    'mimar',\n    'minare',\n    'mineral',\n    'minik',\n    'minyon',\n    'mirliva',\n    'misafir',\n    'miskin',\n    'miting',\n    'miyop',\n    'mizah',\n    'mobilya',\n    'model',\n    'monitör',\n    'morötesi',\n    'motive',\n    'motor',\n    'mozaik',\n    'muavin',\n    'mucize',\n    'muhafız',\n    'muhteşem',\n    'mukayese',\n    'mumya',\n    'musluk',\n    'muşamba',\n    'mutabık',\n    'mutfak',\n    'mutlu',\n    'muzaffer',\n    'muzdarip',\n    'mübarek',\n    'mücadele',\n    'müdür',\n    'müfredat',\n    'müftü',\n    'mühendis',\n    'mühim',\n    'mühlet',\n    'mükemmel',\n    'mülk',\n    'mümkün',\n    'mümtaz',\n    'müsrif',\n    'müstesna',\n    'müşahit',\n    'müşteri',\n    'mütercim',\n    'müthiş',\n    'müze',\n    'müzik',\n    'nabız',\n    'nadas',\n    'nadir',\n    'nahoş',\n    'nakarat',\n    'nakış',\n    'nalbur',\n    'namlu',\n    'namus',\n    'nankör',\n    'nargile',\n    'narkoz',\n    'nasıl',\n    'nasip',\n    'naylon',\n    'nazar',\n    'nazım',\n    'nazik',\n    'neden',\n    'nefes',\n    'negatif',\n    'neon',\n    'neptün',\n    'nerede',\n    'nesil',\n    'nesnel',\n    'neşeli',\n    'netice',\n    'nevresim',\n    'neyse',\n    'neyzen',\n    'nezaket',\n    'nezih',\n    'nezle',\n    'nicel',\n    'nilüfer',\n    'nimet',\n    'nisan',\n    'nispet',\n    'nitekim',\n    'nizam',\n    'nohut',\n    'noksan',\n    'normal',\n    'nostalji',\n    'noter',\n    'nöbet',\n    'numara',\n    'numune',\n    'nutuk',\n    'nüfus',\n    'obabaşı',\n    'obez',\n    'obje',\n    'ocak',\n    'odun',\n    'ofansif',\n    'ofis',\n    'oğlak',\n    'oğuz',\n    'okçu',\n    'oklava',\n    'oksijen',\n    'okul',\n    'okumuş',\n    'okutman',\n    'okuyucu',\n    'okyanus',\n    'olağan',\n    'olanak',\n    'olası',\n    'olay',\n    'olgun',\n    'olimpik',\n    'olumlu',\n    'omlet',\n    'omurga',\n    'onarım',\n    'onursal',\n    'opera',\n    'optik',\n    'oral',\n    'orantı',\n    'ordu',\n    'organik',\n    'orijin',\n    'orkide',\n    'orman',\n    'orta',\n    'oruç',\n    'otağ',\n    'otantik',\n    'otel',\n    'otoban',\n    'otogar',\n    'otomobil',\n    'otonom',\n    'otopark',\n    'otorite',\n    'otoyol',\n    'oturum',\n    'oyuk',\n    'oyuncak',\n    'ozan',\n    'ödeme',\n    'ödenek',\n    'ödev',\n    'ödül',\n    'ödünç',\n    'öfke',\n    'öğlen',\n    'öğrenci',\n    'öğün',\n    'öğütücü',\n    'öksürük',\n    'ölçme',\n    'ölçü',\n    'ölümsüz',\n    'ömür',\n    'önayak',\n    'öncü',\n    'önder',\n    'önem',\n    'önerge',\n    'öngörü',\n    'önlük',\n    'önsezi',\n    'öpücük',\n    'ördek',\n    'örgü',\n    'örtbas',\n    'örtme',\n    'örtü',\n    'örümcek',\n    'örüntü',\n    'öteberi',\n    'öteki',\n    'övünç',\n    'öykü',\n    'öyleyse',\n    'özçekim',\n    'özdeyiş',\n    'özel',\n    'özenti',\n    'özerk',\n    'özgürlük',\n    'özlem',\n    'özlü',\n    'özne',\n    'özsever',\n    'özümseme',\n    'özür',\n    'özveri',\n    'pabuç',\n    'padişah',\n    'palamut',\n    'palmiye',\n    'palto',\n    'palyaço',\n    'pamuk',\n    'panayır',\n    'pancar',\n    'panda',\n    'panel',\n    'panik',\n    'panjur',\n    'pankart',\n    'pano',\n    'pansuman',\n    'pantolon',\n    'panzehir',\n    'papatya',\n    'papyon',\n    'paraşüt',\n    'parça',\n    'pardösü',\n    'parfüm',\n    'parıltı',\n    'parkur',\n    'parmak',\n    'parodi',\n    'parsel',\n    'partner',\n    'pasaport',\n    'pasif',\n    'paskalya',\n    'pastırma',\n    'paşa',\n    'patates',\n    'paten',\n    'patika',\n    'patlıcan',\n    'patolog',\n    'patron',\n    'payanda',\n    'paydaş',\n    'payidar',\n    'paylaşma',\n    'paytak',\n    'peçete',\n    'pedal',\n    'peder',\n    'pehlivan',\n    'pekala',\n    'pekmez',\n    'pelerin',\n    'pelikan',\n    'pelüş',\n    'pembe',\n    'pena',\n    'pencere',\n    'pense',\n    'perçin',\n    'perde',\n    'pergel',\n    'perişan',\n    'peron',\n    'personel',\n    'perşembe',\n    'peruk',\n    'pervane',\n    'pespaye',\n    'pestil',\n    'peşin',\n    'petek',\n    'petrol',\n    'petunya',\n    'peynir',\n    'peyzaj',\n    'pınar',\n    'pırasa',\n    'pırlanta',\n    'pide',\n    'pikap',\n    'piknik',\n    'pilav',\n    'piliç',\n    'pilot',\n    'pipet',\n    'pipo',\n    'piramit',\n    'pirinç',\n    'pirzola',\n    'pist',\n    'pişik',\n    'pişman',\n    'piyasa',\n    'piyes',\n    'plaj',\n    'plaket',\n    'planlama',\n    'platform',\n    'plazma',\n    'podyum',\n    'poğaça',\n    'polat',\n    'polen',\n    'politika',\n    'pompa',\n    'popüler',\n    'porselen',\n    'portakal',\n    'posa',\n    'poster',\n    'poşet',\n    'poyraz',\n    'pozitif',\n    'pranga',\n    'pratik',\n    'prenses',\n    'prim',\n    'problem',\n    'profil',\n    'program',\n    'proje',\n    'protokol',\n    'prova',\n    'puan',\n    'pudra',\n    'pusula',\n    'püre',\n    'pürüz',\n    'püstül',\n    'püsür',\n    'racon',\n    'radar',\n    'radikal',\n    'radyo',\n    'rafadan',\n    'rafine',\n    'rağbet',\n    'rahat',\n    'rahle',\n    'rakam',\n    'raket',\n    'rakip',\n    'rakun',\n    'ralli',\n    'rampa',\n    'randevu',\n    'ranza',\n    'rapor',\n    'rastgele',\n    'rasyonel',\n    'razı',\n    'realite',\n    'reçine',\n    'refah',\n    'referans',\n    'refik',\n    'reform',\n    'rehber',\n    'rehin',\n    'reis',\n    'rekabet',\n    'reklam',\n    'rekor',\n    'rektör',\n    'renk',\n    'resim',\n    'resmen',\n    'restoran',\n    'retorik',\n    'revaç',\n    'revize',\n    'reyon',\n    'rezalet',\n    'rezerv',\n    'rezil',\n    'rıhtım',\n    'rıza',\n    'ritim',\n    'ritüel',\n    'rivayet',\n    'robot',\n    'roman',\n    'rota',\n    'rozet',\n    'röportaj',\n    'rötar',\n    'ruble',\n    'ruhban',\n    'ruhsat',\n    'rulet',\n    'rulo',\n    'runik',\n    'rutin',\n    'rutubet',\n    'rüşvet',\n    'rütbe',\n    'rüya',\n    'rüzgar',\n    'sabah',\n    'sabıka',\n    'sabit',\n    'sabun',\n    'saçma',\n    'sade',\n    'sadık',\n    'safahat',\n    'safdil',\n    'safkan',\n    'sağanak',\n    'sağduyu',\n    'sağlam',\n    'saha',\n    'sahiden',\n    'sahne',\n    'sakal',\n    'sakız',\n    'sakin',\n    'saklama',\n    'saksağan',\n    'salamura',\n    'salça',\n    'salgı',\n    'salınım',\n    'salkım',\n    'salon',\n    'saltanat',\n    'sanatçı',\n    'sancak',\n    'sandalye',\n    'saniye',\n    'saplantı',\n    'sapsız',\n    'saray',\n    'sarışın',\n    'sarkık',\n    'sarmaşık',\n    'satır',\n    'savaşım',\n    'savunma',\n    'saydam',\n    'sayfa',\n    'saygın',\n    'sayısal',\n    'sebep',\n    'seçenek',\n    'seçim',\n    'seçkin',\n    'seçmen',\n    'seda',\n    'sedir',\n    'sedye',\n    'sefer',\n    'sehpa',\n    'sekizgen',\n    'selektör',\n    'selvi',\n    'semavi',\n    'sembol',\n    'seminer',\n    'senaryo',\n    'sendika',\n    'senkron',\n    'sensör',\n    'sentez',\n    'sepet',\n    'seramik',\n    'serbest',\n    'serdar',\n    'seremoni',\n    'sergi',\n    'serhat',\n    'serin',\n    'sermaye',\n    'serpuş',\n    'sersem',\n    'serüven',\n    'servis',\n    'sesli',\n    'sesteş',\n    'sevap',\n    'seviye',\n    'seyahat',\n    'seyirci',\n    'sezon',\n    'sıcak',\n    'sıfat',\n    'sıhhi',\n    'sınanma',\n    'sınır',\n    'sıradan',\n    'sırdaş',\n    'sırma',\n    'sırtüstü',\n    'sızgıt',\n    'siftah',\n    'sigorta',\n    'sihirbaz',\n    'silah',\n    'silecek',\n    'silindir',\n    'simetri',\n    'simge',\n    'simit',\n    'sincap',\n    'sindirim',\n    'sinema',\n    'sinirli',\n    'sipariş',\n    'sirke',\n    'siroz',\n    'sistem',\n    'sivilce',\n    'siyasi',\n    'slogan',\n    'soba',\n    'sofra',\n    'soğuk',\n    'sohbet',\n    'sokak',\n    'solfej',\n    'solunum',\n    'somut',\n    'sonbahar',\n    'sonraki',\n    'sonsuz',\n    'sorunsuz',\n    'sosyete',\n    'soyağacı',\n    'soydaş',\n    'soygun',\n    'soytarı',\n    'söğüş',\n    'sömürge',\n    'sönük',\n    'söylem',\n    'sözcük',\n    'sözde',\n    'spatula',\n    'spektrum',\n    'spiker',\n    'spiral',\n    'sponsor',\n    'sporcu',\n    'sprey',\n    'stabil',\n    'statü',\n    'stok',\n    'stopaj',\n    'strateji',\n    'subay',\n    'sucuk',\n    'suçüstü',\n    'suhulet',\n    'sulama',\n    'sungur',\n    'sunucu',\n    'surat',\n    'susam',\n    'suskun',\n    'sükse',\n    'sükut',\n    'sülale',\n    'sünger',\n    'süpürge',\n    'sürahi',\n    'süreç',\n    'sürgün',\n    'sürüm',\n    'süsleme',\n    'sütanne',\n    'sütlaç',\n    'sütun',\n    'süvari',\n    'şahane',\n    'şahbaz',\n    'şahit',\n    'şahsiyet',\n    'şakıma',\n    'şaklaban',\n    'şakrak',\n    'şamar',\n    'şampiyon',\n    'şanslı',\n    'şantiye',\n    'şapka',\n    'şarkıcı',\n    'şartname',\n    'şaşırma',\n    'şaşkın',\n    'şatafat',\n    'şayet',\n    'şebeke',\n    'şefkat',\n    'şeftali',\n    'şehir',\n    'şehvet',\n    'şeker',\n    'şekil',\n    'şelale',\n    'şema',\n    'şemsiye',\n    'şerbet',\n    'şeref',\n    'şerit',\n    'şımarık',\n    'şıpıdık',\n    'şifre',\n    'şimdi',\n    'şimşek',\n    'şipşak',\n    'şirin',\n    'şişe',\n    'şişirme',\n    'şofben',\n    'şöhret',\n    'şölen',\n    'şüphe',\n    'tabaka',\n    'tabela',\n    'tabure',\n    'tadilat',\n    'taharet',\n    'tahıl',\n    'tahkim',\n    'tahlil',\n    'tahmin',\n    'tahrifat',\n    'tahsilat',\n    'tahta',\n    'taklit',\n    'takoz',\n    'taksici',\n    'taktik',\n    'takvim',\n    'talebe',\n    'talip',\n    'tamamen',\n    'tamirci',\n    'tampon',\n    'tamtakır',\n    'tandır',\n    'tanecik',\n    'tanıtım',\n    'tanrı',\n    'tansiyon',\n    'tapan',\n    'tapınak',\n    'taptaze',\n    'tapu',\n    'tarafgir',\n    'tarhana',\n    'tarım',\n    'tarih',\n    'tarla',\n    'tartak',\n    'tarumar',\n    'tasarım',\n    'tasdik',\n    'taslak',\n    'tastamam',\n    'taşeron',\n    'taşınmaz',\n    'taşra',\n    'tatava',\n    'tatbikat',\n    'tatil',\n    'tatlı',\n    'tavsiye',\n    'tavşan',\n    'tavuk',\n    'taze',\n    'taziye',\n    'tazminat',\n    'tebeşir',\n    'tebrik',\n    'tecrübe',\n    'teçhizat',\n    'tedarik',\n    'tedbir',\n    'teftiş',\n    'teğet',\n    'teğmen',\n    'tehdit',\n    'tehlike',\n    'tekdüze',\n    'tekerlek',\n    'tekme',\n    'teknik',\n    'tekrar',\n    'telef',\n    'telsiz',\n    'telve',\n    'temas',\n    'tembel',\n    'temiz',\n    'temkin',\n    'tempo',\n    'temsilci',\n    'tendon',\n    'teneke',\n    'tenha',\n    'tenkit',\n    'tepegöz',\n    'tepki',\n    'terazi',\n    'terbiye',\n    'tercih',\n    'tereyağı',\n    'terfi',\n    'terim',\n    'terminal',\n    'tersane',\n    'tertip',\n    'tesadüf',\n    'tescil',\n    'tesir',\n    'teslimat',\n    'tespit',\n    'testere',\n    'teşekkür',\n    'teşhir',\n    'teşrif',\n    'teşvik',\n    'teyze',\n    'tezahür',\n    'tezgah',\n    'tıbbi',\n    'tıkaç',\n    'tıkışık',\n    'tıknaz',\n    'tılsım',\n    'tıpkı',\n    'tıraş',\n    'tırışka',\n    'tırmanış',\n    'tırnak',\n    'tırpan',\n    'tıslama',\n    'ticaret',\n    'tilki',\n    'tiryaki',\n    'titreşim',\n    'tohum',\n    'tokat',\n    'tolere',\n    'tomar',\n    'tombak',\n    'tomurcuk',\n    'topaç',\n    'toplum',\n    'toprak',\n    'toptan',\n    'toraman',\n    'torpido',\n    'tortu',\n    'tosbağa',\n    'toynak',\n    'tören',\n    'trafik',\n    'trajedi',\n    'tramvay',\n    'transfer',\n    'tribün',\n    'triko',\n    'tugay',\n    'tuğla',\n    'tuğrul',\n    'tuhaf',\n    'tulumba',\n    'tunç',\n    'turan',\n    'turkuaz',\n    'turnusol',\n    'turşu',\n    'turuncu',\n    'tutanak',\n    'tutkal',\n    'tutsak',\n    'tutum',\n    'tuyuğ',\n    'tuzlu',\n    'tüccar',\n    'tüfek',\n    'tükenmez',\n    'tülbent',\n    'tümleç',\n    'tünel',\n    'türbin',\n    'türev',\n    'türk',\n    'tüzük',\n    'ucube',\n    'ucuz',\n    'uçak',\n    'uçurtma',\n    'ufuk',\n    'uğrak',\n    'uğur',\n    'ukala',\n    'ulaşım',\n    'ulema',\n    'ulus',\n    'ulvi',\n    'umursama',\n    'umut',\n    'unutkan',\n    'uslu',\n    'ustabaşı',\n    'ustura',\n    'usul',\n    'utangaç',\n    'uyanık',\n    'uyarı',\n    'uydu',\n    'uygar',\n    'uygulama',\n    'uykusuz',\n    'uysal',\n    'uyuşma',\n    'uzantı',\n    'uzay',\n    'uzgören',\n    'uzlaşma',\n    'uzman',\n    'uzun',\n    'ücra',\n    'ücret',\n    'üçbudak',\n    'üçgen',\n    'üçkağıt',\n    'üçleme',\n    'üfürük',\n    'ülke',\n    'ümit',\n    'üniforma',\n    'ünite',\n    'ünlem',\n    'üretken',\n    'ürün',\n    'üslup',\n    'üstel',\n    'üstün',\n    'üşengeç',\n    'üşüme',\n    'ütopya',\n    'üvey',\n    'üzengi',\n    'üzgün',\n    'üzüm',\n    'vagon',\n    'vaka',\n    'vakfiye',\n    'vakıf',\n    'vakit',\n    'vakum',\n    'vapur',\n    'varil',\n    'varlık',\n    'varsayım',\n    'varyemez',\n    'vasıta',\n    'vasiyet',\n    'vatandaş',\n    'vazife',\n    'vazo',\n    'veciz',\n    'vefa',\n    'vehim',\n    'veliaht',\n    'veresiye',\n    'verimli',\n    'verkaç',\n    'vernik',\n    'vertigo',\n    'vesait',\n    'vesika',\n    'vestiyer',\n    'veznedar',\n    'vicdan',\n    'vilayet',\n    'virane',\n    'virgül',\n    'vişne',\n    'vites',\n    'vokal',\n    'volkan',\n    'vurma',\n    'vurucu',\n    'vücut',\n    'yabancı',\n    'yabgu',\n    'yağış',\n    'yağlı',\n    'yağmur',\n    'yakamoz',\n    'yakın',\n    'yaklaşık',\n    'yalçın',\n    'yalıtım',\n    'yaman',\n    'yanardağ',\n    'yangın',\n    'yanıt',\n    'yankı',\n    'yanlış',\n    'yansıma',\n    'yapay',\n    'yapboz',\n    'yapımcı',\n    'yaprak',\n    'yaratık',\n    'yarbay',\n    'yardım',\n    'yargıç',\n    'yarıçap',\n    'yasemin',\n    'yastık',\n    'yaşam',\n    'yatak',\n    'yatırım',\n    'yavru',\n    'yaygara',\n    'yayıncı',\n    'yayla',\n    'yazılım',\n    'yekpare',\n    'yekvücut',\n    'yelkovan',\n    'yelpaze',\n    'yemek',\n    'yemiş',\n    'yengeç',\n    'yeniçeri',\n    'yeraltı',\n    'yerküre',\n    'yerleşke',\n    'yeryüzü',\n    'yeşil',\n    'yetenek',\n    'yetkili',\n    'yığınak',\n    'yıkama',\n    'yılbaşı',\n    'yıldırım',\n    'yılkı',\n    'yılmaz',\n    'yırtıcı',\n    'yiğit',\n    'yoğurt',\n    'yokuş',\n    'yolcu',\n    'yoldaş',\n    'yolgeçen',\n    'yolkesen',\n    'yolüstü',\n    'yordam',\n    'yorgan',\n    'yorumcu',\n    'yosun',\n    'yöndeş',\n    'yönetim',\n    'yönlü',\n    'yöntem',\n    'yöresel',\n    'yörünge',\n    'yufka',\n    'yukarı',\n    'yumruk',\n    'yumurta',\n    'yuvarlak',\n    'yücelme',\n    'yükçeker',\n    'yüklem',\n    'yüksek',\n    'yürek',\n    'yürütme',\n    'yüzde',\n    'yüzeysel',\n    'yüzgeç',\n    'yüzüstü',\n    'yüzyıl',\n    'zabıta',\n    'zafer',\n    'zahmet',\n    'zambak',\n    'zaptiye',\n    'zarafet',\n    'zaruret',\n    'zeka',\n    'zekice',\n    'zemberek',\n    'zemin',\n    'zencefil',\n    'zeplin',\n    'zeytin',\n    'zıbın',\n    'zılgıt',\n    'zımbırtı',\n    'zımpara',\n    'zıpkın',\n    'zigon',\n    'zihinsel',\n    'zihniyet',\n    'zincir',\n    'zindan',\n    'zirzop',\n    'ziyaret',\n    'ziynet',\n    'zoraki',\n    'zorlu',\n    'zorunlu',\n    'züğürt',\n    'zümre'\n];\n//# sourceMappingURL=turkish.js.map","// SPDX-License-Identifier: MIT\nimport { Mnemonic } from '../mnemonic';\nimport { BIP39Entropy, BIP39_ENTROPY_STRENGTHS } from '../../entropies';\nimport { sha256 } from '../../crypto';\nimport { hexToBytes, bytesToBinaryString, integerToBinaryString, binaryStringToBytes, bytesToHex } from '../../utils';\nimport { MnemonicError, EntropyError, ChecksumError } from '../../exceptions';\nimport { BIP39_CHINESE_SIMPLIFIED_WORDLIST, BIP39_CHINESE_TRADITIONAL_WORDLIST, BIP39_CZECH_WORDLIST, BIP39_ENGLISH_WORDLIST, BIP39_FRENCH_WORDLIST, BIP39_ITALIAN_WORDLIST, BIP39_JAPANESE_WORDLIST, BIP39_KOREAN_WORDLIST, BIP39_PORTUGUESE_WORDLIST, BIP39_RUSSIAN_WORDLIST, BIP39_SPANISH_WORDLIST, BIP39_TURKISH_WORDLIST } from './wordlists';\nexport const BIP39_MNEMONIC_WORDS = {\n    TWELVE: 12,\n    FIFTEEN: 15,\n    EIGHTEEN: 18,\n    TWENTY_ONE: 21,\n    TWENTY_FOUR: 24\n};\nexport const BIP39_MNEMONIC_LANGUAGES = {\n    CHINESE_SIMPLIFIED: 'chinese-simplified',\n    CHINESE_TRADITIONAL: 'chinese-traditional',\n    CZECH: 'czech',\n    ENGLISH: 'english',\n    FRENCH: 'french',\n    ITALIAN: 'italian',\n    JAPANESE: 'japanese',\n    KOREAN: 'korean',\n    PORTUGUESE: 'portuguese',\n    RUSSIAN: 'russian',\n    SPANISH: 'spanish',\n    TURKISH: 'turkish'\n};\nexport class BIP39Mnemonic extends Mnemonic {\n    static wordBitLength = 11;\n    static wordsListNumber = 2048;\n    static wordsList = [\n        BIP39_MNEMONIC_WORDS.TWELVE,\n        BIP39_MNEMONIC_WORDS.FIFTEEN,\n        BIP39_MNEMONIC_WORDS.EIGHTEEN,\n        BIP39_MNEMONIC_WORDS.TWENTY_ONE,\n        BIP39_MNEMONIC_WORDS.TWENTY_FOUR\n    ];\n    static wordsToEntropyStrength = {\n        12: BIP39_ENTROPY_STRENGTHS.ONE_HUNDRED_TWENTY_EIGHT,\n        15: BIP39_ENTROPY_STRENGTHS.ONE_HUNDRED_SIXTY,\n        18: BIP39_ENTROPY_STRENGTHS.ONE_HUNDRED_NINETY_TWO,\n        21: BIP39_ENTROPY_STRENGTHS.TWO_HUNDRED_TWENTY_FOUR,\n        24: BIP39_ENTROPY_STRENGTHS.TWO_HUNDRED_FIFTY_SIX\n    };\n    static languages = Object.values(BIP39_MNEMONIC_LANGUAGES);\n    static wordLists = {\n        [BIP39_MNEMONIC_LANGUAGES.CHINESE_SIMPLIFIED]: BIP39_CHINESE_SIMPLIFIED_WORDLIST,\n        [BIP39_MNEMONIC_LANGUAGES.CHINESE_TRADITIONAL]: BIP39_CHINESE_TRADITIONAL_WORDLIST,\n        [BIP39_MNEMONIC_LANGUAGES.CZECH]: BIP39_CZECH_WORDLIST,\n        [BIP39_MNEMONIC_LANGUAGES.ENGLISH]: BIP39_ENGLISH_WORDLIST,\n        [BIP39_MNEMONIC_LANGUAGES.FRENCH]: BIP39_FRENCH_WORDLIST,\n        [BIP39_MNEMONIC_LANGUAGES.ITALIAN]: BIP39_ITALIAN_WORDLIST,\n        [BIP39_MNEMONIC_LANGUAGES.JAPANESE]: BIP39_JAPANESE_WORDLIST,\n        [BIP39_MNEMONIC_LANGUAGES.KOREAN]: BIP39_KOREAN_WORDLIST,\n        [BIP39_MNEMONIC_LANGUAGES.PORTUGUESE]: BIP39_PORTUGUESE_WORDLIST,\n        [BIP39_MNEMONIC_LANGUAGES.RUSSIAN]: BIP39_RUSSIAN_WORDLIST,\n        [BIP39_MNEMONIC_LANGUAGES.SPANISH]: BIP39_SPANISH_WORDLIST,\n        [BIP39_MNEMONIC_LANGUAGES.TURKISH]: BIP39_TURKISH_WORDLIST\n    };\n    static getName() {\n        return 'BIP39';\n    }\n    static fromWords(words, language, options = {}) {\n        if (!this.wordsList.includes(words)) {\n            throw new MnemonicError(`Invalid words`, { expected: this.wordsList, got: words });\n        }\n        const strength = this.wordsToEntropyStrength[words];\n        const entropyHex = BIP39Entropy.generate(strength);\n        return this.encode(entropyHex, language, options);\n    }\n    static fromEntropy(entropy, language, options = {}) {\n        let hex;\n        if (typeof entropy === 'string') {\n            hex = entropy;\n        }\n        else if (entropy instanceof Uint8Array) {\n            hex = bytesToHex(entropy);\n        }\n        else {\n            hex = entropy.getEntropy();\n        }\n        return this.encode(hex, language, options);\n    }\n    static encode(entropyInput, language, options = {}) {\n        const entropyBytes = typeof entropyInput === 'string' ?\n            hexToBytes(entropyInput) : entropyInput;\n        const bitLen = entropyBytes.length * 8;\n        if (!Object.values(this.wordsToEntropyStrength).includes(bitLen)) {\n            throw new EntropyError(`Unsupported entropy length ${bitLen}`);\n        }\n        const hash = sha256(entropyBytes);\n        const csLen = bitLen / 32;\n        const entBits = bytesToBinaryString(entropyBytes, bitLen);\n        const hashBits = bytesToBinaryString(hash, 256).slice(0, csLen);\n        const bits = entBits + hashBits;\n        const wordList = this.getWordsListByLanguage(language, this.wordLists);\n        if (wordList.length !== this.wordsListNumber) {\n            throw new Error(`Loaded wordlist length ${wordList.length} !== ${this.wordsListNumber}`);\n        }\n        const words = [];\n        for (let i = 0; i < bits.length / this.wordBitLength; i++) {\n            const idx = parseInt(bits.slice(i * this.wordBitLength, (i + 1) * this.wordBitLength), 2);\n            words.push(wordList[idx]);\n        }\n        return words.join(' ');\n    }\n    static decode(mnemonic, options = { checksum: false }) {\n        const words = this.normalize(mnemonic);\n        if (!this.wordsList.includes(words.length)) {\n            throw new MnemonicError(`Invalid words ${words.length}`, { expected: this.wordsList, got: words.length });\n        }\n        let wordList;\n        let idxMap = {};\n        if (options.wordsList && options.wordsListWithIndex) {\n            idxMap = options.wordsListWithIndex;\n        }\n        else {\n            [wordList] = this.findLanguage(words, this.wordLists);\n            wordList.forEach((w, i) => idxMap[w] = i);\n        }\n        const bits = words\n            .map(w => {\n            const idx = idxMap[w];\n            if (idx === undefined) {\n                throw new MnemonicError(`Unknown word: ${w}`);\n            }\n            return integerToBinaryString(idx, this.wordBitLength);\n        })\n            .join('');\n        const checksumLen = bits.length / 33;\n        const entropyBits = bits.slice(0, -checksumLen);\n        const givenChecksum = bits.slice(-checksumLen);\n        const entropyBytes = binaryStringToBytes(entropyBits);\n        const hash = sha256(entropyBytes);\n        const hashBits = bytesToBinaryString(hash, 256).slice(0, checksumLen);\n        if (givenChecksum !== hashBits) {\n            throw new ChecksumError('Checksum mismatch', { expected: givenChecksum, got: hashBits });\n        }\n        if (options.checksum) {\n            const totalBits = bits.length;\n            const padBits = totalBits % 8 === 0\n                ? totalBits\n                : totalBits + (8 - (totalBits % 8));\n            return bytesToHex(binaryStringToBytes(bits, padBits / 8));\n        }\n        return bytesToHex(entropyBytes);\n    }\n    static normalize(input) {\n        const arr = typeof input === 'string' ? input.trim().split(/\\s+/) : input;\n        return arr.map(w => w.normalize('NFKD').toLowerCase());\n    }\n}\n//# sourceMappingURL=mnemonic.js.map","// SPDX-License-Identifier: MIT\nexport const WORDLIST = [\n    'like',\n    'just',\n    'love',\n    'know',\n    'never',\n    'want',\n    'time',\n    'out',\n    'there',\n    'make',\n    'look',\n    'eye',\n    'down',\n    'only',\n    'think',\n    'heart',\n    'back',\n    'then',\n    'into',\n    'about',\n    'more',\n    'away',\n    'still',\n    'them',\n    'take',\n    'thing',\n    'even',\n    'through',\n    'long',\n    'always',\n    'world',\n    'too',\n    'friend',\n    'tell',\n    'try',\n    'hand',\n    'thought',\n    'over',\n    'here',\n    'other',\n    'need',\n    'smile',\n    'again',\n    'much',\n    'cry',\n    'been',\n    'night',\n    'ever',\n    'little',\n    'said',\n    'end',\n    'some',\n    'those',\n    'around',\n    'mind',\n    'people',\n    'girl',\n    'leave',\n    'dream',\n    'left',\n    'turn',\n    'myself',\n    'give',\n    'nothing',\n    'really',\n    'off',\n    'before',\n    'something',\n    'find',\n    'walk',\n    'wish',\n    'good',\n    'once',\n    'place',\n    'ask',\n    'stop',\n    'keep',\n    'watch',\n    'seem',\n    'everything',\n    'wait',\n    'got',\n    'yet',\n    'made',\n    'remember',\n    'start',\n    'alone',\n    'run',\n    'hope',\n    'maybe',\n    'believe',\n    'body',\n    'hate',\n    'after',\n    'close',\n    'talk',\n    'stand',\n    'own',\n    'each',\n    'hurt',\n    'help',\n    'home',\n    'god',\n    'soul',\n    'new',\n    'many',\n    'two',\n    'inside',\n    'should',\n    'true',\n    'first',\n    'fear',\n    'mean',\n    'better',\n    'play',\n    'another',\n    'gone',\n    'change',\n    'use',\n    'wonder',\n    'someone',\n    'hair',\n    'cold',\n    'open',\n    'best',\n    'any',\n    'behind',\n    'happen',\n    'water',\n    'dark',\n    'laugh',\n    'stay',\n    'forever',\n    'name',\n    'work',\n    'show',\n    'sky',\n    'break',\n    'came',\n    'deep',\n    'door',\n    'put',\n    'black',\n    'together',\n    'upon',\n    'happy',\n    'such',\n    'great',\n    'white',\n    'matter',\n    'fill',\n    'past',\n    'please',\n    'burn',\n    'cause',\n    'enough',\n    'touch',\n    'moment',\n    'soon',\n    'voice',\n    'scream',\n    'anything',\n    'stare',\n    'sound',\n    'red',\n    'everyone',\n    'hide',\n    'kiss',\n    'truth',\n    'death',\n    'beautiful',\n    'mine',\n    'blood',\n    'broken',\n    'very',\n    'pass',\n    'next',\n    'forget',\n    'tree',\n    'wrong',\n    'air',\n    'mother',\n    'understand',\n    'lip',\n    'hit',\n    'wall',\n    'memory',\n    'sleep',\n    'free',\n    'high',\n    'realize',\n    'school',\n    'might',\n    'skin',\n    'sweet',\n    'perfect',\n    'blue',\n    'kill',\n    'breath',\n    'dance',\n    'against',\n    'fly',\n    'between',\n    'grow',\n    'strong',\n    'under',\n    'listen',\n    'bring',\n    'sometimes',\n    'speak',\n    'pull',\n    'person',\n    'become',\n    'family',\n    'begin',\n    'ground',\n    'real',\n    'small',\n    'father',\n    'sure',\n    'feet',\n    'rest',\n    'young',\n    'finally',\n    'land',\n    'across',\n    'today',\n    'different',\n    'guy',\n    'line',\n    'fire',\n    'reason',\n    'reach',\n    'second',\n    'slowly',\n    'write',\n    'eat',\n    'smell',\n    'mouth',\n    'step',\n    'learn',\n    'three',\n    'floor',\n    'promise',\n    'breathe',\n    'darkness',\n    'push',\n    'earth',\n    'guess',\n    'save',\n    'song',\n    'above',\n    'along',\n    'both',\n    'color',\n    'house',\n    'almost',\n    'sorry',\n    'anymore',\n    'brother',\n    'okay',\n    'dear',\n    'game',\n    'fade',\n    'already',\n    'apart',\n    'warm',\n    'beauty',\n    'heard',\n    'notice',\n    'question',\n    'shine',\n    'began',\n    'piece',\n    'whole',\n    'shadow',\n    'secret',\n    'street',\n    'within',\n    'finger',\n    'point',\n    'morning',\n    'whisper',\n    'child',\n    'moon',\n    'green',\n    'story',\n    'glass',\n    'kid',\n    'silence',\n    'since',\n    'soft',\n    'yourself',\n    'empty',\n    'shall',\n    'angel',\n    'answer',\n    'baby',\n    'bright',\n    'dad',\n    'path',\n    'worry',\n    'hour',\n    'drop',\n    'follow',\n    'power',\n    'war',\n    'half',\n    'flow',\n    'heaven',\n    'act',\n    'chance',\n    'fact',\n    'least',\n    'tired',\n    'children',\n    'near',\n    'quite',\n    'afraid',\n    'rise',\n    'sea',\n    'taste',\n    'window',\n    'cover',\n    'nice',\n    'trust',\n    'lot',\n    'sad',\n    'cool',\n    'force',\n    'peace',\n    'return',\n    'blind',\n    'easy',\n    'ready',\n    'roll',\n    'rose',\n    'drive',\n    'held',\n    'music',\n    'beneath',\n    'hang',\n    'mom',\n    'paint',\n    'emotion',\n    'quiet',\n    'clear',\n    'cloud',\n    'few',\n    'pretty',\n    'bird',\n    'outside',\n    'paper',\n    'picture',\n    'front',\n    'rock',\n    'simple',\n    'anyone',\n    'meant',\n    'reality',\n    'road',\n    'sense',\n    'waste',\n    'bit',\n    'leaf',\n    'thank',\n    'happiness',\n    'meet',\n    'men',\n    'smoke',\n    'truly',\n    'decide',\n    'self',\n    'age',\n    'book',\n    'form',\n    'alive',\n    'carry',\n    'escape',\n    'damn',\n    'instead',\n    'able',\n    'ice',\n    'minute',\n    'throw',\n    'catch',\n    'leg',\n    'ring',\n    'course',\n    'goodbye',\n    'lead',\n    'poem',\n    'sick',\n    'corner',\n    'desire',\n    'known',\n    'problem',\n    'remind',\n    'shoulder',\n    'suppose',\n    'toward',\n    'wave',\n    'drink',\n    'jump',\n    'woman',\n    'pretend',\n    'sister',\n    'week',\n    'human',\n    'joy',\n    'crack',\n    'grey',\n    'pray',\n    'surprise',\n    'dry',\n    'knee',\n    'less',\n    'search',\n    'bleed',\n    'caught',\n    'clean',\n    'embrace',\n    'future',\n    'king',\n    'son',\n    'sorrow',\n    'chest',\n    'hug',\n    'remain',\n    'sat',\n    'worth',\n    'blow',\n    'daddy',\n    'final',\n    'parent',\n    'tight',\n    'also',\n    'create',\n    'lonely',\n    'safe',\n    'cross',\n    'dress',\n    'evil',\n    'silent',\n    'bone',\n    'fate',\n    'perhaps',\n    'anger',\n    'class',\n    'scar',\n    'snow',\n    'tiny',\n    'tonight',\n    'continue',\n    'control',\n    'dog',\n    'edge',\n    'mirror',\n    'month',\n    'suddenly',\n    'comfort',\n    'given',\n    'loud',\n    'quickly',\n    'gaze',\n    'plan',\n    'rush',\n    'stone',\n    'town',\n    'battle',\n    'ignore',\n    'spirit',\n    'stood',\n    'stupid',\n    'yours',\n    'brown',\n    'build',\n    'dust',\n    'hey',\n    'kept',\n    'pay',\n    'phone',\n    'twist',\n    'although',\n    'ball',\n    'beyond',\n    'hidden',\n    'nose',\n    'taken',\n    'fail',\n    'float',\n    'pure',\n    'somehow',\n    'wash',\n    'wrap',\n    'angry',\n    'cheek',\n    'creature',\n    'forgotten',\n    'heat',\n    'rip',\n    'single',\n    'space',\n    'special',\n    'weak',\n    'whatever',\n    'yell',\n    'anyway',\n    'blame',\n    'job',\n    'choose',\n    'country',\n    'curse',\n    'drift',\n    'echo',\n    'figure',\n    'grew',\n    'laughter',\n    'neck',\n    'suffer',\n    'worse',\n    'yeah',\n    'disappear',\n    'foot',\n    'forward',\n    'knife',\n    'mess',\n    'somewhere',\n    'stomach',\n    'storm',\n    'beg',\n    'idea',\n    'lift',\n    'offer',\n    'breeze',\n    'field',\n    'five',\n    'often',\n    'simply',\n    'stuck',\n    'win',\n    'allow',\n    'confuse',\n    'enjoy',\n    'except',\n    'flower',\n    'seek',\n    'strength',\n    'calm',\n    'grin',\n    'gun',\n    'heavy',\n    'hill',\n    'large',\n    'ocean',\n    'shoe',\n    'sigh',\n    'straight',\n    'summer',\n    'tongue',\n    'accept',\n    'crazy',\n    'everyday',\n    'exist',\n    'grass',\n    'mistake',\n    'sent',\n    'shut',\n    'surround',\n    'table',\n    'ache',\n    'brain',\n    'destroy',\n    'heal',\n    'nature',\n    'shout',\n    'sign',\n    'stain',\n    'choice',\n    'doubt',\n    'glance',\n    'glow',\n    'mountain',\n    'queen',\n    'stranger',\n    'throat',\n    'tomorrow',\n    'city',\n    'either',\n    'fish',\n    'flame',\n    'rather',\n    'shape',\n    'spin',\n    'spread',\n    'ash',\n    'distance',\n    'finish',\n    'image',\n    'imagine',\n    'important',\n    'nobody',\n    'shatter',\n    'warmth',\n    'became',\n    'feed',\n    'flesh',\n    'funny',\n    'lust',\n    'shirt',\n    'trouble',\n    'yellow',\n    'attention',\n    'bare',\n    'bite',\n    'money',\n    'protect',\n    'amaze',\n    'appear',\n    'born',\n    'choke',\n    'completely',\n    'daughter',\n    'fresh',\n    'friendship',\n    'gentle',\n    'probably',\n    'six',\n    'deserve',\n    'expect',\n    'grab',\n    'middle',\n    'nightmare',\n    'river',\n    'thousand',\n    'weight',\n    'worst',\n    'wound',\n    'barely',\n    'bottle',\n    'cream',\n    'regret',\n    'relationship',\n    'stick',\n    'test',\n    'crush',\n    'endless',\n    'fault',\n    'itself',\n    'rule',\n    'spill',\n    'art',\n    'circle',\n    'join',\n    'kick',\n    'mask',\n    'master',\n    'passion',\n    'quick',\n    'raise',\n    'smooth',\n    'unless',\n    'wander',\n    'actually',\n    'broke',\n    'chair',\n    'deal',\n    'favorite',\n    'gift',\n    'note',\n    'number',\n    'sweat',\n    'box',\n    'chill',\n    'clothes',\n    'lady',\n    'mark',\n    'park',\n    'poor',\n    'sadness',\n    'tie',\n    'animal',\n    'belong',\n    'brush',\n    'consume',\n    'dawn',\n    'forest',\n    'innocent',\n    'pen',\n    'pride',\n    'stream',\n    'thick',\n    'clay',\n    'complete',\n    'count',\n    'draw',\n    'faith',\n    'press',\n    'silver',\n    'struggle',\n    'surface',\n    'taught',\n    'teach',\n    'wet',\n    'bless',\n    'chase',\n    'climb',\n    'enter',\n    'letter',\n    'melt',\n    'metal',\n    'movie',\n    'stretch',\n    'swing',\n    'vision',\n    'wife',\n    'beside',\n    'crash',\n    'forgot',\n    'guide',\n    'haunt',\n    'joke',\n    'knock',\n    'plant',\n    'pour',\n    'prove',\n    'reveal',\n    'steal',\n    'stuff',\n    'trip',\n    'wood',\n    'wrist',\n    'bother',\n    'bottom',\n    'crawl',\n    'crowd',\n    'fix',\n    'forgive',\n    'frown',\n    'grace',\n    'loose',\n    'lucky',\n    'party',\n    'release',\n    'surely',\n    'survive',\n    'teacher',\n    'gently',\n    'grip',\n    'speed',\n    'suicide',\n    'travel',\n    'treat',\n    'vein',\n    'written',\n    'cage',\n    'chain',\n    'conversation',\n    'date',\n    'enemy',\n    'however',\n    'interest',\n    'million',\n    'page',\n    'pink',\n    'proud',\n    'sway',\n    'themselves',\n    'winter',\n    'church',\n    'cruel',\n    'cup',\n    'demon',\n    'experience',\n    'freedom',\n    'pair',\n    'pop',\n    'purpose',\n    'respect',\n    'shoot',\n    'softly',\n    'state',\n    'strange',\n    'bar',\n    'birth',\n    'curl',\n    'dirt',\n    'excuse',\n    'lord',\n    'lovely',\n    'monster',\n    'order',\n    'pack',\n    'pants',\n    'pool',\n    'scene',\n    'seven',\n    'shame',\n    'slide',\n    'ugly',\n    'among',\n    'blade',\n    'blonde',\n    'closet',\n    'creek',\n    'deny',\n    'drug',\n    'eternity',\n    'gain',\n    'grade',\n    'handle',\n    'key',\n    'linger',\n    'pale',\n    'prepare',\n    'swallow',\n    'swim',\n    'tremble',\n    'wheel',\n    'won',\n    'cast',\n    'cigarette',\n    'claim',\n    'college',\n    'direction',\n    'dirty',\n    'gather',\n    'ghost',\n    'hundred',\n    'loss',\n    'lung',\n    'orange',\n    'present',\n    'swear',\n    'swirl',\n    'twice',\n    'wild',\n    'bitter',\n    'blanket',\n    'doctor',\n    'everywhere',\n    'flash',\n    'grown',\n    'knowledge',\n    'numb',\n    'pressure',\n    'radio',\n    'repeat',\n    'ruin',\n    'spend',\n    'unknown',\n    'buy',\n    'clock',\n    'devil',\n    'early',\n    'false',\n    'fantasy',\n    'pound',\n    'precious',\n    'refuse',\n    'sheet',\n    'teeth',\n    'welcome',\n    'add',\n    'ahead',\n    'block',\n    'bury',\n    'caress',\n    'content',\n    'depth',\n    'despite',\n    'distant',\n    'marry',\n    'purple',\n    'threw',\n    'whenever',\n    'bomb',\n    'dull',\n    'easily',\n    'grasp',\n    'hospital',\n    'innocence',\n    'normal',\n    'receive',\n    'reply',\n    'rhyme',\n    'shade',\n    'someday',\n    'sword',\n    'toe',\n    'visit',\n    'asleep',\n    'bought',\n    'center',\n    'consider',\n    'flat',\n    'hero',\n    'history',\n    'ink',\n    'insane',\n    'muscle',\n    'mystery',\n    'pocket',\n    'reflection',\n    'shove',\n    'silently',\n    'smart',\n    'soldier',\n    'spot',\n    'stress',\n    'train',\n    'type',\n    'view',\n    'whether',\n    'bus',\n    'energy',\n    'explain',\n    'holy',\n    'hunger',\n    'inch',\n    'magic',\n    'mix',\n    'noise',\n    'nowhere',\n    'prayer',\n    'presence',\n    'shock',\n    'snap',\n    'spider',\n    'study',\n    'thunder',\n    'trail',\n    'admit',\n    'agree',\n    'bag',\n    'bang',\n    'bound',\n    'butterfly',\n    'cute',\n    'exactly',\n    'explode',\n    'familiar',\n    'fold',\n    'further',\n    'pierce',\n    'reflect',\n    'scent',\n    'selfish',\n    'sharp',\n    'sink',\n    'spring',\n    'stumble',\n    'universe',\n    'weep',\n    'women',\n    'wonderful',\n    'action',\n    'ancient',\n    'attempt',\n    'avoid',\n    'birthday',\n    'branch',\n    'chocolate',\n    'core',\n    'depress',\n    'drunk',\n    'especially',\n    'focus',\n    'fruit',\n    'honest',\n    'match',\n    'palm',\n    'perfectly',\n    'pillow',\n    'pity',\n    'poison',\n    'roar',\n    'shift',\n    'slightly',\n    'thump',\n    'truck',\n    'tune',\n    'twenty',\n    'unable',\n    'wipe',\n    'wrote',\n    'coat',\n    'constant',\n    'dinner',\n    'drove',\n    'egg',\n    'eternal',\n    'flight',\n    'flood',\n    'frame',\n    'freak',\n    'gasp',\n    'glad',\n    'hollow',\n    'motion',\n    'peer',\n    'plastic',\n    'root',\n    'screen',\n    'season',\n    'sting',\n    'strike',\n    'team',\n    'unlike',\n    'victim',\n    'volume',\n    'warn',\n    'weird',\n    'attack',\n    'await',\n    'awake',\n    'built',\n    'charm',\n    'crave',\n    'despair',\n    'fought',\n    'grant',\n    'grief',\n    'horse',\n    'limit',\n    'message',\n    'ripple',\n    'sanity',\n    'scatter',\n    'serve',\n    'split',\n    'string',\n    'trick',\n    'annoy',\n    'blur',\n    'boat',\n    'brave',\n    'clearly',\n    'cling',\n    'connect',\n    'fist',\n    'forth',\n    'imagination',\n    'iron',\n    'jock',\n    'judge',\n    'lesson',\n    'milk',\n    'misery',\n    'nail',\n    'naked',\n    'ourselves',\n    'poet',\n    'possible',\n    'princess',\n    'sail',\n    'size',\n    'snake',\n    'society',\n    'stroke',\n    'torture',\n    'toss',\n    'trace',\n    'wise',\n    'bloom',\n    'bullet',\n    'cell',\n    'check',\n    'cost',\n    'darling',\n    'during',\n    'footstep',\n    'fragile',\n    'hallway',\n    'hardly',\n    'horizon',\n    'invisible',\n    'journey',\n    'midnight',\n    'mud',\n    'nod',\n    'pause',\n    'relax',\n    'shiver',\n    'sudden',\n    'value',\n    'youth',\n    'abuse',\n    'admire',\n    'blink',\n    'breast',\n    'bruise',\n    'constantly',\n    'couple',\n    'creep',\n    'curve',\n    'difference',\n    'dumb',\n    'emptiness',\n    'gotta',\n    'honor',\n    'plain',\n    'planet',\n    'recall',\n    'rub',\n    'ship',\n    'slam',\n    'soar',\n    'somebody',\n    'tightly',\n    'weather',\n    'adore',\n    'approach',\n    'bond',\n    'bread',\n    'burst',\n    'candle',\n    'coffee',\n    'cousin',\n    'crime',\n    'desert',\n    'flutter',\n    'frozen',\n    'grand',\n    'heel',\n    'hello',\n    'language',\n    'level',\n    'movement',\n    'pleasure',\n    'powerful',\n    'random',\n    'rhythm',\n    'settle',\n    'silly',\n    'slap',\n    'sort',\n    'spoken',\n    'steel',\n    'threaten',\n    'tumble',\n    'upset',\n    'aside',\n    'awkward',\n    'bee',\n    'blank',\n    'board',\n    'button',\n    'card',\n    'carefully',\n    'complain',\n    'crap',\n    'deeply',\n    'discover',\n    'drag',\n    'dread',\n    'effort',\n    'entire',\n    'fairy',\n    'giant',\n    'gotten',\n    'greet',\n    'illusion',\n    'jeans',\n    'leap',\n    'liquid',\n    'march',\n    'mend',\n    'nervous',\n    'nine',\n    'replace',\n    'rope',\n    'spine',\n    'stole',\n    'terror',\n    'accident',\n    'apple',\n    'balance',\n    'boom',\n    'childhood',\n    'collect',\n    'demand',\n    'depression',\n    'eventually',\n    'faint',\n    'glare',\n    'goal',\n    'group',\n    'honey',\n    'kitchen',\n    'laid',\n    'limb',\n    'machine',\n    'mere',\n    'mold',\n    'murder',\n    'nerve',\n    'painful',\n    'poetry',\n    'prince',\n    'rabbit',\n    'shelter',\n    'shore',\n    'shower',\n    'soothe',\n    'stair',\n    'steady',\n    'sunlight',\n    'tangle',\n    'tease',\n    'treasure',\n    'uncle',\n    'begun',\n    'bliss',\n    'canvas',\n    'cheer',\n    'claw',\n    'clutch',\n    'commit',\n    'crimson',\n    'crystal',\n    'delight',\n    'doll',\n    'existence',\n    'express',\n    'fog',\n    'football',\n    'gay',\n    'goose',\n    'guard',\n    'hatred',\n    'illuminate',\n    'mass',\n    'math',\n    'mourn',\n    'rich',\n    'rough',\n    'skip',\n    'stir',\n    'student',\n    'style',\n    'support',\n    'thorn',\n    'tough',\n    'yard',\n    'yearn',\n    'yesterday',\n    'advice',\n    'appreciate',\n    'autumn',\n    'bank',\n    'beam',\n    'bowl',\n    'capture',\n    'carve',\n    'collapse',\n    'confusion',\n    'creation',\n    'dove',\n    'feather',\n    'girlfriend',\n    'glory',\n    'government',\n    'harsh',\n    'hop',\n    'inner',\n    'loser',\n    'moonlight',\n    'neighbor',\n    'neither',\n    'peach',\n    'pig',\n    'praise',\n    'screw',\n    'shield',\n    'shimmer',\n    'sneak',\n    'stab',\n    'subject',\n    'throughout',\n    'thrown',\n    'tower',\n    'twirl',\n    'wow',\n    'army',\n    'arrive',\n    'bathroom',\n    'bump',\n    'cease',\n    'cookie',\n    'couch',\n    'courage',\n    'dim',\n    'guilt',\n    'howl',\n    'hum',\n    'husband',\n    'insult',\n    'led',\n    'lunch',\n    'mock',\n    'mostly',\n    'natural',\n    'nearly',\n    'needle',\n    'nerd',\n    'peaceful',\n    'perfection',\n    'pile',\n    'price',\n    'remove',\n    'roam',\n    'sanctuary',\n    'serious',\n    'shiny',\n    'shook',\n    'sob',\n    'stolen',\n    'tap',\n    'vain',\n    'void',\n    'warrior',\n    'wrinkle',\n    'affection',\n    'apologize',\n    'blossom',\n    'bounce',\n    'bridge',\n    'cheap',\n    'crumble',\n    'decision',\n    'descend',\n    'desperately',\n    'dig',\n    'dot',\n    'flip',\n    'frighten',\n    'heartbeat',\n    'huge',\n    'lazy',\n    'lick',\n    'odd',\n    'opinion',\n    'process',\n    'puzzle',\n    'quietly',\n    'retreat',\n    'score',\n    'sentence',\n    'separate',\n    'situation',\n    'skill',\n    'soak',\n    'square',\n    'stray',\n    'taint',\n    'task',\n    'tide',\n    'underneath',\n    'veil',\n    'whistle',\n    'anywhere',\n    'bedroom',\n    'bid',\n    'bloody',\n    'burden',\n    'careful',\n    'compare',\n    'concern',\n    'curtain',\n    'decay',\n    'defeat',\n    'describe',\n    'double',\n    'dreamer',\n    'driver',\n    'dwell',\n    'evening',\n    'flare',\n    'flicker',\n    'grandma',\n    'guitar',\n    'harm',\n    'horrible',\n    'hungry',\n    'indeed',\n    'lace',\n    'melody',\n    'monkey',\n    'nation',\n    'object',\n    'obviously',\n    'rainbow',\n    'salt',\n    'scratch',\n    'shown',\n    'shy',\n    'stage',\n    'stun',\n    'third',\n    'tickle',\n    'useless',\n    'weakness',\n    'worship',\n    'worthless',\n    'afternoon',\n    'beard',\n    'boyfriend',\n    'bubble',\n    'busy',\n    'certain',\n    'chin',\n    'concrete',\n    'desk',\n    'diamond',\n    'doom',\n    'drawn',\n    'due',\n    'felicity',\n    'freeze',\n    'frost',\n    'garden',\n    'glide',\n    'harmony',\n    'hopefully',\n    'hunt',\n    'jealous',\n    'lightning',\n    'mama',\n    'mercy',\n    'peel',\n    'physical',\n    'position',\n    'pulse',\n    'punch',\n    'quit',\n    'rant',\n    'respond',\n    'salty',\n    'sane',\n    'satisfy',\n    'savior',\n    'sheep',\n    'slept',\n    'social',\n    'sport',\n    'tuck',\n    'utter',\n    'valley',\n    'wolf',\n    'aim',\n    'alas',\n    'alter',\n    'arrow',\n    'awaken',\n    'beaten',\n    'belief',\n    'brand',\n    'ceiling',\n    'cheese',\n    'clue',\n    'confidence',\n    'connection',\n    'daily',\n    'disguise',\n    'eager',\n    'erase',\n    'essence',\n    'everytime',\n    'expression',\n    'fan',\n    'flag',\n    'flirt',\n    'foul',\n    'fur',\n    'giggle',\n    'glorious',\n    'ignorance',\n    'law',\n    'lifeless',\n    'measure',\n    'mighty',\n    'muse',\n    'north',\n    'opposite',\n    'paradise',\n    'patience',\n    'patient',\n    'pencil',\n    'petal',\n    'plate',\n    'ponder',\n    'possibly',\n    'practice',\n    'slice',\n    'spell',\n    'stock',\n    'strife',\n    'strip',\n    'suffocate',\n    'suit',\n    'tender',\n    'tool',\n    'trade',\n    'velvet',\n    'verse',\n    'waist',\n    'witch',\n    'aunt',\n    'bench',\n    'bold',\n    'cap',\n    'certainly',\n    'click',\n    'companion',\n    'creator',\n    'dart',\n    'delicate',\n    'determine',\n    'dish',\n    'dragon',\n    'drama',\n    'drum',\n    'dude',\n    'everybody',\n    'feast',\n    'forehead',\n    'former',\n    'fright',\n    'fully',\n    'gas',\n    'hook',\n    'hurl',\n    'invite',\n    'juice',\n    'manage',\n    'moral',\n    'possess',\n    'raw',\n    'rebel',\n    'royal',\n    'scale',\n    'scary',\n    'several',\n    'slight',\n    'stubborn',\n    'swell',\n    'talent',\n    'tea',\n    'terrible',\n    'thread',\n    'torment',\n    'trickle',\n    'usually',\n    'vast',\n    'violence',\n    'weave',\n    'acid',\n    'agony',\n    'ashamed',\n    'awe',\n    'belly',\n    'blend',\n    'blush',\n    'character',\n    'cheat',\n    'common',\n    'company',\n    'coward',\n    'creak',\n    'danger',\n    'deadly',\n    'defense',\n    'define',\n    'depend',\n    'desperate',\n    'destination',\n    'dew',\n    'duck',\n    'dusty',\n    'embarrass',\n    'engine',\n    'example',\n    'explore',\n    'foe',\n    'freely',\n    'frustrate',\n    'generation',\n    'glove',\n    'guilty',\n    'health',\n    'hurry',\n    'idiot',\n    'impossible',\n    'inhale',\n    'jaw',\n    'kingdom',\n    'mention',\n    'mist',\n    'moan',\n    'mumble',\n    'mutter',\n    'observe',\n    'ode',\n    'pathetic',\n    'pattern',\n    'pie',\n    'prefer',\n    'puff',\n    'rape',\n    'rare',\n    'revenge',\n    'rude',\n    'scrape',\n    'spiral',\n    'squeeze',\n    'strain',\n    'sunset',\n    'suspend',\n    'sympathy',\n    'thigh',\n    'throne',\n    'total',\n    'unseen',\n    'weapon',\n    'weary'\n];\n//# sourceMappingURL=english.js.map","// SPDX-License-Identifier: MIT\nimport { Mnemonic } from '../../mnemonic';\nimport { ElectrumV1Entropy, ELECTRUM_V1_ENTROPY_STRENGTHS } from '../../../entropies';\nimport { hexToBytes, integerToBytes, bytesToInteger, bytesToHex, getBytes, concatBytes } from '../../../utils';\nimport { MnemonicError, EntropyError } from '../../../exceptions';\nimport { ELECTRUM_V1_ENGLISH_WORDLIST } from './wordlists';\nexport const ELECTRUM_V1_MNEMONIC_WORDS = {\n    TWELVE: 12,\n};\nexport const ELECTRUM_V1_MNEMONIC_LANGUAGES = {\n    ENGLISH: 'english'\n};\nexport class ElectrumV1Mnemonic extends Mnemonic {\n    static wordsListNumber = 1626;\n    static wordsList = [\n        ELECTRUM_V1_MNEMONIC_WORDS.TWELVE,\n    ];\n    static wordsToStrength = {\n        [ELECTRUM_V1_MNEMONIC_WORDS.TWELVE]: ELECTRUM_V1_ENTROPY_STRENGTHS.ONE_HUNDRED_TWENTY_EIGHT,\n    };\n    static languages = Object.values(ELECTRUM_V1_MNEMONIC_LANGUAGES);\n    static wordLists = {\n        [ELECTRUM_V1_MNEMONIC_LANGUAGES.ENGLISH]: ELECTRUM_V1_ENGLISH_WORDLIST\n    };\n    static getName() {\n        return 'Electrum-V1';\n    }\n    static fromWords(count, language, options = {}) {\n        if (!this.wordsList.includes(count)) {\n            throw new MnemonicError('Invalid mnemonic words number', { expected: this.wordsList, got: count });\n        }\n        const entropy = ElectrumV1Entropy.generate(this.wordsToStrength[count]);\n        return this.encode(entropy, language, options);\n    }\n    static fromEntropy(entropy, language, options = {}) {\n        let raw;\n        if (typeof entropy === 'string') {\n            raw = hexToBytes(entropy);\n        }\n        else if (entropy instanceof Uint8Array) {\n            raw = entropy;\n        }\n        else {\n            raw = hexToBytes(entropy.getEntropy());\n        }\n        return this.encode(raw, language, options);\n    }\n    static encode(entropy, language, options = {}) {\n        const entropyBytes = getBytes(entropy);\n        if (!ElectrumV1Entropy.isValidBytesStrength(entropyBytes.length)) {\n            throw new EntropyError('Wrong entropy strength', { expected: ElectrumV1Entropy.strengths, got: entropyBytes.length * 8 });\n        }\n        const rawList = this.getWordsListByLanguage(language, this.wordLists);\n        const wordList = this.normalize(rawList);\n        const wl = wordList.length;\n        const mnemonic = [];\n        for (let i = 0; i < entropyBytes.length; i += 4) {\n            const chunkBytes = entropyBytes.slice(i, i + 4);\n            // big-endian → bigint → number\n            const chunkInt = Number(bytesToInteger(chunkBytes, false));\n            const w1 = chunkInt % wl;\n            const w2 = (Math.floor(chunkInt / wl) + w1) % wl;\n            const w3 = (Math.floor(chunkInt / wl / wl) + w2) % wl;\n            mnemonic.push(wordList[w1], wordList[w2], wordList[w3]);\n        }\n        return this.normalize(mnemonic).join(' ');\n    }\n    static decode(mnemonic, options = { checksum: false }) {\n        const words = this.normalize(mnemonic);\n        const count = words.length;\n        if (!this.wordsList.includes(count)) {\n            throw new MnemonicError('Invalid mnemonic words count', {\n                expected: this.wordsList,\n                got: count,\n            });\n        }\n        let wordsList;\n        let idxMap = {};\n        if (options.wordsList && options.wordsListWithIndex) {\n            wordsList = options.wordsList;\n            idxMap = options.wordsListWithIndex;\n        }\n        else {\n            [wordsList] = this.findLanguage(words, this.wordLists);\n            wordsList.forEach((w, i) => (idxMap[w] = i));\n        }\n        const wl = wordsList.length;\n        const bufs = [];\n        for (let i = 0; i < words.length; i += 3) {\n            const [w1, w2, w3] = words.slice(i, i + 3);\n            const i1 = idxMap[w1];\n            const i2 = idxMap[w2] % wl;\n            const i3 = idxMap[w3] % wl;\n            const chunkVal = i1 +\n                wl * ((i2 - i1 + wl) % wl) +\n                wl * wl * ((i3 - i2 + wl) % wl);\n            const chunkBytes = integerToBytes(chunkVal, 4, 'big');\n            bufs.push(getBytes(chunkBytes));\n        }\n        return bytesToHex(concatBytes(...bufs), false);\n    }\n    static isValid(input, options = {}) {\n        try {\n            this.decode(input, options);\n            return true;\n        }\n        catch {\n            return false;\n        }\n    }\n    static normalize(input) {\n        const arr = typeof input === 'string' ? input.trim().split(/\\s+/) : input;\n        return arr.map(w => w.normalize('NFKD').toLowerCase());\n    }\n}\n//# sourceMappingURL=mnemonic.js.map","// SPDX-License-Identifier: MIT\nexport const WORDLIST = [\n    '的',\n    '一',\n    '是',\n    '在',\n    '不',\n    '了',\n    '有',\n    '和',\n    '人',\n    '这',\n    '中',\n    '大',\n    '为',\n    '上',\n    '个',\n    '国',\n    '我',\n    '以',\n    '要',\n    '他',\n    '时',\n    '来',\n    '用',\n    '们',\n    '生',\n    '到',\n    '作',\n    '地',\n    '于',\n    '出',\n    '就',\n    '分',\n    '对',\n    '成',\n    '会',\n    '可',\n    '主',\n    '发',\n    '年',\n    '动',\n    '同',\n    '工',\n    '也',\n    '能',\n    '下',\n    '过',\n    '子',\n    '说',\n    '产',\n    '种',\n    '面',\n    '而',\n    '方',\n    '后',\n    '多',\n    '定',\n    '行',\n    '学',\n    '法',\n    '所',\n    '民',\n    '得',\n    '经',\n    '十',\n    '三',\n    '之',\n    '进',\n    '着',\n    '等',\n    '部',\n    '度',\n    '家',\n    '电',\n    '力',\n    '里',\n    '如',\n    '水',\n    '化',\n    '高',\n    '自',\n    '二',\n    '理',\n    '起',\n    '小',\n    '物',\n    '现',\n    '实',\n    '加',\n    '量',\n    '都',\n    '两',\n    '体',\n    '制',\n    '机',\n    '当',\n    '使',\n    '点',\n    '从',\n    '业',\n    '本',\n    '去',\n    '把',\n    '性',\n    '好',\n    '应',\n    '开',\n    '它',\n    '合',\n    '还',\n    '因',\n    '由',\n    '其',\n    '些',\n    '然',\n    '前',\n    '外',\n    '天',\n    '政',\n    '四',\n    '日',\n    '那',\n    '社',\n    '义',\n    '事',\n    '平',\n    '形',\n    '相',\n    '全',\n    '表',\n    '间',\n    '样',\n    '与',\n    '关',\n    '各',\n    '重',\n    '新',\n    '线',\n    '内',\n    '数',\n    '正',\n    '心',\n    '反',\n    '你',\n    '明',\n    '看',\n    '原',\n    '又',\n    '么',\n    '利',\n    '比',\n    '或',\n    '但',\n    '质',\n    '气',\n    '第',\n    '向',\n    '道',\n    '命',\n    '此',\n    '变',\n    '条',\n    '只',\n    '没',\n    '结',\n    '解',\n    '问',\n    '意',\n    '建',\n    '月',\n    '公',\n    '无',\n    '系',\n    '军',\n    '很',\n    '情',\n    '者',\n    '最',\n    '立',\n    '代',\n    '想',\n    '已',\n    '通',\n    '并',\n    '提',\n    '直',\n    '题',\n    '党',\n    '程',\n    '展',\n    '五',\n    '果',\n    '料',\n    '象',\n    '员',\n    '革',\n    '位',\n    '入',\n    '常',\n    '文',\n    '总',\n    '次',\n    '品',\n    '式',\n    '活',\n    '设',\n    '及',\n    '管',\n    '特',\n    '件',\n    '长',\n    '求',\n    '老',\n    '头',\n    '基',\n    '资',\n    '边',\n    '流',\n    '路',\n    '级',\n    '少',\n    '图',\n    '山',\n    '统',\n    '接',\n    '知',\n    '较',\n    '将',\n    '组',\n    '见',\n    '计',\n    '别',\n    '她',\n    '手',\n    '角',\n    '期',\n    '根',\n    '论',\n    '运',\n    '农',\n    '指',\n    '几',\n    '九',\n    '区',\n    '强',\n    '放',\n    '决',\n    '西',\n    '被',\n    '干',\n    '做',\n    '必',\n    '战',\n    '先',\n    '回',\n    '则',\n    '任',\n    '取',\n    '据',\n    '处',\n    '队',\n    '南',\n    '给',\n    '色',\n    '光',\n    '门',\n    '即',\n    '保',\n    '治',\n    '北',\n    '造',\n    '百',\n    '规',\n    '热',\n    '领',\n    '七',\n    '海',\n    '口',\n    '东',\n    '导',\n    '器',\n    '压',\n    '志',\n    '世',\n    '金',\n    '增',\n    '争',\n    '济',\n    '阶',\n    '油',\n    '思',\n    '术',\n    '极',\n    '交',\n    '受',\n    '联',\n    '什',\n    '认',\n    '六',\n    '共',\n    '权',\n    '收',\n    '证',\n    '改',\n    '清',\n    '美',\n    '再',\n    '采',\n    '转',\n    '更',\n    '单',\n    '风',\n    '切',\n    '打',\n    '白',\n    '教',\n    '速',\n    '花',\n    '带',\n    '安',\n    '场',\n    '身',\n    '车',\n    '例',\n    '真',\n    '务',\n    '具',\n    '万',\n    '每',\n    '目',\n    '至',\n    '达',\n    '走',\n    '积',\n    '示',\n    '议',\n    '声',\n    '报',\n    '斗',\n    '完',\n    '类',\n    '八',\n    '离',\n    '华',\n    '名',\n    '确',\n    '才',\n    '科',\n    '张',\n    '信',\n    '马',\n    '节',\n    '话',\n    '米',\n    '整',\n    '空',\n    '元',\n    '况',\n    '今',\n    '集',\n    '温',\n    '传',\n    '土',\n    '许',\n    '步',\n    '群',\n    '广',\n    '石',\n    '记',\n    '需',\n    '段',\n    '研',\n    '界',\n    '拉',\n    '林',\n    '律',\n    '叫',\n    '且',\n    '究',\n    '观',\n    '越',\n    '织',\n    '装',\n    '影',\n    '算',\n    '低',\n    '持',\n    '音',\n    '众',\n    '书',\n    '布',\n    '复',\n    '容',\n    '儿',\n    '须',\n    '际',\n    '商',\n    '非',\n    '验',\n    '连',\n    '断',\n    '深',\n    '难',\n    '近',\n    '矿',\n    '千',\n    '周',\n    '委',\n    '素',\n    '技',\n    '备',\n    '半',\n    '办',\n    '青',\n    '省',\n    '列',\n    '习',\n    '响',\n    '约',\n    '支',\n    '般',\n    '史',\n    '感',\n    '劳',\n    '便',\n    '团',\n    '往',\n    '酸',\n    '历',\n    '市',\n    '克',\n    '何',\n    '除',\n    '消',\n    '构',\n    '府',\n    '称',\n    '太',\n    '准',\n    '精',\n    '值',\n    '号',\n    '率',\n    '族',\n    '维',\n    '划',\n    '选',\n    '标',\n    '写',\n    '存',\n    '候',\n    '毛',\n    '亲',\n    '快',\n    '效',\n    '斯',\n    '院',\n    '查',\n    '江',\n    '型',\n    '眼',\n    '王',\n    '按',\n    '格',\n    '养',\n    '易',\n    '置',\n    '派',\n    '层',\n    '片',\n    '始',\n    '却',\n    '专',\n    '状',\n    '育',\n    '厂',\n    '京',\n    '识',\n    '适',\n    '属',\n    '圆',\n    '包',\n    '火',\n    '住',\n    '调',\n    '满',\n    '县',\n    '局',\n    '照',\n    '参',\n    '红',\n    '细',\n    '引',\n    '听',\n    '该',\n    '铁',\n    '价',\n    '严',\n    '首',\n    '底',\n    '液',\n    '官',\n    '德',\n    '随',\n    '病',\n    '苏',\n    '失',\n    '尔',\n    '死',\n    '讲',\n    '配',\n    '女',\n    '黄',\n    '推',\n    '显',\n    '谈',\n    '罪',\n    '神',\n    '艺',\n    '呢',\n    '席',\n    '含',\n    '企',\n    '望',\n    '密',\n    '批',\n    '营',\n    '项',\n    '防',\n    '举',\n    '球',\n    '英',\n    '氧',\n    '势',\n    '告',\n    '李',\n    '台',\n    '落',\n    '木',\n    '帮',\n    '轮',\n    '破',\n    '亚',\n    '师',\n    '围',\n    '注',\n    '远',\n    '字',\n    '材',\n    '排',\n    '供',\n    '河',\n    '态',\n    '封',\n    '另',\n    '施',\n    '减',\n    '树',\n    '溶',\n    '怎',\n    '止',\n    '案',\n    '言',\n    '士',\n    '均',\n    '武',\n    '固',\n    '叶',\n    '鱼',\n    '波',\n    '视',\n    '仅',\n    '费',\n    '紧',\n    '爱',\n    '左',\n    '章',\n    '早',\n    '朝',\n    '害',\n    '续',\n    '轻',\n    '服',\n    '试',\n    '食',\n    '充',\n    '兵',\n    '源',\n    '判',\n    '护',\n    '司',\n    '足',\n    '某',\n    '练',\n    '差',\n    '致',\n    '板',\n    '田',\n    '降',\n    '黑',\n    '犯',\n    '负',\n    '击',\n    '范',\n    '继',\n    '兴',\n    '似',\n    '余',\n    '坚',\n    '曲',\n    '输',\n    '修',\n    '故',\n    '城',\n    '夫',\n    '够',\n    '送',\n    '笔',\n    '船',\n    '占',\n    '右',\n    '财',\n    '吃',\n    '富',\n    '春',\n    '职',\n    '觉',\n    '汉',\n    '画',\n    '功',\n    '巴',\n    '跟',\n    '虽',\n    '杂',\n    '飞',\n    '检',\n    '吸',\n    '助',\n    '升',\n    '阳',\n    '互',\n    '初',\n    '创',\n    '抗',\n    '考',\n    '投',\n    '坏',\n    '策',\n    '古',\n    '径',\n    '换',\n    '未',\n    '跑',\n    '留',\n    '钢',\n    '曾',\n    '端',\n    '责',\n    '站',\n    '简',\n    '述',\n    '钱',\n    '副',\n    '尽',\n    '帝',\n    '射',\n    '草',\n    '冲',\n    '承',\n    '独',\n    '令',\n    '限',\n    '阿',\n    '宣',\n    '环',\n    '双',\n    '请',\n    '超',\n    '微',\n    '让',\n    '控',\n    '州',\n    '良',\n    '轴',\n    '找',\n    '否',\n    '纪',\n    '益',\n    '依',\n    '优',\n    '顶',\n    '础',\n    '载',\n    '倒',\n    '房',\n    '突',\n    '坐',\n    '粉',\n    '敌',\n    '略',\n    '客',\n    '袁',\n    '冷',\n    '胜',\n    '绝',\n    '析',\n    '块',\n    '剂',\n    '测',\n    '丝',\n    '协',\n    '诉',\n    '念',\n    '陈',\n    '仍',\n    '罗',\n    '盐',\n    '友',\n    '洋',\n    '错',\n    '苦',\n    '夜',\n    '刑',\n    '移',\n    '频',\n    '逐',\n    '靠',\n    '混',\n    '母',\n    '短',\n    '皮',\n    '终',\n    '聚',\n    '汽',\n    '村',\n    '云',\n    '哪',\n    '既',\n    '距',\n    '卫',\n    '停',\n    '烈',\n    '央',\n    '察',\n    '烧',\n    '迅',\n    '境',\n    '若',\n    '印',\n    '洲',\n    '刻',\n    '括',\n    '激',\n    '孔',\n    '搞',\n    '甚',\n    '室',\n    '待',\n    '核',\n    '校',\n    '散',\n    '侵',\n    '吧',\n    '甲',\n    '游',\n    '久',\n    '菜',\n    '味',\n    '旧',\n    '模',\n    '湖',\n    '货',\n    '损',\n    '预',\n    '阻',\n    '毫',\n    '普',\n    '稳',\n    '乙',\n    '妈',\n    '植',\n    '息',\n    '扩',\n    '银',\n    '语',\n    '挥',\n    '酒',\n    '守',\n    '拿',\n    '序',\n    '纸',\n    '医',\n    '缺',\n    '雨',\n    '吗',\n    '针',\n    '刘',\n    '啊',\n    '急',\n    '唱',\n    '误',\n    '训',\n    '愿',\n    '审',\n    '附',\n    '获',\n    '茶',\n    '鲜',\n    '粮',\n    '斤',\n    '孩',\n    '脱',\n    '硫',\n    '肥',\n    '善',\n    '龙',\n    '演',\n    '父',\n    '渐',\n    '血',\n    '欢',\n    '械',\n    '掌',\n    '歌',\n    '沙',\n    '刚',\n    '攻',\n    '谓',\n    '盾',\n    '讨',\n    '晚',\n    '粒',\n    '乱',\n    '燃',\n    '矛',\n    '乎',\n    '杀',\n    '药',\n    '宁',\n    '鲁',\n    '贵',\n    '钟',\n    '煤',\n    '读',\n    '班',\n    '伯',\n    '香',\n    '介',\n    '迫',\n    '句',\n    '丰',\n    '培',\n    '握',\n    '兰',\n    '担',\n    '弦',\n    '蛋',\n    '沉',\n    '假',\n    '穿',\n    '执',\n    '答',\n    '乐',\n    '谁',\n    '顺',\n    '烟',\n    '缩',\n    '征',\n    '脸',\n    '喜',\n    '松',\n    '脚',\n    '困',\n    '异',\n    '免',\n    '背',\n    '星',\n    '福',\n    '买',\n    '染',\n    '井',\n    '概',\n    '慢',\n    '怕',\n    '磁',\n    '倍',\n    '祖',\n    '皇',\n    '促',\n    '静',\n    '补',\n    '评',\n    '翻',\n    '肉',\n    '践',\n    '尼',\n    '衣',\n    '宽',\n    '扬',\n    '棉',\n    '希',\n    '伤',\n    '操',\n    '垂',\n    '秋',\n    '宜',\n    '氢',\n    '套',\n    '督',\n    '振',\n    '架',\n    '亮',\n    '末',\n    '宪',\n    '庆',\n    '编',\n    '牛',\n    '触',\n    '映',\n    '雷',\n    '销',\n    '诗',\n    '座',\n    '居',\n    '抓',\n    '裂',\n    '胞',\n    '呼',\n    '娘',\n    '景',\n    '威',\n    '绿',\n    '晶',\n    '厚',\n    '盟',\n    '衡',\n    '鸡',\n    '孙',\n    '延',\n    '危',\n    '胶',\n    '屋',\n    '乡',\n    '临',\n    '陆',\n    '顾',\n    '掉',\n    '呀',\n    '灯',\n    '岁',\n    '措',\n    '束',\n    '耐',\n    '剧',\n    '玉',\n    '赵',\n    '跳',\n    '哥',\n    '季',\n    '课',\n    '凯',\n    '胡',\n    '额',\n    '款',\n    '绍',\n    '卷',\n    '齐',\n    '伟',\n    '蒸',\n    '殖',\n    '永',\n    '宗',\n    '苗',\n    '川',\n    '炉',\n    '岩',\n    '弱',\n    '零',\n    '杨',\n    '奏',\n    '沿',\n    '露',\n    '杆',\n    '探',\n    '滑',\n    '镇',\n    '饭',\n    '浓',\n    '航',\n    '怀',\n    '赶',\n    '库',\n    '夺',\n    '伊',\n    '灵',\n    '税',\n    '途',\n    '灭',\n    '赛',\n    '归',\n    '召',\n    '鼓',\n    '播',\n    '盘',\n    '裁',\n    '险',\n    '康',\n    '唯',\n    '录',\n    '菌',\n    '纯',\n    '借',\n    '糖',\n    '盖',\n    '横',\n    '符',\n    '私',\n    '努',\n    '堂',\n    '域',\n    '枪',\n    '润',\n    '幅',\n    '哈',\n    '竟',\n    '熟',\n    '虫',\n    '泽',\n    '脑',\n    '壤',\n    '碳',\n    '欧',\n    '遍',\n    '侧',\n    '寨',\n    '敢',\n    '彻',\n    '虑',\n    '斜',\n    '薄',\n    '庭',\n    '纳',\n    '弹',\n    '饲',\n    '伸',\n    '折',\n    '麦',\n    '湿',\n    '暗',\n    '荷',\n    '瓦',\n    '塞',\n    '床',\n    '筑',\n    '恶',\n    '户',\n    '访',\n    '塔',\n    '奇',\n    '透',\n    '梁',\n    '刀',\n    '旋',\n    '迹',\n    '卡',\n    '氯',\n    '遇',\n    '份',\n    '毒',\n    '泥',\n    '退',\n    '洗',\n    '摆',\n    '灰',\n    '彩',\n    '卖',\n    '耗',\n    '夏',\n    '择',\n    '忙',\n    '铜',\n    '献',\n    '硬',\n    '予',\n    '繁',\n    '圈',\n    '雪',\n    '函',\n    '亦',\n    '抽',\n    '篇',\n    '阵',\n    '阴',\n    '丁',\n    '尺',\n    '追',\n    '堆',\n    '雄',\n    '迎',\n    '泛',\n    '爸',\n    '楼',\n    '避',\n    '谋',\n    '吨',\n    '野',\n    '猪',\n    '旗',\n    '累',\n    '偏',\n    '典',\n    '馆',\n    '索',\n    '秦',\n    '脂',\n    '潮',\n    '爷',\n    '豆',\n    '忽',\n    '托',\n    '惊',\n    '塑',\n    '遗',\n    '愈',\n    '朱',\n    '替',\n    '纤',\n    '粗',\n    '倾',\n    '尚',\n    '痛',\n    '楚',\n    '谢',\n    '奋',\n    '购',\n    '磨',\n    '君',\n    '池',\n    '旁',\n    '碎',\n    '骨',\n    '监',\n    '捕',\n    '弟',\n    '暴',\n    '割',\n    '贯',\n    '殊',\n    '释',\n    '词',\n    '亡',\n    '壁',\n    '顿',\n    '宝',\n    '午',\n    '尘',\n    '闻',\n    '揭',\n    '炮',\n    '残',\n    '冬',\n    '桥',\n    '妇',\n    '警',\n    '综',\n    '招',\n    '吴',\n    '付',\n    '浮',\n    '遭',\n    '徐',\n    '您',\n    '摇',\n    '谷',\n    '赞',\n    '箱',\n    '隔',\n    '订',\n    '男',\n    '吹',\n    '园',\n    '纷',\n    '唐',\n    '败',\n    '宋',\n    '玻',\n    '巨',\n    '耕',\n    '坦',\n    '荣',\n    '闭',\n    '湾',\n    '键',\n    '凡',\n    '驻',\n    '锅',\n    '救',\n    '恩',\n    '剥',\n    '凝',\n    '碱',\n    '齿',\n    '截',\n    '炼',\n    '麻',\n    '纺',\n    '禁',\n    '废',\n    '盛',\n    '版',\n    '缓',\n    '净',\n    '睛',\n    '昌',\n    '婚',\n    '涉',\n    '筒',\n    '嘴',\n    '插',\n    '岸',\n    '朗',\n    '庄',\n    '街',\n    '藏',\n    '姑',\n    '贸',\n    '腐',\n    '奴',\n    '啦',\n    '惯',\n    '乘',\n    '伙',\n    '恢',\n    '匀',\n    '纱',\n    '扎',\n    '辩',\n    '耳',\n    '彪',\n    '臣',\n    '亿',\n    '璃',\n    '抵',\n    '脉',\n    '秀',\n    '萨',\n    '俄',\n    '网',\n    '舞',\n    '店',\n    '喷',\n    '纵',\n    '寸',\n    '汗',\n    '挂',\n    '洪',\n    '贺',\n    '闪',\n    '柬',\n    '爆',\n    '烯',\n    '津',\n    '稻',\n    '墙',\n    '软',\n    '勇',\n    '像',\n    '滚',\n    '厘',\n    '蒙',\n    '芳',\n    '肯',\n    '坡',\n    '柱',\n    '荡',\n    '腿',\n    '仪',\n    '旅',\n    '尾',\n    '轧',\n    '冰',\n    '贡',\n    '登',\n    '黎',\n    '削',\n    '钻',\n    '勒',\n    '逃',\n    '障',\n    '氨',\n    '郭',\n    '峰',\n    '币',\n    '港',\n    '伏',\n    '轨',\n    '亩',\n    '毕',\n    '擦',\n    '莫',\n    '刺',\n    '浪',\n    '秘',\n    '援',\n    '株',\n    '健',\n    '售',\n    '股',\n    '岛',\n    '甘',\n    '泡',\n    '睡',\n    '童',\n    '铸',\n    '汤',\n    '阀',\n    '休',\n    '汇',\n    '舍',\n    '牧',\n    '绕',\n    '炸',\n    '哲',\n    '磷',\n    '绩',\n    '朋',\n    '淡',\n    '尖',\n    '启',\n    '陷',\n    '柴',\n    '呈',\n    '徒',\n    '颜',\n    '泪',\n    '稍',\n    '忘',\n    '泵',\n    '蓝',\n    '拖',\n    '洞',\n    '授',\n    '镜',\n    '辛',\n    '壮',\n    '锋',\n    '贫',\n    '虚',\n    '弯',\n    '摩',\n    '泰',\n    '幼',\n    '廷',\n    '尊',\n    '窗',\n    '纲',\n    '弄',\n    '隶',\n    '疑',\n    '氏',\n    '宫',\n    '姐',\n    '震',\n    '瑞',\n    '怪',\n    '尤',\n    '琴',\n    '循',\n    '描',\n    '膜',\n    '违',\n    '夹',\n    '腰',\n    '缘',\n    '珠',\n    '穷',\n    '森',\n    '枝',\n    '竹',\n    '沟',\n    '催',\n    '绳',\n    '忆',\n    '邦',\n    '剩',\n    '幸',\n    '浆',\n    '栏',\n    '拥',\n    '牙',\n    '贮',\n    '礼',\n    '滤',\n    '钠',\n    '纹',\n    '罢',\n    '拍',\n    '咱',\n    '喊',\n    '袖',\n    '埃',\n    '勤',\n    '罚',\n    '焦',\n    '潜',\n    '伍',\n    '墨',\n    '欲',\n    '缝',\n    '姓',\n    '刊',\n    '饱',\n    '仿',\n    '奖',\n    '铝',\n    '鬼',\n    '丽',\n    '跨',\n    '默',\n    '挖',\n    '链',\n    '扫',\n    '喝',\n    '袋',\n    '炭',\n    '污',\n    '幕',\n    '诸',\n    '弧',\n    '励',\n    '梅',\n    '奶',\n    '洁',\n    '灾',\n    '舟',\n    '鉴',\n    '苯',\n    '讼',\n    '抱',\n    '毁',\n    '懂',\n    '寒',\n    '智',\n    '埔',\n    '寄',\n    '届',\n    '跃',\n    '渡',\n    '挑',\n    '丹',\n    '艰',\n    '贝',\n    '碰',\n    '拔',\n    '爹',\n    '戴',\n    '码',\n    '梦',\n    '芽',\n    '熔',\n    '赤',\n    '渔',\n    '哭',\n    '敬',\n    '颗',\n    '奔',\n    '铅',\n    '仲',\n    '虎',\n    '稀',\n    '妹',\n    '乏',\n    '珍',\n    '申',\n    '桌',\n    '遵',\n    '允',\n    '隆',\n    '螺',\n    '仓',\n    '魏',\n    '锐',\n    '晓',\n    '氮',\n    '兼',\n    '隐',\n    '碍',\n    '赫',\n    '拨',\n    '忠',\n    '肃',\n    '缸',\n    '牵',\n    '抢',\n    '博',\n    '巧',\n    '壳',\n    '兄',\n    '杜',\n    '讯',\n    '诚',\n    '碧',\n    '祥',\n    '柯',\n    '页',\n    '巡',\n    '矩',\n    '悲',\n    '灌',\n    '龄',\n    '伦',\n    '票',\n    '寻',\n    '桂',\n    '铺',\n    '圣',\n    '恐',\n    '恰',\n    '郑',\n    '趣',\n    '抬',\n    '荒',\n    '腾',\n    '贴',\n    '柔',\n    '滴',\n    '猛',\n    '阔',\n    '辆',\n    '妻',\n    '填',\n    '撤',\n    '储',\n    '签',\n    '闹',\n    '扰',\n    '紫',\n    '砂',\n    '递',\n    '戏',\n    '吊',\n    '陶',\n    '伐',\n    '喂',\n    '疗',\n    '瓶',\n    '婆',\n    '抚',\n    '臂',\n    '摸',\n    '忍',\n    '虾',\n    '蜡',\n    '邻',\n    '胸',\n    '巩',\n    '挤',\n    '偶',\n    '弃',\n    '槽',\n    '劲',\n    '乳',\n    '邓',\n    '吉',\n    '仁',\n    '烂',\n    '砖',\n    '租',\n    '乌',\n    '舰',\n    '伴',\n    '瓜',\n    '浅',\n    '丙',\n    '暂',\n    '燥',\n    '橡',\n    '柳',\n    '迷',\n    '暖',\n    '牌',\n    '秧',\n    '胆',\n    '详',\n    '簧',\n    '踏',\n    '瓷',\n    '谱',\n    '呆',\n    '宾',\n    '糊',\n    '洛',\n    '辉',\n    '愤',\n    '竞',\n    '隙',\n    '怒',\n    '粘',\n    '乃',\n    '绪',\n    '肩',\n    '籍',\n    '敏',\n    '涂',\n    '熙',\n    '皆',\n    '侦',\n    '悬',\n    '掘',\n    '享',\n    '纠',\n    '醒',\n    '狂',\n    '锁',\n    '淀',\n    '恨',\n    '牲',\n    '霸',\n    '爬',\n    '赏',\n    '逆',\n    '玩',\n    '陵',\n    '祝',\n    '秒',\n    '浙',\n    '貌',\n    '役',\n    '彼',\n    '悉',\n    '鸭',\n    '趋',\n    '凤',\n    '晨',\n    '畜',\n    '辈',\n    '秩',\n    '卵',\n    '署',\n    '梯',\n    '炎',\n    '滩',\n    '棋',\n    '驱',\n    '筛',\n    '峡',\n    '冒',\n    '啥',\n    '寿',\n    '译',\n    '浸',\n    '泉',\n    '帽',\n    '迟',\n    '硅',\n    '疆',\n    '贷',\n    '漏',\n    '稿',\n    '冠',\n    '嫩',\n    '胁',\n    '芯',\n    '牢',\n    '叛',\n    '蚀',\n    '奥',\n    '鸣',\n    '岭',\n    '羊',\n    '凭',\n    '串',\n    '塘',\n    '绘',\n    '酵',\n    '融',\n    '盆',\n    '锡',\n    '庙',\n    '筹',\n    '冻',\n    '辅',\n    '摄',\n    '袭',\n    '筋',\n    '拒',\n    '僚',\n    '旱',\n    '钾',\n    '鸟',\n    '漆',\n    '沈',\n    '眉',\n    '疏',\n    '添',\n    '棒',\n    '穗',\n    '硝',\n    '韩',\n    '逼',\n    '扭',\n    '侨',\n    '凉',\n    '挺',\n    '碗',\n    '栽',\n    '炒',\n    '杯',\n    '患',\n    '馏',\n    '劝',\n    '豪',\n    '辽',\n    '勃',\n    '鸿',\n    '旦',\n    '吏',\n    '拜',\n    '狗',\n    '埋',\n    '辊',\n    '掩',\n    '饮',\n    '搬',\n    '骂',\n    '辞',\n    '勾',\n    '扣',\n    '估',\n    '蒋',\n    '绒',\n    '雾',\n    '丈',\n    '朵',\n    '姆',\n    '拟',\n    '宇',\n    '辑',\n    '陕',\n    '雕',\n    '偿',\n    '蓄',\n    '崇',\n    '剪',\n    '倡',\n    '厅',\n    '咬',\n    '驶',\n    '薯',\n    '刷',\n    '斥',\n    '番',\n    '赋',\n    '奉',\n    '佛',\n    '浇',\n    '漫',\n    '曼',\n    '扇',\n    '钙',\n    '桃',\n    '扶',\n    '仔',\n    '返',\n    '俗',\n    '亏',\n    '腔',\n    '鞋',\n    '棱',\n    '覆',\n    '框',\n    '悄',\n    '叔',\n    '撞',\n    '骗',\n    '勘',\n    '旺',\n    '沸',\n    '孤',\n    '吐',\n    '孟',\n    '渠',\n    '屈',\n    '疾',\n    '妙',\n    '惜',\n    '仰',\n    '狠',\n    '胀',\n    '谐',\n    '抛',\n    '霉',\n    '桑',\n    '岗',\n    '嘛',\n    '衰',\n    '盗',\n    '渗',\n    '脏',\n    '赖',\n    '涌',\n    '甜',\n    '曹',\n    '阅',\n    '肌',\n    '哩',\n    '厉',\n    '烃',\n    '纬',\n    '毅',\n    '昨',\n    '伪',\n    '症',\n    '煮',\n    '叹',\n    '钉',\n    '搭',\n    '茎',\n    '笼',\n    '酷',\n    '偷',\n    '弓',\n    '锥',\n    '恒',\n    '杰',\n    '坑',\n    '鼻',\n    '翼',\n    '纶',\n    '叙',\n    '狱',\n    '逮',\n    '罐',\n    '络',\n    '棚',\n    '抑',\n    '膨',\n    '蔬',\n    '寺',\n    '骤',\n    '穆',\n    '冶',\n    '枯',\n    '册',\n    '尸',\n    '凸',\n    '绅',\n    '坯',\n    '牺',\n    '焰',\n    '轰',\n    '欣',\n    '晋',\n    '瘦',\n    '御',\n    '锭',\n    '锦',\n    '丧',\n    '旬',\n    '锻',\n    '垄',\n    '搜',\n    '扑',\n    '邀',\n    '亭',\n    '酯',\n    '迈',\n    '舒',\n    '脆',\n    '酶',\n    '闲',\n    '忧',\n    '酚',\n    '顽',\n    '羽',\n    '涨',\n    '卸',\n    '仗',\n    '陪',\n    '辟',\n    '惩',\n    '杭',\n    '姚',\n    '肚',\n    '捉',\n    '飘',\n    '漂',\n    '昆',\n    '欺',\n    '吾',\n    '郎',\n    '烷',\n    '汁',\n    '呵',\n    '饰',\n    '萧',\n    '雅',\n    '邮',\n    '迁',\n    '燕',\n    '撒',\n    '姻',\n    '赴',\n    '宴',\n    '烦',\n    '债',\n    '帐',\n    '斑',\n    '铃',\n    '旨',\n    '醇',\n    '董',\n    '饼',\n    '雏',\n    '姿',\n    '拌',\n    '傅',\n    '腹',\n    '妥',\n    '揉',\n    '贤',\n    '拆',\n    '歪',\n    '葡',\n    '胺',\n    '丢',\n    '浩',\n    '徽',\n    '昂',\n    '垫',\n    '挡',\n    '览',\n    '贪',\n    '慰',\n    '缴',\n    '汪',\n    '慌',\n    '冯',\n    '诺',\n    '姜',\n    '谊',\n    '凶',\n    '劣',\n    '诬',\n    '耀',\n    '昏',\n    '躺',\n    '盈',\n    '骑',\n    '乔',\n    '溪',\n    '丛',\n    '卢',\n    '抹',\n    '闷',\n    '咨',\n    '刮',\n    '驾',\n    '缆',\n    '悟',\n    '摘',\n    '铒',\n    '掷',\n    '颇',\n    '幻',\n    '柄',\n    '惠',\n    '惨',\n    '佳',\n    '仇',\n    '腊',\n    '窝',\n    '涤',\n    '剑',\n    '瞧',\n    '堡',\n    '泼',\n    '葱',\n    '罩',\n    '霍',\n    '捞',\n    '胎',\n    '苍',\n    '滨',\n    '俩',\n    '捅',\n    '湘',\n    '砍',\n    '霞',\n    '邵',\n    '萄',\n    '疯',\n    '淮',\n    '遂',\n    '熊',\n    '粪',\n    '烘',\n    '宿',\n    '档',\n    '戈',\n    '驳',\n    '嫂',\n    '裕',\n    '徙',\n    '箭',\n    '捐',\n    '肠',\n    '撑',\n    '晒',\n    '辨',\n    '殿',\n    '莲',\n    '摊',\n    '搅',\n    '酱',\n    '屏',\n    '疫',\n    '哀',\n    '蔡',\n    '堵',\n    '沫',\n    '皱',\n    '畅',\n    '叠',\n    '阁',\n    '莱',\n    '敲',\n    '辖',\n    '钩',\n    '痕',\n    '坝',\n    '巷',\n    '饿',\n    '祸',\n    '丘',\n    '玄',\n    '溜',\n    '曰',\n    '逻',\n    '彭',\n    '尝',\n    '卿',\n    '妨',\n    '艇',\n    '吞',\n    '韦',\n    '怨',\n    '矮',\n    '歇'\n];\n//# sourceMappingURL=chinese-simplified.js.map","// SPDX-License-Identifier: MIT\nexport const WORDLIST = [\n    'abandon',\n    'ability',\n    'able',\n    'about',\n    'above',\n    'absent',\n    'absorb',\n    'abstract',\n    'absurd',\n    'abuse',\n    'access',\n    'accident',\n    'account',\n    'accuse',\n    'achieve',\n    'acid',\n    'acoustic',\n    'acquire',\n    'across',\n    'act',\n    'action',\n    'actor',\n    'actress',\n    'actual',\n    'adapt',\n    'add',\n    'addict',\n    'address',\n    'adjust',\n    'admit',\n    'adult',\n    'advance',\n    'advice',\n    'aerobic',\n    'affair',\n    'afford',\n    'afraid',\n    'again',\n    'age',\n    'agent',\n    'agree',\n    'ahead',\n    'aim',\n    'air',\n    'airport',\n    'aisle',\n    'alarm',\n    'album',\n    'alcohol',\n    'alert',\n    'alien',\n    'all',\n    'alley',\n    'allow',\n    'almost',\n    'alone',\n    'alpha',\n    'already',\n    'also',\n    'alter',\n    'always',\n    'amateur',\n    'amazing',\n    'among',\n    'amount',\n    'amused',\n    'analyst',\n    'anchor',\n    'ancient',\n    'anger',\n    'angle',\n    'angry',\n    'animal',\n    'ankle',\n    'announce',\n    'annual',\n    'another',\n    'answer',\n    'antenna',\n    'antique',\n    'anxiety',\n    'any',\n    'apart',\n    'apology',\n    'appear',\n    'apple',\n    'approve',\n    'april',\n    'arch',\n    'arctic',\n    'area',\n    'arena',\n    'argue',\n    'arm',\n    'armed',\n    'armor',\n    'army',\n    'around',\n    'arrange',\n    'arrest',\n    'arrive',\n    'arrow',\n    'art',\n    'artefact',\n    'artist',\n    'artwork',\n    'ask',\n    'aspect',\n    'assault',\n    'asset',\n    'assist',\n    'assume',\n    'asthma',\n    'athlete',\n    'atom',\n    'attack',\n    'attend',\n    'attitude',\n    'attract',\n    'auction',\n    'audit',\n    'august',\n    'aunt',\n    'author',\n    'auto',\n    'autumn',\n    'average',\n    'avocado',\n    'avoid',\n    'awake',\n    'aware',\n    'away',\n    'awesome',\n    'awful',\n    'awkward',\n    'axis',\n    'baby',\n    'bachelor',\n    'bacon',\n    'badge',\n    'bag',\n    'balance',\n    'balcony',\n    'ball',\n    'bamboo',\n    'banana',\n    'banner',\n    'bar',\n    'barely',\n    'bargain',\n    'barrel',\n    'base',\n    'basic',\n    'basket',\n    'battle',\n    'beach',\n    'bean',\n    'beauty',\n    'because',\n    'become',\n    'beef',\n    'before',\n    'begin',\n    'behave',\n    'behind',\n    'believe',\n    'below',\n    'belt',\n    'bench',\n    'benefit',\n    'best',\n    'betray',\n    'better',\n    'between',\n    'beyond',\n    'bicycle',\n    'bid',\n    'bike',\n    'bind',\n    'biology',\n    'bird',\n    'birth',\n    'bitter',\n    'black',\n    'blade',\n    'blame',\n    'blanket',\n    'blast',\n    'bleak',\n    'bless',\n    'blind',\n    'blood',\n    'blossom',\n    'blouse',\n    'blue',\n    'blur',\n    'blush',\n    'board',\n    'boat',\n    'body',\n    'boil',\n    'bomb',\n    'bone',\n    'bonus',\n    'book',\n    'boost',\n    'border',\n    'boring',\n    'borrow',\n    'boss',\n    'bottom',\n    'bounce',\n    'box',\n    'boy',\n    'bracket',\n    'brain',\n    'brand',\n    'brass',\n    'brave',\n    'bread',\n    'breeze',\n    'brick',\n    'bridge',\n    'brief',\n    'bright',\n    'bring',\n    'brisk',\n    'broccoli',\n    'broken',\n    'bronze',\n    'broom',\n    'brother',\n    'brown',\n    'brush',\n    'bubble',\n    'buddy',\n    'budget',\n    'buffalo',\n    'build',\n    'bulb',\n    'bulk',\n    'bullet',\n    'bundle',\n    'bunker',\n    'burden',\n    'burger',\n    'burst',\n    'bus',\n    'business',\n    'busy',\n    'butter',\n    'buyer',\n    'buzz',\n    'cabbage',\n    'cabin',\n    'cable',\n    'cactus',\n    'cage',\n    'cake',\n    'call',\n    'calm',\n    'camera',\n    'camp',\n    'can',\n    'canal',\n    'cancel',\n    'candy',\n    'cannon',\n    'canoe',\n    'canvas',\n    'canyon',\n    'capable',\n    'capital',\n    'captain',\n    'car',\n    'carbon',\n    'card',\n    'cargo',\n    'carpet',\n    'carry',\n    'cart',\n    'case',\n    'cash',\n    'casino',\n    'castle',\n    'casual',\n    'cat',\n    'catalog',\n    'catch',\n    'category',\n    'cattle',\n    'caught',\n    'cause',\n    'caution',\n    'cave',\n    'ceiling',\n    'celery',\n    'cement',\n    'census',\n    'century',\n    'cereal',\n    'certain',\n    'chair',\n    'chalk',\n    'champion',\n    'change',\n    'chaos',\n    'chapter',\n    'charge',\n    'chase',\n    'chat',\n    'cheap',\n    'check',\n    'cheese',\n    'chef',\n    'cherry',\n    'chest',\n    'chicken',\n    'chief',\n    'child',\n    'chimney',\n    'choice',\n    'choose',\n    'chronic',\n    'chuckle',\n    'chunk',\n    'churn',\n    'cigar',\n    'cinnamon',\n    'circle',\n    'citizen',\n    'city',\n    'civil',\n    'claim',\n    'clap',\n    'clarify',\n    'claw',\n    'clay',\n    'clean',\n    'clerk',\n    'clever',\n    'click',\n    'client',\n    'cliff',\n    'climb',\n    'clinic',\n    'clip',\n    'clock',\n    'clog',\n    'close',\n    'cloth',\n    'cloud',\n    'clown',\n    'club',\n    'clump',\n    'cluster',\n    'clutch',\n    'coach',\n    'coast',\n    'coconut',\n    'code',\n    'coffee',\n    'coil',\n    'coin',\n    'collect',\n    'color',\n    'column',\n    'combine',\n    'come',\n    'comfort',\n    'comic',\n    'common',\n    'company',\n    'concert',\n    'conduct',\n    'confirm',\n    'congress',\n    'connect',\n    'consider',\n    'control',\n    'convince',\n    'cook',\n    'cool',\n    'copper',\n    'copy',\n    'coral',\n    'core',\n    'corn',\n    'correct',\n    'cost',\n    'cotton',\n    'couch',\n    'country',\n    'couple',\n    'course',\n    'cousin',\n    'cover',\n    'coyote',\n    'crack',\n    'cradle',\n    'craft',\n    'cram',\n    'crane',\n    'crash',\n    'crater',\n    'crawl',\n    'crazy',\n    'cream',\n    'credit',\n    'creek',\n    'crew',\n    'cricket',\n    'crime',\n    'crisp',\n    'critic',\n    'crop',\n    'cross',\n    'crouch',\n    'crowd',\n    'crucial',\n    'cruel',\n    'cruise',\n    'crumble',\n    'crunch',\n    'crush',\n    'cry',\n    'crystal',\n    'cube',\n    'culture',\n    'cup',\n    'cupboard',\n    'curious',\n    'current',\n    'curtain',\n    'curve',\n    'cushion',\n    'custom',\n    'cute',\n    'cycle',\n    'dad',\n    'damage',\n    'damp',\n    'dance',\n    'danger',\n    'daring',\n    'dash',\n    'daughter',\n    'dawn',\n    'day',\n    'deal',\n    'debate',\n    'debris',\n    'decade',\n    'december',\n    'decide',\n    'decline',\n    'decorate',\n    'decrease',\n    'deer',\n    'defense',\n    'define',\n    'defy',\n    'degree',\n    'delay',\n    'deliver',\n    'demand',\n    'demise',\n    'denial',\n    'dentist',\n    'deny',\n    'depart',\n    'depend',\n    'deposit',\n    'depth',\n    'deputy',\n    'derive',\n    'describe',\n    'desert',\n    'design',\n    'desk',\n    'despair',\n    'destroy',\n    'detail',\n    'detect',\n    'develop',\n    'device',\n    'devote',\n    'diagram',\n    'dial',\n    'diamond',\n    'diary',\n    'dice',\n    'diesel',\n    'diet',\n    'differ',\n    'digital',\n    'dignity',\n    'dilemma',\n    'dinner',\n    'dinosaur',\n    'direct',\n    'dirt',\n    'disagree',\n    'discover',\n    'disease',\n    'dish',\n    'dismiss',\n    'disorder',\n    'display',\n    'distance',\n    'divert',\n    'divide',\n    'divorce',\n    'dizzy',\n    'doctor',\n    'document',\n    'dog',\n    'doll',\n    'dolphin',\n    'domain',\n    'donate',\n    'donkey',\n    'donor',\n    'door',\n    'dose',\n    'double',\n    'dove',\n    'draft',\n    'dragon',\n    'drama',\n    'drastic',\n    'draw',\n    'dream',\n    'dress',\n    'drift',\n    'drill',\n    'drink',\n    'drip',\n    'drive',\n    'drop',\n    'drum',\n    'dry',\n    'duck',\n    'dumb',\n    'dune',\n    'during',\n    'dust',\n    'dutch',\n    'duty',\n    'dwarf',\n    'dynamic',\n    'eager',\n    'eagle',\n    'early',\n    'earn',\n    'earth',\n    'easily',\n    'east',\n    'easy',\n    'echo',\n    'ecology',\n    'economy',\n    'edge',\n    'edit',\n    'educate',\n    'effort',\n    'egg',\n    'eight',\n    'either',\n    'elbow',\n    'elder',\n    'electric',\n    'elegant',\n    'element',\n    'elephant',\n    'elevator',\n    'elite',\n    'else',\n    'embark',\n    'embody',\n    'embrace',\n    'emerge',\n    'emotion',\n    'employ',\n    'empower',\n    'empty',\n    'enable',\n    'enact',\n    'end',\n    'endless',\n    'endorse',\n    'enemy',\n    'energy',\n    'enforce',\n    'engage',\n    'engine',\n    'enhance',\n    'enjoy',\n    'enlist',\n    'enough',\n    'enrich',\n    'enroll',\n    'ensure',\n    'enter',\n    'entire',\n    'entry',\n    'envelope',\n    'episode',\n    'equal',\n    'equip',\n    'era',\n    'erase',\n    'erode',\n    'erosion',\n    'error',\n    'erupt',\n    'escape',\n    'essay',\n    'essence',\n    'estate',\n    'eternal',\n    'ethics',\n    'evidence',\n    'evil',\n    'evoke',\n    'evolve',\n    'exact',\n    'example',\n    'excess',\n    'exchange',\n    'excite',\n    'exclude',\n    'excuse',\n    'execute',\n    'exercise',\n    'exhaust',\n    'exhibit',\n    'exile',\n    'exist',\n    'exit',\n    'exotic',\n    'expand',\n    'expect',\n    'expire',\n    'explain',\n    'expose',\n    'express',\n    'extend',\n    'extra',\n    'eye',\n    'eyebrow',\n    'fabric',\n    'face',\n    'faculty',\n    'fade',\n    'faint',\n    'faith',\n    'fall',\n    'false',\n    'fame',\n    'family',\n    'famous',\n    'fan',\n    'fancy',\n    'fantasy',\n    'farm',\n    'fashion',\n    'fat',\n    'fatal',\n    'father',\n    'fatigue',\n    'fault',\n    'favorite',\n    'feature',\n    'february',\n    'federal',\n    'fee',\n    'feed',\n    'feel',\n    'female',\n    'fence',\n    'festival',\n    'fetch',\n    'fever',\n    'few',\n    'fiber',\n    'fiction',\n    'field',\n    'figure',\n    'file',\n    'film',\n    'filter',\n    'final',\n    'find',\n    'fine',\n    'finger',\n    'finish',\n    'fire',\n    'firm',\n    'first',\n    'fiscal',\n    'fish',\n    'fit',\n    'fitness',\n    'fix',\n    'flag',\n    'flame',\n    'flash',\n    'flat',\n    'flavor',\n    'flee',\n    'flight',\n    'flip',\n    'float',\n    'flock',\n    'floor',\n    'flower',\n    'fluid',\n    'flush',\n    'fly',\n    'foam',\n    'focus',\n    'fog',\n    'foil',\n    'fold',\n    'follow',\n    'food',\n    'foot',\n    'force',\n    'forest',\n    'forget',\n    'fork',\n    'fortune',\n    'forum',\n    'forward',\n    'fossil',\n    'foster',\n    'found',\n    'fox',\n    'fragile',\n    'frame',\n    'frequent',\n    'fresh',\n    'friend',\n    'fringe',\n    'frog',\n    'front',\n    'frost',\n    'frown',\n    'frozen',\n    'fruit',\n    'fuel',\n    'fun',\n    'funny',\n    'furnace',\n    'fury',\n    'future',\n    'gadget',\n    'gain',\n    'galaxy',\n    'gallery',\n    'game',\n    'gap',\n    'garage',\n    'garbage',\n    'garden',\n    'garlic',\n    'garment',\n    'gas',\n    'gasp',\n    'gate',\n    'gather',\n    'gauge',\n    'gaze',\n    'general',\n    'genius',\n    'genre',\n    'gentle',\n    'genuine',\n    'gesture',\n    'ghost',\n    'giant',\n    'gift',\n    'giggle',\n    'ginger',\n    'giraffe',\n    'girl',\n    'give',\n    'glad',\n    'glance',\n    'glare',\n    'glass',\n    'glide',\n    'glimpse',\n    'globe',\n    'gloom',\n    'glory',\n    'glove',\n    'glow',\n    'glue',\n    'goat',\n    'goddess',\n    'gold',\n    'good',\n    'goose',\n    'gorilla',\n    'gospel',\n    'gossip',\n    'govern',\n    'gown',\n    'grab',\n    'grace',\n    'grain',\n    'grant',\n    'grape',\n    'grass',\n    'gravity',\n    'great',\n    'green',\n    'grid',\n    'grief',\n    'grit',\n    'grocery',\n    'group',\n    'grow',\n    'grunt',\n    'guard',\n    'guess',\n    'guide',\n    'guilt',\n    'guitar',\n    'gun',\n    'gym',\n    'habit',\n    'hair',\n    'half',\n    'hammer',\n    'hamster',\n    'hand',\n    'happy',\n    'harbor',\n    'hard',\n    'harsh',\n    'harvest',\n    'hat',\n    'have',\n    'hawk',\n    'hazard',\n    'head',\n    'health',\n    'heart',\n    'heavy',\n    'hedgehog',\n    'height',\n    'hello',\n    'helmet',\n    'help',\n    'hen',\n    'hero',\n    'hidden',\n    'high',\n    'hill',\n    'hint',\n    'hip',\n    'hire',\n    'history',\n    'hobby',\n    'hockey',\n    'hold',\n    'hole',\n    'holiday',\n    'hollow',\n    'home',\n    'honey',\n    'hood',\n    'hope',\n    'horn',\n    'horror',\n    'horse',\n    'hospital',\n    'host',\n    'hotel',\n    'hour',\n    'hover',\n    'hub',\n    'huge',\n    'human',\n    'humble',\n    'humor',\n    'hundred',\n    'hungry',\n    'hunt',\n    'hurdle',\n    'hurry',\n    'hurt',\n    'husband',\n    'hybrid',\n    'ice',\n    'icon',\n    'idea',\n    'identify',\n    'idle',\n    'ignore',\n    'ill',\n    'illegal',\n    'illness',\n    'image',\n    'imitate',\n    'immense',\n    'immune',\n    'impact',\n    'impose',\n    'improve',\n    'impulse',\n    'inch',\n    'include',\n    'income',\n    'increase',\n    'index',\n    'indicate',\n    'indoor',\n    'industry',\n    'infant',\n    'inflict',\n    'inform',\n    'inhale',\n    'inherit',\n    'initial',\n    'inject',\n    'injury',\n    'inmate',\n    'inner',\n    'innocent',\n    'input',\n    'inquiry',\n    'insane',\n    'insect',\n    'inside',\n    'inspire',\n    'install',\n    'intact',\n    'interest',\n    'into',\n    'invest',\n    'invite',\n    'involve',\n    'iron',\n    'island',\n    'isolate',\n    'issue',\n    'item',\n    'ivory',\n    'jacket',\n    'jaguar',\n    'jar',\n    'jazz',\n    'jealous',\n    'jeans',\n    'jelly',\n    'jewel',\n    'job',\n    'join',\n    'joke',\n    'journey',\n    'joy',\n    'judge',\n    'juice',\n    'jump',\n    'jungle',\n    'junior',\n    'junk',\n    'just',\n    'kangaroo',\n    'keen',\n    'keep',\n    'ketchup',\n    'key',\n    'kick',\n    'kid',\n    'kidney',\n    'kind',\n    'kingdom',\n    'kiss',\n    'kit',\n    'kitchen',\n    'kite',\n    'kitten',\n    'kiwi',\n    'knee',\n    'knife',\n    'knock',\n    'know',\n    'lab',\n    'label',\n    'labor',\n    'ladder',\n    'lady',\n    'lake',\n    'lamp',\n    'language',\n    'laptop',\n    'large',\n    'later',\n    'latin',\n    'laugh',\n    'laundry',\n    'lava',\n    'law',\n    'lawn',\n    'lawsuit',\n    'layer',\n    'lazy',\n    'leader',\n    'leaf',\n    'learn',\n    'leave',\n    'lecture',\n    'left',\n    'leg',\n    'legal',\n    'legend',\n    'leisure',\n    'lemon',\n    'lend',\n    'length',\n    'lens',\n    'leopard',\n    'lesson',\n    'letter',\n    'level',\n    'liar',\n    'liberty',\n    'library',\n    'license',\n    'life',\n    'lift',\n    'light',\n    'like',\n    'limb',\n    'limit',\n    'link',\n    'lion',\n    'liquid',\n    'list',\n    'little',\n    'live',\n    'lizard',\n    'load',\n    'loan',\n    'lobster',\n    'local',\n    'lock',\n    'logic',\n    'lonely',\n    'long',\n    'loop',\n    'lottery',\n    'loud',\n    'lounge',\n    'love',\n    'loyal',\n    'lucky',\n    'luggage',\n    'lumber',\n    'lunar',\n    'lunch',\n    'luxury',\n    'lyrics',\n    'machine',\n    'mad',\n    'magic',\n    'magnet',\n    'maid',\n    'mail',\n    'main',\n    'major',\n    'make',\n    'mammal',\n    'man',\n    'manage',\n    'mandate',\n    'mango',\n    'mansion',\n    'manual',\n    'maple',\n    'marble',\n    'march',\n    'margin',\n    'marine',\n    'market',\n    'marriage',\n    'mask',\n    'mass',\n    'master',\n    'match',\n    'material',\n    'math',\n    'matrix',\n    'matter',\n    'maximum',\n    'maze',\n    'meadow',\n    'mean',\n    'measure',\n    'meat',\n    'mechanic',\n    'medal',\n    'media',\n    'melody',\n    'melt',\n    'member',\n    'memory',\n    'mention',\n    'menu',\n    'mercy',\n    'merge',\n    'merit',\n    'merry',\n    'mesh',\n    'message',\n    'metal',\n    'method',\n    'middle',\n    'midnight',\n    'milk',\n    'million',\n    'mimic',\n    'mind',\n    'minimum',\n    'minor',\n    'minute',\n    'miracle',\n    'mirror',\n    'misery',\n    'miss',\n    'mistake',\n    'mix',\n    'mixed',\n    'mixture',\n    'mobile',\n    'model',\n    'modify',\n    'mom',\n    'moment',\n    'monitor',\n    'monkey',\n    'monster',\n    'month',\n    'moon',\n    'moral',\n    'more',\n    'morning',\n    'mosquito',\n    'mother',\n    'motion',\n    'motor',\n    'mountain',\n    'mouse',\n    'move',\n    'movie',\n    'much',\n    'muffin',\n    'mule',\n    'multiply',\n    'muscle',\n    'museum',\n    'mushroom',\n    'music',\n    'must',\n    'mutual',\n    'myself',\n    'mystery',\n    'myth',\n    'naive',\n    'name',\n    'napkin',\n    'narrow',\n    'nasty',\n    'nation',\n    'nature',\n    'near',\n    'neck',\n    'need',\n    'negative',\n    'neglect',\n    'neither',\n    'nephew',\n    'nerve',\n    'nest',\n    'net',\n    'network',\n    'neutral',\n    'never',\n    'news',\n    'next',\n    'nice',\n    'night',\n    'noble',\n    'noise',\n    'nominee',\n    'noodle',\n    'normal',\n    'north',\n    'nose',\n    'notable',\n    'note',\n    'nothing',\n    'notice',\n    'novel',\n    'now',\n    'nuclear',\n    'number',\n    'nurse',\n    'nut',\n    'oak',\n    'obey',\n    'object',\n    'oblige',\n    'obscure',\n    'observe',\n    'obtain',\n    'obvious',\n    'occur',\n    'ocean',\n    'october',\n    'odor',\n    'off',\n    'offer',\n    'office',\n    'often',\n    'oil',\n    'okay',\n    'old',\n    'olive',\n    'olympic',\n    'omit',\n    'once',\n    'one',\n    'onion',\n    'online',\n    'only',\n    'open',\n    'opera',\n    'opinion',\n    'oppose',\n    'option',\n    'orange',\n    'orbit',\n    'orchard',\n    'order',\n    'ordinary',\n    'organ',\n    'orient',\n    'original',\n    'orphan',\n    'ostrich',\n    'other',\n    'outdoor',\n    'outer',\n    'output',\n    'outside',\n    'oval',\n    'oven',\n    'over',\n    'own',\n    'owner',\n    'oxygen',\n    'oyster',\n    'ozone',\n    'pact',\n    'paddle',\n    'page',\n    'pair',\n    'palace',\n    'palm',\n    'panda',\n    'panel',\n    'panic',\n    'panther',\n    'paper',\n    'parade',\n    'parent',\n    'park',\n    'parrot',\n    'party',\n    'pass',\n    'patch',\n    'path',\n    'patient',\n    'patrol',\n    'pattern',\n    'pause',\n    'pave',\n    'payment',\n    'peace',\n    'peanut',\n    'pear',\n    'peasant',\n    'pelican',\n    'pen',\n    'penalty',\n    'pencil',\n    'people',\n    'pepper',\n    'perfect',\n    'permit',\n    'person',\n    'pet',\n    'phone',\n    'photo',\n    'phrase',\n    'physical',\n    'piano',\n    'picnic',\n    'picture',\n    'piece',\n    'pig',\n    'pigeon',\n    'pill',\n    'pilot',\n    'pink',\n    'pioneer',\n    'pipe',\n    'pistol',\n    'pitch',\n    'pizza',\n    'place',\n    'planet',\n    'plastic',\n    'plate',\n    'play',\n    'please',\n    'pledge',\n    'pluck',\n    'plug',\n    'plunge',\n    'poem',\n    'poet',\n    'point',\n    'polar',\n    'pole',\n    'police',\n    'pond',\n    'pony',\n    'pool',\n    'popular',\n    'portion',\n    'position',\n    'possible',\n    'post',\n    'potato',\n    'pottery',\n    'poverty',\n    'powder',\n    'power',\n    'practice',\n    'praise',\n    'predict',\n    'prefer',\n    'prepare',\n    'present',\n    'pretty',\n    'prevent',\n    'price',\n    'pride',\n    'primary',\n    'print',\n    'priority',\n    'prison',\n    'private',\n    'prize',\n    'problem',\n    'process',\n    'produce',\n    'profit',\n    'program',\n    'project',\n    'promote',\n    'proof',\n    'property',\n    'prosper',\n    'protect',\n    'proud',\n    'provide',\n    'public',\n    'pudding',\n    'pull',\n    'pulp',\n    'pulse',\n    'pumpkin',\n    'punch',\n    'pupil',\n    'puppy',\n    'purchase',\n    'purity',\n    'purpose',\n    'purse',\n    'push',\n    'put',\n    'puzzle',\n    'pyramid',\n    'quality',\n    'quantum',\n    'quarter',\n    'question',\n    'quick',\n    'quit',\n    'quiz',\n    'quote',\n    'rabbit',\n    'raccoon',\n    'race',\n    'rack',\n    'radar',\n    'radio',\n    'rail',\n    'rain',\n    'raise',\n    'rally',\n    'ramp',\n    'ranch',\n    'random',\n    'range',\n    'rapid',\n    'rare',\n    'rate',\n    'rather',\n    'raven',\n    'raw',\n    'razor',\n    'ready',\n    'real',\n    'reason',\n    'rebel',\n    'rebuild',\n    'recall',\n    'receive',\n    'recipe',\n    'record',\n    'recycle',\n    'reduce',\n    'reflect',\n    'reform',\n    'refuse',\n    'region',\n    'regret',\n    'regular',\n    'reject',\n    'relax',\n    'release',\n    'relief',\n    'rely',\n    'remain',\n    'remember',\n    'remind',\n    'remove',\n    'render',\n    'renew',\n    'rent',\n    'reopen',\n    'repair',\n    'repeat',\n    'replace',\n    'report',\n    'require',\n    'rescue',\n    'resemble',\n    'resist',\n    'resource',\n    'response',\n    'result',\n    'retire',\n    'retreat',\n    'return',\n    'reunion',\n    'reveal',\n    'review',\n    'reward',\n    'rhythm',\n    'rib',\n    'ribbon',\n    'rice',\n    'rich',\n    'ride',\n    'ridge',\n    'rifle',\n    'right',\n    'rigid',\n    'ring',\n    'riot',\n    'ripple',\n    'risk',\n    'ritual',\n    'rival',\n    'river',\n    'road',\n    'roast',\n    'robot',\n    'robust',\n    'rocket',\n    'romance',\n    'roof',\n    'rookie',\n    'room',\n    'rose',\n    'rotate',\n    'rough',\n    'round',\n    'route',\n    'royal',\n    'rubber',\n    'rude',\n    'rug',\n    'rule',\n    'run',\n    'runway',\n    'rural',\n    'sad',\n    'saddle',\n    'sadness',\n    'safe',\n    'sail',\n    'salad',\n    'salmon',\n    'salon',\n    'salt',\n    'salute',\n    'same',\n    'sample',\n    'sand',\n    'satisfy',\n    'satoshi',\n    'sauce',\n    'sausage',\n    'save',\n    'say',\n    'scale',\n    'scan',\n    'scare',\n    'scatter',\n    'scene',\n    'scheme',\n    'school',\n    'science',\n    'scissors',\n    'scorpion',\n    'scout',\n    'scrap',\n    'screen',\n    'script',\n    'scrub',\n    'sea',\n    'search',\n    'season',\n    'seat',\n    'second',\n    'secret',\n    'section',\n    'security',\n    'seed',\n    'seek',\n    'segment',\n    'select',\n    'sell',\n    'seminar',\n    'senior',\n    'sense',\n    'sentence',\n    'series',\n    'service',\n    'session',\n    'settle',\n    'setup',\n    'seven',\n    'shadow',\n    'shaft',\n    'shallow',\n    'share',\n    'shed',\n    'shell',\n    'sheriff',\n    'shield',\n    'shift',\n    'shine',\n    'ship',\n    'shiver',\n    'shock',\n    'shoe',\n    'shoot',\n    'shop',\n    'short',\n    'shoulder',\n    'shove',\n    'shrimp',\n    'shrug',\n    'shuffle',\n    'shy',\n    'sibling',\n    'sick',\n    'side',\n    'siege',\n    'sight',\n    'sign',\n    'silent',\n    'silk',\n    'silly',\n    'silver',\n    'similar',\n    'simple',\n    'since',\n    'sing',\n    'siren',\n    'sister',\n    'situate',\n    'six',\n    'size',\n    'skate',\n    'sketch',\n    'ski',\n    'skill',\n    'skin',\n    'skirt',\n    'skull',\n    'slab',\n    'slam',\n    'sleep',\n    'slender',\n    'slice',\n    'slide',\n    'slight',\n    'slim',\n    'slogan',\n    'slot',\n    'slow',\n    'slush',\n    'small',\n    'smart',\n    'smile',\n    'smoke',\n    'smooth',\n    'snack',\n    'snake',\n    'snap',\n    'sniff',\n    'snow',\n    'soap',\n    'soccer',\n    'social',\n    'sock',\n    'soda',\n    'soft',\n    'solar',\n    'soldier',\n    'solid',\n    'solution',\n    'solve',\n    'someone',\n    'song',\n    'soon',\n    'sorry',\n    'sort',\n    'soul',\n    'sound',\n    'soup',\n    'source',\n    'south',\n    'space',\n    'spare',\n    'spatial',\n    'spawn',\n    'speak',\n    'special',\n    'speed',\n    'spell',\n    'spend',\n    'sphere',\n    'spice',\n    'spider',\n    'spike',\n    'spin',\n    'spirit',\n    'split',\n    'spoil',\n    'sponsor',\n    'spoon',\n    'sport',\n    'spot',\n    'spray',\n    'spread',\n    'spring',\n    'spy',\n    'square',\n    'squeeze',\n    'squirrel',\n    'stable',\n    'stadium',\n    'staff',\n    'stage',\n    'stairs',\n    'stamp',\n    'stand',\n    'start',\n    'state',\n    'stay',\n    'steak',\n    'steel',\n    'stem',\n    'step',\n    'stereo',\n    'stick',\n    'still',\n    'sting',\n    'stock',\n    'stomach',\n    'stone',\n    'stool',\n    'story',\n    'stove',\n    'strategy',\n    'street',\n    'strike',\n    'strong',\n    'struggle',\n    'student',\n    'stuff',\n    'stumble',\n    'style',\n    'subject',\n    'submit',\n    'subway',\n    'success',\n    'such',\n    'sudden',\n    'suffer',\n    'sugar',\n    'suggest',\n    'suit',\n    'summer',\n    'sun',\n    'sunny',\n    'sunset',\n    'super',\n    'supply',\n    'supreme',\n    'sure',\n    'surface',\n    'surge',\n    'surprise',\n    'surround',\n    'survey',\n    'suspect',\n    'sustain',\n    'swallow',\n    'swamp',\n    'swap',\n    'swarm',\n    'swear',\n    'sweet',\n    'swift',\n    'swim',\n    'swing',\n    'switch',\n    'sword',\n    'symbol',\n    'symptom',\n    'syrup',\n    'system',\n    'table',\n    'tackle',\n    'tag',\n    'tail',\n    'talent',\n    'talk',\n    'tank',\n    'tape',\n    'target',\n    'task',\n    'taste',\n    'tattoo',\n    'taxi',\n    'teach',\n    'team',\n    'tell',\n    'ten',\n    'tenant',\n    'tennis',\n    'tent',\n    'term',\n    'test',\n    'text',\n    'thank',\n    'that',\n    'theme',\n    'then',\n    'theory',\n    'there',\n    'they',\n    'thing',\n    'this',\n    'thought',\n    'three',\n    'thrive',\n    'throw',\n    'thumb',\n    'thunder',\n    'ticket',\n    'tide',\n    'tiger',\n    'tilt',\n    'timber',\n    'time',\n    'tiny',\n    'tip',\n    'tired',\n    'tissue',\n    'title',\n    'toast',\n    'tobacco',\n    'today',\n    'toddler',\n    'toe',\n    'together',\n    'toilet',\n    'token',\n    'tomato',\n    'tomorrow',\n    'tone',\n    'tongue',\n    'tonight',\n    'tool',\n    'tooth',\n    'top',\n    'topic',\n    'topple',\n    'torch',\n    'tornado',\n    'tortoise',\n    'toss',\n    'total',\n    'tourist',\n    'toward',\n    'tower',\n    'town',\n    'toy',\n    'track',\n    'trade',\n    'traffic',\n    'tragic',\n    'train',\n    'transfer',\n    'trap',\n    'trash',\n    'travel',\n    'tray',\n    'treat',\n    'tree',\n    'trend',\n    'trial',\n    'tribe',\n    'trick',\n    'trigger',\n    'trim',\n    'trip',\n    'trophy',\n    'trouble',\n    'truck',\n    'true',\n    'truly',\n    'trumpet',\n    'trust',\n    'truth',\n    'try',\n    'tube',\n    'tuition',\n    'tumble',\n    'tuna',\n    'tunnel',\n    'turkey',\n    'turn',\n    'turtle',\n    'twelve',\n    'twenty',\n    'twice',\n    'twin',\n    'twist',\n    'two',\n    'type',\n    'typical',\n    'ugly',\n    'umbrella',\n    'unable',\n    'unaware',\n    'uncle',\n    'uncover',\n    'under',\n    'undo',\n    'unfair',\n    'unfold',\n    'unhappy',\n    'uniform',\n    'unique',\n    'unit',\n    'universe',\n    'unknown',\n    'unlock',\n    'until',\n    'unusual',\n    'unveil',\n    'update',\n    'upgrade',\n    'uphold',\n    'upon',\n    'upper',\n    'upset',\n    'urban',\n    'urge',\n    'usage',\n    'use',\n    'used',\n    'useful',\n    'useless',\n    'usual',\n    'utility',\n    'vacant',\n    'vacuum',\n    'vague',\n    'valid',\n    'valley',\n    'valve',\n    'van',\n    'vanish',\n    'vapor',\n    'various',\n    'vast',\n    'vault',\n    'vehicle',\n    'velvet',\n    'vendor',\n    'venture',\n    'venue',\n    'verb',\n    'verify',\n    'version',\n    'very',\n    'vessel',\n    'veteran',\n    'viable',\n    'vibrant',\n    'vicious',\n    'victory',\n    'video',\n    'view',\n    'village',\n    'vintage',\n    'violin',\n    'virtual',\n    'virus',\n    'visa',\n    'visit',\n    'visual',\n    'vital',\n    'vivid',\n    'vocal',\n    'voice',\n    'void',\n    'volcano',\n    'volume',\n    'vote',\n    'voyage',\n    'wage',\n    'wagon',\n    'wait',\n    'walk',\n    'wall',\n    'walnut',\n    'want',\n    'warfare',\n    'warm',\n    'warrior',\n    'wash',\n    'wasp',\n    'waste',\n    'water',\n    'wave',\n    'way',\n    'wealth',\n    'weapon',\n    'wear',\n    'weasel',\n    'weather',\n    'web',\n    'wedding',\n    'weekend',\n    'weird',\n    'welcome',\n    'west',\n    'wet',\n    'whale',\n    'what',\n    'wheat',\n    'wheel',\n    'when',\n    'where',\n    'whip',\n    'whisper',\n    'wide',\n    'width',\n    'wife',\n    'wild',\n    'will',\n    'win',\n    'window',\n    'wine',\n    'wing',\n    'wink',\n    'winner',\n    'winter',\n    'wire',\n    'wisdom',\n    'wise',\n    'wish',\n    'witness',\n    'wolf',\n    'woman',\n    'wonder',\n    'wood',\n    'wool',\n    'word',\n    'work',\n    'world',\n    'worry',\n    'worth',\n    'wrap',\n    'wreck',\n    'wrestle',\n    'wrist',\n    'write',\n    'wrong',\n    'yard',\n    'year',\n    'yellow',\n    'you',\n    'young',\n    'youth',\n    'zebra',\n    'zero',\n    'zone',\n    'zoo'\n];\n//# sourceMappingURL=english.js.map","// SPDX-License-Identifier: MIT\nexport const WORDLIST = [\n    'abacate',\n    'abaixo',\n    'abalar',\n    'abater',\n    'abduzir',\n    'abelha',\n    'aberto',\n    'abismo',\n    'abotoar',\n    'abranger',\n    'abreviar',\n    'abrigar',\n    'abrupto',\n    'absinto',\n    'absoluto',\n    'absurdo',\n    'abutre',\n    'acabado',\n    'acalmar',\n    'acampar',\n    'acanhar',\n    'acaso',\n    'aceitar',\n    'acelerar',\n    'acenar',\n    'acervo',\n    'acessar',\n    'acetona',\n    'achatar',\n    'acidez',\n    'acima',\n    'acionado',\n    'acirrar',\n    'aclamar',\n    'aclive',\n    'acolhida',\n    'acomodar',\n    'acoplar',\n    'acordar',\n    'acumular',\n    'acusador',\n    'adaptar',\n    'adega',\n    'adentro',\n    'adepto',\n    'adequar',\n    'aderente',\n    'adesivo',\n    'adeus',\n    'adiante',\n    'aditivo',\n    'adjetivo',\n    'adjunto',\n    'admirar',\n    'adorar',\n    'adquirir',\n    'adubo',\n    'adverso',\n    'advogado',\n    'aeronave',\n    'afastar',\n    'aferir',\n    'afetivo',\n    'afinador',\n    'afivelar',\n    'aflito',\n    'afluente',\n    'afrontar',\n    'agachar',\n    'agarrar',\n    'agasalho',\n    'agenciar',\n    'agilizar',\n    'agiota',\n    'agitado',\n    'agora',\n    'agradar',\n    'agreste',\n    'agrupar',\n    'aguardar',\n    'agulha',\n    'ajoelhar',\n    'ajudar',\n    'ajustar',\n    'alameda',\n    'alarme',\n    'alastrar',\n    'alavanca',\n    'albergue',\n    'albino',\n    'alcatra',\n    'aldeia',\n    'alecrim',\n    'alegria',\n    'alertar',\n    'alface',\n    'alfinete',\n    'algum',\n    'alheio',\n    'aliar',\n    'alicate',\n    'alienar',\n    'alinhar',\n    'aliviar',\n    'almofada',\n    'alocar',\n    'alpiste',\n    'alterar',\n    'altitude',\n    'alucinar',\n    'alugar',\n    'aluno',\n    'alusivo',\n    'alvo',\n    'amaciar',\n    'amador',\n    'amarelo',\n    'amassar',\n    'ambas',\n    'ambiente',\n    'ameixa',\n    'amenizar',\n    'amido',\n    'amistoso',\n    'amizade',\n    'amolador',\n    'amontoar',\n    'amoroso',\n    'amostra',\n    'amparar',\n    'ampliar',\n    'ampola',\n    'anagrama',\n    'analisar',\n    'anarquia',\n    'anatomia',\n    'andaime',\n    'anel',\n    'anexo',\n    'angular',\n    'animar',\n    'anjo',\n    'anomalia',\n    'anotado',\n    'ansioso',\n    'anterior',\n    'anuidade',\n    'anunciar',\n    'anzol',\n    'apagador',\n    'apalpar',\n    'apanhado',\n    'apego',\n    'apelido',\n    'apertada',\n    'apesar',\n    'apetite',\n    'apito',\n    'aplauso',\n    'aplicada',\n    'apoio',\n    'apontar',\n    'aposta',\n    'aprendiz',\n    'aprovar',\n    'aquecer',\n    'arame',\n    'aranha',\n    'arara',\n    'arcada',\n    'ardente',\n    'areia',\n    'arejar',\n    'arenito',\n    'aresta',\n    'argiloso',\n    'argola',\n    'arma',\n    'arquivo',\n    'arraial',\n    'arrebate',\n    'arriscar',\n    'arroba',\n    'arrumar',\n    'arsenal',\n    'arterial',\n    'artigo',\n    'arvoredo',\n    'asfaltar',\n    'asilado',\n    'aspirar',\n    'assador',\n    'assinar',\n    'assoalho',\n    'assunto',\n    'astral',\n    'atacado',\n    'atadura',\n    'atalho',\n    'atarefar',\n    'atear',\n    'atender',\n    'aterro',\n    'ateu',\n    'atingir',\n    'atirador',\n    'ativo',\n    'atoleiro',\n    'atracar',\n    'atrevido',\n    'atriz',\n    'atual',\n    'atum',\n    'auditor',\n    'aumentar',\n    'aura',\n    'aurora',\n    'autismo',\n    'autoria',\n    'autuar',\n    'avaliar',\n    'avante',\n    'avaria',\n    'avental',\n    'avesso',\n    'aviador',\n    'avisar',\n    'avulso',\n    'axila',\n    'azarar',\n    'azedo',\n    'azeite',\n    'azulejo',\n    'babar',\n    'babosa',\n    'bacalhau',\n    'bacharel',\n    'bacia',\n    'bagagem',\n    'baiano',\n    'bailar',\n    'baioneta',\n    'bairro',\n    'baixista',\n    'bajular',\n    'baleia',\n    'baliza',\n    'balsa',\n    'banal',\n    'bandeira',\n    'banho',\n    'banir',\n    'banquete',\n    'barato',\n    'barbado',\n    'baronesa',\n    'barraca',\n    'barulho',\n    'baseado',\n    'bastante',\n    'batata',\n    'batedor',\n    'batida',\n    'batom',\n    'batucar',\n    'baunilha',\n    'beber',\n    'beijo',\n    'beirada',\n    'beisebol',\n    'beldade',\n    'beleza',\n    'belga',\n    'beliscar',\n    'bendito',\n    'bengala',\n    'benzer',\n    'berimbau',\n    'berlinda',\n    'berro',\n    'besouro',\n    'bexiga',\n    'bezerro',\n    'bico',\n    'bicudo',\n    'bienal',\n    'bifocal',\n    'bifurcar',\n    'bigorna',\n    'bilhete',\n    'bimestre',\n    'bimotor',\n    'biologia',\n    'biombo',\n    'biosfera',\n    'bipolar',\n    'birrento',\n    'biscoito',\n    'bisneto',\n    'bispo',\n    'bissexto',\n    'bitola',\n    'bizarro',\n    'blindado',\n    'bloco',\n    'bloquear',\n    'boato',\n    'bobagem',\n    'bocado',\n    'bocejo',\n    'bochecha',\n    'boicotar',\n    'bolada',\n    'boletim',\n    'bolha',\n    'bolo',\n    'bombeiro',\n    'bonde',\n    'boneco',\n    'bonita',\n    'borbulha',\n    'borda',\n    'boreal',\n    'borracha',\n    'bovino',\n    'boxeador',\n    'branco',\n    'brasa',\n    'braveza',\n    'breu',\n    'briga',\n    'brilho',\n    'brincar',\n    'broa',\n    'brochura',\n    'bronzear',\n    'broto',\n    'bruxo',\n    'bucha',\n    'budismo',\n    'bufar',\n    'bule',\n    'buraco',\n    'busca',\n    'busto',\n    'buzina',\n    'cabana',\n    'cabelo',\n    'cabide',\n    'cabo',\n    'cabrito',\n    'cacau',\n    'cacetada',\n    'cachorro',\n    'cacique',\n    'cadastro',\n    'cadeado',\n    'cafezal',\n    'caiaque',\n    'caipira',\n    'caixote',\n    'cajado',\n    'caju',\n    'calafrio',\n    'calcular',\n    'caldeira',\n    'calibrar',\n    'calmante',\n    'calota',\n    'camada',\n    'cambista',\n    'camisa',\n    'camomila',\n    'campanha',\n    'camuflar',\n    'canavial',\n    'cancelar',\n    'caneta',\n    'canguru',\n    'canhoto',\n    'canivete',\n    'canoa',\n    'cansado',\n    'cantar',\n    'canudo',\n    'capacho',\n    'capela',\n    'capinar',\n    'capotar',\n    'capricho',\n    'captador',\n    'capuz',\n    'caracol',\n    'carbono',\n    'cardeal',\n    'careca',\n    'carimbar',\n    'carneiro',\n    'carpete',\n    'carreira',\n    'cartaz',\n    'carvalho',\n    'casaco',\n    'casca',\n    'casebre',\n    'castelo',\n    'casulo',\n    'catarata',\n    'cativar',\n    'caule',\n    'causador',\n    'cautelar',\n    'cavalo',\n    'caverna',\n    'cebola',\n    'cedilha',\n    'cegonha',\n    'celebrar',\n    'celular',\n    'cenoura',\n    'censo',\n    'centeio',\n    'cercar',\n    'cerrado',\n    'certeiro',\n    'cerveja',\n    'cetim',\n    'cevada',\n    'chacota',\n    'chaleira',\n    'chamado',\n    'chapada',\n    'charme',\n    'chatice',\n    'chave',\n    'chefe',\n    'chegada',\n    'cheiro',\n    'cheque',\n    'chicote',\n    'chifre',\n    'chinelo',\n    'chocalho',\n    'chover',\n    'chumbo',\n    'chutar',\n    'chuva',\n    'cicatriz',\n    'ciclone',\n    'cidade',\n    'cidreira',\n    'ciente',\n    'cigana',\n    'cimento',\n    'cinto',\n    'cinza',\n    'ciranda',\n    'circuito',\n    'cirurgia',\n    'citar',\n    'clareza',\n    'clero',\n    'clicar',\n    'clone',\n    'clube',\n    'coado',\n    'coagir',\n    'cobaia',\n    'cobertor',\n    'cobrar',\n    'cocada',\n    'coelho',\n    'coentro',\n    'coeso',\n    'cogumelo',\n    'coibir',\n    'coifa',\n    'coiote',\n    'colar',\n    'coleira',\n    'colher',\n    'colidir',\n    'colmeia',\n    'colono',\n    'coluna',\n    'comando',\n    'combinar',\n    'comentar',\n    'comitiva',\n    'comover',\n    'complexo',\n    'comum',\n    'concha',\n    'condor',\n    'conectar',\n    'confuso',\n    'congelar',\n    'conhecer',\n    'conjugar',\n    'consumir',\n    'contrato',\n    'convite',\n    'cooperar',\n    'copeiro',\n    'copiador',\n    'copo',\n    'coquetel',\n    'coragem',\n    'cordial',\n    'corneta',\n    'coronha',\n    'corporal',\n    'correio',\n    'cortejo',\n    'coruja',\n    'corvo',\n    'cosseno',\n    'costela',\n    'cotonete',\n    'couro',\n    'couve',\n    'covil',\n    'cozinha',\n    'cratera',\n    'cravo',\n    'creche',\n    'credor',\n    'creme',\n    'crer',\n    'crespo',\n    'criada',\n    'criminal',\n    'crioulo',\n    'crise',\n    'criticar',\n    'crosta',\n    'crua',\n    'cruzeiro',\n    'cubano',\n    'cueca',\n    'cuidado',\n    'cujo',\n    'culatra',\n    'culminar',\n    'culpar',\n    'cultura',\n    'cumprir',\n    'cunhado',\n    'cupido',\n    'curativo',\n    'curral',\n    'cursar',\n    'curto',\n    'cuspir',\n    'custear',\n    'cutelo',\n    'damasco',\n    'datar',\n    'debater',\n    'debitar',\n    'deboche',\n    'debulhar',\n    'decalque',\n    'decimal',\n    'declive',\n    'decote',\n    'decretar',\n    'dedal',\n    'dedicado',\n    'deduzir',\n    'defesa',\n    'defumar',\n    'degelo',\n    'degrau',\n    'degustar',\n    'deitado',\n    'deixar',\n    'delator',\n    'delegado',\n    'delinear',\n    'delonga',\n    'demanda',\n    'demitir',\n    'demolido',\n    'dentista',\n    'depenado',\n    'depilar',\n    'depois',\n    'depressa',\n    'depurar',\n    'deriva',\n    'derramar',\n    'desafio',\n    'desbotar',\n    'descanso',\n    'desenho',\n    'desfiado',\n    'desgaste',\n    'desigual',\n    'deslize',\n    'desmamar',\n    'desova',\n    'despesa',\n    'destaque',\n    'desviar',\n    'detalhar',\n    'detentor',\n    'detonar',\n    'detrito',\n    'deusa',\n    'dever',\n    'devido',\n    'devotado',\n    'dezena',\n    'diagrama',\n    'dialeto',\n    'didata',\n    'difuso',\n    'digitar',\n    'dilatado',\n    'diluente',\n    'diminuir',\n    'dinastia',\n    'dinheiro',\n    'diocese',\n    'direto',\n    'discreta',\n    'disfarce',\n    'disparo',\n    'disquete',\n    'dissipar',\n    'distante',\n    'ditador',\n    'diurno',\n    'diverso',\n    'divisor',\n    'divulgar',\n    'dizer',\n    'dobrador',\n    'dolorido',\n    'domador',\n    'dominado',\n    'donativo',\n    'donzela',\n    'dormente',\n    'dorsal',\n    'dosagem',\n    'dourado',\n    'doutor',\n    'drenagem',\n    'drible',\n    'drogaria',\n    'duelar',\n    'duende',\n    'dueto',\n    'duplo',\n    'duquesa',\n    'durante',\n    'duvidoso',\n    'eclodir',\n    'ecoar',\n    'ecologia',\n    'edificar',\n    'edital',\n    'educado',\n    'efeito',\n    'efetivar',\n    'ejetar',\n    'elaborar',\n    'eleger',\n    'eleitor',\n    'elenco',\n    'elevador',\n    'eliminar',\n    'elogiar',\n    'embargo',\n    'embolado',\n    'embrulho',\n    'embutido',\n    'emenda',\n    'emergir',\n    'emissor',\n    'empatia',\n    'empenho',\n    'empinado',\n    'empolgar',\n    'emprego',\n    'empurrar',\n    'emulador',\n    'encaixe',\n    'encenado',\n    'enchente',\n    'encontro',\n    'endeusar',\n    'endossar',\n    'enfaixar',\n    'enfeite',\n    'enfim',\n    'engajado',\n    'engenho',\n    'englobar',\n    'engomado',\n    'engraxar',\n    'enguia',\n    'enjoar',\n    'enlatar',\n    'enquanto',\n    'enraizar',\n    'enrolado',\n    'enrugar',\n    'ensaio',\n    'enseada',\n    'ensino',\n    'ensopado',\n    'entanto',\n    'enteado',\n    'entidade',\n    'entortar',\n    'entrada',\n    'entulho',\n    'envergar',\n    'enviado',\n    'envolver',\n    'enxame',\n    'enxerto',\n    'enxofre',\n    'enxuto',\n    'epiderme',\n    'equipar',\n    'ereto',\n    'erguido',\n    'errata',\n    'erva',\n    'ervilha',\n    'esbanjar',\n    'esbelto',\n    'escama',\n    'escola',\n    'escrita',\n    'escuta',\n    'esfinge',\n    'esfolar',\n    'esfregar',\n    'esfumado',\n    'esgrima',\n    'esmalte',\n    'espanto',\n    'espelho',\n    'espiga',\n    'esponja',\n    'espreita',\n    'espumar',\n    'esquerda',\n    'estaca',\n    'esteira',\n    'esticar',\n    'estofado',\n    'estrela',\n    'estudo',\n    'esvaziar',\n    'etanol',\n    'etiqueta',\n    'euforia',\n    'europeu',\n    'evacuar',\n    'evaporar',\n    'evasivo',\n    'eventual',\n    'evidente',\n    'evoluir',\n    'exagero',\n    'exalar',\n    'examinar',\n    'exato',\n    'exausto',\n    'excesso',\n    'excitar',\n    'exclamar',\n    'executar',\n    'exemplo',\n    'exibir',\n    'exigente',\n    'exonerar',\n    'expandir',\n    'expelir',\n    'expirar',\n    'explanar',\n    'exposto',\n    'expresso',\n    'expulsar',\n    'externo',\n    'extinto',\n    'extrato',\n    'fabricar',\n    'fabuloso',\n    'faceta',\n    'facial',\n    'fada',\n    'fadiga',\n    'faixa',\n    'falar',\n    'falta',\n    'familiar',\n    'fandango',\n    'fanfarra',\n    'fantoche',\n    'fardado',\n    'farelo',\n    'farinha',\n    'farofa',\n    'farpa',\n    'fartura',\n    'fatia',\n    'fator',\n    'favorita',\n    'faxina',\n    'fazenda',\n    'fechado',\n    'feijoada',\n    'feirante',\n    'felino',\n    'feminino',\n    'fenda',\n    'feno',\n    'fera',\n    'feriado',\n    'ferrugem',\n    'ferver',\n    'festejar',\n    'fetal',\n    'feudal',\n    'fiapo',\n    'fibrose',\n    'ficar',\n    'ficheiro',\n    'figurado',\n    'fileira',\n    'filho',\n    'filme',\n    'filtrar',\n    'firmeza',\n    'fisgada',\n    'fissura',\n    'fita',\n    'fivela',\n    'fixador',\n    'fixo',\n    'flacidez',\n    'flamingo',\n    'flanela',\n    'flechada',\n    'flora',\n    'flutuar',\n    'fluxo',\n    'focal',\n    'focinho',\n    'fofocar',\n    'fogo',\n    'foguete',\n    'foice',\n    'folgado',\n    'folheto',\n    'forjar',\n    'formiga',\n    'forno',\n    'forte',\n    'fosco',\n    'fossa',\n    'fragata',\n    'fralda',\n    'frango',\n    'frasco',\n    'fraterno',\n    'freira',\n    'frente',\n    'fretar',\n    'frieza',\n    'friso',\n    'fritura',\n    'fronha',\n    'frustrar',\n    'fruteira',\n    'fugir',\n    'fulano',\n    'fuligem',\n    'fundar',\n    'fungo',\n    'funil',\n    'furador',\n    'furioso',\n    'futebol',\n    'gabarito',\n    'gabinete',\n    'gado',\n    'gaiato',\n    'gaiola',\n    'gaivota',\n    'galega',\n    'galho',\n    'galinha',\n    'galocha',\n    'ganhar',\n    'garagem',\n    'garfo',\n    'gargalo',\n    'garimpo',\n    'garoupa',\n    'garrafa',\n    'gasoduto',\n    'gasto',\n    'gata',\n    'gatilho',\n    'gaveta',\n    'gazela',\n    'gelado',\n    'geleia',\n    'gelo',\n    'gemada',\n    'gemer',\n    'gemido',\n    'generoso',\n    'gengiva',\n    'genial',\n    'genoma',\n    'genro',\n    'geologia',\n    'gerador',\n    'germinar',\n    'gesso',\n    'gestor',\n    'ginasta',\n    'gincana',\n    'gingado',\n    'girafa',\n    'girino',\n    'glacial',\n    'glicose',\n    'global',\n    'glorioso',\n    'goela',\n    'goiaba',\n    'golfe',\n    'golpear',\n    'gordura',\n    'gorjeta',\n    'gorro',\n    'gostoso',\n    'goteira',\n    'governar',\n    'gracejo',\n    'gradual',\n    'grafite',\n    'gralha',\n    'grampo',\n    'granada',\n    'gratuito',\n    'graveto',\n    'graxa',\n    'grego',\n    'grelhar',\n    'greve',\n    'grilo',\n    'grisalho',\n    'gritaria',\n    'grosso',\n    'grotesco',\n    'grudado',\n    'grunhido',\n    'gruta',\n    'guache',\n    'guarani',\n    'guaxinim',\n    'guerrear',\n    'guiar',\n    'guincho',\n    'guisado',\n    'gula',\n    'guloso',\n    'guru',\n    'habitar',\n    'harmonia',\n    'haste',\n    'haver',\n    'hectare',\n    'herdar',\n    'heresia',\n    'hesitar',\n    'hiato',\n    'hibernar',\n    'hidratar',\n    'hiena',\n    'hino',\n    'hipismo',\n    'hipnose',\n    'hipoteca',\n    'hoje',\n    'holofote',\n    'homem',\n    'honesto',\n    'honrado',\n    'hormonal',\n    'hospedar',\n    'humorado',\n    'iate',\n    'ideia',\n    'idoso',\n    'ignorado',\n    'igreja',\n    'iguana',\n    'ileso',\n    'ilha',\n    'iludido',\n    'iluminar',\n    'ilustrar',\n    'imagem',\n    'imediato',\n    'imenso',\n    'imersivo',\n    'iminente',\n    'imitador',\n    'imortal',\n    'impacto',\n    'impedir',\n    'implante',\n    'impor',\n    'imprensa',\n    'impune',\n    'imunizar',\n    'inalador',\n    'inapto',\n    'inativo',\n    'incenso',\n    'inchar',\n    'incidir',\n    'incluir',\n    'incolor',\n    'indeciso',\n    'indireto',\n    'indutor',\n    'ineficaz',\n    'inerente',\n    'infantil',\n    'infestar',\n    'infinito',\n    'inflamar',\n    'informal',\n    'infrator',\n    'ingerir',\n    'inibido',\n    'inicial',\n    'inimigo',\n    'injetar',\n    'inocente',\n    'inodoro',\n    'inovador',\n    'inox',\n    'inquieto',\n    'inscrito',\n    'inseto',\n    'insistir',\n    'inspetor',\n    'instalar',\n    'insulto',\n    'intacto',\n    'integral',\n    'intimar',\n    'intocado',\n    'intriga',\n    'invasor',\n    'inverno',\n    'invicto',\n    'invocar',\n    'iogurte',\n    'iraniano',\n    'ironizar',\n    'irreal',\n    'irritado',\n    'isca',\n    'isento',\n    'isolado',\n    'isqueiro',\n    'italiano',\n    'janeiro',\n    'jangada',\n    'janta',\n    'jararaca',\n    'jardim',\n    'jarro',\n    'jasmim',\n    'jato',\n    'javali',\n    'jazida',\n    'jejum',\n    'joaninha',\n    'joelhada',\n    'jogador',\n    'joia',\n    'jornal',\n    'jorrar',\n    'jovem',\n    'juba',\n    'judeu',\n    'judoca',\n    'juiz',\n    'julgador',\n    'julho',\n    'jurado',\n    'jurista',\n    'juro',\n    'justa',\n    'labareda',\n    'laboral',\n    'lacre',\n    'lactante',\n    'ladrilho',\n    'lagarta',\n    'lagoa',\n    'laje',\n    'lamber',\n    'lamentar',\n    'laminar',\n    'lampejo',\n    'lanche',\n    'lapidar',\n    'lapso',\n    'laranja',\n    'lareira',\n    'largura',\n    'lasanha',\n    'lastro',\n    'lateral',\n    'latido',\n    'lavanda',\n    'lavoura',\n    'lavrador',\n    'laxante',\n    'lazer',\n    'lealdade',\n    'lebre',\n    'legado',\n    'legendar',\n    'legista',\n    'leigo',\n    'leiloar',\n    'leitura',\n    'lembrete',\n    'leme',\n    'lenhador',\n    'lentilha',\n    'leoa',\n    'lesma',\n    'leste',\n    'letivo',\n    'letreiro',\n    'levar',\n    'leveza',\n    'levitar',\n    'liberal',\n    'libido',\n    'liderar',\n    'ligar',\n    'ligeiro',\n    'limitar',\n    'limoeiro',\n    'limpador',\n    'linda',\n    'linear',\n    'linhagem',\n    'liquidez',\n    'listagem',\n    'lisura',\n    'litoral',\n    'livro',\n    'lixa',\n    'lixeira',\n    'locador',\n    'locutor',\n    'lojista',\n    'lombo',\n    'lona',\n    'longe',\n    'lontra',\n    'lorde',\n    'lotado',\n    'loteria',\n    'loucura',\n    'lousa',\n    'louvar',\n    'luar',\n    'lucidez',\n    'lucro',\n    'luneta',\n    'lustre',\n    'lutador',\n    'luva',\n    'macaco',\n    'macete',\n    'machado',\n    'macio',\n    'madeira',\n    'madrinha',\n    'magnata',\n    'magreza',\n    'maior',\n    'mais',\n    'malandro',\n    'malha',\n    'malote',\n    'maluco',\n    'mamilo',\n    'mamoeiro',\n    'mamute',\n    'manada',\n    'mancha',\n    'mandato',\n    'manequim',\n    'manhoso',\n    'manivela',\n    'manobrar',\n    'mansa',\n    'manter',\n    'manusear',\n    'mapeado',\n    'maquinar',\n    'marcador',\n    'maresia',\n    'marfim',\n    'margem',\n    'marinho',\n    'marmita',\n    'maroto',\n    'marquise',\n    'marreco',\n    'martelo',\n    'marujo',\n    'mascote',\n    'masmorra',\n    'massagem',\n    'mastigar',\n    'matagal',\n    'materno',\n    'matinal',\n    'matutar',\n    'maxilar',\n    'medalha',\n    'medida',\n    'medusa',\n    'megafone',\n    'meiga',\n    'melancia',\n    'melhor',\n    'membro',\n    'memorial',\n    'menino',\n    'menos',\n    'mensagem',\n    'mental',\n    'merecer',\n    'mergulho',\n    'mesada',\n    'mesclar',\n    'mesmo',\n    'mesquita',\n    'mestre',\n    'metade',\n    'meteoro',\n    'metragem',\n    'mexer',\n    'mexicano',\n    'micro',\n    'migalha',\n    'migrar',\n    'milagre',\n    'milenar',\n    'milhar',\n    'mimado',\n    'minerar',\n    'minhoca',\n    'ministro',\n    'minoria',\n    'miolo',\n    'mirante',\n    'mirtilo',\n    'misturar',\n    'mocidade',\n    'moderno',\n    'modular',\n    'moeda',\n    'moer',\n    'moinho',\n    'moita',\n    'moldura',\n    'moleza',\n    'molho',\n    'molinete',\n    'molusco',\n    'montanha',\n    'moqueca',\n    'morango',\n    'morcego',\n    'mordomo',\n    'morena',\n    'mosaico',\n    'mosquete',\n    'mostarda',\n    'motel',\n    'motim',\n    'moto',\n    'motriz',\n    'muda',\n    'muito',\n    'mulata',\n    'mulher',\n    'multar',\n    'mundial',\n    'munido',\n    'muralha',\n    'murcho',\n    'muscular',\n    'museu',\n    'musical',\n    'nacional',\n    'nadador',\n    'naja',\n    'namoro',\n    'narina',\n    'narrado',\n    'nascer',\n    'nativa',\n    'natureza',\n    'navalha',\n    'navegar',\n    'navio',\n    'neblina',\n    'nebuloso',\n    'negativa',\n    'negociar',\n    'negrito',\n    'nervoso',\n    'neta',\n    'neural',\n    'nevasca',\n    'nevoeiro',\n    'ninar',\n    'ninho',\n    'nitidez',\n    'nivelar',\n    'nobreza',\n    'noite',\n    'noiva',\n    'nomear',\n    'nominal',\n    'nordeste',\n    'nortear',\n    'notar',\n    'noticiar',\n    'noturno',\n    'novelo',\n    'novilho',\n    'novo',\n    'nublado',\n    'nudez',\n    'numeral',\n    'nupcial',\n    'nutrir',\n    'nuvem',\n    'obcecado',\n    'obedecer',\n    'objetivo',\n    'obrigado',\n    'obscuro',\n    'obstetra',\n    'obter',\n    'obturar',\n    'ocidente',\n    'ocioso',\n    'ocorrer',\n    'oculista',\n    'ocupado',\n    'ofegante',\n    'ofensiva',\n    'oferenda',\n    'oficina',\n    'ofuscado',\n    'ogiva',\n    'olaria',\n    'oleoso',\n    'olhar',\n    'oliveira',\n    'ombro',\n    'omelete',\n    'omisso',\n    'omitir',\n    'ondulado',\n    'oneroso',\n    'ontem',\n    'opcional',\n    'operador',\n    'oponente',\n    'oportuno',\n    'oposto',\n    'orar',\n    'orbitar',\n    'ordem',\n    'ordinal',\n    'orfanato',\n    'orgasmo',\n    'orgulho',\n    'oriental',\n    'origem',\n    'oriundo',\n    'orla',\n    'ortodoxo',\n    'orvalho',\n    'oscilar',\n    'ossada',\n    'osso',\n    'ostentar',\n    'otimismo',\n    'ousadia',\n    'outono',\n    'outubro',\n    'ouvido',\n    'ovelha',\n    'ovular',\n    'oxidar',\n    'oxigenar',\n    'pacato',\n    'paciente',\n    'pacote',\n    'pactuar',\n    'padaria',\n    'padrinho',\n    'pagar',\n    'pagode',\n    'painel',\n    'pairar',\n    'paisagem',\n    'palavra',\n    'palestra',\n    'palheta',\n    'palito',\n    'palmada',\n    'palpitar',\n    'pancada',\n    'panela',\n    'panfleto',\n    'panqueca',\n    'pantanal',\n    'papagaio',\n    'papelada',\n    'papiro',\n    'parafina',\n    'parcial',\n    'pardal',\n    'parede',\n    'partida',\n    'pasmo',\n    'passado',\n    'pastel',\n    'patamar',\n    'patente',\n    'patinar',\n    'patrono',\n    'paulada',\n    'pausar',\n    'peculiar',\n    'pedalar',\n    'pedestre',\n    'pediatra',\n    'pedra',\n    'pegada',\n    'peitoral',\n    'peixe',\n    'pele',\n    'pelicano',\n    'penca',\n    'pendurar',\n    'peneira',\n    'penhasco',\n    'pensador',\n    'pente',\n    'perceber',\n    'perfeito',\n    'pergunta',\n    'perito',\n    'permitir',\n    'perna',\n    'perplexo',\n    'persiana',\n    'pertence',\n    'peruca',\n    'pescado',\n    'pesquisa',\n    'pessoa',\n    'petiscar',\n    'piada',\n    'picado',\n    'piedade',\n    'pigmento',\n    'pilastra',\n    'pilhado',\n    'pilotar',\n    'pimenta',\n    'pincel',\n    'pinguim',\n    'pinha',\n    'pinote',\n    'pintar',\n    'pioneiro',\n    'pipoca',\n    'piquete',\n    'piranha',\n    'pires',\n    'pirueta',\n    'piscar',\n    'pistola',\n    'pitanga',\n    'pivete',\n    'planta',\n    'plaqueta',\n    'platina',\n    'plebeu',\n    'plumagem',\n    'pluvial',\n    'pneu',\n    'poda',\n    'poeira',\n    'poetisa',\n    'polegada',\n    'policiar',\n    'poluente',\n    'polvilho',\n    'pomar',\n    'pomba',\n    'ponderar',\n    'pontaria',\n    'populoso',\n    'porta',\n    'possuir',\n    'postal',\n    'pote',\n    'poupar',\n    'pouso',\n    'povoar',\n    'praia',\n    'prancha',\n    'prato',\n    'praxe',\n    'prece',\n    'predador',\n    'prefeito',\n    'premiar',\n    'prensar',\n    'preparar',\n    'presilha',\n    'pretexto',\n    'prevenir',\n    'prezar',\n    'primata',\n    'princesa',\n    'prisma',\n    'privado',\n    'processo',\n    'produto',\n    'profeta',\n    'proibido',\n    'projeto',\n    'prometer',\n    'propagar',\n    'prosa',\n    'protetor',\n    'provador',\n    'publicar',\n    'pudim',\n    'pular',\n    'pulmonar',\n    'pulseira',\n    'punhal',\n    'punir',\n    'pupilo',\n    'pureza',\n    'puxador',\n    'quadra',\n    'quantia',\n    'quarto',\n    'quase',\n    'quebrar',\n    'queda',\n    'queijo',\n    'quente',\n    'querido',\n    'quimono',\n    'quina',\n    'quiosque',\n    'rabanada',\n    'rabisco',\n    'rachar',\n    'racionar',\n    'radial',\n    'raiar',\n    'rainha',\n    'raio',\n    'raiva',\n    'rajada',\n    'ralado',\n    'ramal',\n    'ranger',\n    'ranhura',\n    'rapadura',\n    'rapel',\n    'rapidez',\n    'raposa',\n    'raquete',\n    'raridade',\n    'rasante',\n    'rascunho',\n    'rasgar',\n    'raspador',\n    'rasteira',\n    'rasurar',\n    'ratazana',\n    'ratoeira',\n    'realeza',\n    'reanimar',\n    'reaver',\n    'rebaixar',\n    'rebelde',\n    'rebolar',\n    'recado',\n    'recente',\n    'recheio',\n    'recibo',\n    'recordar',\n    'recrutar',\n    'recuar',\n    'rede',\n    'redimir',\n    'redonda',\n    'reduzida',\n    'reenvio',\n    'refinar',\n    'refletir',\n    'refogar',\n    'refresco',\n    'refugiar',\n    'regalia',\n    'regime',\n    'regra',\n    'reinado',\n    'reitor',\n    'rejeitar',\n    'relativo',\n    'remador',\n    'remendo',\n    'remorso',\n    'renovado',\n    'reparo',\n    'repelir',\n    'repleto',\n    'repolho',\n    'represa',\n    'repudiar',\n    'requerer',\n    'resenha',\n    'resfriar',\n    'resgatar',\n    'residir',\n    'resolver',\n    'respeito',\n    'ressaca',\n    'restante',\n    'resumir',\n    'retalho',\n    'reter',\n    'retirar',\n    'retomada',\n    'retratar',\n    'revelar',\n    'revisor',\n    'revolta',\n    'riacho',\n    'rica',\n    'rigidez',\n    'rigoroso',\n    'rimar',\n    'ringue',\n    'risada',\n    'risco',\n    'risonho',\n    'robalo',\n    'rochedo',\n    'rodada',\n    'rodeio',\n    'rodovia',\n    'roedor',\n    'roleta',\n    'romano',\n    'roncar',\n    'rosado',\n    'roseira',\n    'rosto',\n    'rota',\n    'roteiro',\n    'rotina',\n    'rotular',\n    'rouco',\n    'roupa',\n    'roxo',\n    'rubro',\n    'rugido',\n    'rugoso',\n    'ruivo',\n    'rumo',\n    'rupestre',\n    'russo',\n    'sabor',\n    'saciar',\n    'sacola',\n    'sacudir',\n    'sadio',\n    'safira',\n    'saga',\n    'sagrada',\n    'saibro',\n    'salada',\n    'saleiro',\n    'salgado',\n    'saliva',\n    'salpicar',\n    'salsicha',\n    'saltar',\n    'salvador',\n    'sambar',\n    'samurai',\n    'sanar',\n    'sanfona',\n    'sangue',\n    'sanidade',\n    'sapato',\n    'sarda',\n    'sargento',\n    'sarjeta',\n    'saturar',\n    'saudade',\n    'saxofone',\n    'sazonal',\n    'secar',\n    'secular',\n    'seda',\n    'sedento',\n    'sediado',\n    'sedoso',\n    'sedutor',\n    'segmento',\n    'segredo',\n    'segundo',\n    'seiva',\n    'seleto',\n    'selvagem',\n    'semanal',\n    'semente',\n    'senador',\n    'senhor',\n    'sensual',\n    'sentado',\n    'separado',\n    'sereia',\n    'seringa',\n    'serra',\n    'servo',\n    'setembro',\n    'setor',\n    'sigilo',\n    'silhueta',\n    'silicone',\n    'simetria',\n    'simpatia',\n    'simular',\n    'sinal',\n    'sincero',\n    'singular',\n    'sinopse',\n    'sintonia',\n    'sirene',\n    'siri',\n    'situado',\n    'soberano',\n    'sobra',\n    'socorro',\n    'sogro',\n    'soja',\n    'solda',\n    'soletrar',\n    'solteiro',\n    'sombrio',\n    'sonata',\n    'sondar',\n    'sonegar',\n    'sonhador',\n    'sono',\n    'soprano',\n    'soquete',\n    'sorrir',\n    'sorteio',\n    'sossego',\n    'sotaque',\n    'soterrar',\n    'sovado',\n    'sozinho',\n    'suavizar',\n    'subida',\n    'submerso',\n    'subsolo',\n    'subtrair',\n    'sucata',\n    'sucesso',\n    'suco',\n    'sudeste',\n    'sufixo',\n    'sugador',\n    'sugerir',\n    'sujeito',\n    'sulfato',\n    'sumir',\n    'suor',\n    'superior',\n    'suplicar',\n    'suposto',\n    'suprimir',\n    'surdina',\n    'surfista',\n    'surpresa',\n    'surreal',\n    'surtir',\n    'suspiro',\n    'sustento',\n    'tabela',\n    'tablete',\n    'tabuada',\n    'tacho',\n    'tagarela',\n    'talher',\n    'talo',\n    'talvez',\n    'tamanho',\n    'tamborim',\n    'tampa',\n    'tangente',\n    'tanto',\n    'tapar',\n    'tapioca',\n    'tardio',\n    'tarefa',\n    'tarja',\n    'tarraxa',\n    'tatuagem',\n    'taurino',\n    'taxativo',\n    'taxista',\n    'teatral',\n    'tecer',\n    'tecido',\n    'teclado',\n    'tedioso',\n    'teia',\n    'teimar',\n    'telefone',\n    'telhado',\n    'tempero',\n    'tenente',\n    'tensor',\n    'tentar',\n    'termal',\n    'terno',\n    'terreno',\n    'tese',\n    'tesoura',\n    'testado',\n    'teto',\n    'textura',\n    'texugo',\n    'tiara',\n    'tigela',\n    'tijolo',\n    'timbrar',\n    'timidez',\n    'tingido',\n    'tinteiro',\n    'tiragem',\n    'titular',\n    'toalha',\n    'tocha',\n    'tolerar',\n    'tolice',\n    'tomada',\n    'tomilho',\n    'tonel',\n    'tontura',\n    'topete',\n    'tora',\n    'torcido',\n    'torneio',\n    'torque',\n    'torrada',\n    'torto',\n    'tostar',\n    'touca',\n    'toupeira',\n    'toxina',\n    'trabalho',\n    'tracejar',\n    'tradutor',\n    'trafegar',\n    'trajeto',\n    'trama',\n    'trancar',\n    'trapo',\n    'traseiro',\n    'tratador',\n    'travar',\n    'treino',\n    'tremer',\n    'trepidar',\n    'trevo',\n    'triagem',\n    'tribo',\n    'triciclo',\n    'tridente',\n    'trilogia',\n    'trindade',\n    'triplo',\n    'triturar',\n    'triunfal',\n    'trocar',\n    'trombeta',\n    'trova',\n    'trunfo',\n    'truque',\n    'tubular',\n    'tucano',\n    'tudo',\n    'tulipa',\n    'tupi',\n    'turbo',\n    'turma',\n    'turquesa',\n    'tutelar',\n    'tutorial',\n    'uivar',\n    'umbigo',\n    'unha',\n    'unidade',\n    'uniforme',\n    'urologia',\n    'urso',\n    'urtiga',\n    'urubu',\n    'usado',\n    'usina',\n    'usufruir',\n    'vacina',\n    'vadiar',\n    'vagaroso',\n    'vaidoso',\n    'vala',\n    'valente',\n    'validade',\n    'valores',\n    'vantagem',\n    'vaqueiro',\n    'varanda',\n    'vareta',\n    'varrer',\n    'vascular',\n    'vasilha',\n    'vassoura',\n    'vazar',\n    'vazio',\n    'veado',\n    'vedar',\n    'vegetar',\n    'veicular',\n    'veleiro',\n    'velhice',\n    'veludo',\n    'vencedor',\n    'vendaval',\n    'venerar',\n    'ventre',\n    'verbal',\n    'verdade',\n    'vereador',\n    'vergonha',\n    'vermelho',\n    'verniz',\n    'versar',\n    'vertente',\n    'vespa',\n    'vestido',\n    'vetorial',\n    'viaduto',\n    'viagem',\n    'viajar',\n    'viatura',\n    'vibrador',\n    'videira',\n    'vidraria',\n    'viela',\n    'viga',\n    'vigente',\n    'vigiar',\n    'vigorar',\n    'vilarejo',\n    'vinco',\n    'vinheta',\n    'vinil',\n    'violeta',\n    'virada',\n    'virtude',\n    'visitar',\n    'visto',\n    'vitral',\n    'viveiro',\n    'vizinho',\n    'voador',\n    'voar',\n    'vogal',\n    'volante',\n    'voleibol',\n    'voltagem',\n    'volumoso',\n    'vontade',\n    'vulto',\n    'vuvuzela',\n    'xadrez',\n    'xarope',\n    'xeque',\n    'xeretar',\n    'xerife',\n    'xingar',\n    'zangado',\n    'zarpar',\n    'zebu',\n    'zelador',\n    'zombar',\n    'zoologia',\n    'zumbido'\n];\n//# sourceMappingURL=portuguese.js.map","// SPDX-License-Identifier: MIT\nexport const WORDLIST = [\n    'ábaco',\n    'abdomen',\n    'abeja',\n    'abierto',\n    'abogado',\n    'abono',\n    'aborto',\n    'abrazo',\n    'abrir',\n    'abuelo',\n    'abuso',\n    'acabar',\n    'academia',\n    'acceso',\n    'acción',\n    'aceite',\n    'acelga',\n    'acento',\n    'aceptar',\n    'ácido',\n    'aclarar',\n    'acné',\n    'acoger',\n    'acoso',\n    'activo',\n    'acto',\n    'actriz',\n    'actuar',\n    'acudir',\n    'acuerdo',\n    'acusar',\n    'adicto',\n    'admitir',\n    'adoptar',\n    'adorno',\n    'aduana',\n    'adulto',\n    'aéreo',\n    'afectar',\n    'afición',\n    'afinar',\n    'afirmar',\n    'ágil',\n    'agitar',\n    'agonía',\n    'agosto',\n    'agotar',\n    'agregar',\n    'agrio',\n    'agua',\n    'agudo',\n    'águila',\n    'aguja',\n    'ahogo',\n    'ahorro',\n    'aire',\n    'aislar',\n    'ajedrez',\n    'ajeno',\n    'ajuste',\n    'alacrán',\n    'alambre',\n    'alarma',\n    'alba',\n    'álbum',\n    'alcalde',\n    'aldea',\n    'alegre',\n    'alejar',\n    'alerta',\n    'aleta',\n    'alfiler',\n    'alga',\n    'algodón',\n    'aliado',\n    'aliento',\n    'alivio',\n    'alma',\n    'almeja',\n    'almíbar',\n    'altar',\n    'alteza',\n    'altivo',\n    'alto',\n    'altura',\n    'alumno',\n    'alzar',\n    'amable',\n    'amante',\n    'amapola',\n    'amargo',\n    'amasar',\n    'ámbar',\n    'ámbito',\n    'ameno',\n    'amigo',\n    'amistad',\n    'amor',\n    'amparo',\n    'amplio',\n    'ancho',\n    'anciano',\n    'ancla',\n    'andar',\n    'andén',\n    'anemia',\n    'ángulo',\n    'anillo',\n    'ánimo',\n    'anís',\n    'anotar',\n    'antena',\n    'antiguo',\n    'antojo',\n    'anual',\n    'anular',\n    'anuncio',\n    'añadir',\n    'añejo',\n    'año',\n    'apagar',\n    'aparato',\n    'apetito',\n    'apio',\n    'aplicar',\n    'apodo',\n    'aporte',\n    'apoyo',\n    'aprender',\n    'aprobar',\n    'apuesta',\n    'apuro',\n    'arado',\n    'araña',\n    'arar',\n    'árbitro',\n    'árbol',\n    'arbusto',\n    'archivo',\n    'arco',\n    'arder',\n    'ardilla',\n    'arduo',\n    'área',\n    'árido',\n    'aries',\n    'armonía',\n    'arnés',\n    'aroma',\n    'arpa',\n    'arpón',\n    'arreglo',\n    'arroz',\n    'arruga',\n    'arte',\n    'artista',\n    'asa',\n    'asado',\n    'asalto',\n    'ascenso',\n    'asegurar',\n    'aseo',\n    'asesor',\n    'asiento',\n    'asilo',\n    'asistir',\n    'asno',\n    'asombro',\n    'áspero',\n    'astilla',\n    'astro',\n    'astuto',\n    'asumir',\n    'asunto',\n    'atajo',\n    'ataque',\n    'atar',\n    'atento',\n    'ateo',\n    'ático',\n    'atleta',\n    'átomo',\n    'atraer',\n    'atroz',\n    'atún',\n    'audaz',\n    'audio',\n    'auge',\n    'aula',\n    'aumento',\n    'ausente',\n    'autor',\n    'aval',\n    'avance',\n    'avaro',\n    'ave',\n    'avellana',\n    'avena',\n    'avestruz',\n    'avión',\n    'aviso',\n    'ayer',\n    'ayuda',\n    'ayuno',\n    'azafrán',\n    'azar',\n    'azote',\n    'azúcar',\n    'azufre',\n    'azul',\n    'baba',\n    'babor',\n    'bache',\n    'bahía',\n    'baile',\n    'bajar',\n    'balanza',\n    'balcón',\n    'balde',\n    'bambú',\n    'banco',\n    'banda',\n    'baño',\n    'barba',\n    'barco',\n    'barniz',\n    'barro',\n    'báscula',\n    'bastón',\n    'basura',\n    'batalla',\n    'batería',\n    'batir',\n    'batuta',\n    'baúl',\n    'bazar',\n    'bebé',\n    'bebida',\n    'bello',\n    'besar',\n    'beso',\n    'bestia',\n    'bicho',\n    'bien',\n    'bingo',\n    'blanco',\n    'bloque',\n    'blusa',\n    'boa',\n    'bobina',\n    'bobo',\n    'boca',\n    'bocina',\n    'boda',\n    'bodega',\n    'boina',\n    'bola',\n    'bolero',\n    'bolsa',\n    'bomba',\n    'bondad',\n    'bonito',\n    'bono',\n    'bonsái',\n    'borde',\n    'borrar',\n    'bosque',\n    'bote',\n    'botín',\n    'bóveda',\n    'bozal',\n    'bravo',\n    'brazo',\n    'brecha',\n    'breve',\n    'brillo',\n    'brinco',\n    'brisa',\n    'broca',\n    'broma',\n    'bronce',\n    'brote',\n    'bruja',\n    'brusco',\n    'bruto',\n    'buceo',\n    'bucle',\n    'bueno',\n    'buey',\n    'bufanda',\n    'bufón',\n    'búho',\n    'buitre',\n    'bulto',\n    'burbuja',\n    'burla',\n    'burro',\n    'buscar',\n    'butaca',\n    'buzón',\n    'caballo',\n    'cabeza',\n    'cabina',\n    'cabra',\n    'cacao',\n    'cadáver',\n    'cadena',\n    'caer',\n    'café',\n    'caída',\n    'caimán',\n    'caja',\n    'cajón',\n    'cal',\n    'calamar',\n    'calcio',\n    'caldo',\n    'calidad',\n    'calle',\n    'calma',\n    'calor',\n    'calvo',\n    'cama',\n    'cambio',\n    'camello',\n    'camino',\n    'campo',\n    'cáncer',\n    'candil',\n    'canela',\n    'canguro',\n    'canica',\n    'canto',\n    'caña',\n    'cañón',\n    'caoba',\n    'caos',\n    'capaz',\n    'capitán',\n    'capote',\n    'captar',\n    'capucha',\n    'cara',\n    'carbón',\n    'cárcel',\n    'careta',\n    'carga',\n    'cariño',\n    'carne',\n    'carpeta',\n    'carro',\n    'carta',\n    'casa',\n    'casco',\n    'casero',\n    'caspa',\n    'castor',\n    'catorce',\n    'catre',\n    'caudal',\n    'causa',\n    'cazo',\n    'cebolla',\n    'ceder',\n    'cedro',\n    'celda',\n    'célebre',\n    'celoso',\n    'célula',\n    'cemento',\n    'ceniza',\n    'centro',\n    'cerca',\n    'cerdo',\n    'cereza',\n    'cero',\n    'cerrar',\n    'certeza',\n    'césped',\n    'cetro',\n    'chacal',\n    'chaleco',\n    'champú',\n    'chancla',\n    'chapa',\n    'charla',\n    'chico',\n    'chiste',\n    'chivo',\n    'choque',\n    'choza',\n    'chuleta',\n    'chupar',\n    'ciclón',\n    'ciego',\n    'cielo',\n    'cien',\n    'cierto',\n    'cifra',\n    'cigarro',\n    'cima',\n    'cinco',\n    'cine',\n    'cinta',\n    'ciprés',\n    'circo',\n    'ciruela',\n    'cisne',\n    'cita',\n    'ciudad',\n    'clamor',\n    'clan',\n    'claro',\n    'clase',\n    'clave',\n    'cliente',\n    'clima',\n    'clínica',\n    'cobre',\n    'cocción',\n    'cochino',\n    'cocina',\n    'coco',\n    'código',\n    'codo',\n    'cofre',\n    'coger',\n    'cohete',\n    'cojín',\n    'cojo',\n    'cola',\n    'colcha',\n    'colegio',\n    'colgar',\n    'colina',\n    'collar',\n    'colmo',\n    'columna',\n    'combate',\n    'comer',\n    'comida',\n    'cómodo',\n    'compra',\n    'conde',\n    'conejo',\n    'conga',\n    'conocer',\n    'consejo',\n    'contar',\n    'copa',\n    'copia',\n    'corazón',\n    'corbata',\n    'corcho',\n    'cordón',\n    'corona',\n    'correr',\n    'coser',\n    'cosmos',\n    'costa',\n    'cráneo',\n    'cráter',\n    'crear',\n    'crecer',\n    'creído',\n    'crema',\n    'cría',\n    'crimen',\n    'cripta',\n    'crisis',\n    'cromo',\n    'crónica',\n    'croqueta',\n    'crudo',\n    'cruz',\n    'cuadro',\n    'cuarto',\n    'cuatro',\n    'cubo',\n    'cubrir',\n    'cuchara',\n    'cuello',\n    'cuento',\n    'cuerda',\n    'cuesta',\n    'cueva',\n    'cuidar',\n    'culebra',\n    'culpa',\n    'culto',\n    'cumbre',\n    'cumplir',\n    'cuna',\n    'cuneta',\n    'cuota',\n    'cupón',\n    'cúpula',\n    'curar',\n    'curioso',\n    'curso',\n    'curva',\n    'cutis',\n    'dama',\n    'danza',\n    'dar',\n    'dardo',\n    'dátil',\n    'deber',\n    'débil',\n    'década',\n    'decir',\n    'dedo',\n    'defensa',\n    'definir',\n    'dejar',\n    'delfín',\n    'delgado',\n    'delito',\n    'demora',\n    'denso',\n    'dental',\n    'deporte',\n    'derecho',\n    'derrota',\n    'desayuno',\n    'deseo',\n    'desfile',\n    'desnudo',\n    'destino',\n    'desvío',\n    'detalle',\n    'detener',\n    'deuda',\n    'día',\n    'diablo',\n    'diadema',\n    'diamante',\n    'diana',\n    'diario',\n    'dibujo',\n    'dictar',\n    'diente',\n    'dieta',\n    'diez',\n    'difícil',\n    'digno',\n    'dilema',\n    'diluir',\n    'dinero',\n    'directo',\n    'dirigir',\n    'disco',\n    'diseño',\n    'disfraz',\n    'diva',\n    'divino',\n    'doble',\n    'doce',\n    'dolor',\n    'domingo',\n    'don',\n    'donar',\n    'dorado',\n    'dormir',\n    'dorso',\n    'dos',\n    'dosis',\n    'dragón',\n    'droga',\n    'ducha',\n    'duda',\n    'duelo',\n    'dueño',\n    'dulce',\n    'dúo',\n    'duque',\n    'durar',\n    'dureza',\n    'duro',\n    'ébano',\n    'ebrio',\n    'echar',\n    'eco',\n    'ecuador',\n    'edad',\n    'edición',\n    'edificio',\n    'editor',\n    'educar',\n    'efecto',\n    'eficaz',\n    'eje',\n    'ejemplo',\n    'elefante',\n    'elegir',\n    'elemento',\n    'elevar',\n    'elipse',\n    'élite',\n    'elixir',\n    'elogio',\n    'eludir',\n    'embudo',\n    'emitir',\n    'emoción',\n    'empate',\n    'empeño',\n    'empleo',\n    'empresa',\n    'enano',\n    'encargo',\n    'enchufe',\n    'encía',\n    'enemigo',\n    'enero',\n    'enfado',\n    'enfermo',\n    'engaño',\n    'enigma',\n    'enlace',\n    'enorme',\n    'enredo',\n    'ensayo',\n    'enseñar',\n    'entero',\n    'entrar',\n    'envase',\n    'envío',\n    'época',\n    'equipo',\n    'erizo',\n    'escala',\n    'escena',\n    'escolar',\n    'escribir',\n    'escudo',\n    'esencia',\n    'esfera',\n    'esfuerzo',\n    'espada',\n    'espejo',\n    'espía',\n    'esposa',\n    'espuma',\n    'esquí',\n    'estar',\n    'este',\n    'estilo',\n    'estufa',\n    'etapa',\n    'eterno',\n    'ética',\n    'etnia',\n    'evadir',\n    'evaluar',\n    'evento',\n    'evitar',\n    'exacto',\n    'examen',\n    'exceso',\n    'excusa',\n    'exento',\n    'exigir',\n    'exilio',\n    'existir',\n    'éxito',\n    'experto',\n    'explicar',\n    'exponer',\n    'extremo',\n    'fábrica',\n    'fábula',\n    'fachada',\n    'fácil',\n    'factor',\n    'faena',\n    'faja',\n    'falda',\n    'fallo',\n    'falso',\n    'faltar',\n    'fama',\n    'familia',\n    'famoso',\n    'faraón',\n    'farmacia',\n    'farol',\n    'farsa',\n    'fase',\n    'fatiga',\n    'fauna',\n    'favor',\n    'fax',\n    'febrero',\n    'fecha',\n    'feliz',\n    'feo',\n    'feria',\n    'feroz',\n    'fértil',\n    'fervor',\n    'festín',\n    'fiable',\n    'fianza',\n    'fiar',\n    'fibra',\n    'ficción',\n    'ficha',\n    'fideo',\n    'fiebre',\n    'fiel',\n    'fiera',\n    'fiesta',\n    'figura',\n    'fijar',\n    'fijo',\n    'fila',\n    'filete',\n    'filial',\n    'filtro',\n    'fin',\n    'finca',\n    'fingir',\n    'finito',\n    'firma',\n    'flaco',\n    'flauta',\n    'flecha',\n    'flor',\n    'flota',\n    'fluir',\n    'flujo',\n    'flúor',\n    'fobia',\n    'foca',\n    'fogata',\n    'fogón',\n    'folio',\n    'folleto',\n    'fondo',\n    'forma',\n    'forro',\n    'fortuna',\n    'forzar',\n    'fosa',\n    'foto',\n    'fracaso',\n    'frágil',\n    'franja',\n    'frase',\n    'fraude',\n    'freír',\n    'freno',\n    'fresa',\n    'frío',\n    'frito',\n    'fruta',\n    'fuego',\n    'fuente',\n    'fuerza',\n    'fuga',\n    'fumar',\n    'función',\n    'funda',\n    'furgón',\n    'furia',\n    'fusil',\n    'fútbol',\n    'futuro',\n    'gacela',\n    'gafas',\n    'gaita',\n    'gajo',\n    'gala',\n    'galería',\n    'gallo',\n    'gamba',\n    'ganar',\n    'gancho',\n    'ganga',\n    'ganso',\n    'garaje',\n    'garza',\n    'gasolina',\n    'gastar',\n    'gato',\n    'gavilán',\n    'gemelo',\n    'gemir',\n    'gen',\n    'género',\n    'genio',\n    'gente',\n    'geranio',\n    'gerente',\n    'germen',\n    'gesto',\n    'gigante',\n    'gimnasio',\n    'girar',\n    'giro',\n    'glaciar',\n    'globo',\n    'gloria',\n    'gol',\n    'golfo',\n    'goloso',\n    'golpe',\n    'goma',\n    'gordo',\n    'gorila',\n    'gorra',\n    'gota',\n    'goteo',\n    'gozar',\n    'grada',\n    'gráfico',\n    'grano',\n    'grasa',\n    'gratis',\n    'grave',\n    'grieta',\n    'grillo',\n    'gripe',\n    'gris',\n    'grito',\n    'grosor',\n    'grúa',\n    'grueso',\n    'grumo',\n    'grupo',\n    'guante',\n    'guapo',\n    'guardia',\n    'guerra',\n    'guía',\n    'guiño',\n    'guion',\n    'guiso',\n    'guitarra',\n    'gusano',\n    'gustar',\n    'haber',\n    'hábil',\n    'hablar',\n    'hacer',\n    'hacha',\n    'hada',\n    'hallar',\n    'hamaca',\n    'harina',\n    'haz',\n    'hazaña',\n    'hebilla',\n    'hebra',\n    'hecho',\n    'helado',\n    'helio',\n    'hembra',\n    'herir',\n    'hermano',\n    'héroe',\n    'hervir',\n    'hielo',\n    'hierro',\n    'hígado',\n    'higiene',\n    'hijo',\n    'himno',\n    'historia',\n    'hocico',\n    'hogar',\n    'hoguera',\n    'hoja',\n    'hombre',\n    'hongo',\n    'honor',\n    'honra',\n    'hora',\n    'hormiga',\n    'horno',\n    'hostil',\n    'hoyo',\n    'hueco',\n    'huelga',\n    'huerta',\n    'hueso',\n    'huevo',\n    'huida',\n    'huir',\n    'humano',\n    'húmedo',\n    'humilde',\n    'humo',\n    'hundir',\n    'huracán',\n    'hurto',\n    'icono',\n    'ideal',\n    'idioma',\n    'ídolo',\n    'iglesia',\n    'iglú',\n    'igual',\n    'ilegal',\n    'ilusión',\n    'imagen',\n    'imán',\n    'imitar',\n    'impar',\n    'imperio',\n    'imponer',\n    'impulso',\n    'incapaz',\n    'índice',\n    'inerte',\n    'infiel',\n    'informe',\n    'ingenio',\n    'inicio',\n    'inmenso',\n    'inmune',\n    'innato',\n    'insecto',\n    'instante',\n    'interés',\n    'íntimo',\n    'intuir',\n    'inútil',\n    'invierno',\n    'ira',\n    'iris',\n    'ironía',\n    'isla',\n    'islote',\n    'jabalí',\n    'jabón',\n    'jamón',\n    'jarabe',\n    'jardín',\n    'jarra',\n    'jaula',\n    'jazmín',\n    'jefe',\n    'jeringa',\n    'jinete',\n    'jornada',\n    'joroba',\n    'joven',\n    'joya',\n    'juerga',\n    'jueves',\n    'juez',\n    'jugador',\n    'jugo',\n    'juguete',\n    'juicio',\n    'junco',\n    'jungla',\n    'junio',\n    'juntar',\n    'júpiter',\n    'jurar',\n    'justo',\n    'juvenil',\n    'juzgar',\n    'kilo',\n    'koala',\n    'labio',\n    'lacio',\n    'lacra',\n    'lado',\n    'ladrón',\n    'lagarto',\n    'lágrima',\n    'laguna',\n    'laico',\n    'lamer',\n    'lámina',\n    'lámpara',\n    'lana',\n    'lancha',\n    'langosta',\n    'lanza',\n    'lápiz',\n    'largo',\n    'larva',\n    'lástima',\n    'lata',\n    'látex',\n    'latir',\n    'laurel',\n    'lavar',\n    'lazo',\n    'leal',\n    'lección',\n    'leche',\n    'lector',\n    'leer',\n    'legión',\n    'legumbre',\n    'lejano',\n    'lengua',\n    'lento',\n    'leña',\n    'león',\n    'leopardo',\n    'lesión',\n    'letal',\n    'letra',\n    'leve',\n    'leyenda',\n    'libertad',\n    'libro',\n    'licor',\n    'líder',\n    'lidiar',\n    'lienzo',\n    'liga',\n    'ligero',\n    'lima',\n    'límite',\n    'limón',\n    'limpio',\n    'lince',\n    'lindo',\n    'línea',\n    'lingote',\n    'lino',\n    'linterna',\n    'líquido',\n    'liso',\n    'lista',\n    'litera',\n    'litio',\n    'litro',\n    'llaga',\n    'llama',\n    'llanto',\n    'llave',\n    'llegar',\n    'llenar',\n    'llevar',\n    'llorar',\n    'llover',\n    'lluvia',\n    'lobo',\n    'loción',\n    'loco',\n    'locura',\n    'lógica',\n    'logro',\n    'lombriz',\n    'lomo',\n    'lonja',\n    'lote',\n    'lucha',\n    'lucir',\n    'lugar',\n    'lujo',\n    'luna',\n    'lunes',\n    'lupa',\n    'lustro',\n    'luto',\n    'luz',\n    'maceta',\n    'macho',\n    'madera',\n    'madre',\n    'maduro',\n    'maestro',\n    'mafia',\n    'magia',\n    'mago',\n    'maíz',\n    'maldad',\n    'maleta',\n    'malla',\n    'malo',\n    'mamá',\n    'mambo',\n    'mamut',\n    'manco',\n    'mando',\n    'manejar',\n    'manga',\n    'maniquí',\n    'manjar',\n    'mano',\n    'manso',\n    'manta',\n    'mañana',\n    'mapa',\n    'máquina',\n    'mar',\n    'marco',\n    'marea',\n    'marfil',\n    'margen',\n    'marido',\n    'mármol',\n    'marrón',\n    'martes',\n    'marzo',\n    'masa',\n    'máscara',\n    'masivo',\n    'matar',\n    'materia',\n    'matiz',\n    'matriz',\n    'máximo',\n    'mayor',\n    'mazorca',\n    'mecha',\n    'medalla',\n    'medio',\n    'médula',\n    'mejilla',\n    'mejor',\n    'melena',\n    'melón',\n    'memoria',\n    'menor',\n    'mensaje',\n    'mente',\n    'menú',\n    'mercado',\n    'merengue',\n    'mérito',\n    'mes',\n    'mesón',\n    'meta',\n    'meter',\n    'método',\n    'metro',\n    'mezcla',\n    'miedo',\n    'miel',\n    'miembro',\n    'miga',\n    'mil',\n    'milagro',\n    'militar',\n    'millón',\n    'mimo',\n    'mina',\n    'minero',\n    'mínimo',\n    'minuto',\n    'miope',\n    'mirar',\n    'misa',\n    'miseria',\n    'misil',\n    'mismo',\n    'mitad',\n    'mito',\n    'mochila',\n    'moción',\n    'moda',\n    'modelo',\n    'moho',\n    'mojar',\n    'molde',\n    'moler',\n    'molino',\n    'momento',\n    'momia',\n    'monarca',\n    'moneda',\n    'monja',\n    'monto',\n    'moño',\n    'morada',\n    'morder',\n    'moreno',\n    'morir',\n    'morro',\n    'morsa',\n    'mortal',\n    'mosca',\n    'mostrar',\n    'motivo',\n    'mover',\n    'móvil',\n    'mozo',\n    'mucho',\n    'mudar',\n    'mueble',\n    'muela',\n    'muerte',\n    'muestra',\n    'mugre',\n    'mujer',\n    'mula',\n    'muleta',\n    'multa',\n    'mundo',\n    'muñeca',\n    'mural',\n    'muro',\n    'músculo',\n    'museo',\n    'musgo',\n    'música',\n    'muslo',\n    'nácar',\n    'nación',\n    'nadar',\n    'naipe',\n    'naranja',\n    'nariz',\n    'narrar',\n    'nasal',\n    'natal',\n    'nativo',\n    'natural',\n    'náusea',\n    'naval',\n    'nave',\n    'navidad',\n    'necio',\n    'néctar',\n    'negar',\n    'negocio',\n    'negro',\n    'neón',\n    'nervio',\n    'neto',\n    'neutro',\n    'nevar',\n    'nevera',\n    'nicho',\n    'nido',\n    'niebla',\n    'nieto',\n    'niñez',\n    'niño',\n    'nítido',\n    'nivel',\n    'nobleza',\n    'noche',\n    'nómina',\n    'noria',\n    'norma',\n    'norte',\n    'nota',\n    'noticia',\n    'novato',\n    'novela',\n    'novio',\n    'nube',\n    'nuca',\n    'núcleo',\n    'nudillo',\n    'nudo',\n    'nuera',\n    'nueve',\n    'nuez',\n    'nulo',\n    'número',\n    'nutria',\n    'oasis',\n    'obeso',\n    'obispo',\n    'objeto',\n    'obra',\n    'obrero',\n    'observar',\n    'obtener',\n    'obvio',\n    'oca',\n    'ocaso',\n    'océano',\n    'ochenta',\n    'ocho',\n    'ocio',\n    'ocre',\n    'octavo',\n    'octubre',\n    'oculto',\n    'ocupar',\n    'ocurrir',\n    'odiar',\n    'odio',\n    'odisea',\n    'oeste',\n    'ofensa',\n    'oferta',\n    'oficio',\n    'ofrecer',\n    'ogro',\n    'oído',\n    'oír',\n    'ojo',\n    'ola',\n    'oleada',\n    'olfato',\n    'olivo',\n    'olla',\n    'olmo',\n    'olor',\n    'olvido',\n    'ombligo',\n    'onda',\n    'onza',\n    'opaco',\n    'opción',\n    'ópera',\n    'opinar',\n    'oponer',\n    'optar',\n    'óptica',\n    'opuesto',\n    'oración',\n    'orador',\n    'oral',\n    'órbita',\n    'orca',\n    'orden',\n    'oreja',\n    'órgano',\n    'orgía',\n    'orgullo',\n    'oriente',\n    'origen',\n    'orilla',\n    'oro',\n    'orquesta',\n    'oruga',\n    'osadía',\n    'oscuro',\n    'osezno',\n    'oso',\n    'ostra',\n    'otoño',\n    'otro',\n    'oveja',\n    'óvulo',\n    'óxido',\n    'oxígeno',\n    'oyente',\n    'ozono',\n    'pacto',\n    'padre',\n    'paella',\n    'página',\n    'pago',\n    'país',\n    'pájaro',\n    'palabra',\n    'palco',\n    'paleta',\n    'pálido',\n    'palma',\n    'paloma',\n    'palpar',\n    'pan',\n    'panal',\n    'pánico',\n    'pantera',\n    'pañuelo',\n    'papá',\n    'papel',\n    'papilla',\n    'paquete',\n    'parar',\n    'parcela',\n    'pared',\n    'parir',\n    'paro',\n    'párpado',\n    'parque',\n    'párrafo',\n    'parte',\n    'pasar',\n    'paseo',\n    'pasión',\n    'paso',\n    'pasta',\n    'pata',\n    'patio',\n    'patria',\n    'pausa',\n    'pauta',\n    'pavo',\n    'payaso',\n    'peatón',\n    'pecado',\n    'pecera',\n    'pecho',\n    'pedal',\n    'pedir',\n    'pegar',\n    'peine',\n    'pelar',\n    'peldaño',\n    'pelea',\n    'peligro',\n    'pellejo',\n    'pelo',\n    'peluca',\n    'pena',\n    'pensar',\n    'peñón',\n    'peón',\n    'peor',\n    'pepino',\n    'pequeño',\n    'pera',\n    'percha',\n    'perder',\n    'pereza',\n    'perfil',\n    'perico',\n    'perla',\n    'permiso',\n    'perro',\n    'persona',\n    'pesa',\n    'pesca',\n    'pésimo',\n    'pestaña',\n    'pétalo',\n    'petróleo',\n    'pez',\n    'pezuña',\n    'picar',\n    'pichón',\n    'pie',\n    'piedra',\n    'pierna',\n    'pieza',\n    'pijama',\n    'pilar',\n    'piloto',\n    'pimienta',\n    'pino',\n    'pintor',\n    'pinza',\n    'piña',\n    'piojo',\n    'pipa',\n    'pirata',\n    'pisar',\n    'piscina',\n    'piso',\n    'pista',\n    'pitón',\n    'pizca',\n    'placa',\n    'plan',\n    'plata',\n    'playa',\n    'plaza',\n    'pleito',\n    'pleno',\n    'plomo',\n    'pluma',\n    'plural',\n    'pobre',\n    'poco',\n    'poder',\n    'podio',\n    'poema',\n    'poesía',\n    'poeta',\n    'polen',\n    'policía',\n    'pollo',\n    'polvo',\n    'pomada',\n    'pomelo',\n    'pomo',\n    'pompa',\n    'poner',\n    'porción',\n    'portal',\n    'posada',\n    'poseer',\n    'posible',\n    'poste',\n    'potencia',\n    'potro',\n    'pozo',\n    'prado',\n    'precoz',\n    'pregunta',\n    'premio',\n    'prensa',\n    'preso',\n    'previo',\n    'primo',\n    'príncipe',\n    'prisión',\n    'privar',\n    'proa',\n    'probar',\n    'proceso',\n    'producto',\n    'proeza',\n    'profesor',\n    'programa',\n    'prole',\n    'promesa',\n    'pronto',\n    'propio',\n    'próximo',\n    'prueba',\n    'público',\n    'puchero',\n    'pudor',\n    'pueblo',\n    'puerta',\n    'puesto',\n    'pulga',\n    'pulir',\n    'pulmón',\n    'pulpo',\n    'pulso',\n    'puma',\n    'punto',\n    'puñal',\n    'puño',\n    'pupa',\n    'pupila',\n    'puré',\n    'quedar',\n    'queja',\n    'quemar',\n    'querer',\n    'queso',\n    'quieto',\n    'química',\n    'quince',\n    'quitar',\n    'rábano',\n    'rabia',\n    'rabo',\n    'ración',\n    'radical',\n    'raíz',\n    'rama',\n    'rampa',\n    'rancho',\n    'rango',\n    'rapaz',\n    'rápido',\n    'rapto',\n    'rasgo',\n    'raspa',\n    'rato',\n    'rayo',\n    'raza',\n    'razón',\n    'reacción',\n    'realidad',\n    'rebaño',\n    'rebote',\n    'recaer',\n    'receta',\n    'rechazo',\n    'recoger',\n    'recreo',\n    'recto',\n    'recurso',\n    'red',\n    'redondo',\n    'reducir',\n    'reflejo',\n    'reforma',\n    'refrán',\n    'refugio',\n    'regalo',\n    'regir',\n    'regla',\n    'regreso',\n    'rehén',\n    'reino',\n    'reír',\n    'reja',\n    'relato',\n    'relevo',\n    'relieve',\n    'relleno',\n    'reloj',\n    'remar',\n    'remedio',\n    'remo',\n    'rencor',\n    'rendir',\n    'renta',\n    'reparto',\n    'repetir',\n    'reposo',\n    'reptil',\n    'res',\n    'rescate',\n    'resina',\n    'respeto',\n    'resto',\n    'resumen',\n    'retiro',\n    'retorno',\n    'retrato',\n    'reunir',\n    'revés',\n    'revista',\n    'rey',\n    'rezar',\n    'rico',\n    'riego',\n    'rienda',\n    'riesgo',\n    'rifa',\n    'rígido',\n    'rigor',\n    'rincón',\n    'riñón',\n    'río',\n    'riqueza',\n    'risa',\n    'ritmo',\n    'rito',\n    'rizo',\n    'roble',\n    'roce',\n    'rociar',\n    'rodar',\n    'rodeo',\n    'rodilla',\n    'roer',\n    'rojizo',\n    'rojo',\n    'romero',\n    'romper',\n    'ron',\n    'ronco',\n    'ronda',\n    'ropa',\n    'ropero',\n    'rosa',\n    'rosca',\n    'rostro',\n    'rotar',\n    'rubí',\n    'rubor',\n    'rudo',\n    'rueda',\n    'rugir',\n    'ruido',\n    'ruina',\n    'ruleta',\n    'rulo',\n    'rumbo',\n    'rumor',\n    'ruptura',\n    'ruta',\n    'rutina',\n    'sábado',\n    'saber',\n    'sabio',\n    'sable',\n    'sacar',\n    'sagaz',\n    'sagrado',\n    'sala',\n    'saldo',\n    'salero',\n    'salir',\n    'salmón',\n    'salón',\n    'salsa',\n    'salto',\n    'salud',\n    'salvar',\n    'samba',\n    'sanción',\n    'sandía',\n    'sanear',\n    'sangre',\n    'sanidad',\n    'sano',\n    'santo',\n    'sapo',\n    'saque',\n    'sardina',\n    'sartén',\n    'sastre',\n    'satán',\n    'sauna',\n    'saxofón',\n    'sección',\n    'seco',\n    'secreto',\n    'secta',\n    'sed',\n    'seguir',\n    'seis',\n    'sello',\n    'selva',\n    'semana',\n    'semilla',\n    'senda',\n    'sensor',\n    'señal',\n    'señor',\n    'separar',\n    'sepia',\n    'sequía',\n    'ser',\n    'serie',\n    'sermón',\n    'servir',\n    'sesenta',\n    'sesión',\n    'seta',\n    'setenta',\n    'severo',\n    'sexo',\n    'sexto',\n    'sidra',\n    'siesta',\n    'siete',\n    'siglo',\n    'signo',\n    'sílaba',\n    'silbar',\n    'silencio',\n    'silla',\n    'símbolo',\n    'simio',\n    'sirena',\n    'sistema',\n    'sitio',\n    'situar',\n    'sobre',\n    'socio',\n    'sodio',\n    'sol',\n    'solapa',\n    'soldado',\n    'soledad',\n    'sólido',\n    'soltar',\n    'solución',\n    'sombra',\n    'sondeo',\n    'sonido',\n    'sonoro',\n    'sonrisa',\n    'sopa',\n    'soplar',\n    'soporte',\n    'sordo',\n    'sorpresa',\n    'sorteo',\n    'sostén',\n    'sótano',\n    'suave',\n    'subir',\n    'suceso',\n    'sudor',\n    'suegra',\n    'suelo',\n    'sueño',\n    'suerte',\n    'sufrir',\n    'sujeto',\n    'sultán',\n    'sumar',\n    'superar',\n    'suplir',\n    'suponer',\n    'supremo',\n    'sur',\n    'surco',\n    'sureño',\n    'surgir',\n    'susto',\n    'sutil',\n    'tabaco',\n    'tabique',\n    'tabla',\n    'tabú',\n    'taco',\n    'tacto',\n    'tajo',\n    'talar',\n    'talco',\n    'talento',\n    'talla',\n    'talón',\n    'tamaño',\n    'tambor',\n    'tango',\n    'tanque',\n    'tapa',\n    'tapete',\n    'tapia',\n    'tapón',\n    'taquilla',\n    'tarde',\n    'tarea',\n    'tarifa',\n    'tarjeta',\n    'tarot',\n    'tarro',\n    'tarta',\n    'tatuaje',\n    'tauro',\n    'taza',\n    'tazón',\n    'teatro',\n    'techo',\n    'tecla',\n    'técnica',\n    'tejado',\n    'tejer',\n    'tejido',\n    'tela',\n    'teléfono',\n    'tema',\n    'temor',\n    'templo',\n    'tenaz',\n    'tender',\n    'tener',\n    'tenis',\n    'tenso',\n    'teoría',\n    'terapia',\n    'terco',\n    'término',\n    'ternura',\n    'terror',\n    'tesis',\n    'tesoro',\n    'testigo',\n    'tetera',\n    'texto',\n    'tez',\n    'tibio',\n    'tiburón',\n    'tiempo',\n    'tienda',\n    'tierra',\n    'tieso',\n    'tigre',\n    'tijera',\n    'tilde',\n    'timbre',\n    'tímido',\n    'timo',\n    'tinta',\n    'tío',\n    'típico',\n    'tipo',\n    'tira',\n    'tirón',\n    'titán',\n    'títere',\n    'título',\n    'tiza',\n    'toalla',\n    'tobillo',\n    'tocar',\n    'tocino',\n    'todo',\n    'toga',\n    'toldo',\n    'tomar',\n    'tono',\n    'tonto',\n    'topar',\n    'tope',\n    'toque',\n    'tórax',\n    'torero',\n    'tormenta',\n    'torneo',\n    'toro',\n    'torpedo',\n    'torre',\n    'torso',\n    'tortuga',\n    'tos',\n    'tosco',\n    'toser',\n    'tóxico',\n    'trabajo',\n    'tractor',\n    'traer',\n    'tráfico',\n    'trago',\n    'traje',\n    'tramo',\n    'trance',\n    'trato',\n    'trauma',\n    'trazar',\n    'trébol',\n    'tregua',\n    'treinta',\n    'tren',\n    'trepar',\n    'tres',\n    'tribu',\n    'trigo',\n    'tripa',\n    'triste',\n    'triunfo',\n    'trofeo',\n    'trompa',\n    'tronco',\n    'tropa',\n    'trote',\n    'trozo',\n    'truco',\n    'trueno',\n    'trufa',\n    'tubería',\n    'tubo',\n    'tuerto',\n    'tumba',\n    'tumor',\n    'túnel',\n    'túnica',\n    'turbina',\n    'turismo',\n    'turno',\n    'tutor',\n    'ubicar',\n    'úlcera',\n    'umbral',\n    'unidad',\n    'unir',\n    'universo',\n    'uno',\n    'untar',\n    'uña',\n    'urbano',\n    'urbe',\n    'urgente',\n    'urna',\n    'usar',\n    'usuario',\n    'útil',\n    'utopía',\n    'uva',\n    'vaca',\n    'vacío',\n    'vacuna',\n    'vagar',\n    'vago',\n    'vaina',\n    'vajilla',\n    'vale',\n    'válido',\n    'valle',\n    'valor',\n    'válvula',\n    'vampiro',\n    'vara',\n    'variar',\n    'varón',\n    'vaso',\n    'vecino',\n    'vector',\n    'vehículo',\n    'veinte',\n    'vejez',\n    'vela',\n    'velero',\n    'veloz',\n    'vena',\n    'vencer',\n    'venda',\n    'veneno',\n    'vengar',\n    'venir',\n    'venta',\n    'venus',\n    'ver',\n    'verano',\n    'verbo',\n    'verde',\n    'vereda',\n    'verja',\n    'verso',\n    'verter',\n    'vía',\n    'viaje',\n    'vibrar',\n    'vicio',\n    'víctima',\n    'vida',\n    'vídeo',\n    'vidrio',\n    'viejo',\n    'viernes',\n    'vigor',\n    'vil',\n    'villa',\n    'vinagre',\n    'vino',\n    'viñedo',\n    'violín',\n    'viral',\n    'virgo',\n    'virtud',\n    'visor',\n    'víspera',\n    'vista',\n    'vitamina',\n    'viudo',\n    'vivaz',\n    'vivero',\n    'vivir',\n    'vivo',\n    'volcán',\n    'volumen',\n    'volver',\n    'voraz',\n    'votar',\n    'voto',\n    'voz',\n    'vuelo',\n    'vulgar',\n    'yacer',\n    'yate',\n    'yegua',\n    'yema',\n    'yerno',\n    'yeso',\n    'yodo',\n    'yoga',\n    'yogur',\n    'zafiro',\n    'zanja',\n    'zapato',\n    'zarza',\n    'zona',\n    'zorro',\n    'zumo',\n    'zurdo'\n];\n//# sourceMappingURL=spanish.js.map","// SPDX-License-Identifier: MIT\nimport { Mnemonic } from '../../mnemonic';\nimport { BIP39Mnemonic } from '../../bip39/mnemonic';\nimport { ElectrumV1Mnemonic } from '../v1/mnemonic';\nimport { ElectrumV2Entropy, ELECTRUM_V2_ENTROPY_STRENGTHS } from '../../../entropies';\nimport { hmacSha512 } from '../../../crypto';\nimport { getBytes, integerToBytes, bytesToInteger, bytesToString, toBuffer } from '../../../utils';\nimport { EntropyError, MnemonicError } from '../../../exceptions';\nimport { ELECTRUM_V2_CHINESE_SIMPLIFIED_WORDLIST, ELECTRUM_V2_ENGLISH_WORDLIST, ELECTRUM_V2_PORTUGUESE_WORDLIST, ELECTRUM_V2_SPANISH_WORDLIST } from './wordlists';\nexport const ELECTRUM_V2_MNEMONIC_WORDS = {\n    TWELVE: 12,\n    TWENTY_FOUR: 24\n};\nexport const ELECTRUM_V2_MNEMONIC_LANGUAGES = {\n    CHINESE_SIMPLIFIED: 'chinese-simplified',\n    ENGLISH: 'english',\n    PORTUGUESE: 'portuguese',\n    SPANISH: 'spanish'\n};\nexport const ELECTRUM_V2_MNEMONIC_TYPES = {\n    STANDARD: 'standard',\n    SEGWIT: 'segwit',\n    STANDARD_2FA: 'standard-2fa',\n    SEGWIT_2FA: 'segwit-2fa'\n};\nexport class ElectrumV2Mnemonic extends Mnemonic {\n    static wordBitLength = 11;\n    static wordsList = [\n        ELECTRUM_V2_MNEMONIC_WORDS.TWELVE,\n        ELECTRUM_V2_MNEMONIC_WORDS.TWENTY_FOUR\n    ];\n    static wordsToEntropyStrength = {\n        12: ELECTRUM_V2_ENTROPY_STRENGTHS.ONE_HUNDRED_THIRTY_TWO,\n        24: ELECTRUM_V2_ENTROPY_STRENGTHS.TWO_HUNDRED_SIXTY_FOUR\n    };\n    static languages = Object.values(ELECTRUM_V2_MNEMONIC_LANGUAGES);\n    static wordLists = {\n        [ELECTRUM_V2_MNEMONIC_LANGUAGES.CHINESE_SIMPLIFIED]: ELECTRUM_V2_CHINESE_SIMPLIFIED_WORDLIST,\n        [ELECTRUM_V2_MNEMONIC_LANGUAGES.ENGLISH]: ELECTRUM_V2_ENGLISH_WORDLIST,\n        [ELECTRUM_V2_MNEMONIC_LANGUAGES.PORTUGUESE]: ELECTRUM_V2_PORTUGUESE_WORDLIST,\n        [ELECTRUM_V2_MNEMONIC_LANGUAGES.SPANISH]: ELECTRUM_V2_SPANISH_WORDLIST\n    };\n    static mnemonicTypes = {\n        [ELECTRUM_V2_MNEMONIC_TYPES.STANDARD]: '01',\n        [ELECTRUM_V2_MNEMONIC_TYPES.SEGWIT]: '100',\n        [ELECTRUM_V2_MNEMONIC_TYPES.STANDARD_2FA]: '101',\n        [ELECTRUM_V2_MNEMONIC_TYPES.SEGWIT_2FA]: '102'\n    };\n    static getName() {\n        return 'Electrum-V2';\n    }\n    static fromWords(count, language, option = {\n        mnemonicType: ELECTRUM_V2_MNEMONIC_TYPES.STANDARD,\n        maxAttempts: BigInt('1' + '0'.repeat(60))\n    }) {\n        if (!this.wordsList.includes(count)) {\n            throw new MnemonicError('Invalid mnemonic words number', {\n                expected: this.wordsList,\n                got: count,\n            });\n        }\n        const entropyBytes = ElectrumV2Entropy.generate(this.wordsToEntropyStrength[count]);\n        return this.fromEntropy(entropyBytes, language, option);\n    }\n    static fromEntropy(entropy, language, option = {\n        mnemonicType: ELECTRUM_V2_MNEMONIC_TYPES.STANDARD,\n        maxAttempts: BigInt('1' + '0'.repeat(60))\n    }) {\n        if (!option.mnemonicType) {\n            throw new MnemonicError('mnemonicType is required');\n        }\n        if (!option.maxAttempts) {\n            option.maxAttempts = BigInt('1' + '0'.repeat(60));\n        }\n        let raw;\n        if (typeof entropy === 'string') {\n            raw = getBytes(entropy);\n        }\n        else if (entropy instanceof Uint8Array) {\n            raw = entropy;\n        }\n        else {\n            raw = getBytes(entropy.getEntropy());\n        }\n        if (!ElectrumV2Entropy.areEntropyBitsEnough(raw)) {\n            throw new EntropyError('Entropy bit length is not enough for generating a valid mnemonic');\n        }\n        const wordsList = this.normalize(this.getWordsListByLanguage(language, this.wordLists));\n        const bip39List = this.normalize(this.getWordsListByLanguage(language, BIP39Mnemonic.wordLists));\n        const bip39Index = Object.fromEntries(bip39List.map((w, i) => [w, i]));\n        let ev1List = [];\n        let ev1Index = {};\n        try {\n            ev1List = this.normalize(this.getWordsListByLanguage(language, ElectrumV1Mnemonic.wordLists));\n            ev1Index = Object.fromEntries(ev1List.map((w, i) => [w, i]));\n        }\n        catch {\n        }\n        const baseEnt = bytesToInteger(raw, false);\n        // try offsets 0,1,2… up to maxAttempts\n        for (let offset = BigInt(0); offset < option.maxAttempts; offset++) {\n            const candidate = integerToBytes(baseEnt + offset, raw.length, 'big');\n            try {\n                return this.encode(candidate, language, {\n                    mnemonicType: option.mnemonicType,\n                    wordsList: wordsList,\n                    bip39List: bip39List,\n                    bip39Index: bip39Index,\n                    ev1List: ev1List,\n                    ev1Index: ev1Index\n                });\n            }\n            catch (err) {\n                if (err instanceof EntropyError) {\n                    continue;\n                }\n                throw err;\n            }\n        }\n        throw new MnemonicError('Unable to generate a valid mnemonic');\n    }\n    static encode(entropy, language, option = {\n        mnemonicType: ELECTRUM_V2_MNEMONIC_TYPES.STANDARD\n    }) {\n        if (!option.mnemonicType) {\n            throw new MnemonicError('mnemonicType is required');\n        }\n        const entropyBytes = getBytes(entropy);\n        let ent = bytesToInteger(entropyBytes, false);\n        if (!ElectrumV2Entropy.areEntropyBitsEnough(entropyBytes)) {\n            throw new EntropyError('Invalid entropy strength for V2');\n        }\n        const wl = option.wordsList ?? this.normalize(this.getWordsListByLanguage(language, this.wordLists));\n        const mnemonic = [];\n        // repeatedly mod/divide\n        while (ent > BigInt(0)) {\n            const idx = Number(ent % BigInt(wl.length));\n            ent = ent / BigInt(wl.length);\n            mnemonic.push(wl[idx]);\n        }\n        if (BIP39Mnemonic.isValid(mnemonic, { wordsList: option.bip39List, wordsListWithIndex: option.bip39Index }) ||\n            ElectrumV1Mnemonic.isValid(mnemonic, { wordsList: option.ev1List, wordsListWithIndex: option.ev1Index })) {\n            throw new EntropyError('Entropy bytes are not suitable for generating a valid mnemonic');\n        }\n        if (!this.isType(mnemonic, option.mnemonicType)) {\n            throw new EntropyError(`Could not generate a '${option.mnemonicType}' mnemonic`);\n        }\n        return this.normalize(mnemonic).join(' ');\n    }\n    static decode(mnemonic, option = {\n        mnemonicType: ELECTRUM_V2_MNEMONIC_TYPES.STANDARD\n    }) {\n        if (!option.mnemonicType) {\n            throw new MnemonicError('mnemonicType is required');\n        }\n        const words = this.normalize(mnemonic);\n        if (!this.wordsList.includes(words.length)) {\n            throw new MnemonicError('Invalid mnemonic words count', {\n                expected: this.wordsList, got: words.length,\n            });\n        }\n        if (!this.isValid(words, option)) {\n            throw new MnemonicError(`Invalid ${option.mnemonicType} mnemonic words`);\n        }\n        const [wordsList] = this.findLanguage(words, this.wordLists);\n        const idxMap = Object.fromEntries(wordsList.map((w, i) => [w, i]));\n        let ent = BigInt(0);\n        // reverse process: from last word to first\n        for (const w of words.slice().reverse()) {\n            ent = ent * BigInt(wordsList.length) + BigInt(idxMap[w]);\n        }\n        // convert bigint -> bytes -> hex\n        const byteLen = Math.ceil(words.length * this.wordBitLength / 8);\n        const buf = integerToBytes(ent, byteLen, 'big');\n        return bytesToString(buf);\n    }\n    static isValid(input, option = {\n        mnemonicType: ELECTRUM_V2_MNEMONIC_TYPES.STANDARD\n    }) {\n        if (BIP39Mnemonic.isValid(input, {\n            wordsList: option.bip39List, wordsListWithIndex: option.bip39Index\n        }) ||\n            ElectrumV1Mnemonic.isValid(input, {\n                wordsList: option.ev1List, wordsListWithIndex: option.ev1Index\n            })) {\n            return false;\n        }\n        return this.isType(input, option.mnemonicType ?? ELECTRUM_V2_MNEMONIC_TYPES.STANDARD);\n    }\n    static isType(input, mnemonicType) {\n        const tag = bytesToString(hmacSha512(toBuffer('Seed version'), this.normalize(input).join(' ')));\n        return tag.startsWith(this.mnemonicTypes[mnemonicType]);\n    }\n    getMnemonicType() {\n        if (!this.options?.mnemonicType) {\n            throw new MnemonicError('mnemonicType is not found');\n        }\n        return this.options?.mnemonicType;\n    }\n    static normalize(input) {\n        const arr = typeof input === 'string' ? input.trim().split(/\\s+/) : input;\n        return arr.map(w => w.normalize('NFKD').toLowerCase());\n    }\n}\n//# sourceMappingURL=mnemonic.js.map","// SPDX-License-Identifier: MIT\nexport const WORDLIST = [\n    '的',\n    '一',\n    '是',\n    '在',\n    '不',\n    '了',\n    '有',\n    '和',\n    '人',\n    '这',\n    '中',\n    '大',\n    '为',\n    '上',\n    '个',\n    '国',\n    '我',\n    '以',\n    '要',\n    '他',\n    '时',\n    '来',\n    '用',\n    '们',\n    '生',\n    '到',\n    '作',\n    '地',\n    '于',\n    '出',\n    '就',\n    '分',\n    '对',\n    '成',\n    '会',\n    '可',\n    '主',\n    '发',\n    '年',\n    '动',\n    '同',\n    '工',\n    '也',\n    '能',\n    '下',\n    '过',\n    '子',\n    '说',\n    '产',\n    '种',\n    '面',\n    '而',\n    '方',\n    '后',\n    '多',\n    '定',\n    '行',\n    '学',\n    '法',\n    '所',\n    '民',\n    '得',\n    '经',\n    '十',\n    '三',\n    '之',\n    '进',\n    '着',\n    '等',\n    '部',\n    '度',\n    '家',\n    '电',\n    '力',\n    '里',\n    '如',\n    '水',\n    '化',\n    '高',\n    '自',\n    '二',\n    '理',\n    '起',\n    '小',\n    '物',\n    '现',\n    '实',\n    '加',\n    '量',\n    '都',\n    '两',\n    '体',\n    '制',\n    '机',\n    '当',\n    '使',\n    '点',\n    '从',\n    '业',\n    '本',\n    '去',\n    '把',\n    '性',\n    '好',\n    '应',\n    '开',\n    '它',\n    '合',\n    '还',\n    '因',\n    '由',\n    '其',\n    '些',\n    '然',\n    '前',\n    '外',\n    '天',\n    '政',\n    '四',\n    '日',\n    '那',\n    '社',\n    '义',\n    '事',\n    '平',\n    '形',\n    '相',\n    '全',\n    '表',\n    '间',\n    '样',\n    '与',\n    '关',\n    '各',\n    '重',\n    '新',\n    '线',\n    '内',\n    '数',\n    '正',\n    '心',\n    '反',\n    '你',\n    '明',\n    '看',\n    '原',\n    '又',\n    '么',\n    '利',\n    '比',\n    '或',\n    '但',\n    '质',\n    '气',\n    '第',\n    '向',\n    '道',\n    '命',\n    '此',\n    '变',\n    '条',\n    '只',\n    '没',\n    '结',\n    '解',\n    '问',\n    '意',\n    '建',\n    '月',\n    '公',\n    '无',\n    '系',\n    '军',\n    '很',\n    '情',\n    '者',\n    '最',\n    '立',\n    '代',\n    '想',\n    '已',\n    '通',\n    '并',\n    '提',\n    '直',\n    '题',\n    '党',\n    '程',\n    '展',\n    '五',\n    '果',\n    '料',\n    '象',\n    '员',\n    '革',\n    '位',\n    '入',\n    '常',\n    '文',\n    '总',\n    '次',\n    '品',\n    '式',\n    '活',\n    '设',\n    '及',\n    '管',\n    '特',\n    '件',\n    '长',\n    '求',\n    '老',\n    '头',\n    '基',\n    '资',\n    '边',\n    '流',\n    '路',\n    '级',\n    '少',\n    '图',\n    '山',\n    '统',\n    '接',\n    '知',\n    '较',\n    '将',\n    '组',\n    '见',\n    '计',\n    '别',\n    '她',\n    '手',\n    '角',\n    '期',\n    '根',\n    '论',\n    '运',\n    '农',\n    '指',\n    '几',\n    '九',\n    '区',\n    '强',\n    '放',\n    '决',\n    '西',\n    '被',\n    '干',\n    '做',\n    '必',\n    '战',\n    '先',\n    '回',\n    '则',\n    '任',\n    '取',\n    '据',\n    '处',\n    '队',\n    '南',\n    '给',\n    '色',\n    '光',\n    '门',\n    '即',\n    '保',\n    '治',\n    '北',\n    '造',\n    '百',\n    '规',\n    '热',\n    '领',\n    '七',\n    '海',\n    '口',\n    '东',\n    '导',\n    '器',\n    '压',\n    '志',\n    '世',\n    '金',\n    '增',\n    '争',\n    '济',\n    '阶',\n    '油',\n    '思',\n    '术',\n    '极',\n    '交',\n    '受',\n    '联',\n    '什',\n    '认',\n    '六',\n    '共',\n    '权',\n    '收',\n    '证',\n    '改',\n    '清',\n    '美',\n    '再',\n    '采',\n    '转',\n    '更',\n    '单',\n    '风',\n    '切',\n    '打',\n    '白',\n    '教',\n    '速',\n    '花',\n    '带',\n    '安',\n    '场',\n    '身',\n    '车',\n    '例',\n    '真',\n    '务',\n    '具',\n    '万',\n    '每',\n    '目',\n    '至',\n    '达',\n    '走',\n    '积',\n    '示',\n    '议',\n    '声',\n    '报',\n    '斗',\n    '完',\n    '类',\n    '八',\n    '离',\n    '华',\n    '名',\n    '确',\n    '才',\n    '科',\n    '张',\n    '信',\n    '马',\n    '节',\n    '话',\n    '米',\n    '整',\n    '空',\n    '元',\n    '况',\n    '今',\n    '集',\n    '温',\n    '传',\n    '土',\n    '许',\n    '步',\n    '群',\n    '广',\n    '石',\n    '记',\n    '需',\n    '段',\n    '研',\n    '界',\n    '拉',\n    '林',\n    '律',\n    '叫',\n    '且',\n    '究',\n    '观',\n    '越',\n    '织',\n    '装',\n    '影',\n    '算',\n    '低',\n    '持',\n    '音',\n    '众',\n    '书',\n    '布',\n    '复',\n    '容',\n    '儿',\n    '须',\n    '际',\n    '商',\n    '非',\n    '验',\n    '连',\n    '断',\n    '深',\n    '难',\n    '近',\n    '矿',\n    '千',\n    '周',\n    '委',\n    '素',\n    '技',\n    '备',\n    '半',\n    '办',\n    '青',\n    '省',\n    '列',\n    '习',\n    '响',\n    '约',\n    '支',\n    '般',\n    '史',\n    '感',\n    '劳',\n    '便',\n    '团',\n    '往',\n    '酸',\n    '历',\n    '市',\n    '克',\n    '何',\n    '除',\n    '消',\n    '构',\n    '府',\n    '称',\n    '太',\n    '准',\n    '精',\n    '值',\n    '号',\n    '率',\n    '族',\n    '维',\n    '划',\n    '选',\n    '标',\n    '写',\n    '存',\n    '候',\n    '毛',\n    '亲',\n    '快',\n    '效',\n    '斯',\n    '院',\n    '查',\n    '江',\n    '型',\n    '眼',\n    '王',\n    '按',\n    '格',\n    '养',\n    '易',\n    '置',\n    '派',\n    '层',\n    '片',\n    '始',\n    '却',\n    '专',\n    '状',\n    '育',\n    '厂',\n    '京',\n    '识',\n    '适',\n    '属',\n    '圆',\n    '包',\n    '火',\n    '住',\n    '调',\n    '满',\n    '县',\n    '局',\n    '照',\n    '参',\n    '红',\n    '细',\n    '引',\n    '听',\n    '该',\n    '铁',\n    '价',\n    '严',\n    '首',\n    '底',\n    '液',\n    '官',\n    '德',\n    '随',\n    '病',\n    '苏',\n    '失',\n    '尔',\n    '死',\n    '讲',\n    '配',\n    '女',\n    '黄',\n    '推',\n    '显',\n    '谈',\n    '罪',\n    '神',\n    '艺',\n    '呢',\n    '席',\n    '含',\n    '企',\n    '望',\n    '密',\n    '批',\n    '营',\n    '项',\n    '防',\n    '举',\n    '球',\n    '英',\n    '氧',\n    '势',\n    '告',\n    '李',\n    '台',\n    '落',\n    '木',\n    '帮',\n    '轮',\n    '破',\n    '亚',\n    '师',\n    '围',\n    '注',\n    '远',\n    '字',\n    '材',\n    '排',\n    '供',\n    '河',\n    '态',\n    '封',\n    '另',\n    '施',\n    '减',\n    '树',\n    '溶',\n    '怎',\n    '止',\n    '案',\n    '言',\n    '士',\n    '均',\n    '武',\n    '固',\n    '叶',\n    '鱼',\n    '波',\n    '视',\n    '仅',\n    '费',\n    '紧',\n    '爱',\n    '左',\n    '章',\n    '早',\n    '朝',\n    '害',\n    '续',\n    '轻',\n    '服',\n    '试',\n    '食',\n    '充',\n    '兵',\n    '源',\n    '判',\n    '护',\n    '司',\n    '足',\n    '某',\n    '练',\n    '差',\n    '致',\n    '板',\n    '田',\n    '降',\n    '黑',\n    '犯',\n    '负',\n    '击',\n    '范',\n    '继',\n    '兴',\n    '似',\n    '余',\n    '坚',\n    '曲',\n    '输',\n    '修',\n    '故',\n    '城',\n    '夫',\n    '够',\n    '送',\n    '笔',\n    '船',\n    '占',\n    '右',\n    '财',\n    '吃',\n    '富',\n    '春',\n    '职',\n    '觉',\n    '汉',\n    '画',\n    '功',\n    '巴',\n    '跟',\n    '虽',\n    '杂',\n    '飞',\n    '检',\n    '吸',\n    '助',\n    '升',\n    '阳',\n    '互',\n    '初',\n    '创',\n    '抗',\n    '考',\n    '投',\n    '坏',\n    '策',\n    '古',\n    '径',\n    '换',\n    '未',\n    '跑',\n    '留',\n    '钢',\n    '曾',\n    '端',\n    '责',\n    '站',\n    '简',\n    '述',\n    '钱',\n    '副',\n    '尽',\n    '帝',\n    '射',\n    '草',\n    '冲',\n    '承',\n    '独',\n    '令',\n    '限',\n    '阿',\n    '宣',\n    '环',\n    '双',\n    '请',\n    '超',\n    '微',\n    '让',\n    '控',\n    '州',\n    '良',\n    '轴',\n    '找',\n    '否',\n    '纪',\n    '益',\n    '依',\n    '优',\n    '顶',\n    '础',\n    '载',\n    '倒',\n    '房',\n    '突',\n    '坐',\n    '粉',\n    '敌',\n    '略',\n    '客',\n    '袁',\n    '冷',\n    '胜',\n    '绝',\n    '析',\n    '块',\n    '剂',\n    '测',\n    '丝',\n    '协',\n    '诉',\n    '念',\n    '陈',\n    '仍',\n    '罗',\n    '盐',\n    '友',\n    '洋',\n    '错',\n    '苦',\n    '夜',\n    '刑',\n    '移',\n    '频',\n    '逐',\n    '靠',\n    '混',\n    '母',\n    '短',\n    '皮',\n    '终',\n    '聚',\n    '汽',\n    '村',\n    '云',\n    '哪',\n    '既',\n    '距',\n    '卫',\n    '停',\n    '烈',\n    '央',\n    '察',\n    '烧',\n    '迅',\n    '境',\n    '若',\n    '印',\n    '洲',\n    '刻',\n    '括',\n    '激',\n    '孔',\n    '搞',\n    '甚',\n    '室',\n    '待',\n    '核',\n    '校',\n    '散',\n    '侵',\n    '吧',\n    '甲',\n    '游',\n    '久',\n    '菜',\n    '味',\n    '旧',\n    '模',\n    '湖',\n    '货',\n    '损',\n    '预',\n    '阻',\n    '毫',\n    '普',\n    '稳',\n    '乙',\n    '妈',\n    '植',\n    '息',\n    '扩',\n    '银',\n    '语',\n    '挥',\n    '酒',\n    '守',\n    '拿',\n    '序',\n    '纸',\n    '医',\n    '缺',\n    '雨',\n    '吗',\n    '针',\n    '刘',\n    '啊',\n    '急',\n    '唱',\n    '误',\n    '训',\n    '愿',\n    '审',\n    '附',\n    '获',\n    '茶',\n    '鲜',\n    '粮',\n    '斤',\n    '孩',\n    '脱',\n    '硫',\n    '肥',\n    '善',\n    '龙',\n    '演',\n    '父',\n    '渐',\n    '血',\n    '欢',\n    '械',\n    '掌',\n    '歌',\n    '沙',\n    '刚',\n    '攻',\n    '谓',\n    '盾',\n    '讨',\n    '晚',\n    '粒',\n    '乱',\n    '燃',\n    '矛',\n    '乎',\n    '杀',\n    '药',\n    '宁',\n    '鲁',\n    '贵',\n    '钟',\n    '煤',\n    '读',\n    '班',\n    '伯',\n    '香',\n    '介',\n    '迫',\n    '句',\n    '丰',\n    '培',\n    '握',\n    '兰',\n    '担',\n    '弦',\n    '蛋',\n    '沉',\n    '假',\n    '穿',\n    '执',\n    '答',\n    '乐',\n    '谁',\n    '顺',\n    '烟',\n    '缩',\n    '征',\n    '脸',\n    '喜',\n    '松',\n    '脚',\n    '困',\n    '异',\n    '免',\n    '背',\n    '星',\n    '福',\n    '买',\n    '染',\n    '井',\n    '概',\n    '慢',\n    '怕',\n    '磁',\n    '倍',\n    '祖',\n    '皇',\n    '促',\n    '静',\n    '补',\n    '评',\n    '翻',\n    '肉',\n    '践',\n    '尼',\n    '衣',\n    '宽',\n    '扬',\n    '棉',\n    '希',\n    '伤',\n    '操',\n    '垂',\n    '秋',\n    '宜',\n    '氢',\n    '套',\n    '督',\n    '振',\n    '架',\n    '亮',\n    '末',\n    '宪',\n    '庆',\n    '编',\n    '牛',\n    '触',\n    '映',\n    '雷',\n    '销',\n    '诗',\n    '座',\n    '居',\n    '抓',\n    '裂',\n    '胞',\n    '呼',\n    '娘',\n    '景',\n    '威',\n    '绿',\n    '晶',\n    '厚',\n    '盟',\n    '衡',\n    '鸡',\n    '孙',\n    '延',\n    '危',\n    '胶',\n    '屋',\n    '乡',\n    '临',\n    '陆',\n    '顾',\n    '掉',\n    '呀',\n    '灯',\n    '岁',\n    '措',\n    '束',\n    '耐',\n    '剧',\n    '玉',\n    '赵',\n    '跳',\n    '哥',\n    '季',\n    '课',\n    '凯',\n    '胡',\n    '额',\n    '款',\n    '绍',\n    '卷',\n    '齐',\n    '伟',\n    '蒸',\n    '殖',\n    '永',\n    '宗',\n    '苗',\n    '川',\n    '炉',\n    '岩',\n    '弱',\n    '零',\n    '杨',\n    '奏',\n    '沿',\n    '露',\n    '杆',\n    '探',\n    '滑',\n    '镇',\n    '饭',\n    '浓',\n    '航',\n    '怀',\n    '赶',\n    '库',\n    '夺',\n    '伊',\n    '灵',\n    '税',\n    '途',\n    '灭',\n    '赛',\n    '归',\n    '召',\n    '鼓',\n    '播',\n    '盘',\n    '裁',\n    '险',\n    '康',\n    '唯',\n    '录',\n    '菌',\n    '纯',\n    '借',\n    '糖',\n    '盖',\n    '横',\n    '符',\n    '私',\n    '努',\n    '堂',\n    '域',\n    '枪',\n    '润',\n    '幅',\n    '哈',\n    '竟',\n    '熟',\n    '虫',\n    '泽',\n    '脑',\n    '壤',\n    '碳',\n    '欧',\n    '遍',\n    '侧',\n    '寨',\n    '敢',\n    '彻',\n    '虑',\n    '斜',\n    '薄',\n    '庭',\n    '纳',\n    '弹',\n    '饲',\n    '伸',\n    '折',\n    '麦',\n    '湿',\n    '暗',\n    '荷',\n    '瓦',\n    '塞',\n    '床',\n    '筑',\n    '恶',\n    '户',\n    '访',\n    '塔',\n    '奇',\n    '透',\n    '梁',\n    '刀',\n    '旋',\n    '迹',\n    '卡',\n    '氯',\n    '遇',\n    '份',\n    '毒',\n    '泥',\n    '退',\n    '洗',\n    '摆',\n    '灰',\n    '彩',\n    '卖',\n    '耗',\n    '夏',\n    '择',\n    '忙',\n    '铜',\n    '献',\n    '硬',\n    '予',\n    '繁',\n    '圈',\n    '雪',\n    '函',\n    '亦',\n    '抽',\n    '篇',\n    '阵',\n    '阴',\n    '丁',\n    '尺',\n    '追',\n    '堆',\n    '雄',\n    '迎',\n    '泛',\n    '爸',\n    '楼',\n    '避',\n    '谋',\n    '吨',\n    '野',\n    '猪',\n    '旗',\n    '累',\n    '偏',\n    '典',\n    '馆',\n    '索',\n    '秦',\n    '脂',\n    '潮',\n    '爷',\n    '豆',\n    '忽',\n    '托',\n    '惊',\n    '塑',\n    '遗',\n    '愈',\n    '朱',\n    '替',\n    '纤',\n    '粗',\n    '倾',\n    '尚',\n    '痛',\n    '楚',\n    '谢',\n    '奋',\n    '购',\n    '磨',\n    '君',\n    '池',\n    '旁',\n    '碎',\n    '骨',\n    '监',\n    '捕',\n    '弟',\n    '暴',\n    '割',\n    '贯',\n    '殊',\n    '释',\n    '词',\n    '亡',\n    '壁',\n    '顿',\n    '宝',\n    '午',\n    '尘',\n    '闻',\n    '揭',\n    '炮',\n    '残',\n    '冬',\n    '桥',\n    '妇',\n    '警',\n    '综',\n    '招',\n    '吴',\n    '付',\n    '浮',\n    '遭',\n    '徐',\n    '您',\n    '摇',\n    '谷',\n    '赞',\n    '箱',\n    '隔',\n    '订',\n    '男',\n    '吹',\n    '园',\n    '纷',\n    '唐',\n    '败',\n    '宋',\n    '玻',\n    '巨',\n    '耕',\n    '坦',\n    '荣',\n    '闭',\n    '湾',\n    '键',\n    '凡',\n    '驻',\n    '锅',\n    '救',\n    '恩',\n    '剥',\n    '凝',\n    '碱',\n    '齿',\n    '截',\n    '炼',\n    '麻',\n    '纺',\n    '禁',\n    '废',\n    '盛',\n    '版',\n    '缓',\n    '净',\n    '睛',\n    '昌',\n    '婚',\n    '涉',\n    '筒',\n    '嘴',\n    '插',\n    '岸',\n    '朗',\n    '庄',\n    '街',\n    '藏',\n    '姑',\n    '贸',\n    '腐',\n    '奴',\n    '啦',\n    '惯',\n    '乘',\n    '伙',\n    '恢',\n    '匀',\n    '纱',\n    '扎',\n    '辩',\n    '耳',\n    '彪',\n    '臣',\n    '亿',\n    '璃',\n    '抵',\n    '脉',\n    '秀',\n    '萨',\n    '俄',\n    '网',\n    '舞',\n    '店',\n    '喷',\n    '纵',\n    '寸',\n    '汗',\n    '挂',\n    '洪',\n    '贺',\n    '闪',\n    '柬',\n    '爆',\n    '烯',\n    '津',\n    '稻',\n    '墙',\n    '软',\n    '勇',\n    '像',\n    '滚',\n    '厘',\n    '蒙',\n    '芳',\n    '肯',\n    '坡',\n    '柱',\n    '荡',\n    '腿',\n    '仪',\n    '旅',\n    '尾',\n    '轧',\n    '冰',\n    '贡',\n    '登',\n    '黎',\n    '削',\n    '钻',\n    '勒',\n    '逃',\n    '障',\n    '氨',\n    '郭',\n    '峰',\n    '币',\n    '港',\n    '伏',\n    '轨',\n    '亩',\n    '毕',\n    '擦',\n    '莫',\n    '刺',\n    '浪',\n    '秘',\n    '援',\n    '株',\n    '健',\n    '售',\n    '股',\n    '岛',\n    '甘',\n    '泡',\n    '睡',\n    '童',\n    '铸',\n    '汤',\n    '阀',\n    '休',\n    '汇',\n    '舍',\n    '牧',\n    '绕',\n    '炸',\n    '哲',\n    '磷',\n    '绩',\n    '朋',\n    '淡',\n    '尖',\n    '启',\n    '陷',\n    '柴',\n    '呈',\n    '徒',\n    '颜',\n    '泪',\n    '稍',\n    '忘',\n    '泵',\n    '蓝',\n    '拖',\n    '洞',\n    '授',\n    '镜',\n    '辛',\n    '壮',\n    '锋',\n    '贫',\n    '虚',\n    '弯',\n    '摩',\n    '泰',\n    '幼',\n    '廷',\n    '尊',\n    '窗',\n    '纲',\n    '弄',\n    '隶',\n    '疑',\n    '氏',\n    '宫',\n    '姐',\n    '震',\n    '瑞',\n    '怪',\n    '尤',\n    '琴',\n    '循',\n    '描',\n    '膜',\n    '违',\n    '夹',\n    '腰',\n    '缘',\n    '珠',\n    '穷',\n    '森',\n    '枝',\n    '竹',\n    '沟',\n    '催',\n    '绳',\n    '忆',\n    '邦',\n    '剩',\n    '幸',\n    '浆',\n    '栏',\n    '拥',\n    '牙',\n    '贮',\n    '礼',\n    '滤',\n    '钠',\n    '纹',\n    '罢',\n    '拍',\n    '咱',\n    '喊',\n    '袖',\n    '埃',\n    '勤',\n    '罚',\n    '焦',\n    '潜',\n    '伍',\n    '墨',\n    '欲',\n    '缝',\n    '姓',\n    '刊',\n    '饱',\n    '仿',\n    '奖',\n    '铝',\n    '鬼',\n    '丽',\n    '跨',\n    '默',\n    '挖',\n    '链',\n    '扫',\n    '喝',\n    '袋',\n    '炭',\n    '污',\n    '幕',\n    '诸',\n    '弧',\n    '励',\n    '梅',\n    '奶',\n    '洁',\n    '灾',\n    '舟',\n    '鉴',\n    '苯',\n    '讼',\n    '抱',\n    '毁',\n    '懂',\n    '寒',\n    '智',\n    '埔',\n    '寄',\n    '届',\n    '跃',\n    '渡',\n    '挑',\n    '丹',\n    '艰',\n    '贝',\n    '碰',\n    '拔',\n    '爹',\n    '戴',\n    '码',\n    '梦',\n    '芽',\n    '熔',\n    '赤',\n    '渔',\n    '哭',\n    '敬',\n    '颗',\n    '奔',\n    '铅',\n    '仲',\n    '虎',\n    '稀',\n    '妹',\n    '乏',\n    '珍',\n    '申',\n    '桌',\n    '遵',\n    '允',\n    '隆',\n    '螺',\n    '仓',\n    '魏',\n    '锐',\n    '晓',\n    '氮',\n    '兼',\n    '隐',\n    '碍',\n    '赫',\n    '拨',\n    '忠',\n    '肃',\n    '缸',\n    '牵',\n    '抢',\n    '博',\n    '巧',\n    '壳',\n    '兄',\n    '杜',\n    '讯',\n    '诚',\n    '碧',\n    '祥',\n    '柯',\n    '页',\n    '巡',\n    '矩',\n    '悲',\n    '灌',\n    '龄',\n    '伦',\n    '票',\n    '寻',\n    '桂',\n    '铺',\n    '圣',\n    '恐',\n    '恰',\n    '郑',\n    '趣',\n    '抬',\n    '荒',\n    '腾',\n    '贴',\n    '柔',\n    '滴',\n    '猛',\n    '阔',\n    '辆',\n    '妻',\n    '填',\n    '撤',\n    '储',\n    '签',\n    '闹',\n    '扰',\n    '紫',\n    '砂',\n    '递',\n    '戏',\n    '吊',\n    '陶',\n    '伐',\n    '喂',\n    '疗',\n    '瓶',\n    '婆',\n    '抚',\n    '臂',\n    '摸',\n    '忍',\n    '虾',\n    '蜡',\n    '邻',\n    '胸',\n    '巩',\n    '挤',\n    '偶',\n    '弃',\n    '槽',\n    '劲',\n    '乳',\n    '邓',\n    '吉',\n    '仁',\n    '烂',\n    '砖',\n    '租',\n    '乌',\n    '舰',\n    '伴',\n    '瓜',\n    '浅',\n    '丙',\n    '暂',\n    '燥',\n    '橡',\n    '柳',\n    '迷',\n    '暖',\n    '牌',\n    '秧',\n    '胆',\n    '详',\n    '簧',\n    '踏',\n    '瓷',\n    '谱',\n    '呆',\n    '宾',\n    '糊',\n    '洛',\n    '辉',\n    '愤',\n    '竞',\n    '隙',\n    '怒',\n    '粘',\n    '乃',\n    '绪',\n    '肩',\n    '籍',\n    '敏',\n    '涂',\n    '熙',\n    '皆',\n    '侦',\n    '悬',\n    '掘',\n    '享',\n    '纠',\n    '醒',\n    '狂',\n    '锁',\n    '淀',\n    '恨',\n    '牲',\n    '霸',\n    '爬',\n    '赏',\n    '逆',\n    '玩',\n    '陵',\n    '祝',\n    '秒',\n    '浙',\n    '貌'\n];\n//# sourceMappingURL=chinese-simplified.js.map","// SPDX-License-Identifier: MIT\nexport const WORDLIST = [\n    'aalglad',\n    'aalscholver',\n    'aambeeld',\n    'aangeef',\n    'aanlandig',\n    'aanvaard',\n    'aanwakker',\n    'aapmens',\n    'aarten',\n    'abdicatie',\n    'abnormaal',\n    'abrikoos',\n    'accu',\n    'acuut',\n    'adjudant',\n    'admiraal',\n    'advies',\n    'afbidding',\n    'afdracht',\n    'affaire',\n    'affiche',\n    'afgang',\n    'afkick',\n    'afknap',\n    'aflees',\n    'afmijner',\n    'afname',\n    'afpreekt',\n    'afrader',\n    'afspeel',\n    'aftocht',\n    'aftrek',\n    'afzijdig',\n    'ahornboom',\n    'aktetas',\n    'akzo',\n    'alchemist',\n    'alcohol',\n    'aldaar',\n    'alexander',\n    'alfabet',\n    'alfredo',\n    'alice',\n    'alikruik',\n    'allrisk',\n    'altsax',\n    'alufolie',\n    'alziend',\n    'amai',\n    'ambacht',\n    'ambieer',\n    'amina',\n    'amnestie',\n    'amok',\n    'ampul',\n    'amuzikaal',\n    'angela',\n    'aniek',\n    'antje',\n    'antwerpen',\n    'anya',\n    'aorta',\n    'apache',\n    'apekool',\n    'appelaar',\n    'arganolie',\n    'argeloos',\n    'armoede',\n    'arrenslee',\n    'artritis',\n    'arubaan',\n    'asbak',\n    'ascii',\n    'asgrauw',\n    'asjes',\n    'asml',\n    'aspunt',\n    'asurn',\n    'asveld',\n    'aterling',\n    'atomair',\n    'atrium',\n    'atsma',\n    'atypisch',\n    'auping',\n    'aura',\n    'avifauna',\n    'axiaal',\n    'azoriaan',\n    'azteek',\n    'azuur',\n    'bachelor',\n    'badderen',\n    'badhotel',\n    'badmantel',\n    'badsteden',\n    'balie',\n    'ballans',\n    'balvers',\n    'bamibal',\n    'banneling',\n    'barracuda',\n    'basaal',\n    'batelaan',\n    'batje',\n    'beambte',\n    'bedlamp',\n    'bedwelmd',\n    'befaamd',\n    'begierd',\n    'begraaf',\n    'behield',\n    'beijaard',\n    'bejaagd',\n    'bekaaid',\n    'beks',\n    'bektas',\n    'belaad',\n    'belboei',\n    'belderbos',\n    'beloerd',\n    'beluchten',\n    'bemiddeld',\n    'benadeeld',\n    'benijd',\n    'berechten',\n    'beroemd',\n    'besef',\n    'besseling',\n    'best',\n    'betichten',\n    'bevind',\n    'bevochten',\n    'bevraagd',\n    'bewust',\n    'bidplaats',\n    'biefstuk',\n    'biemans',\n    'biezen',\n    'bijbaan',\n    'bijeenkom',\n    'bijfiguur',\n    'bijkaart',\n    'bijlage',\n    'bijpaard',\n    'bijtgaar',\n    'bijweg',\n    'bimmel',\n    'binck',\n    'bint',\n    'biobak',\n    'biotisch',\n    'biseks',\n    'bistro',\n    'bitter',\n    'bitumen',\n    'bizar',\n    'blad',\n    'bleken',\n    'blender',\n    'bleu',\n    'blief',\n    'blijven',\n    'blozen',\n    'bock',\n    'boef',\n    'boei',\n    'boks',\n    'bolder',\n    'bolus',\n    'bolvormig',\n    'bomaanval',\n    'bombarde',\n    'bomma',\n    'bomtapijt',\n    'bookmaker',\n    'boos',\n    'borg',\n    'bosbes',\n    'boshuizen',\n    'bosloop',\n    'botanicus',\n    'bougie',\n    'bovag',\n    'boxspring',\n    'braad',\n    'brasem',\n    'brevet',\n    'brigade',\n    'brinckman',\n    'bruid',\n    'budget',\n    'buffel',\n    'buks',\n    'bulgaar',\n    'buma',\n    'butaan',\n    'butler',\n    'buuf',\n    'cactus',\n    'cafeetje',\n    'camcorder',\n    'cannabis',\n    'canyon',\n    'capoeira',\n    'capsule',\n    'carkit',\n    'casanova',\n    'catalaan',\n    'ceintuur',\n    'celdeling',\n    'celplasma',\n    'cement',\n    'censeren',\n    'ceramisch',\n    'cerberus',\n    'cerebraal',\n    'cesium',\n    'cirkel',\n    'citeer',\n    'civiel',\n    'claxon',\n    'clenbuterol',\n    'clicheren',\n    'clijsen',\n    'coalitie',\n    'coassistentschap',\n    'coaxiaal',\n    'codetaal',\n    'cofinanciering',\n    'cognac',\n    'coltrui',\n    'comfort',\n    'commandant',\n    'condensaat',\n    'confectie',\n    'conifeer',\n    'convector',\n    'copier',\n    'corfu',\n    'correct',\n    'coup',\n    'couvert',\n    'creatie',\n    'credit',\n    'crematie',\n    'cricket',\n    'croupier',\n    'cruciaal',\n    'cruijff',\n    'cuisine',\n    'culemborg',\n    'culinair',\n    'curve',\n    'cyrano',\n    'dactylus',\n    'dading',\n    'dagblind',\n    'dagje',\n    'daglicht',\n    'dagprijs',\n    'dagranden',\n    'dakdekker',\n    'dakpark',\n    'dakterras',\n    'dalgrond',\n    'dambord',\n    'damkat',\n    'damlengte',\n    'damman',\n    'danenberg',\n    'debbie',\n    'decibel',\n    'defect',\n    'deformeer',\n    'degelijk',\n    'degradant',\n    'dejonghe',\n    'dekken',\n    'deppen',\n    'derek',\n    'derf',\n    'derhalve',\n    'detineren',\n    'devalueer',\n    'diaken',\n    'dicht',\n    'dictaat',\n    'dief',\n    'digitaal',\n    'dijbreuk',\n    'dijkmans',\n    'dimbaar',\n    'dinsdag',\n    'diode',\n    'dirigeer',\n    'disbalans',\n    'dobermann',\n    'doenbaar',\n    'doerak',\n    'dogma',\n    'dokhaven',\n    'dokwerker',\n    'doling',\n    'dolphijn',\n    'dolven',\n    'dombo',\n    'dooraderd',\n    'dopeling',\n    'doping',\n    'draderig',\n    'drama',\n    'drenkbak',\n    'dreumes',\n    'drol',\n    'drug',\n    'duaal',\n    'dublin',\n    'duplicaat',\n    'durven',\n    'dusdanig',\n    'dutchbat',\n    'dutje',\n    'dutten',\n    'duur',\n    'duwwerk',\n    'dwaal',\n    'dweil',\n    'dwing',\n    'dyslexie',\n    'ecostroom',\n    'ecotaks',\n    'educatie',\n    'eeckhout',\n    'eede',\n    'eemland',\n    'eencellig',\n    'eeneiig',\n    'eenruiter',\n    'eenwinter',\n    'eerenberg',\n    'eerrover',\n    'eersel',\n    'eetmaal',\n    'efteling',\n    'egaal',\n    'egtberts',\n    'eickhoff',\n    'eidooier',\n    'eiland',\n    'eind',\n    'eisden',\n    'ekster',\n    'elburg',\n    'elevatie',\n    'elfkoppig',\n    'elfrink',\n    'elftal',\n    'elimineer',\n    'elleboog',\n    'elma',\n    'elodie',\n    'elsa',\n    'embleem',\n    'embolie',\n    'emoe',\n    'emonds',\n    'emplooi',\n    'enduro',\n    'enfin',\n    'engageer',\n    'entourage',\n    'entstof',\n    'epileer',\n    'episch',\n    'eppo',\n    'erasmus',\n    'erboven',\n    'erebaan',\n    'erelijst',\n    'ereronden',\n    'ereteken',\n    'erfhuis',\n    'erfwet',\n    'erger',\n    'erica',\n    'ermitage',\n    'erna',\n    'ernie',\n    'erts',\n    'ertussen',\n    'eruitzien',\n    'ervaar',\n    'erven',\n    'erwt',\n    'esbeek',\n    'escort',\n    'esdoorn',\n    'essing',\n    'etage',\n    'eter',\n    'ethanol',\n    'ethicus',\n    'etholoog',\n    'eufonisch',\n    'eurocent',\n    'evacuatie',\n    'exact',\n    'examen',\n    'executant',\n    'exen',\n    'exit',\n    'exogeen',\n    'exotherm',\n    'expeditie',\n    'expletief',\n    'expres',\n    'extase',\n    'extinctie',\n    'faal',\n    'faam',\n    'fabel',\n    'facultair',\n    'fakir',\n    'fakkel',\n    'faliekant',\n    'fallisch',\n    'famke',\n    'fanclub',\n    'fase',\n    'fatsoen',\n    'fauna',\n    'federaal',\n    'feedback',\n    'feest',\n    'feilbaar',\n    'feitelijk',\n    'felblauw',\n    'figurante',\n    'fiod',\n    'fitheid',\n    'fixeer',\n    'flap',\n    'fleece',\n    'fleur',\n    'flexibel',\n    'flits',\n    'flos',\n    'flow',\n    'fluweel',\n    'foezelen',\n    'fokkelman',\n    'fokpaard',\n    'fokvee',\n    'folder',\n    'follikel',\n    'folmer',\n    'folteraar',\n    'fooi',\n    'foolen',\n    'forfait',\n    'forint',\n    'formule',\n    'fornuis',\n    'fosfaat',\n    'foxtrot',\n    'foyer',\n    'fragiel',\n    'frater',\n    'freak',\n    'freddie',\n    'fregat',\n    'freon',\n    'frijnen',\n    'fructose',\n    'frunniken',\n    'fuiven',\n    'funshop',\n    'furieus',\n    'fysica',\n    'gadget',\n    'galder',\n    'galei',\n    'galg',\n    'galvlieg',\n    'galzuur',\n    'ganesh',\n    'gaswet',\n    'gaza',\n    'gazelle',\n    'geaaid',\n    'gebiecht',\n    'gebufferd',\n    'gedijd',\n    'geef',\n    'geflanst',\n    'gefreesd',\n    'gegaan',\n    'gegijzeld',\n    'gegniffel',\n    'gegraaid',\n    'gehikt',\n    'gehobbeld',\n    'gehucht',\n    'geiser',\n    'geiten',\n    'gekaakt',\n    'gekheid',\n    'gekijf',\n    'gekmakend',\n    'gekocht',\n    'gekskap',\n    'gekte',\n    'gelubberd',\n    'gemiddeld',\n    'geordend',\n    'gepoederd',\n    'gepuft',\n    'gerda',\n    'gerijpt',\n    'geseald',\n    'geshockt',\n    'gesierd',\n    'geslaagd',\n    'gesnaaid',\n    'getracht',\n    'getwijfel',\n    'geuit',\n    'gevecht',\n    'gevlagd',\n    'gewicht',\n    'gezaagd',\n    'gezocht',\n    'ghanees',\n    'giebelen',\n    'giechel',\n    'giepmans',\n    'gips',\n    'giraal',\n    'gistachtig',\n    'gitaar',\n    'glaasje',\n    'gletsjer',\n    'gleuf',\n    'glibberen',\n    'glijbaan',\n    'gloren',\n    'gluipen',\n    'gluren',\n    'gluur',\n    'gnoe',\n    'goddelijk',\n    'godgans',\n    'godschalk',\n    'godzalig',\n    'goeierd',\n    'gogme',\n    'goklustig',\n    'gokwereld',\n    'gonggrijp',\n    'gonje',\n    'goor',\n    'grabbel',\n    'graf',\n    'graveer',\n    'grif',\n    'grolleman',\n    'grom',\n    'groosman',\n    'grubben',\n    'gruijs',\n    'grut',\n    'guacamole',\n    'guido',\n    'guppy',\n    'haazen',\n    'hachelijk',\n    'haex',\n    'haiku',\n    'hakhout',\n    'hakken',\n    'hanegem',\n    'hans',\n    'hanteer',\n    'harrie',\n    'hazebroek',\n    'hedonist',\n    'heil',\n    'heineken',\n    'hekhuis',\n    'hekman',\n    'helbig',\n    'helga',\n    'helwegen',\n    'hengelaar',\n    'herkansen',\n    'hermafrodiet',\n    'hertaald',\n    'hiaat',\n    'hikspoors',\n    'hitachi',\n    'hitparade',\n    'hobo',\n    'hoeve',\n    'holocaust',\n    'hond',\n    'honnepon',\n    'hoogacht',\n    'hotelbed',\n    'hufter',\n    'hugo',\n    'huilbier',\n    'hulk',\n    'humus',\n    'huwbaar',\n    'huwelijk',\n    'hype',\n    'iconisch',\n    'idema',\n    'ideogram',\n    'idolaat',\n    'ietje',\n    'ijker',\n    'ijkheid',\n    'ijklijn',\n    'ijkmaat',\n    'ijkwezen',\n    'ijmuiden',\n    'ijsbox',\n    'ijsdag',\n    'ijselijk',\n    'ijskoud',\n    'ilse',\n    'immuun',\n    'impliceer',\n    'impuls',\n    'inbijten',\n    'inbuigen',\n    'indijken',\n    'induceer',\n    'indy',\n    'infecteer',\n    'inhaak',\n    'inkijk',\n    'inluiden',\n    'inmijnen',\n    'inoefenen',\n    'inpolder',\n    'inrijden',\n    'inslaan',\n    'invitatie',\n    'inwaaien',\n    'ionisch',\n    'isaac',\n    'isolatie',\n    'isotherm',\n    'isra',\n    'italiaan',\n    'ivoor',\n    'jacobs',\n    'jakob',\n    'jammen',\n    'jampot',\n    'jarig',\n    'jehova',\n    'jenever',\n    'jezus',\n    'joana',\n    'jobdienst',\n    'josua',\n    'joule',\n    'juich',\n    'jurk',\n    'juut',\n    'kaas',\n    'kabelaar',\n    'kabinet',\n    'kagenaar',\n    'kajuit',\n    'kalebas',\n    'kalm',\n    'kanjer',\n    'kapucijn',\n    'karregat',\n    'kart',\n    'katvanger',\n    'katwijk',\n    'kegelaar',\n    'keiachtig',\n    'keizer',\n    'kenletter',\n    'kerdijk',\n    'keus',\n    'kevlar',\n    'kezen',\n    'kickback',\n    'kieviet',\n    'kijken',\n    'kikvors',\n    'kilheid',\n    'kilobit',\n    'kilsdonk',\n    'kipschnitzel',\n    'kissebis',\n    'klad',\n    'klagelijk',\n    'klak',\n    'klapbaar',\n    'klaver',\n    'klene',\n    'klets',\n    'klijnhout',\n    'klit',\n    'klok',\n    'klonen',\n    'klotefilm',\n    'kluif',\n    'klumper',\n    'klus',\n    'knabbel',\n    'knagen',\n    'knaven',\n    'kneedbaar',\n    'knmi',\n    'knul',\n    'knus',\n    'kokhals',\n    'komiek',\n    'komkommer',\n    'kompaan',\n    'komrij',\n    'komvormig',\n    'koning',\n    'kopbal',\n    'kopklep',\n    'kopnagel',\n    'koppejan',\n    'koptekst',\n    'kopwand',\n    'koraal',\n    'kosmisch',\n    'kostbaar',\n    'kram',\n    'kraneveld',\n    'kras',\n    'kreling',\n    'krengen',\n    'kribbe',\n    'krik',\n    'kruid',\n    'krulbol',\n    'kuijper',\n    'kuipbank',\n    'kuit',\n    'kuiven',\n    'kutsmoes',\n    'kuub',\n    'kwak',\n    'kwatong',\n    'kwetsbaar',\n    'kwezelaar',\n    'kwijnen',\n    'kwik',\n    'kwinkslag',\n    'kwitantie',\n    'lading',\n    'lakbeits',\n    'lakken',\n    'laklaag',\n    'lakmoes',\n    'lakwijk',\n    'lamheid',\n    'lamp',\n    'lamsbout',\n    'lapmiddel',\n    'larve',\n    'laser',\n    'latijn',\n    'latuw',\n    'lawaai',\n    'laxeerpil',\n    'lebberen',\n    'ledeboer',\n    'leefbaar',\n    'leeman',\n    'lefdoekje',\n    'lefhebber',\n    'legboor',\n    'legsel',\n    'leguaan',\n    'leiplaat',\n    'lekdicht',\n    'lekrijden',\n    'leksteen',\n    'lenen',\n    'leraar',\n    'lesbienne',\n    'leugenaar',\n    'leut',\n    'lexicaal',\n    'lezing',\n    'lieten',\n    'liggeld',\n    'lijdzaam',\n    'lijk',\n    'lijmstang',\n    'lijnschip',\n    'likdoorn',\n    'likken',\n    'liksteen',\n    'limburg',\n    'link',\n    'linoleum',\n    'lipbloem',\n    'lipman',\n    'lispelen',\n    'lissabon',\n    'litanie',\n    'liturgie',\n    'lochem',\n    'loempia',\n    'loesje',\n    'logheid',\n    'lonen',\n    'lonneke',\n    'loom',\n    'loos',\n    'losbaar',\n    'loslaten',\n    'losplaats',\n    'loting',\n    'lotnummer',\n    'lots',\n    'louie',\n    'lourdes',\n    'louter',\n    'lowbudget',\n    'luijten',\n    'luikenaar',\n    'luilak',\n    'luipaard',\n    'luizenbos',\n    'lulkoek',\n    'lumen',\n    'lunzen',\n    'lurven',\n    'lutjeboer',\n    'luttel',\n    'lutz',\n    'luuk',\n    'luwte',\n    'luyendijk',\n    'lyceum',\n    'lynx',\n    'maakbaar',\n    'magdalena',\n    'malheid',\n    'manchet',\n    'manfred',\n    'manhaftig',\n    'mank',\n    'mantel',\n    'marion',\n    'marxist',\n    'masmeijer',\n    'massaal',\n    'matsen',\n    'matverf',\n    'matze',\n    'maude',\n    'mayonaise',\n    'mechanica',\n    'meifeest',\n    'melodie',\n    'meppelink',\n    'midvoor',\n    'midweeks',\n    'midzomer',\n    'miezel',\n    'mijnraad',\n    'minus',\n    'mirck',\n    'mirte',\n    'mispakken',\n    'misraden',\n    'miswassen',\n    'mitella',\n    'moker',\n    'molecule',\n    'mombakkes',\n    'moonen',\n    'mopperaar',\n    'moraal',\n    'morgana',\n    'mormel',\n    'mosselaar',\n    'motregen',\n    'mouw',\n    'mufheid',\n    'mutueel',\n    'muzelman',\n    'naaidoos',\n    'naald',\n    'nadeel',\n    'nadruk',\n    'nagy',\n    'nahon',\n    'naima',\n    'nairobi',\n    'napalm',\n    'napels',\n    'napijn',\n    'napoleon',\n    'narigheid',\n    'narratief',\n    'naseizoen',\n    'nasibal',\n    'navigatie',\n    'nawijn',\n    'negatief',\n    'nekletsel',\n    'nekwervel',\n    'neolatijn',\n    'neonataal',\n    'neptunus',\n    'nerd',\n    'nest',\n    'neuzelaar',\n    'nihiliste',\n    'nijenhuis',\n    'nijging',\n    'nijhoff',\n    'nijl',\n    'nijptang',\n    'nippel',\n    'nokkenas',\n    'noordam',\n    'noren',\n    'normaal',\n    'nottelman',\n    'notulant',\n    'nout',\n    'nuance',\n    'nuchter',\n    'nudorp',\n    'nulde',\n    'nullijn',\n    'nulmeting',\n    'nunspeet',\n    'nylon',\n    'obelisk',\n    'object',\n    'oblie',\n    'obsceen',\n    'occlusie',\n    'oceaan',\n    'ochtend',\n    'ockhuizen',\n    'oerdom',\n    'oergezond',\n    'oerlaag',\n    'oester',\n    'okhuijsen',\n    'olifant',\n    'olijfboer',\n    'omaans',\n    'ombudsman',\n    'omdat',\n    'omdijken',\n    'omdoen',\n    'omgebouwd',\n    'omkeer',\n    'omkomen',\n    'ommegaand',\n    'ommuren',\n    'omroep',\n    'omruil',\n    'omslaan',\n    'omsmeden',\n    'omvaar',\n    'onaardig',\n    'onedel',\n    'onenig',\n    'onheilig',\n    'onrecht',\n    'onroerend',\n    'ontcijfer',\n    'onthaal',\n    'ontvallen',\n    'ontzadeld',\n    'onzacht',\n    'onzin',\n    'onzuiver',\n    'oogappel',\n    'ooibos',\n    'ooievaar',\n    'ooit',\n    'oorarts',\n    'oorhanger',\n    'oorijzer',\n    'oorklep',\n    'oorschelp',\n    'oorworm',\n    'oorzaak',\n    'opdagen',\n    'opdien',\n    'opdweilen',\n    'opel',\n    'opgebaard',\n    'opinie',\n    'opjutten',\n    'opkijken',\n    'opklaar',\n    'opkuisen',\n    'opkwam',\n    'opnaaien',\n    'opossum',\n    'opsieren',\n    'opsmeer',\n    'optreden',\n    'opvijzel',\n    'opvlammen',\n    'opwind',\n    'oraal',\n    'orchidee',\n    'orkest',\n    'ossuarium',\n    'ostendorf',\n    'oublie',\n    'oudachtig',\n    'oudbakken',\n    'oudnoors',\n    'oudshoorn',\n    'oudtante',\n    'oven',\n    'over',\n    'oxidant',\n    'pablo',\n    'pacht',\n    'paktafel',\n    'pakzadel',\n    'paljas',\n    'panharing',\n    'papfles',\n    'paprika',\n    'parochie',\n    'paus',\n    'pauze',\n    'paviljoen',\n    'peek',\n    'pegel',\n    'peigeren',\n    'pekela',\n    'pendant',\n    'penibel',\n    'pepmiddel',\n    'peptalk',\n    'periferie',\n    'perron',\n    'pessarium',\n    'peter',\n    'petfles',\n    'petgat',\n    'peuk',\n    'pfeifer',\n    'picknick',\n    'pief',\n    'pieneman',\n    'pijlkruid',\n    'pijnacker',\n    'pijpelink',\n    'pikdonker',\n    'pikeer',\n    'pilaar',\n    'pionier',\n    'pipet',\n    'piscine',\n    'pissebed',\n    'pitchen',\n    'pixel',\n    'plamuren',\n    'plan',\n    'plausibel',\n    'plegen',\n    'plempen',\n    'pleonasme',\n    'plezant',\n    'podoloog',\n    'pofmouw',\n    'pokdalig',\n    'ponywagen',\n    'popachtig',\n    'popidool',\n    'porren',\n    'positie',\n    'potten',\n    'pralen',\n    'prezen',\n    'prijzen',\n    'privaat',\n    'proef',\n    'prooi',\n    'prozawerk',\n    'pruik',\n    'prul',\n    'publiceer',\n    'puck',\n    'puilen',\n    'pukkelig',\n    'pulveren',\n    'pupil',\n    'puppy',\n    'purmerend',\n    'pustjens',\n    'putemmer',\n    'puzzelaar',\n    'queenie',\n    'quiche',\n    'raam',\n    'raar',\n    'raat',\n    'raes',\n    'ralf',\n    'rally',\n    'ramona',\n    'ramselaar',\n    'ranonkel',\n    'rapen',\n    'rapunzel',\n    'rarekiek',\n    'rarigheid',\n    'rattenhol',\n    'ravage',\n    'reactie',\n    'recreant',\n    'redacteur',\n    'redster',\n    'reewild',\n    'regie',\n    'reijnders',\n    'rein',\n    'replica',\n    'revanche',\n    'rigide',\n    'rijbaan',\n    'rijdansen',\n    'rijgen',\n    'rijkdom',\n    'rijles',\n    'rijnwijn',\n    'rijpma',\n    'rijstafel',\n    'rijtaak',\n    'rijzwepen',\n    'rioleer',\n    'ripdeal',\n    'riphagen',\n    'riskant',\n    'rits',\n    'rivaal',\n    'robbedoes',\n    'robot',\n    'rockact',\n    'rodijk',\n    'rogier',\n    'rohypnol',\n    'rollaag',\n    'rolpaal',\n    'roltafel',\n    'roof',\n    'roon',\n    'roppen',\n    'rosbief',\n    'rosharig',\n    'rosielle',\n    'rotan',\n    'rotleven',\n    'rotten',\n    'rotvaart',\n    'royaal',\n    'royeer',\n    'rubato',\n    'ruby',\n    'ruche',\n    'rudge',\n    'ruggetje',\n    'rugnummer',\n    'rugpijn',\n    'rugtitel',\n    'rugzak',\n    'ruilbaar',\n    'ruis',\n    'ruit',\n    'rukwind',\n    'rulijs',\n    'rumoeren',\n    'rumsdorp',\n    'rumtaart',\n    'runnen',\n    'russchen',\n    'ruwkruid',\n    'saboteer',\n    'saksisch',\n    'salade',\n    'salpeter',\n    'sambabal',\n    'samsam',\n    'satelliet',\n    'satineer',\n    'saus',\n    'scampi',\n    'scarabee',\n    'scenario',\n    'schobben',\n    'schubben',\n    'scout',\n    'secessie',\n    'secondair',\n    'seculair',\n    'sediment',\n    'seeland',\n    'settelen',\n    'setwinst',\n    'sheriff',\n    'shiatsu',\n    'siciliaan',\n    'sidderaal',\n    'sigma',\n    'sijben',\n    'silvana',\n    'simkaart',\n    'sinds',\n    'situatie',\n    'sjaak',\n    'sjardijn',\n    'sjezen',\n    'sjor',\n    'skinhead',\n    'skylab',\n    'slamixen',\n    'sleijpen',\n    'slijkerig',\n    'slordig',\n    'slowaak',\n    'sluieren',\n    'smadelijk',\n    'smiecht',\n    'smoel',\n    'smos',\n    'smukken',\n    'snackcar',\n    'snavel',\n    'sneaker',\n    'sneu',\n    'snijdbaar',\n    'snit',\n    'snorder',\n    'soapbox',\n    'soetekouw',\n    'soigneren',\n    'sojaboon',\n    'solo',\n    'solvabel',\n    'somber',\n    'sommatie',\n    'soort',\n    'soppen',\n    'sopraan',\n    'soundbar',\n    'spanen',\n    'spawater',\n    'spijgat',\n    'spinaal',\n    'spionage',\n    'spiraal',\n    'spleet',\n    'splijt',\n    'spoed',\n    'sporen',\n    'spul',\n    'spuug',\n    'spuw',\n    'stalen',\n    'standaard',\n    'star',\n    'stefan',\n    'stencil',\n    'stijf',\n    'stil',\n    'stip',\n    'stopdas',\n    'stoten',\n    'stoven',\n    'straat',\n    'strobbe',\n    'strubbel',\n    'stucadoor',\n    'stuif',\n    'stukadoor',\n    'subhoofd',\n    'subregent',\n    'sudoku',\n    'sukade',\n    'sulfaat',\n    'surinaams',\n    'suus',\n    'syfilis',\n    'symboliek',\n    'sympathie',\n    'synagoge',\n    'synchroon',\n    'synergie',\n    'systeem',\n    'taanderij',\n    'tabak',\n    'tachtig',\n    'tackelen',\n    'taiwanees',\n    'talman',\n    'tamheid',\n    'tangaslip',\n    'taps',\n    'tarkan',\n    'tarwe',\n    'tasman',\n    'tatjana',\n    'taxameter',\n    'teil',\n    'teisman',\n    'telbaar',\n    'telco',\n    'telganger',\n    'telstar',\n    'tenant',\n    'tepel',\n    'terzet',\n    'testament',\n    'ticket',\n    'tiesinga',\n    'tijdelijk',\n    'tika',\n    'tiksel',\n    'tilleman',\n    'timbaal',\n    'tinsteen',\n    'tiplijn',\n    'tippelaar',\n    'tjirpen',\n    'toezeggen',\n    'tolbaas',\n    'tolgeld',\n    'tolhek',\n    'tolo',\n    'tolpoort',\n    'toltarief',\n    'tolvrij',\n    'tomaat',\n    'tondeuse',\n    'toog',\n    'tooi',\n    'toonbaar',\n    'toos',\n    'topclub',\n    'toppen',\n    'toptalent',\n    'topvrouw',\n    'toque',\n    'torment',\n    'tornado',\n    'tosti',\n    'totdat',\n    'toucheer',\n    'toulouse',\n    'tournedos',\n    'tout',\n    'trabant',\n    'tragedie',\n    'trailer',\n    'traject',\n    'traktaat',\n    'trauma',\n    'tray',\n    'trechter',\n    'tred',\n    'tref',\n    'treur',\n    'troebel',\n    'tros',\n    'trucage',\n    'truffel',\n    'tsaar',\n    'tucht',\n    'tuenter',\n    'tuitelig',\n    'tukje',\n    'tuktuk',\n    'tulp',\n    'tuma',\n    'tureluurs',\n    'twijfel',\n    'twitteren',\n    'tyfoon',\n    'typograaf',\n    'ugandees',\n    'uiachtig',\n    'uier',\n    'uisnipper',\n    'ultiem',\n    'unitair',\n    'uranium',\n    'urbaan',\n    'urendag',\n    'ursula',\n    'uurcirkel',\n    'uurglas',\n    'uzelf',\n    'vaat',\n    'vakantie',\n    'vakleraar',\n    'valbijl',\n    'valpartij',\n    'valreep',\n    'valuatie',\n    'vanmiddag',\n    'vanonder',\n    'varaan',\n    'varken',\n    'vaten',\n    'veenbes',\n    'veeteler',\n    'velgrem',\n    'vellekoop',\n    'velvet',\n    'veneberg',\n    'venlo',\n    'vent',\n    'venusberg',\n    'venw',\n    'veredeld',\n    'verf',\n    'verhaaf',\n    'vermaak',\n    'vernaaid',\n    'verraad',\n    'vers',\n    'veruit',\n    'verzaagd',\n    'vetachtig',\n    'vetlok',\n    'vetmesten',\n    'veto',\n    'vetrek',\n    'vetstaart',\n    'vetten',\n    'veurink',\n    'viaduct',\n    'vibrafoon',\n    'vicariaat',\n    'vieux',\n    'vieveen',\n    'vijfvoud',\n    'villa',\n    'vilt',\n    'vimmetje',\n    'vindbaar',\n    'vips',\n    'virtueel',\n    'visdieven',\n    'visee',\n    'visie',\n    'vlaag',\n    'vleugel',\n    'vmbo',\n    'vocht',\n    'voesenek',\n    'voicemail',\n    'voip',\n    'volg',\n    'vork',\n    'vorselaar',\n    'voyeur',\n    'vracht',\n    'vrekkig',\n    'vreten',\n    'vrije',\n    'vrozen',\n    'vrucht',\n    'vucht',\n    'vugt',\n    'vulkaan',\n    'vulmiddel',\n    'vulva',\n    'vuren',\n    'waas',\n    'wacht',\n    'wadvogel',\n    'wafel',\n    'waffel',\n    'walhalla',\n    'walnoot',\n    'walraven',\n    'wals',\n    'walvis',\n    'wandaad',\n    'wanen',\n    'wanmolen',\n    'want',\n    'warklomp',\n    'warm',\n    'wasachtig',\n    'wasteil',\n    'watt',\n    'webhandel',\n    'weblog',\n    'webpagina',\n    'webzine',\n    'wedereis',\n    'wedstrijd',\n    'weeda',\n    'weert',\n    'wegmaaien',\n    'wegscheer',\n    'wekelijks',\n    'wekken',\n    'wekroep',\n    'wektoon',\n    'weldaad',\n    'welwater',\n    'wendbaar',\n    'wenkbrauw',\n    'wens',\n    'wentelaar',\n    'wervel',\n    'wesseling',\n    'wetboek',\n    'wetmatig',\n    'whirlpool',\n    'wijbrands',\n    'wijdbeens',\n    'wijk',\n    'wijnbes',\n    'wijting',\n    'wild',\n    'wimpelen',\n    'wingebied',\n    'winplaats',\n    'winter',\n    'winzucht',\n    'wipstaart',\n    'wisgerhof',\n    'withaar',\n    'witmaker',\n    'wokkel',\n    'wolf',\n    'wonenden',\n    'woning',\n    'worden',\n    'worp',\n    'wortel',\n    'wrat',\n    'wrijf',\n    'wringen',\n    'yoghurt',\n    'ypsilon',\n    'zaaijer',\n    'zaak',\n    'zacharias',\n    'zakelijk',\n    'zakkam',\n    'zakwater',\n    'zalf',\n    'zalig',\n    'zaniken',\n    'zebracode',\n    'zeeblauw',\n    'zeef',\n    'zeegaand',\n    'zeeuw',\n    'zege',\n    'zegje',\n    'zeil',\n    'zesbaans',\n    'zesenhalf',\n    'zeskantig',\n    'zesmaal',\n    'zetbaas',\n    'zetpil',\n    'zeulen',\n    'ziezo',\n    'zigzag',\n    'zijaltaar',\n    'zijbeuk',\n    'zijlijn',\n    'zijmuur',\n    'zijn',\n    'zijwaarts',\n    'zijzelf',\n    'zilt',\n    'zimmerman',\n    'zinledig',\n    'zinnelijk',\n    'zionist',\n    'zitdag',\n    'zitruimte',\n    'zitzak',\n    'zoal',\n    'zodoende',\n    'zoekbots',\n    'zoem',\n    'zoiets',\n    'zojuist',\n    'zondaar',\n    'zotskap',\n    'zottebol',\n    'zucht',\n    'zuivel',\n    'zulk',\n    'zult',\n    'zuster',\n    'zuur',\n    'zweedijk',\n    'zwendel',\n    'zwepen',\n    'zwiep',\n    'zwijmel',\n    'zworen'\n];\n//# sourceMappingURL=dutch.js.map","// SPDX-License-Identifier: MIT\nexport const WORDLIST = [\n    'abbey',\n    'abducts',\n    'ability',\n    'ablaze',\n    'abnormal',\n    'abort',\n    'abrasive',\n    'absorb',\n    'abyss',\n    'academy',\n    'aces',\n    'aching',\n    'acidic',\n    'acoustic',\n    'acquire',\n    'across',\n    'actress',\n    'acumen',\n    'adapt',\n    'addicted',\n    'adept',\n    'adhesive',\n    'adjust',\n    'adopt',\n    'adrenalin',\n    'adult',\n    'adventure',\n    'aerial',\n    'afar',\n    'affair',\n    'afield',\n    'afloat',\n    'afoot',\n    'afraid',\n    'after',\n    'against',\n    'agenda',\n    'aggravate',\n    'agile',\n    'aglow',\n    'agnostic',\n    'agony',\n    'agreed',\n    'ahead',\n    'aided',\n    'ailments',\n    'aimless',\n    'airport',\n    'aisle',\n    'ajar',\n    'akin',\n    'alarms',\n    'album',\n    'alchemy',\n    'alerts',\n    'algebra',\n    'alkaline',\n    'alley',\n    'almost',\n    'aloof',\n    'alpine',\n    'already',\n    'also',\n    'altitude',\n    'alumni',\n    'always',\n    'amaze',\n    'ambush',\n    'amended',\n    'amidst',\n    'ammo',\n    'amnesty',\n    'among',\n    'amply',\n    'amused',\n    'anchor',\n    'android',\n    'anecdote',\n    'angled',\n    'ankle',\n    'annoyed',\n    'answers',\n    'antics',\n    'anvil',\n    'anxiety',\n    'anybody',\n    'apart',\n    'apex',\n    'aphid',\n    'aplomb',\n    'apology',\n    'apply',\n    'apricot',\n    'aptitude',\n    'aquarium',\n    'arbitrary',\n    'archer',\n    'ardent',\n    'arena',\n    'argue',\n    'arises',\n    'army',\n    'around',\n    'arrow',\n    'arsenic',\n    'artistic',\n    'ascend',\n    'ashtray',\n    'aside',\n    'asked',\n    'asleep',\n    'aspire',\n    'assorted',\n    'asylum',\n    'athlete',\n    'atlas',\n    'atom',\n    'atrium',\n    'attire',\n    'auburn',\n    'auctions',\n    'audio',\n    'august',\n    'aunt',\n    'austere',\n    'autumn',\n    'avatar',\n    'avidly',\n    'avoid',\n    'awakened',\n    'awesome',\n    'awful',\n    'awkward',\n    'awning',\n    'awoken',\n    'axes',\n    'axis',\n    'axle',\n    'aztec',\n    'azure',\n    'baby',\n    'bacon',\n    'badge',\n    'baffles',\n    'bagpipe',\n    'bailed',\n    'bakery',\n    'balding',\n    'bamboo',\n    'banjo',\n    'baptism',\n    'basin',\n    'batch',\n    'bawled',\n    'bays',\n    'because',\n    'beer',\n    'befit',\n    'begun',\n    'behind',\n    'being',\n    'below',\n    'bemused',\n    'benches',\n    'berries',\n    'bested',\n    'betting',\n    'bevel',\n    'beware',\n    'beyond',\n    'bias',\n    'bicycle',\n    'bids',\n    'bifocals',\n    'biggest',\n    'bikini',\n    'bimonthly',\n    'binocular',\n    'biology',\n    'biplane',\n    'birth',\n    'biscuit',\n    'bite',\n    'biweekly',\n    'blender',\n    'blip',\n    'bluntly',\n    'boat',\n    'bobsled',\n    'bodies',\n    'bogeys',\n    'boil',\n    'boldly',\n    'bomb',\n    'border',\n    'boss',\n    'both',\n    'bounced',\n    'bovine',\n    'bowling',\n    'boxes',\n    'boyfriend',\n    'broken',\n    'brunt',\n    'bubble',\n    'buckets',\n    'budget',\n    'buffet',\n    'bugs',\n    'building',\n    'bulb',\n    'bumper',\n    'bunch',\n    'business',\n    'butter',\n    'buying',\n    'buzzer',\n    'bygones',\n    'byline',\n    'bypass',\n    'cabin',\n    'cactus',\n    'cadets',\n    'cafe',\n    'cage',\n    'cajun',\n    'cake',\n    'calamity',\n    'camp',\n    'candy',\n    'casket',\n    'catch',\n    'cause',\n    'cavernous',\n    'cease',\n    'cedar',\n    'ceiling',\n    'cell',\n    'cement',\n    'cent',\n    'certain',\n    'chlorine',\n    'chrome',\n    'cider',\n    'cigar',\n    'cinema',\n    'circle',\n    'cistern',\n    'citadel',\n    'civilian',\n    'claim',\n    'click',\n    'clue',\n    'coal',\n    'cobra',\n    'cocoa',\n    'code',\n    'coexist',\n    'coffee',\n    'cogs',\n    'cohesive',\n    'coils',\n    'colony',\n    'comb',\n    'cool',\n    'copy',\n    'corrode',\n    'costume',\n    'cottage',\n    'cousin',\n    'cowl',\n    'criminal',\n    'cube',\n    'cucumber',\n    'cuddled',\n    'cuffs',\n    'cuisine',\n    'cunning',\n    'cupcake',\n    'custom',\n    'cycling',\n    'cylinder',\n    'cynical',\n    'dabbing',\n    'dads',\n    'daft',\n    'dagger',\n    'daily',\n    'damp',\n    'dangerous',\n    'dapper',\n    'darted',\n    'dash',\n    'dating',\n    'dauntless',\n    'dawn',\n    'daytime',\n    'dazed',\n    'debut',\n    'decay',\n    'dedicated',\n    'deepest',\n    'deftly',\n    'degrees',\n    'dehydrate',\n    'deity',\n    'dejected',\n    'delayed',\n    'demonstrate',\n    'dented',\n    'deodorant',\n    'depth',\n    'desk',\n    'devoid',\n    'dewdrop',\n    'dexterity',\n    'dialect',\n    'dice',\n    'diet',\n    'different',\n    'digit',\n    'dilute',\n    'dime',\n    'dinner',\n    'diode',\n    'diplomat',\n    'directed',\n    'distance',\n    'ditch',\n    'divers',\n    'dizzy',\n    'doctor',\n    'dodge',\n    'does',\n    'dogs',\n    'doing',\n    'dolphin',\n    'domestic',\n    'donuts',\n    'doorway',\n    'dormant',\n    'dosage',\n    'dotted',\n    'double',\n    'dove',\n    'down',\n    'dozen',\n    'dreams',\n    'drinks',\n    'drowning',\n    'drunk',\n    'drying',\n    'dual',\n    'dubbed',\n    'duckling',\n    'dude',\n    'duets',\n    'duke',\n    'dullness',\n    'dummy',\n    'dunes',\n    'duplex',\n    'duration',\n    'dusted',\n    'duties',\n    'dwarf',\n    'dwelt',\n    'dwindling',\n    'dying',\n    'dynamite',\n    'dyslexic',\n    'each',\n    'eagle',\n    'earth',\n    'easy',\n    'eating',\n    'eavesdrop',\n    'eccentric',\n    'echo',\n    'eclipse',\n    'economics',\n    'ecstatic',\n    'eden',\n    'edgy',\n    'edited',\n    'educated',\n    'eels',\n    'efficient',\n    'eggs',\n    'egotistic',\n    'eight',\n    'either',\n    'eject',\n    'elapse',\n    'elbow',\n    'eldest',\n    'eleven',\n    'elite',\n    'elope',\n    'else',\n    'eluded',\n    'emails',\n    'ember',\n    'emerge',\n    'emit',\n    'emotion',\n    'empty',\n    'emulate',\n    'energy',\n    'enforce',\n    'enhanced',\n    'enigma',\n    'enjoy',\n    'enlist',\n    'enmity',\n    'enough',\n    'enraged',\n    'ensign',\n    'entrance',\n    'envy',\n    'epoxy',\n    'equip',\n    'erase',\n    'erected',\n    'erosion',\n    'error',\n    'eskimos',\n    'espionage',\n    'essential',\n    'estate',\n    'etched',\n    'eternal',\n    'ethics',\n    'etiquette',\n    'evaluate',\n    'evenings',\n    'evicted',\n    'evolved',\n    'examine',\n    'excess',\n    'exhale',\n    'exit',\n    'exotic',\n    'exquisite',\n    'extra',\n    'exult',\n    'fabrics',\n    'factual',\n    'fading',\n    'fainted',\n    'faked',\n    'fall',\n    'family',\n    'fancy',\n    'farming',\n    'fatal',\n    'faulty',\n    'fawns',\n    'faxed',\n    'fazed',\n    'feast',\n    'february',\n    'federal',\n    'feel',\n    'feline',\n    'females',\n    'fences',\n    'ferry',\n    'festival',\n    'fetches',\n    'fever',\n    'fewest',\n    'fiat',\n    'fibula',\n    'fictional',\n    'fidget',\n    'fierce',\n    'fifteen',\n    'fight',\n    'films',\n    'firm',\n    'fishing',\n    'fitting',\n    'five',\n    'fixate',\n    'fizzle',\n    'fleet',\n    'flippant',\n    'flying',\n    'foamy',\n    'focus',\n    'foes',\n    'foggy',\n    'foiled',\n    'folding',\n    'fonts',\n    'foolish',\n    'fossil',\n    'fountain',\n    'fowls',\n    'foxes',\n    'foyer',\n    'framed',\n    'friendly',\n    'frown',\n    'fruit',\n    'frying',\n    'fudge',\n    'fuel',\n    'fugitive',\n    'fully',\n    'fuming',\n    'fungal',\n    'furnished',\n    'fuselage',\n    'future',\n    'fuzzy',\n    'gables',\n    'gadget',\n    'gags',\n    'gained',\n    'galaxy',\n    'gambit',\n    'gang',\n    'gasp',\n    'gather',\n    'gauze',\n    'gave',\n    'gawk',\n    'gaze',\n    'gearbox',\n    'gecko',\n    'geek',\n    'gels',\n    'gemstone',\n    'general',\n    'geometry',\n    'germs',\n    'gesture',\n    'getting',\n    'geyser',\n    'ghetto',\n    'ghost',\n    'giant',\n    'giddy',\n    'gifts',\n    'gigantic',\n    'gills',\n    'gimmick',\n    'ginger',\n    'girth',\n    'giving',\n    'glass',\n    'gleeful',\n    'glide',\n    'gnaw',\n    'gnome',\n    'goat',\n    'goblet',\n    'godfather',\n    'goes',\n    'goggles',\n    'going',\n    'goldfish',\n    'gone',\n    'goodbye',\n    'gopher',\n    'gorilla',\n    'gossip',\n    'gotten',\n    'gourmet',\n    'governing',\n    'gown',\n    'greater',\n    'grunt',\n    'guarded',\n    'guest',\n    'guide',\n    'gulp',\n    'gumball',\n    'guru',\n    'gusts',\n    'gutter',\n    'guys',\n    'gymnast',\n    'gypsy',\n    'gyrate',\n    'habitat',\n    'hacksaw',\n    'haggled',\n    'hairy',\n    'hamburger',\n    'happens',\n    'hashing',\n    'hatchet',\n    'haunted',\n    'having',\n    'hawk',\n    'haystack',\n    'hazard',\n    'hectare',\n    'hedgehog',\n    'heels',\n    'hefty',\n    'height',\n    'hemlock',\n    'hence',\n    'heron',\n    'hesitate',\n    'hexagon',\n    'hickory',\n    'hiding',\n    'highway',\n    'hijack',\n    'hiker',\n    'hills',\n    'himself',\n    'hinder',\n    'hippo',\n    'hire',\n    'history',\n    'hitched',\n    'hive',\n    'hoax',\n    'hobby',\n    'hockey',\n    'hoisting',\n    'hold',\n    'honked',\n    'hookup',\n    'hope',\n    'hornet',\n    'hospital',\n    'hotel',\n    'hounded',\n    'hover',\n    'howls',\n    'hubcaps',\n    'huddle',\n    'huge',\n    'hull',\n    'humid',\n    'hunter',\n    'hurried',\n    'husband',\n    'huts',\n    'hybrid',\n    'hydrogen',\n    'hyper',\n    'iceberg',\n    'icing',\n    'icon',\n    'identity',\n    'idiom',\n    'idled',\n    'idols',\n    'igloo',\n    'ignore',\n    'iguana',\n    'illness',\n    'imagine',\n    'imbalance',\n    'imitate',\n    'impel',\n    'inactive',\n    'inbound',\n    'incur',\n    'industrial',\n    'inexact',\n    'inflamed',\n    'ingested',\n    'initiate',\n    'injury',\n    'inkling',\n    'inline',\n    'inmate',\n    'innocent',\n    'inorganic',\n    'input',\n    'inquest',\n    'inroads',\n    'insult',\n    'intended',\n    'inundate',\n    'invoke',\n    'inwardly',\n    'ionic',\n    'irate',\n    'iris',\n    'irony',\n    'irritate',\n    'island',\n    'isolated',\n    'issued',\n    'italics',\n    'itches',\n    'items',\n    'itinerary',\n    'itself',\n    'ivory',\n    'jabbed',\n    'jackets',\n    'jaded',\n    'jagged',\n    'jailed',\n    'jamming',\n    'january',\n    'jargon',\n    'jaunt',\n    'javelin',\n    'jaws',\n    'jazz',\n    'jeans',\n    'jeers',\n    'jellyfish',\n    'jeopardy',\n    'jerseys',\n    'jester',\n    'jetting',\n    'jewels',\n    'jigsaw',\n    'jingle',\n    'jittery',\n    'jive',\n    'jobs',\n    'jockey',\n    'jogger',\n    'joining',\n    'joking',\n    'jolted',\n    'jostle',\n    'journal',\n    'joyous',\n    'jubilee',\n    'judge',\n    'juggled',\n    'juicy',\n    'jukebox',\n    'july',\n    'jump',\n    'junk',\n    'jury',\n    'justice',\n    'juvenile',\n    'kangaroo',\n    'karate',\n    'keep',\n    'kennel',\n    'kept',\n    'kernels',\n    'kettle',\n    'keyboard',\n    'kickoff',\n    'kidneys',\n    'king',\n    'kiosk',\n    'kisses',\n    'kitchens',\n    'kiwi',\n    'knapsack',\n    'knee',\n    'knife',\n    'knowledge',\n    'knuckle',\n    'koala',\n    'laboratory',\n    'ladder',\n    'lagoon',\n    'lair',\n    'lakes',\n    'lamb',\n    'language',\n    'laptop',\n    'large',\n    'last',\n    'later',\n    'launching',\n    'lava',\n    'lawsuit',\n    'layout',\n    'lazy',\n    'lectures',\n    'ledge',\n    'leech',\n    'left',\n    'legion',\n    'leisure',\n    'lemon',\n    'lending',\n    'leopard',\n    'lesson',\n    'lettuce',\n    'lexicon',\n    'liar',\n    'library',\n    'licks',\n    'lids',\n    'lied',\n    'lifestyle',\n    'light',\n    'likewise',\n    'lilac',\n    'limits',\n    'linen',\n    'lion',\n    'lipstick',\n    'liquid',\n    'listen',\n    'lively',\n    'loaded',\n    'lobster',\n    'locker',\n    'lodge',\n    'lofty',\n    'logic',\n    'loincloth',\n    'long',\n    'looking',\n    'lopped',\n    'lordship',\n    'losing',\n    'lottery',\n    'loudly',\n    'love',\n    'lower',\n    'loyal',\n    'lucky',\n    'luggage',\n    'lukewarm',\n    'lullaby',\n    'lumber',\n    'lunar',\n    'lurk',\n    'lush',\n    'luxury',\n    'lymph',\n    'lynx',\n    'lyrics',\n    'macro',\n    'madness',\n    'magically',\n    'mailed',\n    'major',\n    'makeup',\n    'malady',\n    'mammal',\n    'maps',\n    'masterful',\n    'match',\n    'maul',\n    'maverick',\n    'maximum',\n    'mayor',\n    'maze',\n    'meant',\n    'mechanic',\n    'medicate',\n    'meeting',\n    'megabyte',\n    'melting',\n    'memoir',\n    'menu',\n    'merger',\n    'mesh',\n    'metro',\n    'mews',\n    'mice',\n    'midst',\n    'mighty',\n    'mime',\n    'mirror',\n    'misery',\n    'mittens',\n    'mixture',\n    'moat',\n    'mobile',\n    'mocked',\n    'mohawk',\n    'moisture',\n    'molten',\n    'moment',\n    'money',\n    'moon',\n    'mops',\n    'morsel',\n    'mostly',\n    'motherly',\n    'mouth',\n    'movement',\n    'mowing',\n    'much',\n    'muddy',\n    'muffin',\n    'mugged',\n    'mullet',\n    'mumble',\n    'mundane',\n    'muppet',\n    'mural',\n    'musical',\n    'muzzle',\n    'myriad',\n    'mystery',\n    'myth',\n    'nabbing',\n    'nagged',\n    'nail',\n    'names',\n    'nanny',\n    'napkin',\n    'narrate',\n    'nasty',\n    'natural',\n    'nautical',\n    'navy',\n    'nearby',\n    'necklace',\n    'needed',\n    'negative',\n    'neither',\n    'neon',\n    'nephew',\n    'nerves',\n    'nestle',\n    'network',\n    'neutral',\n    'never',\n    'newt',\n    'nexus',\n    'nibs',\n    'niche',\n    'niece',\n    'nifty',\n    'nightly',\n    'nimbly',\n    'nineteen',\n    'nirvana',\n    'nitrogen',\n    'nobody',\n    'nocturnal',\n    'nodes',\n    'noises',\n    'nomad',\n    'noodles',\n    'northern',\n    'nostril',\n    'noted',\n    'nouns',\n    'novelty',\n    'nowhere',\n    'nozzle',\n    'nuance',\n    'nucleus',\n    'nudged',\n    'nugget',\n    'nuisance',\n    'null',\n    'number',\n    'nuns',\n    'nurse',\n    'nutshell',\n    'nylon',\n    'oaks',\n    'oars',\n    'oasis',\n    'oatmeal',\n    'obedient',\n    'object',\n    'obliged',\n    'obnoxious',\n    'observant',\n    'obtains',\n    'obvious',\n    'occur',\n    'ocean',\n    'october',\n    'odds',\n    'odometer',\n    'offend',\n    'often',\n    'oilfield',\n    'ointment',\n    'okay',\n    'older',\n    'olive',\n    'olympics',\n    'omega',\n    'omission',\n    'omnibus',\n    'onboard',\n    'oncoming',\n    'oneself',\n    'ongoing',\n    'onion',\n    'online',\n    'onslaught',\n    'onto',\n    'onward',\n    'oozed',\n    'opacity',\n    'opened',\n    'opposite',\n    'optical',\n    'opus',\n    'orange',\n    'orbit',\n    'orchid',\n    'orders',\n    'organs',\n    'origin',\n    'ornament',\n    'orphans',\n    'oscar',\n    'ostrich',\n    'otherwise',\n    'otter',\n    'ouch',\n    'ought',\n    'ounce',\n    'ourselves',\n    'oust',\n    'outbreak',\n    'oval',\n    'oven',\n    'owed',\n    'owls',\n    'owner',\n    'oxidant',\n    'oxygen',\n    'oyster',\n    'ozone',\n    'pact',\n    'paddles',\n    'pager',\n    'pairing',\n    'palace',\n    'pamphlet',\n    'pancakes',\n    'paper',\n    'paradise',\n    'pastry',\n    'patio',\n    'pause',\n    'pavements',\n    'pawnshop',\n    'payment',\n    'peaches',\n    'pebbles',\n    'peculiar',\n    'pedantic',\n    'peeled',\n    'pegs',\n    'pelican',\n    'pencil',\n    'people',\n    'pepper',\n    'perfect',\n    'pests',\n    'petals',\n    'phase',\n    'pheasants',\n    'phone',\n    'phrases',\n    'physics',\n    'piano',\n    'picked',\n    'pierce',\n    'pigment',\n    'piloted',\n    'pimple',\n    'pinched',\n    'pioneer',\n    'pipeline',\n    'pirate',\n    'pistons',\n    'pitched',\n    'pivot',\n    'pixels',\n    'pizza',\n    'playful',\n    'pledge',\n    'pliers',\n    'plotting',\n    'plus',\n    'plywood',\n    'poaching',\n    'pockets',\n    'podcast',\n    'poetry',\n    'point',\n    'poker',\n    'polar',\n    'ponies',\n    'pool',\n    'popular',\n    'portents',\n    'possible',\n    'potato',\n    'pouch',\n    'poverty',\n    'powder',\n    'pram',\n    'present',\n    'pride',\n    'problems',\n    'pruned',\n    'prying',\n    'psychic',\n    'public',\n    'puck',\n    'puddle',\n    'puffin',\n    'pulp',\n    'pumpkins',\n    'punch',\n    'puppy',\n    'purged',\n    'push',\n    'putty',\n    'puzzled',\n    'pylons',\n    'pyramid',\n    'python',\n    'queen',\n    'quick',\n    'quote',\n    'rabbits',\n    'racetrack',\n    'radar',\n    'rafts',\n    'rage',\n    'railway',\n    'raking',\n    'rally',\n    'ramped',\n    'randomly',\n    'rapid',\n    'rarest',\n    'rash',\n    'rated',\n    'ravine',\n    'rays',\n    'razor',\n    'react',\n    'rebel',\n    'recipe',\n    'reduce',\n    'reef',\n    'refer',\n    'regular',\n    'reheat',\n    'reinvest',\n    'rejoices',\n    'rekindle',\n    'relic',\n    'remedy',\n    'renting',\n    'reorder',\n    'repent',\n    'request',\n    'reruns',\n    'rest',\n    'return',\n    'reunion',\n    'revamp',\n    'rewind',\n    'rhino',\n    'rhythm',\n    'ribbon',\n    'richly',\n    'ridges',\n    'rift',\n    'rigid',\n    'rims',\n    'ringing',\n    'riots',\n    'ripped',\n    'rising',\n    'ritual',\n    'river',\n    'roared',\n    'robot',\n    'rockets',\n    'rodent',\n    'rogue',\n    'roles',\n    'romance',\n    'roomy',\n    'roped',\n    'roster',\n    'rotate',\n    'rounded',\n    'rover',\n    'rowboat',\n    'royal',\n    'ruby',\n    'rudely',\n    'ruffled',\n    'rugged',\n    'ruined',\n    'ruling',\n    'rumble',\n    'runway',\n    'rural',\n    'rustled',\n    'ruthless',\n    'sabotage',\n    'sack',\n    'sadness',\n    'safety',\n    'saga',\n    'sailor',\n    'sake',\n    'salads',\n    'sample',\n    'sanity',\n    'sapling',\n    'sarcasm',\n    'sash',\n    'satin',\n    'saucepan',\n    'saved',\n    'sawmill',\n    'saxophone',\n    'sayings',\n    'scamper',\n    'scenic',\n    'school',\n    'science',\n    'scoop',\n    'scrub',\n    'scuba',\n    'seasons',\n    'second',\n    'sedan',\n    'seeded',\n    'segments',\n    'seismic',\n    'selfish',\n    'semifinal',\n    'sensible',\n    'september',\n    'sequence',\n    'serving',\n    'session',\n    'setup',\n    'seventh',\n    'sewage',\n    'shackles',\n    'shelter',\n    'shipped',\n    'shocking',\n    'shrugged',\n    'shuffled',\n    'shyness',\n    'siblings',\n    'sickness',\n    'sidekick',\n    'sieve',\n    'sifting',\n    'sighting',\n    'silk',\n    'simplest',\n    'sincerely',\n    'sipped',\n    'siren',\n    'situated',\n    'sixteen',\n    'sizes',\n    'skater',\n    'skew',\n    'skirting',\n    'skulls',\n    'skydive',\n    'slackens',\n    'sleepless',\n    'slid',\n    'slower',\n    'slug',\n    'smash',\n    'smelting',\n    'smidgen',\n    'smog',\n    'smuggled',\n    'snake',\n    'sneeze',\n    'sniff',\n    'snout',\n    'snug',\n    'soapy',\n    'sober',\n    'soccer',\n    'soda',\n    'software',\n    'soggy',\n    'soil',\n    'solved',\n    'somewhere',\n    'sonic',\n    'soothe',\n    'soprano',\n    'sorry',\n    'southern',\n    'sovereign',\n    'sowed',\n    'soya',\n    'space',\n    'speedy',\n    'sphere',\n    'spiders',\n    'splendid',\n    'spout',\n    'sprig',\n    'spud',\n    'spying',\n    'square',\n    'stacking',\n    'stellar',\n    'stick',\n    'stockpile',\n    'strained',\n    'stunning',\n    'stylishly',\n    'subtly',\n    'succeed',\n    'suddenly',\n    'suede',\n    'suffice',\n    'sugar',\n    'suitcase',\n    'sulking',\n    'summon',\n    'sunken',\n    'superior',\n    'surfer',\n    'sushi',\n    'suture',\n    'swagger',\n    'swept',\n    'swiftly',\n    'sword',\n    'swung',\n    'syllabus',\n    'symptoms',\n    'syndrome',\n    'syringe',\n    'system',\n    'taboo',\n    'tacit',\n    'tadpoles',\n    'tagged',\n    'tail',\n    'taken',\n    'talent',\n    'tamper',\n    'tanks',\n    'tapestry',\n    'tarnished',\n    'tasked',\n    'tattoo',\n    'taunts',\n    'tavern',\n    'tawny',\n    'taxi',\n    'teardrop',\n    'technical',\n    'tedious',\n    'teeming',\n    'tell',\n    'template',\n    'tender',\n    'tepid',\n    'tequila',\n    'terminal',\n    'testing',\n    'tether',\n    'textbook',\n    'thaw',\n    'theatrics',\n    'thirsty',\n    'thorn',\n    'threaten',\n    'thumbs',\n    'thwart',\n    'ticket',\n    'tidy',\n    'tiers',\n    'tiger',\n    'tilt',\n    'timber',\n    'tinted',\n    'tipsy',\n    'tirade',\n    'tissue',\n    'titans',\n    'toaster',\n    'tobacco',\n    'today',\n    'toenail',\n    'toffee',\n    'together',\n    'toilet',\n    'token',\n    'tolerant',\n    'tomorrow',\n    'tonic',\n    'toolbox',\n    'topic',\n    'torch',\n    'tossed',\n    'total',\n    'touchy',\n    'towel',\n    'toxic',\n    'toyed',\n    'trash',\n    'trendy',\n    'tribal',\n    'trolling',\n    'truth',\n    'trying',\n    'tsunami',\n    'tubes',\n    'tucks',\n    'tudor',\n    'tuesday',\n    'tufts',\n    'tugs',\n    'tuition',\n    'tulips',\n    'tumbling',\n    'tunnel',\n    'turnip',\n    'tusks',\n    'tutor',\n    'tuxedo',\n    'twang',\n    'tweezers',\n    'twice',\n    'twofold',\n    'tycoon',\n    'typist',\n    'tyrant',\n    'ugly',\n    'ulcers',\n    'ultimate',\n    'umbrella',\n    'umpire',\n    'unafraid',\n    'unbending',\n    'uncle',\n    'under',\n    'uneven',\n    'unfit',\n    'ungainly',\n    'unhappy',\n    'union',\n    'unjustly',\n    'unknown',\n    'unlikely',\n    'unmask',\n    'unnoticed',\n    'unopened',\n    'unplugs',\n    'unquoted',\n    'unrest',\n    'unsafe',\n    'until',\n    'unusual',\n    'unveil',\n    'unwind',\n    'unzip',\n    'upbeat',\n    'upcoming',\n    'update',\n    'upgrade',\n    'uphill',\n    'upkeep',\n    'upload',\n    'upon',\n    'upper',\n    'upright',\n    'upstairs',\n    'uptight',\n    'upwards',\n    'urban',\n    'urchins',\n    'urgent',\n    'usage',\n    'useful',\n    'usher',\n    'using',\n    'usual',\n    'utensils',\n    'utility',\n    'utmost',\n    'utopia',\n    'uttered',\n    'vacation',\n    'vague',\n    'vain',\n    'value',\n    'vampire',\n    'vane',\n    'vapidly',\n    'vary',\n    'vastness',\n    'vats',\n    'vaults',\n    'vector',\n    'veered',\n    'vegan',\n    'vehicle',\n    'vein',\n    'velvet',\n    'venomous',\n    'verification',\n    'vessel',\n    'veteran',\n    'vexed',\n    'vials',\n    'vibrate',\n    'victim',\n    'video',\n    'viewpoint',\n    'vigilant',\n    'viking',\n    'village',\n    'vinegar',\n    'violin',\n    'vipers',\n    'virtual',\n    'visited',\n    'vitals',\n    'vivid',\n    'vixen',\n    'vocal',\n    'vogue',\n    'voice',\n    'volcano',\n    'vortex',\n    'voted',\n    'voucher',\n    'vowels',\n    'voyage',\n    'vulture',\n    'wade',\n    'waffle',\n    'wagtail',\n    'waist',\n    'waking',\n    'wallets',\n    'wanted',\n    'warped',\n    'washing',\n    'water',\n    'waveform',\n    'waxing',\n    'wayside',\n    'weavers',\n    'website',\n    'wedge',\n    'weekday',\n    'weird',\n    'welders',\n    'went',\n    'wept',\n    'were',\n    'western',\n    'wetsuit',\n    'whale',\n    'when',\n    'whipped',\n    'whole',\n    'wickets',\n    'width',\n    'wield',\n    'wife',\n    'wiggle',\n    'wildly',\n    'winter',\n    'wipeout',\n    'wiring',\n    'wise',\n    'withdrawn',\n    'wives',\n    'wizard',\n    'wobbly',\n    'woes',\n    'woken',\n    'wolf',\n    'womanly',\n    'wonders',\n    'woozy',\n    'worry',\n    'wounded',\n    'woven',\n    'wrap',\n    'wrist',\n    'wrong',\n    'yacht',\n    'yahoo',\n    'yanks',\n    'yard',\n    'yawning',\n    'yearbook',\n    'yellow',\n    'yesterday',\n    'yeti',\n    'yields',\n    'yodel',\n    'yoga',\n    'younger',\n    'yoyo',\n    'zapped',\n    'zeal',\n    'zebra',\n    'zero',\n    'zesty',\n    'zigzags',\n    'zinger',\n    'zippers',\n    'zodiac',\n    'zombie',\n    'zones',\n    'zoom'\n];\n//# sourceMappingURL=english.js.map","// SPDX-License-Identifier: MIT\nexport const WORDLIST = [\n    'abandon',\n    'abattre',\n    'aboi',\n    'abolir',\n    'aborder',\n    'abri',\n    'absence',\n    'absolu',\n    'abuser',\n    'acacia',\n    'acajou',\n    'accent',\n    'accord',\n    'accrocher',\n    'accuser',\n    'acerbe',\n    'achat',\n    'acheter',\n    'acide',\n    'acier',\n    'acquis',\n    'acte',\n    'action',\n    'adage',\n    'adepte',\n    'adieu',\n    'admettre',\n    'admis',\n    'adorer',\n    'adresser',\n    'aduler',\n    'affaire',\n    'affirmer',\n    'afin',\n    'agacer',\n    'agent',\n    'agir',\n    'agiter',\n    'agonie',\n    'agrafe',\n    'agrume',\n    'aider',\n    'aigle',\n    'aigre',\n    'aile',\n    'ailleurs',\n    'aimant',\n    'aimer',\n    'ainsi',\n    'aise',\n    'ajouter',\n    'alarme',\n    'album',\n    'alcool',\n    'alerte',\n    'algue',\n    'alibi',\n    'aller',\n    'allumer',\n    'alors',\n    'amande',\n    'amener',\n    'amie',\n    'amorcer',\n    'amour',\n    'ample',\n    'amuser',\n    'ananas',\n    'ancien',\n    'anglais',\n    'angoisse',\n    'animal',\n    'anneau',\n    'annoncer',\n    'apercevoir',\n    'apparence',\n    'appel',\n    'apporter',\n    'apprendre',\n    'appuyer',\n    'arbre',\n    'arcade',\n    'arceau',\n    'arche',\n    'ardeur',\n    'argent',\n    'argile',\n    'aride',\n    'arme',\n    'armure',\n    'arracher',\n    'arriver',\n    'article',\n    'asile',\n    'aspect',\n    'assaut',\n    'assez',\n    'assister',\n    'assurer',\n    'astre',\n    'astuce',\n    'atlas',\n    'atroce',\n    'attacher',\n    'attente',\n    'attirer',\n    'aube',\n    'aucun',\n    'audace',\n    'auparavant',\n    'auquel',\n    'aurore',\n    'aussi',\n    'autant',\n    'auteur',\n    'autoroute',\n    'autre',\n    'aval',\n    'avant',\n    'avec',\n    'avenir',\n    'averse',\n    'aveu',\n    'avide',\n    'avion',\n    'avis',\n    'avoir',\n    'avouer',\n    'avril',\n    'azote',\n    'azur',\n    'badge',\n    'bagage',\n    'bague',\n    'bain',\n    'baisser',\n    'balai',\n    'balcon',\n    'balise',\n    'balle',\n    'bambou',\n    'banane',\n    'banc',\n    'bandage',\n    'banjo',\n    'banlieue',\n    'bannir',\n    'banque',\n    'baobab',\n    'barbe',\n    'barque',\n    'barrer',\n    'bassine',\n    'bataille',\n    'bateau',\n    'battre',\n    'baver',\n    'bavoir',\n    'bazar',\n    'beau',\n    'beige',\n    'berger',\n    'besoin',\n    'beurre',\n    'biais',\n    'biceps',\n    'bidule',\n    'bien',\n    'bijou',\n    'bilan',\n    'billet',\n    'blanc',\n    'blason',\n    'bleu',\n    'bloc',\n    'blond',\n    'bocal',\n    'boire',\n    'boiserie',\n    'boiter',\n    'bonbon',\n    'bondir',\n    'bonheur',\n    'bordure',\n    'borgne',\n    'borner',\n    'bosse',\n    'bouche',\n    'bouder',\n    'bouger',\n    'boule',\n    'bourse',\n    'bout',\n    'boxe',\n    'brader',\n    'braise',\n    'branche',\n    'braquer',\n    'bras',\n    'brave',\n    'brebis',\n    'brevet',\n    'brider',\n    'briller',\n    'brin',\n    'brique',\n    'briser',\n    'broche',\n    'broder',\n    'bronze',\n    'brosser',\n    'brouter',\n    'bruit',\n    'brute',\n    'budget',\n    'buffet',\n    'bulle',\n    'bureau',\n    'buriner',\n    'buste',\n    'buter',\n    'butiner',\n    'cabas',\n    'cabinet',\n    'cabri',\n    'cacao',\n    'cacher',\n    'cadeau',\n    'cadre',\n    'cage',\n    'caisse',\n    'caler',\n    'calme',\n    'camarade',\n    'camion',\n    'campagne',\n    'canal',\n    'canif',\n    'capable',\n    'capot',\n    'carat',\n    'caresser',\n    'carie',\n    'carpe',\n    'cartel',\n    'casier',\n    'casque',\n    'casserole',\n    'cause',\n    'cavale',\n    'cave',\n    'ceci',\n    'cela',\n    'celui',\n    'cendre',\n    'cent',\n    'cependant',\n    'cercle',\n    'cerise',\n    'cerner',\n    'certes',\n    'cerveau',\n    'cesser',\n    'chacun',\n    'chair',\n    'chaleur',\n    'chamois',\n    'chanson',\n    'chaque',\n    'charge',\n    'chasse',\n    'chat',\n    'chaud',\n    'chef',\n    'chemin',\n    'cheveu',\n    'chez',\n    'chicane',\n    'chien',\n    'chiffre',\n    'chiner',\n    'chiot',\n    'chlore',\n    'choc',\n    'choix',\n    'chose',\n    'chou',\n    'chute',\n    'cibler',\n    'cidre',\n    'ciel',\n    'cigale',\n    'cinq',\n    'cintre',\n    'cirage',\n    'cirque',\n    'ciseau',\n    'citation',\n    'citer',\n    'citron',\n    'civet',\n    'clairon',\n    'clan',\n    'classe',\n    'clavier',\n    'clef',\n    'climat',\n    'cloche',\n    'cloner',\n    'clore',\n    'clos',\n    'clou',\n    'club',\n    'cobra',\n    'cocon',\n    'coiffer',\n    'coin',\n    'colline',\n    'colon',\n    'combat',\n    'comme',\n    'compte',\n    'conclure',\n    'conduire',\n    'confier',\n    'connu',\n    'conseil',\n    'contre',\n    'convenir',\n    'copier',\n    'cordial',\n    'cornet',\n    'corps',\n    'cosmos',\n    'coton',\n    'couche',\n    'coude',\n    'couler',\n    'coupure',\n    'cour',\n    'couteau',\n    'couvrir',\n    'crabe',\n    'crainte',\n    'crampe',\n    'cran',\n    'creuser',\n    'crever',\n    'crier',\n    'crime',\n    'crin',\n    'crise',\n    'crochet',\n    'croix',\n    'cruel',\n    'cuisine',\n    'cuite',\n    'culot',\n    'culte',\n    'cumul',\n    'cure',\n    'curieux',\n    'cuve',\n    'dame',\n    'danger',\n    'dans',\n    'davantage',\n    'debout',\n    'dedans',\n    'dehors',\n    'delta',\n    'demain',\n    'demeurer',\n    'demi',\n    'dense',\n    'dent',\n    'depuis',\n    'dernier',\n    'descendre',\n    'dessus',\n    'destin',\n    'dette',\n    'deuil',\n    'deux',\n    'devant',\n    'devenir',\n    'devin',\n    'devoir',\n    'dicton',\n    'dieu',\n    'difficile',\n    'digestion',\n    'digue',\n    'diluer',\n    'dimanche',\n    'dinde',\n    'diode',\n    'dire',\n    'diriger',\n    'discours',\n    'disposer',\n    'distance',\n    'divan',\n    'divers',\n    'docile',\n    'docteur',\n    'dodu',\n    'dogme',\n    'doigt',\n    'dominer',\n    'donation',\n    'donjon',\n    'donner',\n    'dopage',\n    'dorer',\n    'dormir',\n    'doseur',\n    'douane',\n    'double',\n    'douche',\n    'douleur',\n    'doute',\n    'doux',\n    'douzaine',\n    'draguer',\n    'drame',\n    'drap',\n    'dresser',\n    'droit',\n    'duel',\n    'dune',\n    'duper',\n    'durant',\n    'durcir',\n    'durer',\n    'eaux',\n    'effacer',\n    'effet',\n    'effort',\n    'effrayant',\n    'elle',\n    'embrasser',\n    'emmener',\n    'emparer',\n    'empire',\n    'employer',\n    'emporter',\n    'enclos',\n    'encore',\n    'endive',\n    'endormir',\n    'endroit',\n    'enduit',\n    'enfant',\n    'enfermer',\n    'enfin',\n    'enfler',\n    'enfoncer',\n    'enfuir',\n    'engager',\n    'engin',\n    'enjeu',\n    'enlever',\n    'ennemi',\n    'ennui',\n    'ensemble',\n    'ensuite',\n    'entamer',\n    'entendre',\n    'entier',\n    'entourer',\n    'entre',\n    'envelopper',\n    'envie',\n    'envoyer',\n    'erreur',\n    'escalier',\n    'espace',\n    'espoir',\n    'esprit',\n    'essai',\n    'essor',\n    'essuyer',\n    'estimer',\n    'exact',\n    'examiner',\n    'excuse',\n    'exemple',\n    'exiger',\n    'exil',\n    'exister',\n    'exode',\n    'expliquer',\n    'exposer',\n    'exprimer',\n    'extase',\n    'fable',\n    'facette',\n    'facile',\n    'fade',\n    'faible',\n    'faim',\n    'faire',\n    'fait',\n    'falloir',\n    'famille',\n    'faner',\n    'farce',\n    'farine',\n    'fatigue',\n    'faucon',\n    'faune',\n    'faute',\n    'faux',\n    'faveur',\n    'favori',\n    'faxer',\n    'feinter',\n    'femme',\n    'fendre',\n    'fente',\n    'ferme',\n    'festin',\n    'feuille',\n    'feutre',\n    'fiable',\n    'fibre',\n    'ficher',\n    'fier',\n    'figer',\n    'figure',\n    'filet',\n    'fille',\n    'filmer',\n    'fils',\n    'filtre',\n    'final',\n    'finesse',\n    'finir',\n    'fiole',\n    'firme',\n    'fixe',\n    'flacon',\n    'flair',\n    'flamme',\n    'flan',\n    'flaque',\n    'fleur',\n    'flocon',\n    'flore',\n    'flot',\n    'flou',\n    'fluide',\n    'fluor',\n    'flux',\n    'focus',\n    'foin',\n    'foire',\n    'foison',\n    'folie',\n    'fonction',\n    'fondre',\n    'fonte',\n    'force',\n    'forer',\n    'forger',\n    'forme',\n    'fort',\n    'fosse',\n    'fouet',\n    'fouine',\n    'foule',\n    'four',\n    'foyer',\n    'frais',\n    'franc',\n    'frapper',\n    'freiner',\n    'frimer',\n    'friser',\n    'frite',\n    'froid',\n    'froncer',\n    'fruit',\n    'fugue',\n    'fuir',\n    'fuite',\n    'fumer',\n    'fureur',\n    'furieux',\n    'fuser',\n    'fusil',\n    'futile',\n    'futur',\n    'gagner',\n    'gain',\n    'gala',\n    'galet',\n    'galop',\n    'gamme',\n    'gant',\n    'garage',\n    'garde',\n    'garer',\n    'gauche',\n    'gaufre',\n    'gaule',\n    'gaver',\n    'gazon',\n    'geler',\n    'genou',\n    'genre',\n    'gens',\n    'gercer',\n    'germer',\n    'geste',\n    'gibier',\n    'gicler',\n    'gilet',\n    'girafe',\n    'givre',\n    'glace',\n    'glisser',\n    'globe',\n    'gloire',\n    'gluant',\n    'gober',\n    'golf',\n    'gommer',\n    'gorge',\n    'gosier',\n    'goutte',\n    'grain',\n    'gramme',\n    'grand',\n    'gras',\n    'grave',\n    'gredin',\n    'griffure',\n    'griller',\n    'gris',\n    'gronder',\n    'gros',\n    'grotte',\n    'groupe',\n    'grue',\n    'guerrier',\n    'guetter',\n    'guider',\n    'guise',\n    'habiter',\n    'hache',\n    'haie',\n    'haine',\n    'halte',\n    'hamac',\n    'hanche',\n    'hangar',\n    'hanter',\n    'haras',\n    'hareng',\n    'harpe',\n    'hasard',\n    'hausse',\n    'haut',\n    'havre',\n    'herbe',\n    'heure',\n    'hibou',\n    'hier',\n    'histoire',\n    'hiver',\n    'hochet',\n    'homme',\n    'honneur',\n    'honte',\n    'horde',\n    'horizon',\n    'hormone',\n    'houle',\n    'housse',\n    'hublot',\n    'huile',\n    'huit',\n    'humain',\n    'humble',\n    'humide',\n    'humour',\n    'hurler',\n    'idole',\n    'igloo',\n    'ignorer',\n    'illusion',\n    'image',\n    'immense',\n    'immobile',\n    'imposer',\n    'impression',\n    'incapable',\n    'inconnu',\n    'index',\n    'indiquer',\n    'infime',\n    'injure',\n    'inox',\n    'inspirer',\n    'instant',\n    'intention',\n    'intime',\n    'inutile',\n    'inventer',\n    'inviter',\n    'iode',\n    'iris',\n    'issue',\n    'ivre',\n    'jade',\n    'jadis',\n    'jamais',\n    'jambe',\n    'janvier',\n    'jardin',\n    'jauge',\n    'jaunisse',\n    'jeter',\n    'jeton',\n    'jeudi',\n    'jeune',\n    'joie',\n    'joindre',\n    'joli',\n    'joueur',\n    'journal',\n    'judo',\n    'juge',\n    'juillet',\n    'juin',\n    'jument',\n    'jungle',\n    'jupe',\n    'jupon',\n    'jurer',\n    'juron',\n    'jury',\n    'jusque',\n    'juste',\n    'kayak',\n    'ketchup',\n    'kilo',\n    'kiwi',\n    'koala',\n    'label',\n    'lacet',\n    'lacune',\n    'laine',\n    'laisse',\n    'lait',\n    'lame',\n    'lancer',\n    'lande',\n    'laque',\n    'lard',\n    'largeur',\n    'larme',\n    'larve',\n    'lasso',\n    'laver',\n    'lendemain',\n    'lentement',\n    'lequel',\n    'lettre',\n    'leur',\n    'lever',\n    'levure',\n    'liane',\n    'libre',\n    'lien',\n    'lier',\n    'lieutenant',\n    'ligne',\n    'ligoter',\n    'liguer',\n    'limace',\n    'limer',\n    'limite',\n    'lingot',\n    'lion',\n    'lire',\n    'lisser',\n    'litre',\n    'livre',\n    'lobe',\n    'local',\n    'logis',\n    'loin',\n    'loisir',\n    'long',\n    'loque',\n    'lors',\n    'lotus',\n    'louer',\n    'loup',\n    'lourd',\n    'louve',\n    'loyer',\n    'lubie',\n    'lucide',\n    'lueur',\n    'luge',\n    'luire',\n    'lundi',\n    'lune',\n    'lustre',\n    'lutin',\n    'lutte',\n    'luxe',\n    'machine',\n    'madame',\n    'magie',\n    'magnifique',\n    'magot',\n    'maigre',\n    'main',\n    'mairie',\n    'maison',\n    'malade',\n    'malheur',\n    'malin',\n    'manche',\n    'manger',\n    'manier',\n    'manoir',\n    'manquer',\n    'marche',\n    'mardi',\n    'marge',\n    'mariage',\n    'marquer',\n    'mars',\n    'masque',\n    'masse',\n    'matin',\n    'mauvais',\n    'meilleur',\n    'melon',\n    'membre',\n    'menacer',\n    'mener',\n    'mensonge',\n    'mentir',\n    'menu',\n    'merci',\n    'merlu',\n    'mesure',\n    'mettre',\n    'meuble',\n    'meunier',\n    'meute',\n    'miche',\n    'micro',\n    'midi',\n    'miel',\n    'miette',\n    'mieux',\n    'milieu',\n    'mille',\n    'mimer',\n    'mince',\n    'mineur',\n    'ministre',\n    'minute',\n    'mirage',\n    'miroir',\n    'miser',\n    'mite',\n    'mixte',\n    'mobile',\n    'mode',\n    'module',\n    'moins',\n    'mois',\n    'moment',\n    'momie',\n    'monde',\n    'monsieur',\n    'monter',\n    'moquer',\n    'moral',\n    'morceau',\n    'mordre',\n    'morose',\n    'morse',\n    'mortier',\n    'morue',\n    'motif',\n    'motte',\n    'moudre',\n    'moule',\n    'mourir',\n    'mousse',\n    'mouton',\n    'mouvement',\n    'moyen',\n    'muer',\n    'muette',\n    'mugir',\n    'muguet',\n    'mulot',\n    'multiple',\n    'munir',\n    'muret',\n    'muse',\n    'musique',\n    'muter',\n    'nacre',\n    'nager',\n    'nain',\n    'naissance',\n    'narine',\n    'narrer',\n    'naseau',\n    'nasse',\n    'nation',\n    'nature',\n    'naval',\n    'navet',\n    'naviguer',\n    'navrer',\n    'neige',\n    'nerf',\n    'nerveux',\n    'neuf',\n    'neutre',\n    'neuve',\n    'neveu',\n    'niche',\n    'nier',\n    'niveau',\n    'noble',\n    'noce',\n    'nocif',\n    'noir',\n    'nomade',\n    'nombre',\n    'nommer',\n    'nord',\n    'norme',\n    'notaire',\n    'notice',\n    'notre',\n    'nouer',\n    'nougat',\n    'nourrir',\n    'nous',\n    'nouveau',\n    'novice',\n    'noyade',\n    'noyer',\n    'nuage',\n    'nuance',\n    'nuire',\n    'nuit',\n    'nulle',\n    'nuque',\n    'oasis',\n    'objet',\n    'obliger',\n    'obscur',\n    'observer',\n    'obtenir',\n    'obus',\n    'occasion',\n    'occuper',\n    'ocre',\n    'octet',\n    'odeur',\n    'odorat',\n    'offense',\n    'officier',\n    'offrir',\n    'ogive',\n    'oiseau',\n    'olive',\n    'ombre',\n    'onctueux',\n    'onduler',\n    'ongle',\n    'onze',\n    'opter',\n    'option',\n    'orageux',\n    'oral',\n    'orange',\n    'orbite',\n    'ordinaire',\n    'ordre',\n    'oreille',\n    'organe',\n    'orgie',\n    'orgueil',\n    'orient',\n    'origan',\n    'orner',\n    'orteil',\n    'ortie',\n    'oser',\n    'osselet',\n    'otage',\n    'otarie',\n    'ouate',\n    'oublier',\n    'ouest',\n    'ours',\n    'outil',\n    'outre',\n    'ouvert',\n    'ouvrir',\n    'ovale',\n    'ozone',\n    'pacte',\n    'page',\n    'paille',\n    'pain',\n    'paire',\n    'paix',\n    'palace',\n    'palissade',\n    'palmier',\n    'palpiter',\n    'panda',\n    'panneau',\n    'papa',\n    'papier',\n    'paquet',\n    'parc',\n    'pardi',\n    'parfois',\n    'parler',\n    'parmi',\n    'parole',\n    'partir',\n    'parvenir',\n    'passer',\n    'pastel',\n    'patin',\n    'patron',\n    'paume',\n    'pause',\n    'pauvre',\n    'paver',\n    'pavot',\n    'payer',\n    'pays',\n    'peau',\n    'peigne',\n    'peinture',\n    'pelage',\n    'pelote',\n    'pencher',\n    'pendre',\n    'penser',\n    'pente',\n    'percer',\n    'perdu',\n    'perle',\n    'permettre',\n    'personne',\n    'perte',\n    'peser',\n    'pesticide',\n    'petit',\n    'peuple',\n    'peur',\n    'phase',\n    'photo',\n    'phrase',\n    'piano',\n    'pied',\n    'pierre',\n    'pieu',\n    'pile',\n    'pilier',\n    'pilote',\n    'pilule',\n    'piment',\n    'pincer',\n    'pinson',\n    'pinte',\n    'pion',\n    'piquer',\n    'pirate',\n    'pire',\n    'piste',\n    'piton',\n    'pitre',\n    'pivot',\n    'pizza',\n    'placer',\n    'plage',\n    'plaire',\n    'plan',\n    'plaque',\n    'plat',\n    'plein',\n    'pleurer',\n    'pliage',\n    'plier',\n    'plonger',\n    'plot',\n    'pluie',\n    'plume',\n    'plus',\n    'pneu',\n    'poche',\n    'podium',\n    'poids',\n    'poil',\n    'point',\n    'poire',\n    'poison',\n    'poitrine',\n    'poivre',\n    'police',\n    'pollen',\n    'pomme',\n    'pompier',\n    'poncer',\n    'pondre',\n    'pont',\n    'portion',\n    'poser',\n    'position',\n    'possible',\n    'poste',\n    'potage',\n    'potin',\n    'pouce',\n    'poudre',\n    'poulet',\n    'poumon',\n    'poupe',\n    'pour',\n    'pousser',\n    'poutre',\n    'pouvoir',\n    'prairie',\n    'premier',\n    'prendre',\n    'presque',\n    'preuve',\n    'prier',\n    'primeur',\n    'prince',\n    'prison',\n    'priver',\n    'prix',\n    'prochain',\n    'produire',\n    'profond',\n    'proie',\n    'projet',\n    'promener',\n    'prononcer',\n    'propre',\n    'prose',\n    'prouver',\n    'prune',\n    'public',\n    'puce',\n    'pudeur',\n    'puiser',\n    'pull',\n    'pulpe',\n    'puma',\n    'punir',\n    'purge',\n    'putois',\n    'quand',\n    'quartier',\n    'quasi',\n    'quatre',\n    'quel',\n    'question',\n    'queue',\n    'quiche',\n    'quille',\n    'quinze',\n    'quitter',\n    'quoi',\n    'rabais',\n    'raboter',\n    'race',\n    'racheter',\n    'racine',\n    'racler',\n    'raconter',\n    'radar',\n    'radio',\n    'rafale',\n    'rage',\n    'ragot',\n    'raideur',\n    'raie',\n    'rail',\n    'raison',\n    'ramasser',\n    'ramener',\n    'rampe',\n    'rance',\n    'rang',\n    'rapace',\n    'rapide',\n    'rapport',\n    'rarement',\n    'rasage',\n    'raser',\n    'rasoir',\n    'rassurer',\n    'rater',\n    'ratio',\n    'rature',\n    'ravage',\n    'ravir',\n    'rayer',\n    'rayon',\n    'rebond',\n    'recevoir',\n    'recherche',\n    'record',\n    'reculer',\n    'redevenir',\n    'refuser',\n    'regard',\n    'regretter',\n    'rein',\n    'rejeter',\n    'rejoindre',\n    'relation',\n    'relever',\n    'religion',\n    'remarquer',\n    'remettre',\n    'remise',\n    'remonter',\n    'remplir',\n    'remuer',\n    'rencontre',\n    'rendre',\n    'renier',\n    'renoncer',\n    'rentrer',\n    'renverser',\n    'repas',\n    'repli',\n    'reposer',\n    'reproche',\n    'requin',\n    'respect',\n    'ressembler',\n    'reste',\n    'retard',\n    'retenir',\n    'retirer',\n    'retour',\n    'retrouver',\n    'revenir',\n    'revoir',\n    'revue',\n    'rhume',\n    'ricaner',\n    'riche',\n    'rideau',\n    'ridicule',\n    'rien',\n    'rigide',\n    'rincer',\n    'rire',\n    'risquer',\n    'rituel',\n    'rivage',\n    'rive',\n    'robe',\n    'robot',\n    'robuste',\n    'rocade',\n    'roche',\n    'rodeur',\n    'rogner',\n    'roman',\n    'rompre',\n    'ronce',\n    'rondeur',\n    'ronger',\n    'roque',\n    'rose',\n    'rosir',\n    'rotation',\n    'rotule',\n    'roue',\n    'rouge',\n    'rouler',\n    'route',\n    'ruban',\n    'rubis',\n    'ruche',\n    'rude',\n    'ruelle',\n    'ruer',\n    'rugby',\n    'rugir',\n    'ruine',\n    'rumeur',\n    'rural',\n    'ruse',\n    'rustre',\n    'sable',\n    'sabot',\n    'sabre',\n    'sacre',\n    'sage',\n    'saint',\n    'saisir',\n    'salade',\n    'salive',\n    'salle',\n    'salon',\n    'salto',\n    'salut',\n    'salve',\n    'samba',\n    'sandale',\n    'sanguin',\n    'sapin',\n    'sarcasme',\n    'satisfaire',\n    'sauce',\n    'sauf',\n    'sauge',\n    'saule',\n    'sauna',\n    'sauter',\n    'sauver',\n    'savoir',\n    'science',\n    'scoop',\n    'score',\n    'second',\n    'secret',\n    'secte',\n    'seigneur',\n    'sein',\n    'seize',\n    'selle',\n    'selon',\n    'semaine',\n    'sembler',\n    'semer',\n    'semis',\n    'sensuel',\n    'sentir',\n    'sept',\n    'serpe',\n    'serrer',\n    'sertir',\n    'service',\n    'seuil',\n    'seulement',\n    'short',\n    'sien',\n    'sigle',\n    'signal',\n    'silence',\n    'silo',\n    'simple',\n    'singe',\n    'sinon',\n    'sinus',\n    'sioux',\n    'sirop',\n    'site',\n    'situation',\n    'skier',\n    'snob',\n    'sobre',\n    'social',\n    'socle',\n    'sodium',\n    'soigner',\n    'soir',\n    'soixante',\n    'soja',\n    'solaire',\n    'soldat',\n    'soleil',\n    'solide',\n    'solo',\n    'solvant',\n    'sombre',\n    'somme',\n    'somnoler',\n    'sondage',\n    'songeur',\n    'sonner',\n    'sorte',\n    'sosie',\n    'sottise',\n    'souci',\n    'soudain',\n    'souffrir',\n    'souhaiter',\n    'soulever',\n    'soumettre',\n    'soupe',\n    'sourd',\n    'soustraire',\n    'soutenir',\n    'souvent',\n    'soyeux',\n    'spectacle',\n    'sport',\n    'stade',\n    'stagiaire',\n    'stand',\n    'star',\n    'statue',\n    'stock',\n    'stop',\n    'store',\n    'style',\n    'suave',\n    'subir',\n    'sucre',\n    'suer',\n    'suffire',\n    'suie',\n    'suite',\n    'suivre',\n    'sujet',\n    'sulfite',\n    'supposer',\n    'surf',\n    'surprendre',\n    'surtout',\n    'surveiller',\n    'tabac',\n    'table',\n    'tabou',\n    'tache',\n    'tacler',\n    'tacot',\n    'tact',\n    'taie',\n    'taille',\n    'taire',\n    'talon',\n    'talus',\n    'tandis',\n    'tango',\n    'tanin',\n    'tant',\n    'taper',\n    'tapis',\n    'tard',\n    'tarif',\n    'tarot',\n    'tarte',\n    'tasse',\n    'taureau',\n    'taux',\n    'taverne',\n    'taxer',\n    'taxi',\n    'tellement',\n    'temple',\n    'tendre',\n    'tenir',\n    'tenter',\n    'tenu',\n    'terme',\n    'ternir',\n    'terre',\n    'test',\n    'texte',\n    'thym',\n    'tibia',\n    'tiers',\n    'tige',\n    'tipi',\n    'tique',\n    'tirer',\n    'tissu',\n    'titre',\n    'toast',\n    'toge',\n    'toile',\n    'toiser',\n    'toiture',\n    'tomber',\n    'tome',\n    'tonne',\n    'tonte',\n    'toque',\n    'torse',\n    'tortue',\n    'totem',\n    'toucher',\n    'toujours',\n    'tour',\n    'tousser',\n    'tout',\n    'toux',\n    'trace',\n    'train',\n    'trame',\n    'tranquille',\n    'travail',\n    'trembler',\n    'trente',\n    'tribu',\n    'trier',\n    'trio',\n    'tripe',\n    'triste',\n    'troc',\n    'trois',\n    'tromper',\n    'tronc',\n    'trop',\n    'trotter',\n    'trouer',\n    'truc',\n    'truite',\n    'tuba',\n    'tuer',\n    'tuile',\n    'turbo',\n    'tutu',\n    'tuyau',\n    'type',\n    'union',\n    'unique',\n    'unir',\n    'unisson',\n    'untel',\n    'urne',\n    'usage',\n    'user',\n    'usiner',\n    'usure',\n    'utile',\n    'vache',\n    'vague',\n    'vaincre',\n    'valeur',\n    'valoir',\n    'valser',\n    'valve',\n    'vampire',\n    'vaseux',\n    'vaste',\n    'veau',\n    'veille',\n    'veine',\n    'velours',\n    'velu',\n    'vendre',\n    'venir',\n    'vent',\n    'venue',\n    'verbe',\n    'verdict',\n    'version',\n    'vertige',\n    'verve',\n    'veste',\n    'veto',\n    'vexer',\n    'vice',\n    'victime',\n    'vide',\n    'vieil',\n    'vieux',\n    'vigie',\n    'vigne',\n    'ville',\n    'vingt',\n    'violent',\n    'virer',\n    'virus',\n    'visage',\n    'viser',\n    'visite',\n    'visuel',\n    'vitamine',\n    'vitrine',\n    'vivant',\n    'vivre',\n    'vocal',\n    'vodka',\n    'vogue',\n    'voici',\n    'voile',\n    'voir',\n    'voisin',\n    'voiture',\n    'volaille',\n    'volcan',\n    'voler',\n    'volt',\n    'votant',\n    'votre',\n    'vouer',\n    'vouloir',\n    'vous',\n    'voyage',\n    'voyou',\n    'vrac',\n    'vrai',\n    'yacht',\n    'yeti',\n    'yeux',\n    'yoga',\n    'zeste',\n    'zinc',\n    'zone',\n    'zoom'\n];\n//# sourceMappingURL=french.js.map","// SPDX-License-Identifier: MIT\nexport const WORDLIST = [\n    'Abakus',\n    'Abart',\n    'abbilden',\n    'Abbruch',\n    'Abdrift',\n    'Abendrot',\n    'Abfahrt',\n    'abfeuern',\n    'Abflug',\n    'abfragen',\n    'Abglanz',\n    'abhärten',\n    'abheben',\n    'Abhilfe',\n    'Abitur',\n    'Abkehr',\n    'Ablauf',\n    'ablecken',\n    'Ablösung',\n    'Abnehmer',\n    'abnutzen',\n    'Abonnent',\n    'Abrasion',\n    'Abrede',\n    'abrüsten',\n    'Absicht',\n    'Absprung',\n    'Abstand',\n    'absuchen',\n    'Abteil',\n    'Abundanz',\n    'abwarten',\n    'Abwurf',\n    'Abzug',\n    'Achse',\n    'Achtung',\n    'Acker',\n    'Aderlass',\n    'Adler',\n    'Admiral',\n    'Adresse',\n    'Affe',\n    'Affront',\n    'Afrika',\n    'Aggregat',\n    'Agilität',\n    'ähneln',\n    'Ahnung',\n    'Ahorn',\n    'Akazie',\n    'Akkord',\n    'Akrobat',\n    'Aktfoto',\n    'Aktivist',\n    'Albatros',\n    'Alchimie',\n    'Alemanne',\n    'Alibi',\n    'Alkohol',\n    'Allee',\n    'Allüre',\n    'Almosen',\n    'Almweide',\n    'Aloe',\n    'Alpaka',\n    'Alpental',\n    'Alphabet',\n    'Alpinist',\n    'Alraune',\n    'Altbier',\n    'Alter',\n    'Altflöte',\n    'Altruist',\n    'Alublech',\n    'Aludose',\n    'Amateur',\n    'Amazonas',\n    'Ameise',\n    'Amnesie',\n    'Amok',\n    'Ampel',\n    'Amphibie',\n    'Ampulle',\n    'Amsel',\n    'Amulett',\n    'Anakonda',\n    'Analogie',\n    'Ananas',\n    'Anarchie',\n    'Anatomie',\n    'Anba',\n    'Anbeginn',\n    'anbieten',\n    'Anblick',\n    'ändern',\n    'andocken',\n    'Andrang',\n    'anecken',\n    'Anflug',\n    'Anfrage',\n    'Anführer',\n    'Angebot',\n    'Angler',\n    'Anhalter',\n    'Anhöhe',\n    'Animator',\n    'Anis',\n    'Anker',\n    'ankleben',\n    'Ankunft',\n    'Anlage',\n    'anlocken',\n    'Anmut',\n    'Annahme',\n    'Anomalie',\n    'Anonymus',\n    'Anorak',\n    'anpeilen',\n    'Anrecht',\n    'Anruf',\n    'Ansage',\n    'Anschein',\n    'Ansicht',\n    'Ansporn',\n    'Anteil',\n    'Antlitz',\n    'Antrag',\n    'Antwort',\n    'Anwohner',\n    'Aorta',\n    'Apfel',\n    'Appetit',\n    'Applaus',\n    'Aquarium',\n    'Arbeit',\n    'Arche',\n    'Argument',\n    'Arktis',\n    'Armband',\n    'Aroma',\n    'Asche',\n    'Askese',\n    'Asphalt',\n    'Asteroid',\n    'Ästhetik',\n    'Astronom',\n    'Atelier',\n    'Athlet',\n    'Atlantik',\n    'Atmung',\n    'Audienz',\n    'aufatmen',\n    'Auffahrt',\n    'aufholen',\n    'aufregen',\n    'Aufsatz',\n    'Auftritt',\n    'Aufwand',\n    'Augapfel',\n    'Auktion',\n    'Ausbruch',\n    'Ausflug',\n    'Ausgabe',\n    'Aushilfe',\n    'Ausland',\n    'Ausnahme',\n    'Aussage',\n    'Autobahn',\n    'Avocado',\n    'Axthieb',\n    'Bach',\n    'backen',\n    'Badesee',\n    'Bahnhof',\n    'Balance',\n    'Balkon',\n    'Ballett',\n    'Balsam',\n    'Banane',\n    'Bandage',\n    'Bankett',\n    'Barbar',\n    'Barde',\n    'Barett',\n    'Bargeld',\n    'Barkasse',\n    'Barriere',\n    'Bart',\n    'Bass',\n    'Bastler',\n    'Batterie',\n    'Bauch',\n    'Bauer',\n    'Bauholz',\n    'Baujahr',\n    'Baum',\n    'Baustahl',\n    'Bauteil',\n    'Bauweise',\n    'Bazar',\n    'beachten',\n    'Beatmung',\n    'beben',\n    'Becher',\n    'Becken',\n    'bedanken',\n    'beeilen',\n    'beenden',\n    'Beere',\n    'befinden',\n    'Befreier',\n    'Begabung',\n    'Begierde',\n    'begrüßen',\n    'Beiboot',\n    'Beichte',\n    'Beifall',\n    'Beigabe',\n    'Beil',\n    'Beispiel',\n    'Beitrag',\n    'beizen',\n    'bekommen',\n    'beladen',\n    'Beleg',\n    'bellen',\n    'belohnen',\n    'Bemalung',\n    'Bengel',\n    'Benutzer',\n    'Benzin',\n    'beraten',\n    'Bereich',\n    'Bergluft',\n    'Bericht',\n    'Bescheid',\n    'Besitz',\n    'besorgen',\n    'Bestand',\n    'Besuch',\n    'betanken',\n    'beten',\n    'betören',\n    'Bett',\n    'Beule',\n    'Beute',\n    'Bewegung',\n    'bewirken',\n    'Bewohner',\n    'bezahlen',\n    'Bezug',\n    'biegen',\n    'Biene',\n    'Bierzelt',\n    'bieten',\n    'Bikini',\n    'Bildung',\n    'Billard',\n    'binden',\n    'Biobauer',\n    'Biologe',\n    'Bionik',\n    'Biotop',\n    'Birke',\n    'Bison',\n    'Bitte',\n    'Biwak',\n    'Bizeps',\n    'blasen',\n    'Blatt',\n    'Blauwal',\n    'Blende',\n    'Blick',\n    'Blitz',\n    'Blockade',\n    'Blödelei',\n    'Blondine',\n    'Blues',\n    'Blume',\n    'Blut',\n    'Bodensee',\n    'Bogen',\n    'Boje',\n    'Bollwerk',\n    'Bonbon',\n    'Bonus',\n    'Boot',\n    'Bordarzt',\n    'Börse',\n    'Böschung',\n    'Boudoir',\n    'Boxkampf',\n    'Boykott',\n    'Brahms',\n    'Brandung',\n    'Brauerei',\n    'Brecher',\n    'Breitaxt',\n    'Bremse',\n    'brennen',\n    'Brett',\n    'Brief',\n    'Brigade',\n    'Brillanz',\n    'bringen',\n    'brodeln',\n    'Brosche',\n    'Brötchen',\n    'Brücke',\n    'Brunnen',\n    'Brüste',\n    'Brutofen',\n    'Buch',\n    'Büffel',\n    'Bugwelle',\n    'Bühne',\n    'Buletten',\n    'Bullauge',\n    'Bumerang',\n    'bummeln',\n    'Buntglas',\n    'Bürde',\n    'Burgherr',\n    'Bursche',\n    'Busen',\n    'Buslinie',\n    'Bussard',\n    'Butangas',\n    'Butter',\n    'Cabrio',\n    'campen',\n    'Captain',\n    'Cartoon',\n    'Cello',\n    'Chalet',\n    'Charisma',\n    'Chefarzt',\n    'Chiffon',\n    'Chipsatz',\n    'Chirurg',\n    'Chor',\n    'Chronik',\n    'Chuzpe',\n    'Clubhaus',\n    'Cockpit',\n    'Codewort',\n    'Cognac',\n    'Coladose',\n    'Computer',\n    'Coupon',\n    'Cousin',\n    'Cracking',\n    'Crash',\n    'Curry',\n    'Dach',\n    'Dackel',\n    'daddeln',\n    'daliegen',\n    'Dame',\n    'Dammba',\n    'Dämon',\n    'Dampflok',\n    'Dank',\n    'Darm',\n    'Datei',\n    'Datsche',\n    'Datteln',\n    'Datum',\n    'Dauer',\n    'Daunen',\n    'Deckel',\n    'Decoder',\n    'Defekt',\n    'Degen',\n    'Dehnung',\n    'Deiche',\n    'Dekade',\n    'Dekor',\n    'Delfin',\n    'Demut',\n    'denken',\n    'Deponie',\n    'Design',\n    'Desktop',\n    'Dessert',\n    'Detail',\n    'Detektiv',\n    'Dezibel',\n    'Diadem',\n    'Diagnose',\n    'Dialekt',\n    'Diamant',\n    'Dichter',\n    'Dickicht',\n    'Diesel',\n    'Diktat',\n    'Diplom',\n    'Direktor',\n    'Dirne',\n    'Diskurs',\n    'Distanz',\n    'Docht',\n    'Dohle',\n    'Dolch',\n    'Domäne',\n    'Donner',\n    'Dorade',\n    'Dorf',\n    'Dörrobst',\n    'Dorsch',\n    'Dossier',\n    'Dozent',\n    'Drachen',\n    'Draht',\n    'Drama',\n    'Drang',\n    'Drehbuch',\n    'Dreieck',\n    'Dressur',\n    'Drittel',\n    'Drossel',\n    'Druck',\n    'Duell',\n    'Duft',\n    'Düne',\n    'Dünung',\n    'dürfen',\n    'Duschbad',\n    'Düsenjet',\n    'Dynamik',\n    'Ebbe',\n    'Echolot',\n    'Echse',\n    'Eckball',\n    'Edding',\n    'Edelweiß',\n    'Eden',\n    'Edition',\n    'Efe',\n    'Effekte',\n    'Egoismus',\n    'Ehre',\n    'Eiablage',\n    'Eiche',\n    'Eidechse',\n    'Eidotter',\n    'Eierkopf',\n    'Eigelb',\n    'Eiland',\n    'Eilbote',\n    'Eimer',\n    'einatmen',\n    'Einband',\n    'Eindruck',\n    'Einfall',\n    'Eingang',\n    'Einkauf',\n    'einladen',\n    'Einöde',\n    'Einrad',\n    'Eintopf',\n    'Einwurf',\n    'Einzug',\n    'Eisbär',\n    'Eisen',\n    'Eishöhle',\n    'Eismeer',\n    'Eiweiß',\n    'Ekstase',\n    'Elan',\n    'Elch',\n    'Elefant',\n    'Eleganz',\n    'Element',\n    'Elfe',\n    'Elite',\n    'Elixier',\n    'Ellbogen',\n    'Eloquenz',\n    'Emigrant',\n    'Emission',\n    'Emotion',\n    'Empathie',\n    'Empfang',\n    'Endzeit',\n    'Energie',\n    'Engpass',\n    'Enkel',\n    'Enklave',\n    'Ente',\n    'entheben',\n    'Entität',\n    'entladen',\n    'Entwurf',\n    'Episode',\n    'Epoche',\n    'erachten',\n    'Erbauer',\n    'erblühen',\n    'Erdbeere',\n    'Erde',\n    'Erdgas',\n    'Erdkunde',\n    'Erdnuss',\n    'Erdöl',\n    'Erdteil',\n    'Ereignis',\n    'Eremit',\n    'erfahren',\n    'Erfolg',\n    'erfreuen',\n    'erfüllen',\n    'Ergebnis',\n    'erhitzen',\n    'erkalten',\n    'erkennen',\n    'erleben',\n    'Erlösung',\n    'ernähren',\n    'erneuern',\n    'Ernte',\n    'Eroberer',\n    'eröffnen',\n    'Erosion',\n    'Erotik',\n    'Erpel',\n    'erraten',\n    'Erreger',\n    'erröten',\n    'Ersatz',\n    'Erstflug',\n    'Ertrag',\n    'Eruption',\n    'erwarten',\n    'erwidern',\n    'Erzba',\n    'Erzeuger',\n    'erziehen',\n    'Esel',\n    'Eskimo',\n    'Eskorte',\n    'Espe',\n    'Espresso',\n    'essen',\n    'Etage',\n    'Etappe',\n    'Etat',\n    'Ethik',\n    'Etikett',\n    'Etüde',\n    'Eule',\n    'Euphorie',\n    'Europa',\n    'Everest',\n    'Examen',\n    'Exil',\n    'Exodus',\n    'Extrakt',\n    'Fabel',\n    'Fabrik',\n    'Fachmann',\n    'Fackel',\n    'Faden',\n    'Fagott',\n    'Fahne',\n    'Faible',\n    'Fairness',\n    'Fakt',\n    'Fakultät',\n    'Falke',\n    'Fallobst',\n    'Fälscher',\n    'Faltboot',\n    'Familie',\n    'Fanclub',\n    'Fanfare',\n    'Fangarm',\n    'Fantasie',\n    'Farbe',\n    'Farmhaus',\n    'Farn',\n    'Fasan',\n    'Faser',\n    'Fassung',\n    'fasten',\n    'Faulheit',\n    'Fauna',\n    'Faust',\n    'Favorit',\n    'Faxgerät',\n    'Fazit',\n    'fechten',\n    'Federboa',\n    'Fehler',\n    'Feier',\n    'Feige',\n    'feilen',\n    'Feinripp',\n    'Feldbett',\n    'Felge',\n    'Fellpony',\n    'Felswand',\n    'Ferien',\n    'Ferkel',\n    'Fernweh',\n    'Ferse',\n    'Fest',\n    'Fettnapf',\n    'Feuer',\n    'Fiasko',\n    'Fichte',\n    'Fiktion',\n    'Film',\n    'Filter',\n    'Filz',\n    'Finanzen',\n    'Findling',\n    'Finger',\n    'Fink',\n    'Finnwal',\n    'Fisch',\n    'Fitness',\n    'Fixpunkt',\n    'Fixstern',\n    'Fjord',\n    'Flachba',\n    'Flagge',\n    'Flamenco',\n    'Flanke',\n    'Flasche',\n    'Flaute',\n    'Fleck',\n    'Flegel',\n    'flehen',\n    'Fleisch',\n    'fliegen',\n    'Flinte',\n    'Flirt',\n    'Flocke',\n    'Floh',\n    'Floskel',\n    'Floß',\n    'Flöte',\n    'Flugzeug',\n    'Flunder',\n    'Flusstal',\n    'Flutung',\n    'Fockmast',\n    'Fohlen',\n    'Föhnlage',\n    'Fokus',\n    'folgen',\n    'Foliant',\n    'Folklore',\n    'Fontäne',\n    'Förde',\n    'Forelle',\n    'Format',\n    'Forscher',\n    'Fortgang',\n    'Forum',\n    'Fotograf',\n    'Frachter',\n    'Fragment',\n    'Fraktion',\n    'fräsen',\n    'Frauenpo',\n    'Freak',\n    'Fregatte',\n    'Freiheit',\n    'Freude',\n    'Frieden',\n    'Frohsinn',\n    'Frosch',\n    'Frucht',\n    'Frühjahr',\n    'Fuchs',\n    'Fügung',\n    'fühlen',\n    'Füller',\n    'Fundbüro',\n    'Funkboje',\n    'Funzel',\n    'Furnier',\n    'Fürsorge',\n    'Fusel',\n    'Fußbad',\n    'Futteral',\n    'Gabelung',\n    'gackern',\n    'Gage',\n    'gähnen',\n    'Galaxie',\n    'Galeere',\n    'Galopp',\n    'Gameboy',\n    'Gamsbart',\n    'Gandhi',\n    'Gang',\n    'Garage',\n    'Gardine',\n    'Garküche',\n    'Garten',\n    'Gasthaus',\n    'Gattung',\n    'gaukeln',\n    'Gazelle',\n    'Gebäck',\n    'Gebirge',\n    'Gebrä',\n    'Geburt',\n    'Gedanke',\n    'Gedeck',\n    'Gedicht',\n    'Gefahr',\n    'Gefieder',\n    'Geflügel',\n    'Gefühl',\n    'Gegend',\n    'Gehirn',\n    'Gehöft',\n    'Gehweg',\n    'Geige',\n    'Geist',\n    'Gelage',\n    'Geld',\n    'Gelenk',\n    'Gelübde',\n    'Gemälde',\n    'Gemeinde',\n    'Gemüse',\n    'genesen',\n    'Genuss',\n    'Gepäck',\n    'Geranie',\n    'Gericht',\n    'Germane',\n    'Geruch',\n    'Gesang',\n    'Geschenk',\n    'Gesetz',\n    'Gesindel',\n    'Gesöff',\n    'Gespan',\n    'Gestade',\n    'Gesuch',\n    'Getier',\n    'Getränk',\n    'Getümmel',\n    'Gewand',\n    'Geweih',\n    'Gewitter',\n    'Gewölbe',\n    'Geysir',\n    'Giftzahn',\n    'Gipfel',\n    'Giraffe',\n    'Gitarre',\n    'glänzen',\n    'Glasauge',\n    'Glatze',\n    'Gleis',\n    'Globus',\n    'Glück',\n    'glühen',\n    'Glutofen',\n    'Goldzahn',\n    'Gondel',\n    'gönnen',\n    'Gottheit',\n    'graben',\n    'Grafik',\n    'Grashalm',\n    'Graugans',\n    'greifen',\n    'Grenze',\n    'grillen',\n    'Groschen',\n    'Grotte',\n    'Grube',\n    'Grünalge',\n    'Gruppe',\n    'gruseln',\n    'Gulasch',\n    'Gummibär',\n    'Gurgel',\n    'Gürtel',\n    'Güterzug',\n    'Haarband',\n    'Habicht',\n    'hacken',\n    'hadern',\n    'Hafen',\n    'Hagel',\n    'Hähnchen',\n    'Haifisch',\n    'Haken',\n    'Halbaffe',\n    'Halsader',\n    'halten',\n    'Halunke',\n    'Handbuch',\n    'Hanf',\n    'Harfe',\n    'Harnisch',\n    'härten',\n    'Harz',\n    'Hasenohr',\n    'Haube',\n    'hauchen',\n    'Haupt',\n    'Haut',\n    'Havarie',\n    'Hebamme',\n    'hecheln',\n    'Heck',\n    'Hedonist',\n    'Heiler',\n    'Heimat',\n    'Heizung',\n    'Hektik',\n    'Held',\n    'helfen',\n    'Helium',\n    'Hemd',\n    'hemmen',\n    'Hengst',\n    'Herd',\n    'Hering',\n    'Herkunft',\n    'Hermelin',\n    'Herrchen',\n    'Herzdame',\n    'Heulboje',\n    'Hexe',\n    'Hilfe',\n    'Himbeere',\n    'Himmel',\n    'Hingabe',\n    'hinhören',\n    'Hinweis',\n    'Hirsch',\n    'Hirte',\n    'Hitzkopf',\n    'Hobel',\n    'Hochform',\n    'Hocker',\n    'hoffen',\n    'Hofhund',\n    'Hofnarr',\n    'Höhenzug',\n    'Hohlraum',\n    'Hölle',\n    'Holzboot',\n    'Honig',\n    'Honorar',\n    'horchen',\n    'Hörprobe',\n    'Höschen',\n    'Hotel',\n    'Hubraum',\n    'Hufeisen',\n    'Hügel',\n    'huldigen',\n    'Hülle',\n    'Humbug',\n    'Hummer',\n    'Humor',\n    'Hund',\n    'Hunger',\n    'Hupe',\n    'Hürde',\n    'Hurrikan',\n    'Hydrant',\n    'Hypnose',\n    'Ibis',\n    'Idee',\n    'Idiot',\n    'Igel',\n    'Illusion',\n    'Imitat',\n    'impfen',\n    'Import',\n    'Inferno',\n    'Ingwer',\n    'Inhalte',\n    'Inland',\n    'Insekt',\n    'Ironie',\n    'Irrfahrt',\n    'Irrtum',\n    'Isolator',\n    'Istwert',\n    'Jacke',\n    'Jade',\n    'Jagdhund',\n    'Jäger',\n    'Jaguar',\n    'Jahr',\n    'Jähzorn',\n    'Jazzfest',\n    'Jetpilot',\n    'jobben',\n    'Jochbein',\n    'jodeln',\n    'Jodsalz',\n    'Jolle',\n    'Journal',\n    'Jubel',\n    'Junge',\n    'Junimond',\n    'Jupiter',\n    'Jutesack',\n    'Juwel',\n    'Kabarett',\n    'Kabine',\n    'Kabuff',\n    'Käfer',\n    'Kaffee',\n    'Kahlkopf',\n    'Kaimauer',\n    'Kajüte',\n    'Kaktus',\n    'Kaliber',\n    'Kaltluft',\n    'Kamel',\n    'kämmen',\n    'Kampagne',\n    'Kanal',\n    'Kängur',\n    'Kanister',\n    'Kanone',\n    'Kante',\n    'Kan',\n    'kapern',\n    'Kapitän',\n    'Kapuze',\n    'Karneval',\n    'Karotte',\n    'Käsebrot',\n    'Kasper',\n    'Kastanie',\n    'Katalog',\n    'Kathode',\n    'Katze',\n    'kaufen',\n    'Kaugummi',\n    'Kauz',\n    'Kehle',\n    'Keilerei',\n    'Keksdose',\n    'Kellner',\n    'Keramik',\n    'Kerze',\n    'Kessel',\n    'Kette',\n    'keuchen',\n    'kichern',\n    'Kielboot',\n    'Kindheit',\n    'Kinnbart',\n    'Kinosaal',\n    'Kiosk',\n    'Kissen',\n    'Klammer',\n    'Klang',\n    'Klapprad',\n    'Klartext',\n    'kleben',\n    'Klee',\n    'Kleinod',\n    'Klima',\n    'Klingel',\n    'Klippe',\n    'Klischee',\n    'Kloster',\n    'Klugheit',\n    'Klüngel',\n    'kneten',\n    'Knie',\n    'Knöchel',\n    'knüpfen',\n    'Kobold',\n    'Kochbuch',\n    'Kohlrabi',\n    'Koje',\n    'Kokosöl',\n    'Kolibri',\n    'Kolumne',\n    'Kombüse',\n    'Komiker',\n    'kommen',\n    'Konto',\n    'Konzept',\n    'Kopfkino',\n    'Kordhose',\n    'Korken',\n    'Korsett',\n    'Kosename',\n    'Krabbe',\n    'Krach',\n    'Kraft',\n    'Krähe',\n    'Kralle',\n    'Krapfen',\n    'Krater',\n    'kraulen',\n    'Kreuz',\n    'Krokodil',\n    'Kröte',\n    'Kugel',\n    'Kuhhirt',\n    'Kühnheit',\n    'Künstler',\n    'Kurort',\n    'Kurve',\n    'Kurzfilm',\n    'kuscheln',\n    'küssen',\n    'Kutter',\n    'Labor',\n    'lachen',\n    'Lackaffe',\n    'Ladeluke',\n    'Lagune',\n    'Laib',\n    'Lakritze',\n    'Lammfell',\n    'Land',\n    'Langmut',\n    'Lappalie',\n    'Last',\n    'Laterne',\n    'Latzhose',\n    'Laubsäge',\n    'laufen',\n    'Laune',\n    'Lausbub',\n    'Lavasee',\n    'Leben',\n    'Leder',\n    'Leerlauf',\n    'Lehm',\n    'Lehrer',\n    'leihen',\n    'Lektüre',\n    'Lenker',\n    'Lerche',\n    'Leseecke',\n    'Leuchter',\n    'Lexikon',\n    'Libelle',\n    'Libido',\n    'Licht',\n    'Liebe',\n    'liefern',\n    'Liftboy',\n    'Limonade',\n    'Lineal',\n    'Linoleum',\n    'List',\n    'Liveband',\n    'Lobrede',\n    'locken',\n    'Löffel',\n    'Logbuch',\n    'Logik',\n    'Lohn',\n    'Loipe',\n    'Lokal',\n    'Lorbeer',\n    'Lösung',\n    'löten',\n    'Lottofee',\n    'Löwe',\n    'Luchs',\n    'Luder',\n    'Luftpost',\n    'Luke',\n    'Lümmel',\n    'Lunge',\n    'lutschen',\n    'Luxus',\n    'Macht',\n    'Magazin',\n    'Magier',\n    'Magnet',\n    'mähen',\n    'Mahlzeit',\n    'Mahnmal',\n    'Maibaum',\n    'Maisbrei',\n    'Makel',\n    'malen',\n    'Mammut',\n    'Maniküre',\n    'Mantel',\n    'Marathon',\n    'Marder',\n    'Marine',\n    'Marke',\n    'Marmor',\n    'Märzluft',\n    'Maske',\n    'Maßanzug',\n    'Maßkrug',\n    'Mastkorb',\n    'Material',\n    'Matratze',\n    'Mauerba',\n    'Maulkorb',\n    'Mäuschen',\n    'Mäzen',\n    'Medium',\n    'Meinung',\n    'melden',\n    'Melodie',\n    'Mensch',\n    'Merkmal',\n    'Messe',\n    'Metall',\n    'Meteor',\n    'Methode',\n    'Metzger',\n    'Mieze',\n    'Milchkuh',\n    'Mimose',\n    'Minirock',\n    'Minute',\n    'mischen',\n    'Missetat',\n    'mitgehen',\n    'Mittag',\n    'Mixtape',\n    'Möbel',\n    'Modul',\n    'mögen',\n    'Möhre',\n    'Molch',\n    'Moment',\n    'Monat',\n    'Mondflug',\n    'Monitor',\n    'Monokini',\n    'Monster',\n    'Monument',\n    'Moorhuhn',\n    'Moos',\n    'Möpse',\n    'Moral',\n    'Mörtel',\n    'Motiv',\n    'Motorrad',\n    'Möwe',\n    'Mühe',\n    'Mulatte',\n    'Müller',\n    'Mumie',\n    'Mund',\n    'Münze',\n    'Muschel',\n    'Muster',\n    'Mythos',\n    'Nabel',\n    'Nachtzug',\n    'Nackedei',\n    'Nagel',\n    'Nähe',\n    'Nähnadel',\n    'Namen',\n    'Narbe',\n    'Narwal',\n    'Nasenbär',\n    'Natur',\n    'Nebel',\n    'necken',\n    'Neffe',\n    'Neigung',\n    'Nektar',\n    'Nenner',\n    'Neptun',\n    'Nerz',\n    'Nessel',\n    'Nestba',\n    'Netz',\n    'Neuba',\n    'Neuerung',\n    'Neugier',\n    'nicken',\n    'Niere',\n    'Nilpferd',\n    'nisten',\n    'Nocke',\n    'Nomade',\n    'Nordmeer',\n    'Notdurft',\n    'Notstand',\n    'Notwehr',\n    'Nudismus',\n    'Nuss',\n    'Nutzhanf',\n    'Oase',\n    'Obdach',\n    'Oberarzt',\n    'Objekt',\n    'Oboe',\n    'Obsthain',\n    'Ochse',\n    'Odyssee',\n    'Ofenholz',\n    'öffnen',\n    'Ohnmacht',\n    'Ohrfeige',\n    'Ohrwurm',\n    'Ökologie',\n    'Oktave',\n    'Ölberg',\n    'Olive',\n    'Ölkrise',\n    'Omelett',\n    'Onkel',\n    'Oper',\n    'Optiker',\n    'Orange',\n    'Orchidee',\n    'ordnen',\n    'Orgasmus',\n    'Orkan',\n    'Ortskern',\n    'Ortung',\n    'Ostasien',\n    'Ozean',\n    'Paarlauf',\n    'Packeis',\n    'paddeln',\n    'Paket',\n    'Palast',\n    'Pandabär',\n    'Panik',\n    'Panorama',\n    'Panther',\n    'Papagei',\n    'Papier',\n    'Paprika',\n    'Paradies',\n    'Parka',\n    'Parodie',\n    'Partner',\n    'Passant',\n    'Patent',\n    'Patzer',\n    'Pause',\n    'Pavian',\n    'Pedal',\n    'Pegel',\n    'peilen',\n    'Perle',\n    'Person',\n    'Pfad',\n    'Pfa',\n    'Pferd',\n    'Pfleger',\n    'Physik',\n    'Pier',\n    'Pilotwal',\n    'Pinzette',\n    'Piste',\n    'Plakat',\n    'Plankton',\n    'Platin',\n    'Plombe',\n    'plündern',\n    'Pobacke',\n    'Pokal',\n    'polieren',\n    'Popmusik',\n    'Porträt',\n    'Posaune',\n    'Postamt',\n    'Pottwal',\n    'Pracht',\n    'Pranke',\n    'Preis',\n    'Primat',\n    'Prinzip',\n    'Protest',\n    'Proviant',\n    'Prüfung',\n    'Pubertät',\n    'Pudding',\n    'Pullover',\n    'Pulsader',\n    'Punkt',\n    'Pute',\n    'Putsch',\n    'Puzzle',\n    'Python',\n    'quaken',\n    'Qualle',\n    'Quark',\n    'Quellsee',\n    'Querkopf',\n    'Quitte',\n    'Quote',\n    'Rabauke',\n    'Rache',\n    'Radclub',\n    'Radhose',\n    'Radio',\n    'Radtour',\n    'Rahmen',\n    'Rampe',\n    'Randlage',\n    'Ranzen',\n    'Rapsöl',\n    'Raserei',\n    'rasten',\n    'Rasur',\n    'Rätsel',\n    'Raubtier',\n    'Raumzeit',\n    'Rausch',\n    'Reaktor',\n    'Realität',\n    'Rebell',\n    'Rede',\n    'Reetdach',\n    'Regatta',\n    'Regen',\n    'Rehkitz',\n    'Reifen',\n    'Reim',\n    'Reise',\n    'Reizung',\n    'Rekord',\n    'Relevanz',\n    'Rennboot',\n    'Respekt',\n    'Restmüll',\n    'retten',\n    'Reue',\n    'Revolte',\n    'Rhetorik',\n    'Rhythmus',\n    'Richtung',\n    'Riegel',\n    'Rindvieh',\n    'Rippchen',\n    'Ritter',\n    'Robbe',\n    'Roboter',\n    'Rockband',\n    'Rohdaten',\n    'Roller',\n    'Roman',\n    'röntgen',\n    'Rose',\n    'Rosskur',\n    'Rost',\n    'Rotahorn',\n    'Rotglut',\n    'Rotznase',\n    'Rubrik',\n    'Rückweg',\n    'Rufmord',\n    'Ruhe',\n    'Ruine',\n    'Rumpf',\n    'Runde',\n    'Rüstung',\n    'rütteln',\n    'Saaltür',\n    'Saatguts',\n    'Säbel',\n    'Sachbuch',\n    'Sack',\n    'Saft',\n    'sagen',\n    'Sahneeis',\n    'Salat',\n    'Salbe',\n    'Salz',\n    'Sammlung',\n    'Samt',\n    'Sandbank',\n    'Sanftmut',\n    'Sardine',\n    'Satire',\n    'Sattel',\n    'Satzba',\n    'Sauerei',\n    'Saum',\n    'Säure',\n    'Schall',\n    'Scheitel',\n    'Schiff',\n    'Schlager',\n    'Schmied',\n    'Schnee',\n    'Scholle',\n    'Schrank',\n    'Schulbus',\n    'Schwan',\n    'Seeadler',\n    'Seefahrt',\n    'Seehund',\n    'Seeufer',\n    'segeln',\n    'Sehnerv',\n    'Seide',\n    'Seilzug',\n    'Senf',\n    'Sessel',\n    'Seufzer',\n    'Sexgott',\n    'Sichtung',\n    'Signal',\n    'Silber',\n    'singen',\n    'Sinn',\n    'Sirup',\n    'Sitzbank',\n    'Skandal',\n    'Skikurs',\n    'Skipper',\n    'Skizze',\n    'Smaragd',\n    'Socke',\n    'Sohn',\n    'Sommer',\n    'Songtext',\n    'Sorte',\n    'Spagat',\n    'Spannung',\n    'Spargel',\n    'Specht',\n    'Speiseöl',\n    'Spiegel',\n    'Sport',\n    'spülen',\n    'Stadtbus',\n    'Stall',\n    'Stärke',\n    'Stativ',\n    'staunen',\n    'Stern',\n    'Stiftung',\n    'Stollen',\n    'Strömung',\n    'Sturm',\n    'Substanz',\n    'Südalpen',\n    'Sumpf',\n    'surfen',\n    'Tabak',\n    'Tafel',\n    'Tageba',\n    'takeln',\n    'Taktung',\n    'Talsohle',\n    'Tand',\n    'Tanzbär',\n    'Tapir',\n    'Tarantel',\n    'Tarnname',\n    'Tasse',\n    'Tatnacht',\n    'Tatsache',\n    'Tatze',\n    'Taube',\n    'tauchen',\n    'Taufpate',\n    'Taumel',\n    'Teelicht',\n    'Teich',\n    'teilen',\n    'Tempo',\n    'Tenor',\n    'Terrasse',\n    'Testflug',\n    'Theater',\n    'Thermik',\n    'ticken',\n    'Tiefflug',\n    'Tierart',\n    'Tigerhai',\n    'Tinte',\n    'Tischler',\n    'toben',\n    'Toleranz',\n    'Tölpel',\n    'Tonband',\n    'Topf',\n    'Topmodel',\n    'Torbogen',\n    'Torlinie',\n    'Torte',\n    'Tourist',\n    'Tragesel',\n    'trampeln',\n    'Trapez',\n    'Traum',\n    'treffen',\n    'Trennung',\n    'Treue',\n    'Trick',\n    'trimmen',\n    'Trödel',\n    'Trost',\n    'Trumpf',\n    'tüfteln',\n    'Turban',\n    'Turm',\n    'Übermut',\n    'Ufer',\n    'Uhrwerk',\n    'umarmen',\n    'Umba',\n    'Umfeld',\n    'Umgang',\n    'Umsturz',\n    'Unart',\n    'Unfug',\n    'Unimog',\n    'Unruhe',\n    'Unwucht',\n    'Uranerz',\n    'Urlaub',\n    'Urmensch',\n    'Utopie',\n    'Vakuum',\n    'Valuta',\n    'Vandale',\n    'Vase',\n    'Vektor',\n    'Ventil',\n    'Verb',\n    'Verdeck',\n    'Verfall',\n    'Vergaser',\n    'verhexen',\n    'Verlag',\n    'Vers',\n    'Vesper',\n    'Vieh',\n    'Viereck',\n    'Vinyl',\n    'Virus',\n    'Vitrine',\n    'Vollblut',\n    'Vorbote',\n    'Vorrat',\n    'Vorsicht',\n    'Vulkan',\n    'Wachstum',\n    'Wade',\n    'Wagemut',\n    'Wahlen',\n    'Wahrheit',\n    'Wald',\n    'Walhai',\n    'Wallach',\n    'Walnuss',\n    'Walzer',\n    'wandeln',\n    'Wanze',\n    'wärmen',\n    'Warnruf',\n    'Wäsche',\n    'Wasser',\n    'Weberei',\n    'wechseln',\n    'Wegegeld',\n    'wehren',\n    'Weiher',\n    'Weinglas',\n    'Weißbier',\n    'Weitwurf',\n    'Welle',\n    'Weltall',\n    'Werkbank',\n    'Werwolf',\n    'Wetter',\n    'wiehern',\n    'Wildgans',\n    'Wind',\n    'Wohl',\n    'Wohnort',\n    'Wolf',\n    'Wollust',\n    'Wortlaut',\n    'Wrack',\n    'Wunder',\n    'Wurfaxt',\n    'Wurst',\n    'Yacht',\n    'Yeti',\n    'Zacke',\n    'Zahl',\n    'zähmen',\n    'Zahnfee',\n    'Zäpfchen',\n    'Zaster',\n    'Zaumzeug',\n    'Zebra',\n    'zeigen',\n    'Zeitlupe',\n    'Zellkern',\n    'Zeltdach',\n    'Zensor',\n    'Zerfall',\n    'Zeug',\n    'Ziege',\n    'Zielfoto',\n    'Zimteis',\n    'Zobel',\n    'Zollhund',\n    'Zombie',\n    'Zöpfe',\n    'Zucht',\n    'Zufahrt',\n    'Zugfahrt',\n    'Zugvogel',\n    'Zündung',\n    'Zweck',\n    'Zyklop'\n];\n//# sourceMappingURL=german.js.map","// SPDX-License-Identifier: MIT\nexport const WORDLIST = [\n    'abbinare',\n    'abbonato',\n    'abisso',\n    'abitare',\n    'abominio',\n    'accadere',\n    'accesso',\n    'acciaio',\n    'accordo',\n    'accumulo',\n    'acido',\n    'acqua',\n    'acrobata',\n    'acustico',\n    'adattare',\n    'addetto',\n    'addio',\n    'addome',\n    'adeguato',\n    'aderire',\n    'adorare',\n    'adottare',\n    'adozione',\n    'adulto',\n    'aereo',\n    'aerobica',\n    'affare',\n    'affetto',\n    'affidare',\n    'affogato',\n    'affronto',\n    'africano',\n    'afrodite',\n    'agenzia',\n    'aggancio',\n    'aggeggio',\n    'aggiunta',\n    'agio',\n    'agire',\n    'agitare',\n    'aglio',\n    'agnello',\n    'agosto',\n    'aiutare',\n    'albero',\n    'albo',\n    'alce',\n    'alchimia',\n    'alcool',\n    'alfabeto',\n    'algebra',\n    'alimento',\n    'allarme',\n    'alleanza',\n    'allievo',\n    'alloggio',\n    'alluce',\n    'alpi',\n    'alterare',\n    'altro',\n    'aluminio',\n    'amante',\n    'amarezza',\n    'ambiente',\n    'ambrosia',\n    'america',\n    'amico',\n    'ammalare',\n    'ammirare',\n    'amnesia',\n    'amnistia',\n    'amore',\n    'ampliare',\n    'amputare',\n    'analisi',\n    'anamnesi',\n    'ananas',\n    'anarchia',\n    'anatra',\n    'anca',\n    'ancorato',\n    'andare',\n    'androide',\n    'aneddoto',\n    'anello',\n    'angelo',\n    'angolino',\n    'anguilla',\n    'anidride',\n    'anima',\n    'annegare',\n    'anno',\n    'annuncio',\n    'anomalia',\n    'antenna',\n    'anticipo',\n    'aperto',\n    'apostolo',\n    'appalto',\n    'appello',\n    'appiglio',\n    'applauso',\n    'appoggio',\n    'appurare',\n    'aprile',\n    'aquila',\n    'arabo',\n    'arachidi',\n    'aragosta',\n    'arancia',\n    'arbitrio',\n    'archivio',\n    'arco',\n    'argento',\n    'argilla',\n    'aria',\n    'ariete',\n    'arma',\n    'armonia',\n    'aroma',\n    'arrivare',\n    'arrosto',\n    'arsenale',\n    'arte',\n    'artiglio',\n    'asfalto',\n    'asfissia',\n    'asino',\n    'asparagi',\n    'aspirina',\n    'assalire',\n    'assegno',\n    'assolto',\n    'assurdo',\n    'asta',\n    'astratto',\n    'atlante',\n    'atletica',\n    'atomo',\n    'atropina',\n    'attacco',\n    'attesa',\n    'attico',\n    'atto',\n    'attrarre',\n    'auguri',\n    'aula',\n    'aumento',\n    'aurora',\n    'auspicio',\n    'autista',\n    'auto',\n    'autunno',\n    'avanzare',\n    'avarizia',\n    'avere',\n    'aviatore',\n    'avido',\n    'avorio',\n    'avvenire',\n    'avviso',\n    'avvocato',\n    'azienda',\n    'azione',\n    'azzardo',\n    'azzurro',\n    'babbuino',\n    'bacio',\n    'badante',\n    'baffi',\n    'bagaglio',\n    'bagliore',\n    'bagno',\n    'balcone',\n    'balena',\n    'ballare',\n    'balordo',\n    'balsamo',\n    'bambola',\n    'bancomat',\n    'banda',\n    'barato',\n    'barba',\n    'barista',\n    'barriera',\n    'basette',\n    'basilico',\n    'bassista',\n    'bastare',\n    'battello',\n    'bavaglio',\n    'beccare',\n    'beduino',\n    'bellezza',\n    'bene',\n    'benzina',\n    'berretto',\n    'bestia',\n    'bevitore',\n    'bianco',\n    'bibbia',\n    'biberon',\n    'bibita',\n    'bici',\n    'bidone',\n    'bilancia',\n    'biliardo',\n    'binario',\n    'binocolo',\n    'biologia',\n    'biondina',\n    'biopsia',\n    'biossido',\n    'birbante',\n    'birra',\n    'biscotto',\n    'bisogno',\n    'bistecca',\n    'bivio',\n    'blindare',\n    'bloccare',\n    'bocca',\n    'bollire',\n    'bombola',\n    'bonifico',\n    'borghese',\n    'borsa',\n    'bottino',\n    'botulino',\n    'braccio',\n    'bradipo',\n    'branco',\n    'bravo',\n    'bresaola',\n    'bretelle',\n    'brevetto',\n    'briciola',\n    'brigante',\n    'brillare',\n    'brindare',\n    'brivido',\n    'broccoli',\n    'brontolo',\n    'bruciare',\n    'brufolo',\n    'bucare',\n    'buddista',\n    'budino',\n    'bufera',\n    'buffo',\n    'bugiardo',\n    'buio',\n    'buono',\n    'burrone',\n    'bussola',\n    'bustina',\n    'buttare',\n    'cabernet',\n    'cabina',\n    'cacao',\n    'cacciare',\n    'cactus',\n    'cadavere',\n    'caffe',\n    'calamari',\n    'calcio',\n    'caldaia',\n    'calmare',\n    'calunnia',\n    'calvario',\n    'calzone',\n    'cambiare',\n    'camera',\n    'camion',\n    'cammello',\n    'campana',\n    'canarino',\n    'cancello',\n    'candore',\n    'cane',\n    'canguro',\n    'cannone',\n    'canoa',\n    'cantare',\n    'canzone',\n    'caos',\n    'capanna',\n    'capello',\n    'capire',\n    'capo',\n    'capperi',\n    'capra',\n    'capsula',\n    'caraffa',\n    'carbone',\n    'carciofo',\n    'cardigan',\n    'carenza',\n    'caricare',\n    'carota',\n    'carrello',\n    'carta',\n    'casa',\n    'cascare',\n    'caserma',\n    'cashmere',\n    'casino',\n    'cassetta',\n    'castello',\n    'catalogo',\n    'catena',\n    'catorcio',\n    'cattivo',\n    'causa',\n    'cauzione',\n    'cavallo',\n    'caverna',\n    'caviglia',\n    'cavo',\n    'cazzotto',\n    'celibato',\n    'cemento',\n    'cenare',\n    'centrale',\n    'ceramica',\n    'cercare',\n    'ceretta',\n    'cerniera',\n    'certezza',\n    'cervello',\n    'cessione',\n    'cestino',\n    'cetriolo',\n    'chiave',\n    'chiedere',\n    'chilo',\n    'chimera',\n    'chiodo',\n    'chirurgo',\n    'chitarra',\n    'chiudere',\n    'ciabatta',\n    'ciao',\n    'cibo',\n    'ciccia',\n    'cicerone',\n    'ciclone',\n    'cicogna',\n    'cielo',\n    'cifra',\n    'cigno',\n    'ciliegia',\n    'cimitero',\n    'cinema',\n    'cinque',\n    'cintura',\n    'ciondolo',\n    'ciotola',\n    'cipolla',\n    'cippato',\n    'circuito',\n    'cisterna',\n    'citofono',\n    'ciuccio',\n    'civetta',\n    'civico',\n    'clausola',\n    'cliente',\n    'clima',\n    'clinica',\n    'cobra',\n    'coccole',\n    'cocktail',\n    'cocomero',\n    'codice',\n    'coesione',\n    'cogliere',\n    'cognome',\n    'colla',\n    'colomba',\n    'colpire',\n    'coltello',\n    'comando',\n    'comitato',\n    'commedia',\n    'comodino',\n    'compagna',\n    'comune',\n    'concerto',\n    'condotto',\n    'conforto',\n    'congiura',\n    'coniglio',\n    'consegna',\n    'conto',\n    'convegno',\n    'coperta',\n    'copia',\n    'coprire',\n    'corazza',\n    'corda',\n    'corleone',\n    'cornice',\n    'corona',\n    'corpo',\n    'corrente',\n    'corsa',\n    'cortesia',\n    'corvo',\n    'coso',\n    'costume',\n    'cotone',\n    'cottura',\n    'cozza',\n    'crampo',\n    'cratere',\n    'cravatta',\n    'creare',\n    'credere',\n    'crema',\n    'crescere',\n    'crimine',\n    'criterio',\n    'croce',\n    'crollare',\n    'cronaca',\n    'crostata',\n    'croupier',\n    'cubetto',\n    'cucciolo',\n    'cucina',\n    'cultura',\n    'cuoco',\n    'cuore',\n    'cupido',\n    'cupola',\n    'cura',\n    'curva',\n    'cuscino',\n    'custode',\n    'danzare',\n    'data',\n    'decennio',\n    'decidere',\n    'decollo',\n    'dedicare',\n    'dedurre',\n    'definire',\n    'delegare',\n    'delfino',\n    'delitto',\n    'demone',\n    'dentista',\n    'denuncia',\n    'deposito',\n    'derivare',\n    'deserto',\n    'designer',\n    'destino',\n    'detonare',\n    'dettagli',\n    'diagnosi',\n    'dialogo',\n    'diamante',\n    'diario',\n    'diavolo',\n    'dicembre',\n    'difesa',\n    'digerire',\n    'digitare',\n    'diluvio',\n    'dinamica',\n    'dipinto',\n    'diploma',\n    'diramare',\n    'dire',\n    'dirigere',\n    'dirupo',\n    'discesa',\n    'disdetta',\n    'disegno',\n    'disporre',\n    'dissenso',\n    'distacco',\n    'dito',\n    'ditta',\n    'diva',\n    'divenire',\n    'dividere',\n    'divorare',\n    'docente',\n    'dolcetto',\n    'dolore',\n    'domatore',\n    'domenica',\n    'dominare',\n    'donatore',\n    'donna',\n    'dorato',\n    'dormire',\n    'dorso',\n    'dosaggio',\n    'dottore',\n    'dovere',\n    'download',\n    'dragone',\n    'dramma',\n    'dubbio',\n    'dubitare',\n    'duetto',\n    'durata',\n    'ebbrezza',\n    'eccesso',\n    'eccitare',\n    'eclissi',\n    'economia',\n    'edera',\n    'edificio',\n    'editore',\n    'edizione',\n    'educare',\n    'effetto',\n    'egitto',\n    'egiziano',\n    'elastico',\n    'elefante',\n    'eleggere',\n    'elemento',\n    'elenco',\n    'elezione',\n    'elmetto',\n    'elogio',\n    'embrione',\n    'emergere',\n    'emettere',\n    'eminenza',\n    'emisfero',\n    'emozione',\n    'empatia',\n    'energia',\n    'enfasi',\n    'enigma',\n    'entrare',\n    'enzima',\n    'epidemia',\n    'epilogo',\n    'episodio',\n    'epoca',\n    'equivoco',\n    'erba',\n    'erede',\n    'eroe',\n    'erotico',\n    'errore',\n    'eruzione',\n    'esaltare',\n    'esame',\n    'esaudire',\n    'eseguire',\n    'esempio',\n    'esigere',\n    'esistere',\n    'esito',\n    'esperto',\n    'espresso',\n    'essere',\n    'estasi',\n    'esterno',\n    'estrarre',\n    'eterno',\n    'etica',\n    'euforico',\n    'europa',\n    'evacuare',\n    'evasione',\n    'evento',\n    'evidenza',\n    'evitare',\n    'evolvere',\n    'fabbrica',\n    'facciata',\n    'fagiano',\n    'fagotto',\n    'falco',\n    'fame',\n    'famiglia',\n    'fanale',\n    'fango',\n    'fantasia',\n    'farfalla',\n    'farmacia',\n    'faro',\n    'fase',\n    'fastidio',\n    'faticare',\n    'fatto',\n    'favola',\n    'febbre',\n    'femmina',\n    'femore',\n    'fenomeno',\n    'fermata',\n    'feromoni',\n    'ferrari',\n    'fessura',\n    'festa',\n    'fiaba',\n    'fiamma',\n    'fianco',\n    'fiat',\n    'fibbia',\n    'fidare',\n    'fieno',\n    'figa',\n    'figlio',\n    'figura',\n    'filetto',\n    'filmato',\n    'filosofo',\n    'filtrare',\n    'finanza',\n    'finestra',\n    'fingere',\n    'finire',\n    'finta',\n    'finzione',\n    'fiocco',\n    'fioraio',\n    'firewall',\n    'firmare',\n    'fisico',\n    'fissare',\n    'fittizio',\n    'fiume',\n    'flacone',\n    'flagello',\n    'flirtare',\n    'flusso',\n    'focaccia',\n    'foglio',\n    'fognario',\n    'follia',\n    'fonderia',\n    'fontana',\n    'forbici',\n    'forcella',\n    'foresta',\n    'forgiare',\n    'formare',\n    'fornace',\n    'foro',\n    'fortuna',\n    'forzare',\n    'fosforo',\n    'fotoni',\n    'fracasso',\n    'fragola',\n    'frantumi',\n    'fratello',\n    'frazione',\n    'freccia',\n    'freddo',\n    'frenare',\n    'fresco',\n    'friggere',\n    'frittata',\n    'frivolo',\n    'frizione',\n    'fronte',\n    'frullato',\n    'frumento',\n    'frusta',\n    'frutto',\n    'fucile',\n    'fuggire',\n    'fulmine',\n    'fumare',\n    'funzione',\n    'fuoco',\n    'furbizia',\n    'furgone',\n    'furia',\n    'furore',\n    'fusibile',\n    'fuso',\n    'futuro',\n    'gabbiano',\n    'galassia',\n    'gallina',\n    'gamba',\n    'gancio',\n    'garanzia',\n    'garofano',\n    'gasolio',\n    'gatto',\n    'gazebo',\n    'gazzetta',\n    'gelato',\n    'gemelli',\n    'generare',\n    'genitori',\n    'gennaio',\n    'geologia',\n    'germania',\n    'gestire',\n    'gettare',\n    'ghepardo',\n    'ghiaccio',\n    'giaccone',\n    'giaguaro',\n    'giallo',\n    'giappone',\n    'giardino',\n    'gigante',\n    'gioco',\n    'gioiello',\n    'giorno',\n    'giovane',\n    'giraffa',\n    'giudizio',\n    'giurare',\n    'giusto',\n    'globo',\n    'gloria',\n    'glucosio',\n    'gnocca',\n    'gocciola',\n    'godere',\n    'gomito',\n    'gomma',\n    'gonfiare',\n    'gorilla',\n    'governo',\n    'gradire',\n    'graffiti',\n    'granchio',\n    'grappolo',\n    'grasso',\n    'grattare',\n    'gridare',\n    'grissino',\n    'grondaia',\n    'grugnito',\n    'gruppo',\n    'guadagno',\n    'guaio',\n    'guancia',\n    'guardare',\n    'gufo',\n    'guidare',\n    'guscio',\n    'gusto',\n    'icona',\n    'idea',\n    'identico',\n    'idolo',\n    'idoneo',\n    'idrante',\n    'idrogeno',\n    'igiene',\n    'ignoto',\n    'imbarco',\n    'immagine',\n    'immobile',\n    'imparare',\n    'impedire',\n    'impianto',\n    'importo',\n    'impresa',\n    'impulso',\n    'incanto',\n    'incendio',\n    'incidere',\n    'incontro',\n    'incrocia',\n    'incubo',\n    'indagare',\n    'indice',\n    'indotto',\n    'infanzia',\n    'inferno',\n    'infinito',\n    'infranto',\n    'ingerire',\n    'inglese',\n    'ingoiare',\n    'ingresso',\n    'iniziare',\n    'innesco',\n    'insalata',\n    'inserire',\n    'insicuro',\n    'insonnia',\n    'insulto',\n    'interno',\n    'introiti',\n    'invasori',\n    'inverno',\n    'invito',\n    'invocare',\n    'ipnosi',\n    'ipocrita',\n    'ipotesi',\n    'ironia',\n    'irrigare',\n    'iscritto',\n    'isola',\n    'ispirare',\n    'isterico',\n    'istinto',\n    'istruire',\n    'italiano',\n    'jazz',\n    'labbra',\n    'labrador',\n    'ladro',\n    'lago',\n    'lamento',\n    'lampone',\n    'lancetta',\n    'lanterna',\n    'lapide',\n    'larva',\n    'lasagne',\n    'lasciare',\n    'lastra',\n    'latte',\n    'laurea',\n    'lavagna',\n    'lavorare',\n    'leccare',\n    'legare',\n    'leggere',\n    'lenzuolo',\n    'leone',\n    'lepre',\n    'letargo',\n    'lettera',\n    'levare',\n    'levitare',\n    'lezione',\n    'liberare',\n    'libidine',\n    'libro',\n    'licenza',\n    'lievito',\n    'limite',\n    'lince',\n    'lingua',\n    'liquore',\n    'lire',\n    'listino',\n    'litigare',\n    'litro',\n    'locale',\n    'lottare',\n    'lucciola',\n    'lucidare',\n    'luglio',\n    'luna',\n    'macchina',\n    'madama',\n    'madre',\n    'maestro',\n    'maggio',\n    'magico',\n    'maglione',\n    'magnolia',\n    'mago',\n    'maialino',\n    'maionese',\n    'malattia',\n    'male',\n    'malloppo',\n    'mancare',\n    'mandorla',\n    'mangiare',\n    'manico',\n    'manopola',\n    'mansarda',\n    'mantello',\n    'manubrio',\n    'manzo',\n    'mappa',\n    'mare',\n    'margine',\n    'marinaio',\n    'marmotta',\n    'marocco',\n    'martello',\n    'marzo',\n    'maschera',\n    'matrice',\n    'maturare',\n    'mazzetta',\n    'meandri',\n    'medaglia',\n    'medico',\n    'medusa',\n    'megafono',\n    'melone',\n    'membrana',\n    'menta',\n    'mercato',\n    'meritare',\n    'merluzzo',\n    'mese',\n    'mestiere',\n    'metafora',\n    'meteo',\n    'metodo',\n    'mettere',\n    'miele',\n    'miglio',\n    'miliardo',\n    'mimetica',\n    'minatore',\n    'minuto',\n    'miracolo',\n    'mirtillo',\n    'missile',\n    'mistero',\n    'misura',\n    'mito',\n    'mobile',\n    'moda',\n    'moderare',\n    'moglie',\n    'molecola',\n    'molle',\n    'momento',\n    'moneta',\n    'mongolia',\n    'monologo',\n    'montagna',\n    'morale',\n    'morbillo',\n    'mordere',\n    'mosaico',\n    'mosca',\n    'mostro',\n    'motivare',\n    'moto',\n    'mulino',\n    'mulo',\n    'muovere',\n    'muraglia',\n    'muscolo',\n    'museo',\n    'musica',\n    'mutande',\n    'nascere',\n    'nastro',\n    'natale',\n    'natura',\n    'nave',\n    'navigare',\n    'negare',\n    'negozio',\n    'nemico',\n    'nero',\n    'nervo',\n    'nessuno',\n    'nettare',\n    'neutroni',\n    'neve',\n    'nevicare',\n    'nicotina',\n    'nido',\n    'nipote',\n    'nocciola',\n    'noleggio',\n    'nome',\n    'nonno',\n    'norvegia',\n    'notare',\n    'notizia',\n    'nove',\n    'nucleo',\n    'nuda',\n    'nuotare',\n    'nutrire',\n    'obbligo',\n    'occhio',\n    'occupare',\n    'oceano',\n    'odissea',\n    'odore',\n    'offerta',\n    'officina',\n    'offrire',\n    'oggetto',\n    'oggi',\n    'olfatto',\n    'olio',\n    'oliva',\n    'ombelico',\n    'ombrello',\n    'omuncolo',\n    'ondata',\n    'onore',\n    'opera',\n    'opinione',\n    'opuscolo',\n    'opzione',\n    'orario',\n    'orbita',\n    'orchidea',\n    'ordine',\n    'orecchio',\n    'orgasmo',\n    'orgoglio',\n    'origine',\n    'orologio',\n    'oroscopo',\n    'orso',\n    'oscurare',\n    'ospedale',\n    'ospite',\n    'ossigeno',\n    'ostacolo',\n    'ostriche',\n    'ottenere',\n    'ottimo',\n    'ottobre',\n    'ovest',\n    'pacco',\n    'pace',\n    'pacifico',\n    'padella',\n    'pagare',\n    'pagina',\n    'pagnotta',\n    'palazzo',\n    'palestra',\n    'palpebre',\n    'pancetta',\n    'panfilo',\n    'panino',\n    'pannello',\n    'panorama',\n    'papa',\n    'paperino',\n    'paradiso',\n    'parcella',\n    'parente',\n    'parlare',\n    'parodia',\n    'parrucca',\n    'partire',\n    'passare',\n    'pasta',\n    'patata',\n    'patente',\n    'patogeno',\n    'patriota',\n    'pausa',\n    'pazienza',\n    'peccare',\n    'pecora',\n    'pedalare',\n    'pelare',\n    'pena',\n    'pendenza',\n    'penisola',\n    'pennello',\n    'pensare',\n    'pentirsi',\n    'percorso',\n    'perdono',\n    'perfetto',\n    'perizoma',\n    'perla',\n    'permesso',\n    'persona',\n    'pesare',\n    'pesce',\n    'peso',\n    'petardo',\n    'petrolio',\n    'pezzo',\n    'piacere',\n    'pianeta',\n    'piastra',\n    'piatto',\n    'piazza',\n    'piccolo',\n    'piede',\n    'piegare',\n    'pietra',\n    'pigiama',\n    'pigliare',\n    'pigrizia',\n    'pilastro',\n    'pilota',\n    'pinguino',\n    'pioggia',\n    'piombo',\n    'pionieri',\n    'piovra',\n    'pipa',\n    'pirata',\n    'pirolisi',\n    'piscina',\n    'pisolino',\n    'pista',\n    'pitone',\n    'piumino',\n    'pizza',\n    'plastica',\n    'platino',\n    'poesia',\n    'poiana',\n    'polaroid',\n    'polenta',\n    'polimero',\n    'pollo',\n    'polmone',\n    'polpetta',\n    'poltrona',\n    'pomodoro',\n    'pompa',\n    'popolo',\n    'porco',\n    'porta',\n    'porzione',\n    'possesso',\n    'postino',\n    'potassio',\n    'potere',\n    'poverino',\n    'pranzo',\n    'prato',\n    'prefisso',\n    'prelievo',\n    'premio',\n    'prendere',\n    'prestare',\n    'pretesa',\n    'prezzo',\n    'primario',\n    'privacy',\n    'problema',\n    'processo',\n    'prodotto',\n    'profeta',\n    'progetto',\n    'promessa',\n    'pronto',\n    'proposta',\n    'proroga',\n    'prossimo',\n    'proteina',\n    'prova',\n    'prudenza',\n    'pubblico',\n    'pudore',\n    'pugilato',\n    'pulire',\n    'pulsante',\n    'puntare',\n    'pupazzo',\n    'puzzle',\n    'quaderno',\n    'qualcuno',\n    'quarzo',\n    'quercia',\n    'quintale',\n    'rabbia',\n    'racconto',\n    'radice',\n    'raffica',\n    'ragazza',\n    'ragione',\n    'rammento',\n    'ramo',\n    'rana',\n    'randagio',\n    'rapace',\n    'rapinare',\n    'rapporto',\n    'rasatura',\n    'ravioli',\n    'reagire',\n    'realista',\n    'reattore',\n    'reazione',\n    'recitare',\n    'recluso',\n    'record',\n    'recupero',\n    'redigere',\n    'regalare',\n    'regina',\n    'regola',\n    'relatore',\n    'reliquia',\n    'remare',\n    'rendere',\n    'reparto',\n    'resina',\n    'resto',\n    'rete',\n    'retorica',\n    'rettile',\n    'revocare',\n    'riaprire',\n    'ribadire',\n    'ribelle',\n    'ricambio',\n    'ricetta',\n    'richiamo',\n    'ricordo',\n    'ridurre',\n    'riempire',\n    'riferire',\n    'riflesso',\n    'righello',\n    'rilancio',\n    'rilevare',\n    'rilievo',\n    'rimanere',\n    'rimborso',\n    'rinforzo',\n    'rinuncia',\n    'riparo',\n    'ripetere',\n    'riposare',\n    'ripulire',\n    'risalita',\n    'riscatto',\n    'riserva',\n    'riso',\n    'rispetto',\n    'ritaglio',\n    'ritmo',\n    'ritorno',\n    'ritratto',\n    'rituale',\n    'riunione',\n    'riuscire',\n    'riva',\n    'robotica',\n    'rondine',\n    'rosa',\n    'rospo',\n    'rosso',\n    'rotonda',\n    'rotta',\n    'roulotte',\n    'rubare',\n    'rubrica',\n    'ruffiano',\n    'rumore',\n    'ruota',\n    'ruscello',\n    'sabbia',\n    'sacco',\n    'saggio',\n    'sale',\n    'salire',\n    'salmone',\n    'salto',\n    'salutare',\n    'salvia',\n    'sangue',\n    'sanzioni',\n    'sapere',\n    'sapienza',\n    'sarcasmo',\n    'sardine',\n    'sartoria',\n    'sbalzo',\n    'sbarcare',\n    'sberla',\n    'sborsare',\n    'scadenza',\n    'scafo',\n    'scala',\n    'scambio',\n    'scappare',\n    'scarpa',\n    'scatola',\n    'scelta',\n    'scena',\n    'sceriffo',\n    'scheggia',\n    'schiuma',\n    'sciarpa',\n    'scienza',\n    'scimmia',\n    'sciopero',\n    'scivolo',\n    'sclerare',\n    'scolpire',\n    'sconto',\n    'scopa',\n    'scordare',\n    'scossa',\n    'scrivere',\n    'scrupolo',\n    'scuderia',\n    'scultore',\n    'scuola',\n    'scusare',\n    'sdraiare',\n    'secolo',\n    'sedativo',\n    'sedere',\n    'sedia',\n    'segare',\n    'segreto',\n    'seguire',\n    'semaforo',\n    'seme',\n    'senape',\n    'seno',\n    'sentiero',\n    'separare',\n    'sepolcro',\n    'sequenza',\n    'serata',\n    'serpente',\n    'servizio',\n    'sesso',\n    'seta',\n    'settore',\n    'sfamare',\n    'sfera',\n    'sfidare',\n    'sfiorare',\n    'sfogare',\n    'sgabello',\n    'sicuro',\n    'siepe',\n    'sigaro',\n    'silenzio',\n    'silicone',\n    'simbiosi',\n    'simpatia',\n    'simulare',\n    'sinapsi',\n    'sindrome',\n    'sinergia',\n    'sinonimo',\n    'sintonia',\n    'sirena',\n    'siringa',\n    'sistema',\n    'sito',\n    'smalto',\n    'smentire',\n    'smontare',\n    'soccorso',\n    'socio',\n    'soffitto',\n    'software',\n    'soggetto',\n    'sogliola',\n    'sognare',\n    'soldi',\n    'sole',\n    'sollievo',\n    'solo',\n    'sommario',\n    'sondare',\n    'sonno',\n    'sorpresa',\n    'sorriso',\n    'sospiro',\n    'sostegno',\n    'sovrano',\n    'spaccare',\n    'spada',\n    'spagnolo',\n    'spalla',\n    'sparire',\n    'spavento',\n    'spazio',\n    'specchio',\n    'spedire',\n    'spegnere',\n    'spendere',\n    'speranza',\n    'spessore',\n    'spezzare',\n    'spiaggia',\n    'spiccare',\n    'spiegare',\n    'spiffero',\n    'spingere',\n    'sponda',\n    'sporcare',\n    'spostare',\n    'spremuta',\n    'spugna',\n    'spumante',\n    'spuntare',\n    'squadra',\n    'squillo',\n    'staccare',\n    'stadio',\n    'stagione',\n    'stallone',\n    'stampa',\n    'stancare',\n    'starnuto',\n    'statura',\n    'stella',\n    'stendere',\n    'sterzo',\n    'stilista',\n    'stimolo',\n    'stinco',\n    'stiva',\n    'stoffa',\n    'storia',\n    'strada',\n    'stregone',\n    'striscia',\n    'studiare',\n    'stufa',\n    'stupendo',\n    'subire',\n    'successo',\n    'sudare',\n    'suono',\n    'superare',\n    'supporto',\n    'surfista',\n    'sussurro',\n    'svelto',\n    'svenire',\n    'sviluppo',\n    'svolta',\n    'svuotare',\n    'tabacco',\n    'tabella',\n    'tabu',\n    'tacchino',\n    'tacere',\n    'taglio',\n    'talento',\n    'tangente',\n    'tappeto',\n    'tartufo',\n    'tassello',\n    'tastiera',\n    'tavolo',\n    'tazza',\n    'teatro',\n    'tedesco',\n    'telaio',\n    'telefono',\n    'tema',\n    'temere',\n    'tempo',\n    'tendenza',\n    'tenebre',\n    'tensione',\n    'tentare',\n    'teologia',\n    'teorema',\n    'termica',\n    'terrazzo',\n    'teschio',\n    'tesi',\n    'tesoro',\n    'tessera',\n    'testa',\n    'thriller',\n    'tifoso',\n    'tigre',\n    'timbrare',\n    'timido',\n    'tinta',\n    'tirare',\n    'tisana',\n    'titano',\n    'titolo',\n    'toccare',\n    'togliere',\n    'topolino',\n    'torcia',\n    'torrente',\n    'tovaglia',\n    'traffico',\n    'tragitto',\n    'training',\n    'tramonto',\n    'transito',\n    'trapezio',\n    'trasloco',\n    'trattore',\n    'trazione',\n    'treccia',\n    'tregua',\n    'treno',\n    'triciclo',\n    'tridente',\n    'trilogia',\n    'tromba',\n    'troncare',\n    'trota',\n    'trovare',\n    'trucco',\n    'tubo',\n    'tulipano',\n    'tumulto',\n    'tunisia',\n    'tuono',\n    'turista',\n    'tuta',\n    'tutelare',\n    'tutore',\n    'ubriaco',\n    'uccello',\n    'udienza',\n    'udito',\n    'uffa',\n    'umanoide',\n    'umore',\n    'unghia',\n    'unguento',\n    'unicorno',\n    'unione',\n    'universo',\n    'uomo',\n    'uragano',\n    'uranio',\n    'urlare',\n    'uscire',\n    'utente',\n    'utilizzo',\n    'vacanza',\n    'vacca',\n    'vaglio',\n    'vagonata',\n    'valle',\n    'valore',\n    'valutare',\n    'valvola',\n    'vampiro',\n    'vaniglia',\n    'vanto',\n    'vapore',\n    'variante',\n    'vasca',\n    'vaselina',\n    'vassoio',\n    'vedere',\n    'vegetale',\n    'veglia',\n    'veicolo',\n    'vela',\n    'veleno',\n    'velivolo',\n    'velluto',\n    'vendere',\n    'venerare',\n    'venire',\n    'vento',\n    'veranda',\n    'verbo',\n    'verdura',\n    'vergine',\n    'verifica',\n    'vernice',\n    'vero',\n    'verruca',\n    'versare',\n    'vertebra',\n    'vescica',\n    'vespaio',\n    'vestito',\n    'vesuvio',\n    'veterano',\n    'vetro',\n    'vetta',\n    'viadotto',\n    'viaggio',\n    'vibrare',\n    'vicenda',\n    'vichingo',\n    'vietare',\n    'vigilare',\n    'vigneto',\n    'villa',\n    'vincere',\n    'violino',\n    'vipera',\n    'virgola',\n    'virtuoso',\n    'visita',\n    'vita',\n    'vitello',\n    'vittima',\n    'vivavoce',\n    'vivere',\n    'viziato',\n    'voglia',\n    'volare',\n    'volpe',\n    'volto',\n    'volume',\n    'vongole',\n    'voragine',\n    'vortice',\n    'votare',\n    'vulcano',\n    'vuotare',\n    'zabaione',\n    'zaffiro',\n    'zainetto',\n    'zampa',\n    'zanzara',\n    'zattera',\n    'zavorra',\n    'zenzero',\n    'zero',\n    'zingaro',\n    'zittire',\n    'zoccolo',\n    'zolfo',\n    'zombie',\n    'zucchero'\n];\n//# sourceMappingURL=italian.js.map","// SPDX-License-Identifier: MIT\nexport const WORDLIST = [\n    'あいこくしん',\n    'あいさつ',\n    'あいだ',\n    'あおぞら',\n    'あかちゃん',\n    'あきる',\n    'あけがた',\n    'あける',\n    'あこがれる',\n    'あさい',\n    'あさひ',\n    'あしあと',\n    'あじわう',\n    'あずかる',\n    'あずき',\n    'あそぶ',\n    'あたえる',\n    'あたためる',\n    'あたりまえ',\n    'あたる',\n    'あつい',\n    'あつかう',\n    'あっしゅく',\n    'あつまり',\n    'あつめる',\n    'あてな',\n    'あてはまる',\n    'あひる',\n    'あぶら',\n    'あぶる',\n    'あふれる',\n    'あまい',\n    'あまど',\n    'あまやかす',\n    'あまり',\n    'あみもの',\n    'あめりか',\n    'あやまる',\n    'あゆむ',\n    'あらいぐま',\n    'あらし',\n    'あらすじ',\n    'あらためる',\n    'あらゆる',\n    'あらわす',\n    'ありがとう',\n    'あわせる',\n    'あわてる',\n    'あんい',\n    'あんがい',\n    'あんこ',\n    'あんぜん',\n    'あんてい',\n    'あんない',\n    'あんまり',\n    'いいだす',\n    'いおん',\n    'いがい',\n    'いがく',\n    'いきおい',\n    'いきなり',\n    'いきもの',\n    'いきる',\n    'いくじ',\n    'いくぶん',\n    'いけばな',\n    'いけん',\n    'いこう',\n    'いこく',\n    'いこつ',\n    'いさましい',\n    'いさん',\n    'いしき',\n    'いじゅう',\n    'いじょう',\n    'いじわる',\n    'いずみ',\n    'いずれ',\n    'いせい',\n    'いせえび',\n    'いせかい',\n    'いせき',\n    'いぜん',\n    'いそうろう',\n    'いそがしい',\n    'いだい',\n    'いだく',\n    'いたずら',\n    'いたみ',\n    'いたりあ',\n    'いちおう',\n    'いちじ',\n    'いちど',\n    'いちば',\n    'いちぶ',\n    'いちりゅう',\n    'いつか',\n    'いっしゅん',\n    'いっせい',\n    'いっそう',\n    'いったん',\n    'いっち',\n    'いってい',\n    'いっぽう',\n    'いてざ',\n    'いてん',\n    'いどう',\n    'いとこ',\n    'いない',\n    'いなか',\n    'いねむり',\n    'いのち',\n    'いのる',\n    'いはつ',\n    'いばる',\n    'いはん',\n    'いびき',\n    'いひん',\n    'いふく',\n    'いへん',\n    'いほう',\n    'いみん',\n    'いもうと',\n    'いもたれ',\n    'いもり',\n    'いやがる',\n    'いやす',\n    'いよかん',\n    'いよく',\n    'いらい',\n    'いらすと',\n    'いりぐち',\n    'いりょう',\n    'いれい',\n    'いれもの',\n    'いれる',\n    'いろえんぴつ',\n    'いわい',\n    'いわう',\n    'いわかん',\n    'いわば',\n    'いわゆる',\n    'いんげんまめ',\n    'いんさつ',\n    'いんしょう',\n    'いんよう',\n    'うえき',\n    'うえる',\n    'うおざ',\n    'うがい',\n    'うかぶ',\n    'うかべる',\n    'うきわ',\n    'うくらいな',\n    'うくれれ',\n    'うけたまわる',\n    'うけつけ',\n    'うけとる',\n    'うけもつ',\n    'うける',\n    'うごかす',\n    'うごく',\n    'うこん',\n    'うさぎ',\n    'うしなう',\n    'うしろがみ',\n    'うすい',\n    'うすぎ',\n    'うすぐらい',\n    'うすめる',\n    'うせつ',\n    'うちあわせ',\n    'うちがわ',\n    'うちき',\n    'うちゅう',\n    'うっかり',\n    'うつくしい',\n    'うったえる',\n    'うつる',\n    'うどん',\n    'うなぎ',\n    'うなじ',\n    'うなずく',\n    'うなる',\n    'うねる',\n    'うのう',\n    'うぶげ',\n    'うぶごえ',\n    'うまれる',\n    'うめる',\n    'うもう',\n    'うやまう',\n    'うよく',\n    'うらがえす',\n    'うらぐち',\n    'うらない',\n    'うりあげ',\n    'うりきれ',\n    'うるさい',\n    'うれしい',\n    'うれゆき',\n    'うれる',\n    'うろこ',\n    'うわき',\n    'うわさ',\n    'うんこう',\n    'うんちん',\n    'うんてん',\n    'うんどう',\n    'えいえん',\n    'えいが',\n    'えいきょう',\n    'えいご',\n    'えいせい',\n    'えいぶん',\n    'えいよう',\n    'えいわ',\n    'えおり',\n    'えがお',\n    'えがく',\n    'えきたい',\n    'えくせる',\n    'えしゃく',\n    'えすて',\n    'えつらん',\n    'えのぐ',\n    'えほうまき',\n    'えほん',\n    'えまき',\n    'えもじ',\n    'えもの',\n    'えらい',\n    'えらぶ',\n    'えりあ',\n    'えんえん',\n    'えんかい',\n    'えんぎ',\n    'えんげき',\n    'えんしゅう',\n    'えんぜつ',\n    'えんそく',\n    'えんちょう',\n    'えんとつ',\n    'おいかける',\n    'おいこす',\n    'おいしい',\n    'おいつく',\n    'おうえん',\n    'おうさま',\n    'おうじ',\n    'おうせつ',\n    'おうたい',\n    'おうふく',\n    'おうべい',\n    'おうよう',\n    'おえる',\n    'おおい',\n    'おおう',\n    'おおどおり',\n    'おおや',\n    'おおよそ',\n    'おかえり',\n    'おかず',\n    'おがむ',\n    'おかわり',\n    'おぎなう',\n    'おきる',\n    'おくさま',\n    'おくじょう',\n    'おくりがな',\n    'おくる',\n    'おくれる',\n    'おこす',\n    'おこなう',\n    'おこる',\n    'おさえる',\n    'おさない',\n    'おさめる',\n    'おしいれ',\n    'おしえる',\n    'おじぎ',\n    'おじさん',\n    'おしゃれ',\n    'おそらく',\n    'おそわる',\n    'おたがい',\n    'おたく',\n    'おだやか',\n    'おちつく',\n    'おっと',\n    'おつり',\n    'おでかけ',\n    'おとしもの',\n    'おとなしい',\n    'おどり',\n    'おどろかす',\n    'おばさん',\n    'おまいり',\n    'おめでとう',\n    'おもいで',\n    'おもう',\n    'おもたい',\n    'おもちゃ',\n    'おやつ',\n    'おやゆび',\n    'およぼす',\n    'おらんだ',\n    'おろす',\n    'おんがく',\n    'おんけい',\n    'おんしゃ',\n    'おんせん',\n    'おんだん',\n    'おんちゅう',\n    'おんどけい',\n    'かあつ',\n    'かいが',\n    'がいき',\n    'がいけん',\n    'がいこう',\n    'かいさつ',\n    'かいしゃ',\n    'かいすいよく',\n    'かいぜん',\n    'かいぞうど',\n    'かいつう',\n    'かいてん',\n    'かいとう',\n    'かいふく',\n    'がいへき',\n    'かいほう',\n    'かいよう',\n    'がいらい',\n    'かいわ',\n    'かえる',\n    'かおり',\n    'かかえる',\n    'かがく',\n    'かがし',\n    'かがみ',\n    'かくご',\n    'かくとく',\n    'かざる',\n    'がぞう',\n    'かたい',\n    'かたち',\n    'がちょう',\n    'がっきゅう',\n    'がっこう',\n    'がっさん',\n    'がっしょう',\n    'かなざわし',\n    'かのう',\n    'がはく',\n    'かぶか',\n    'かほう',\n    'かほご',\n    'かまう',\n    'かまぼこ',\n    'かめれおん',\n    'かゆい',\n    'かようび',\n    'からい',\n    'かるい',\n    'かろう',\n    'かわく',\n    'かわら',\n    'がんか',\n    'かんけい',\n    'かんこう',\n    'かんしゃ',\n    'かんそう',\n    'かんたん',\n    'かんち',\n    'がんばる',\n    'きあい',\n    'きあつ',\n    'きいろ',\n    'ぎいん',\n    'きうい',\n    'きうん',\n    'きえる',\n    'きおう',\n    'きおく',\n    'きおち',\n    'きおん',\n    'きかい',\n    'きかく',\n    'きかんしゃ',\n    'ききて',\n    'きくばり',\n    'きくらげ',\n    'きけんせい',\n    'きこう',\n    'きこえる',\n    'きこく',\n    'きさい',\n    'きさく',\n    'きさま',\n    'きさらぎ',\n    'ぎじかがく',\n    'ぎしき',\n    'ぎじたいけん',\n    'ぎじにってい',\n    'ぎじゅつしゃ',\n    'きすう',\n    'きせい',\n    'きせき',\n    'きせつ',\n    'きそう',\n    'きぞく',\n    'きぞん',\n    'きたえる',\n    'きちょう',\n    'きつえん',\n    'ぎっちり',\n    'きつつき',\n    'きつね',\n    'きてい',\n    'きどう',\n    'きどく',\n    'きない',\n    'きなが',\n    'きなこ',\n    'きぬごし',\n    'きねん',\n    'きのう',\n    'きのした',\n    'きはく',\n    'きびしい',\n    'きひん',\n    'きふく',\n    'きぶん',\n    'きぼう',\n    'きほん',\n    'きまる',\n    'きみつ',\n    'きむずかしい',\n    'きめる',\n    'きもだめし',\n    'きもち',\n    'きもの',\n    'きゃく',\n    'きやく',\n    'ぎゅうにく',\n    'きよう',\n    'きょうりゅう',\n    'きらい',\n    'きらく',\n    'きりん',\n    'きれい',\n    'きれつ',\n    'きろく',\n    'ぎろん',\n    'きわめる',\n    'ぎんいろ',\n    'きんかくじ',\n    'きんじょ',\n    'きんようび',\n    'ぐあい',\n    'くいず',\n    'くうかん',\n    'くうき',\n    'くうぐん',\n    'くうこう',\n    'ぐうせい',\n    'くうそう',\n    'ぐうたら',\n    'くうふく',\n    'くうぼ',\n    'くかん',\n    'くきょう',\n    'くげん',\n    'ぐこう',\n    'くさい',\n    'くさき',\n    'くさばな',\n    'くさる',\n    'くしゃみ',\n    'くしょう',\n    'くすのき',\n    'くすりゆび',\n    'くせげ',\n    'くせん',\n    'ぐたいてき',\n    'くださる',\n    'くたびれる',\n    'くちこみ',\n    'くちさき',\n    'くつした',\n    'ぐっすり',\n    'くつろぐ',\n    'くとうてん',\n    'くどく',\n    'くなん',\n    'くねくね',\n    'くのう',\n    'くふう',\n    'くみあわせ',\n    'くみたてる',\n    'くめる',\n    'くやくしょ',\n    'くらす',\n    'くらべる',\n    'くるま',\n    'くれる',\n    'くろう',\n    'くわしい',\n    'ぐんかん',\n    'ぐんしょく',\n    'ぐんたい',\n    'ぐんて',\n    'けあな',\n    'けいかく',\n    'けいけん',\n    'けいこ',\n    'けいさつ',\n    'げいじゅつ',\n    'けいたい',\n    'げいのうじん',\n    'けいれき',\n    'けいろ',\n    'けおとす',\n    'けおりもの',\n    'げきか',\n    'げきげん',\n    'げきだん',\n    'げきちん',\n    'げきとつ',\n    'げきは',\n    'げきやく',\n    'げこう',\n    'げこくじょう',\n    'げざい',\n    'けさき',\n    'げざん',\n    'けしき',\n    'けしごむ',\n    'けしょう',\n    'げすと',\n    'けたば',\n    'けちゃっぷ',\n    'けちらす',\n    'けつあつ',\n    'けつい',\n    'けつえき',\n    'けっこん',\n    'けつじょ',\n    'けっせき',\n    'けってい',\n    'けつまつ',\n    'げつようび',\n    'げつれい',\n    'けつろん',\n    'げどく',\n    'けとばす',\n    'けとる',\n    'けなげ',\n    'けなす',\n    'けなみ',\n    'けぬき',\n    'げねつ',\n    'けねん',\n    'けはい',\n    'げひん',\n    'けぶかい',\n    'げぼく',\n    'けまり',\n    'けみかる',\n    'けむし',\n    'けむり',\n    'けもの',\n    'けらい',\n    'けろけろ',\n    'けわしい',\n    'けんい',\n    'けんえつ',\n    'けんお',\n    'けんか',\n    'げんき',\n    'けんげん',\n    'けんこう',\n    'けんさく',\n    'けんしゅう',\n    'けんすう',\n    'げんそう',\n    'けんちく',\n    'けんてい',\n    'けんとう',\n    'けんない',\n    'けんにん',\n    'げんぶつ',\n    'けんま',\n    'けんみん',\n    'けんめい',\n    'けんらん',\n    'けんり',\n    'こあくま',\n    'こいぬ',\n    'こいびと',\n    'ごうい',\n    'こうえん',\n    'こうおん',\n    'こうかん',\n    'ごうきゅう',\n    'ごうけい',\n    'こうこう',\n    'こうさい',\n    'こうじ',\n    'こうすい',\n    'ごうせい',\n    'こうそく',\n    'こうたい',\n    'こうちゃ',\n    'こうつう',\n    'こうてい',\n    'こうどう',\n    'こうない',\n    'こうはい',\n    'ごうほう',\n    'ごうまん',\n    'こうもく',\n    'こうりつ',\n    'こえる',\n    'こおり',\n    'ごかい',\n    'ごがつ',\n    'ごかん',\n    'こくご',\n    'こくさい',\n    'こくとう',\n    'こくない',\n    'こくはく',\n    'こぐま',\n    'こけい',\n    'こける',\n    'ここのか',\n    'こころ',\n    'こさめ',\n    'こしつ',\n    'こすう',\n    'こせい',\n    'こせき',\n    'こぜん',\n    'こそだて',\n    'こたい',\n    'こたえる',\n    'こたつ',\n    'こちょう',\n    'こっか',\n    'こつこつ',\n    'こつばん',\n    'こつぶ',\n    'こてい',\n    'こてん',\n    'ことがら',\n    'ことし',\n    'ことば',\n    'ことり',\n    'こなごな',\n    'こねこね',\n    'このまま',\n    'このみ',\n    'このよ',\n    'ごはん',\n    'こひつじ',\n    'こふう',\n    'こふん',\n    'こぼれる',\n    'ごまあぶら',\n    'こまかい',\n    'ごますり',\n    'こまつな',\n    'こまる',\n    'こむぎこ',\n    'こもじ',\n    'こもち',\n    'こもの',\n    'こもん',\n    'こやく',\n    'こやま',\n    'こゆう',\n    'こゆび',\n    'こよい',\n    'こよう',\n    'こりる',\n    'これくしょん',\n    'ころっけ',\n    'こわもて',\n    'こわれる',\n    'こんいん',\n    'こんかい',\n    'こんき',\n    'こんしゅう',\n    'こんすい',\n    'こんだて',\n    'こんとん',\n    'こんなん',\n    'こんびに',\n    'こんぽん',\n    'こんまけ',\n    'こんや',\n    'こんれい',\n    'こんわく',\n    'ざいえき',\n    'さいかい',\n    'さいきん',\n    'ざいげん',\n    'ざいこ',\n    'さいしょ',\n    'さいせい',\n    'ざいたく',\n    'ざいちゅう',\n    'さいてき',\n    'ざいりょう',\n    'さうな',\n    'さかいし',\n    'さがす',\n    'さかな',\n    'さかみち',\n    'さがる',\n    'さぎょう',\n    'さくし',\n    'さくひん',\n    'さくら',\n    'さこく',\n    'さこつ',\n    'さずかる',\n    'ざせき',\n    'さたん',\n    'さつえい',\n    'ざつおん',\n    'ざっか',\n    'ざつがく',\n    'さっきょく',\n    'ざっし',\n    'さつじん',\n    'ざっそう',\n    'さつたば',\n    'さつまいも',\n    'さてい',\n    'さといも',\n    'さとう',\n    'さとおや',\n    'さとし',\n    'さとる',\n    'さのう',\n    'さばく',\n    'さびしい',\n    'さべつ',\n    'さほう',\n    'さほど',\n    'さます',\n    'さみしい',\n    'さみだれ',\n    'さむけ',\n    'さめる',\n    'さやえんどう',\n    'さゆう',\n    'さよう',\n    'さよく',\n    'さらだ',\n    'ざるそば',\n    'さわやか',\n    'さわる',\n    'さんいん',\n    'さんか',\n    'さんきゃく',\n    'さんこう',\n    'さんさい',\n    'ざんしょ',\n    'さんすう',\n    'さんせい',\n    'さんそ',\n    'さんち',\n    'さんま',\n    'さんみ',\n    'さんらん',\n    'しあい',\n    'しあげ',\n    'しあさって',\n    'しあわせ',\n    'しいく',\n    'しいん',\n    'しうち',\n    'しえい',\n    'しおけ',\n    'しかい',\n    'しかく',\n    'じかん',\n    'しごと',\n    'しすう',\n    'じだい',\n    'したうけ',\n    'したぎ',\n    'したて',\n    'したみ',\n    'しちょう',\n    'しちりん',\n    'しっかり',\n    'しつじ',\n    'しつもん',\n    'してい',\n    'してき',\n    'してつ',\n    'じてん',\n    'じどう',\n    'しなぎれ',\n    'しなもの',\n    'しなん',\n    'しねま',\n    'しねん',\n    'しのぐ',\n    'しのぶ',\n    'しはい',\n    'しばかり',\n    'しはつ',\n    'しはらい',\n    'しはん',\n    'しひょう',\n    'しふく',\n    'じぶん',\n    'しへい',\n    'しほう',\n    'しほん',\n    'しまう',\n    'しまる',\n    'しみん',\n    'しむける',\n    'じむしょ',\n    'しめい',\n    'しめる',\n    'しもん',\n    'しゃいん',\n    'しゃうん',\n    'しゃおん',\n    'じゃがいも',\n    'しやくしょ',\n    'しゃくほう',\n    'しゃけん',\n    'しゃこ',\n    'しゃざい',\n    'しゃしん',\n    'しゃせん',\n    'しゃそう',\n    'しゃたい',\n    'しゃちょう',\n    'しゃっきん',\n    'じゃま',\n    'しゃりん',\n    'しゃれい',\n    'じゆう',\n    'じゅうしょ',\n    'しゅくはく',\n    'じゅしん',\n    'しゅっせき',\n    'しゅみ',\n    'しゅらば',\n    'じゅんばん',\n    'しょうかい',\n    'しょくたく',\n    'しょっけん',\n    'しょどう',\n    'しょもつ',\n    'しらせる',\n    'しらべる',\n    'しんか',\n    'しんこう',\n    'じんじゃ',\n    'しんせいじ',\n    'しんちく',\n    'しんりん',\n    'すあげ',\n    'すあし',\n    'すあな',\n    'ずあん',\n    'すいえい',\n    'すいか',\n    'すいとう',\n    'ずいぶん',\n    'すいようび',\n    'すうがく',\n    'すうじつ',\n    'すうせん',\n    'すおどり',\n    'すきま',\n    'すくう',\n    'すくない',\n    'すける',\n    'すごい',\n    'すこし',\n    'ずさん',\n    'すずしい',\n    'すすむ',\n    'すすめる',\n    'すっかり',\n    'ずっしり',\n    'ずっと',\n    'すてき',\n    'すてる',\n    'すねる',\n    'すのこ',\n    'すはだ',\n    'すばらしい',\n    'ずひょう',\n    'ずぶぬれ',\n    'すぶり',\n    'すふれ',\n    'すべて',\n    'すべる',\n    'ずほう',\n    'すぼん',\n    'すまい',\n    'すめし',\n    'すもう',\n    'すやき',\n    'すらすら',\n    'するめ',\n    'すれちがう',\n    'すろっと',\n    'すわる',\n    'すんぜん',\n    'すんぽう',\n    'せあぶら',\n    'せいかつ',\n    'せいげん',\n    'せいじ',\n    'せいよう',\n    'せおう',\n    'せかいかん',\n    'せきにん',\n    'せきむ',\n    'せきゆ',\n    'せきらんうん',\n    'せけん',\n    'せこう',\n    'せすじ',\n    'せたい',\n    'せたけ',\n    'せっかく',\n    'せっきゃく',\n    'ぜっく',\n    'せっけん',\n    'せっこつ',\n    'せっさたくま',\n    'せつぞく',\n    'せつだん',\n    'せつでん',\n    'せっぱん',\n    'せつび',\n    'せつぶん',\n    'せつめい',\n    'せつりつ',\n    'せなか',\n    'せのび',\n    'せはば',\n    'せびろ',\n    'せぼね',\n    'せまい',\n    'せまる',\n    'せめる',\n    'せもたれ',\n    'せりふ',\n    'ぜんあく',\n    'せんい',\n    'せんえい',\n    'せんか',\n    'せんきょ',\n    'せんく',\n    'せんげん',\n    'ぜんご',\n    'せんさい',\n    'せんしゅ',\n    'せんすい',\n    'せんせい',\n    'せんぞ',\n    'せんたく',\n    'せんちょう',\n    'せんてい',\n    'せんとう',\n    'せんぬき',\n    'せんねん',\n    'せんぱい',\n    'ぜんぶ',\n    'ぜんぽう',\n    'せんむ',\n    'せんめんじょ',\n    'せんもん',\n    'せんやく',\n    'せんゆう',\n    'せんよう',\n    'ぜんら',\n    'ぜんりゃく',\n    'せんれい',\n    'せんろ',\n    'そあく',\n    'そいとげる',\n    'そいね',\n    'そうがんきょう',\n    'そうき',\n    'そうご',\n    'そうしん',\n    'そうだん',\n    'そうなん',\n    'そうび',\n    'そうめん',\n    'そうり',\n    'そえもの',\n    'そえん',\n    'そがい',\n    'そげき',\n    'そこう',\n    'そこそこ',\n    'そざい',\n    'そしな',\n    'そせい',\n    'そせん',\n    'そそぐ',\n    'そだてる',\n    'そつう',\n    'そつえん',\n    'そっかん',\n    'そつぎょう',\n    'そっけつ',\n    'そっこう',\n    'そっせん',\n    'そっと',\n    'そとがわ',\n    'そとづら',\n    'そなえる',\n    'そなた',\n    'そふぼ',\n    'そぼく',\n    'そぼろ',\n    'そまつ',\n    'そまる',\n    'そむく',\n    'そむりえ',\n    'そめる',\n    'そもそも',\n    'そよかぜ',\n    'そらまめ',\n    'そろう',\n    'そんかい',\n    'そんけい',\n    'そんざい',\n    'そんしつ',\n    'そんぞく',\n    'そんちょう',\n    'ぞんび',\n    'ぞんぶん',\n    'そんみん',\n    'たあい',\n    'たいいん',\n    'たいうん',\n    'たいえき',\n    'たいおう',\n    'だいがく',\n    'たいき',\n    'たいぐう',\n    'たいけん',\n    'たいこ',\n    'たいざい',\n    'だいじょうぶ',\n    'だいすき',\n    'たいせつ',\n    'たいそう',\n    'だいたい',\n    'たいちょう',\n    'たいてい',\n    'だいどころ',\n    'たいない',\n    'たいねつ',\n    'たいのう',\n    'たいはん',\n    'だいひょう',\n    'たいふう',\n    'たいへん',\n    'たいほ',\n    'たいまつばな',\n    'たいみんぐ',\n    'たいむ',\n    'たいめん',\n    'たいやき',\n    'たいよう',\n    'たいら',\n    'たいりょく',\n    'たいる',\n    'たいわん',\n    'たうえ',\n    'たえる',\n    'たおす',\n    'たおる',\n    'たおれる',\n    'たかい',\n    'たかね',\n    'たきび',\n    'たくさん',\n    'たこく',\n    'たこやき',\n    'たさい',\n    'たしざん',\n    'だじゃれ',\n    'たすける',\n    'たずさわる',\n    'たそがれ',\n    'たたかう',\n    'たたく',\n    'ただしい',\n    'たたみ',\n    'たちばな',\n    'だっかい',\n    'だっきゃく',\n    'だっこ',\n    'だっしゅつ',\n    'だったい',\n    'たてる',\n    'たとえる',\n    'たなばた',\n    'たにん',\n    'たぬき',\n    'たのしみ',\n    'たはつ',\n    'たぶん',\n    'たべる',\n    'たぼう',\n    'たまご',\n    'たまる',\n    'だむる',\n    'ためいき',\n    'ためす',\n    'ためる',\n    'たもつ',\n    'たやすい',\n    'たよる',\n    'たらす',\n    'たりきほんがん',\n    'たりょう',\n    'たりる',\n    'たると',\n    'たれる',\n    'たれんと',\n    'たろっと',\n    'たわむれる',\n    'だんあつ',\n    'たんい',\n    'たんおん',\n    'たんか',\n    'たんき',\n    'たんけん',\n    'たんご',\n    'たんさん',\n    'たんじょうび',\n    'だんせい',\n    'たんそく',\n    'たんたい',\n    'だんち',\n    'たんてい',\n    'たんとう',\n    'だんな',\n    'たんにん',\n    'だんねつ',\n    'たんのう',\n    'たんぴん',\n    'だんぼう',\n    'たんまつ',\n    'たんめい',\n    'だんれつ',\n    'だんろ',\n    'だんわ',\n    'ちあい',\n    'ちあん',\n    'ちいき',\n    'ちいさい',\n    'ちえん',\n    'ちかい',\n    'ちから',\n    'ちきゅう',\n    'ちきん',\n    'ちけいず',\n    'ちけん',\n    'ちこく',\n    'ちさい',\n    'ちしき',\n    'ちしりょう',\n    'ちせい',\n    'ちそう',\n    'ちたい',\n    'ちたん',\n    'ちちおや',\n    'ちつじょ',\n    'ちてき',\n    'ちてん',\n    'ちぬき',\n    'ちぬり',\n    'ちのう',\n    'ちひょう',\n    'ちへいせん',\n    'ちほう',\n    'ちまた',\n    'ちみつ',\n    'ちみどろ',\n    'ちめいど',\n    'ちゃんこなべ',\n    'ちゅうい',\n    'ちゆりょく',\n    'ちょうし',\n    'ちょさくけん',\n    'ちらし',\n    'ちらみ',\n    'ちりがみ',\n    'ちりょう',\n    'ちるど',\n    'ちわわ',\n    'ちんたい',\n    'ちんもく',\n    'ついか',\n    'ついたち',\n    'つうか',\n    'つうじょう',\n    'つうはん',\n    'つうわ',\n    'つかう',\n    'つかれる',\n    'つくね',\n    'つくる',\n    'つけね',\n    'つける',\n    'つごう',\n    'つたえる',\n    'つづく',\n    'つつじ',\n    'つつむ',\n    'つとめる',\n    'つながる',\n    'つなみ',\n    'つねづね',\n    'つのる',\n    'つぶす',\n    'つまらない',\n    'つまる',\n    'つみき',\n    'つめたい',\n    'つもり',\n    'つもる',\n    'つよい',\n    'つるぼ',\n    'つるみく',\n    'つわもの',\n    'つわり',\n    'てあし',\n    'てあて',\n    'てあみ',\n    'ていおん',\n    'ていか',\n    'ていき',\n    'ていけい',\n    'ていこく',\n    'ていさつ',\n    'ていし',\n    'ていせい',\n    'ていたい',\n    'ていど',\n    'ていねい',\n    'ていひょう',\n    'ていへん',\n    'ていぼう',\n    'てうち',\n    'ておくれ',\n    'てきとう',\n    'てくび',\n    'でこぼこ',\n    'てさぎょう',\n    'てさげ',\n    'てすり',\n    'てそう',\n    'てちがい',\n    'てちょう',\n    'てつがく',\n    'てつづき',\n    'でっぱ',\n    'てつぼう',\n    'てつや',\n    'でぬかえ',\n    'てぬき',\n    'てぬぐい',\n    'てのひら',\n    'てはい',\n    'てぶくろ',\n    'てふだ',\n    'てほどき',\n    'てほん',\n    'てまえ',\n    'てまきずし',\n    'てみじか',\n    'てみやげ',\n    'てらす',\n    'てれび',\n    'てわけ',\n    'てわたし',\n    'でんあつ',\n    'てんいん',\n    'てんかい',\n    'てんき',\n    'てんぐ',\n    'てんけん',\n    'てんごく',\n    'てんさい',\n    'てんし',\n    'てんすう',\n    'でんち',\n    'てんてき',\n    'てんとう',\n    'てんない',\n    'てんぷら',\n    'てんぼうだい',\n    'てんめつ',\n    'てんらんかい',\n    'でんりょく',\n    'でんわ',\n    'どあい',\n    'といれ',\n    'どうかん',\n    'とうきゅう',\n    'どうぐ',\n    'とうし',\n    'とうむぎ',\n    'とおい',\n    'とおか',\n    'とおく',\n    'とおす',\n    'とおる',\n    'とかい',\n    'とかす',\n    'ときおり',\n    'ときどき',\n    'とくい',\n    'とくしゅう',\n    'とくてん',\n    'とくに',\n    'とくべつ',\n    'とけい',\n    'とける',\n    'とこや',\n    'とさか',\n    'としょかん',\n    'とそう',\n    'とたん',\n    'とちゅう',\n    'とっきゅう',\n    'とっくん',\n    'とつぜん',\n    'とつにゅう',\n    'とどける',\n    'ととのえる',\n    'とない',\n    'となえる',\n    'となり',\n    'とのさま',\n    'とばす',\n    'どぶがわ',\n    'とほう',\n    'とまる',\n    'とめる',\n    'ともだち',\n    'ともる',\n    'どようび',\n    'とらえる',\n    'とんかつ',\n    'どんぶり',\n    'ないかく',\n    'ないこう',\n    'ないしょ',\n    'ないす',\n    'ないせん',\n    'ないそう',\n    'なおす',\n    'ながい',\n    'なくす',\n    'なげる',\n    'なこうど',\n    'なさけ',\n    'なたでここ',\n    'なっとう',\n    'なつやすみ',\n    'ななおし',\n    'なにごと',\n    'なにもの',\n    'なにわ',\n    'なのか',\n    'なふだ',\n    'なまいき',\n    'なまえ',\n    'なまみ',\n    'なみだ',\n    'なめらか',\n    'なめる',\n    'なやむ',\n    'ならう',\n    'ならび',\n    'ならぶ',\n    'なれる',\n    'なわとび',\n    'なわばり',\n    'にあう',\n    'にいがた',\n    'にうけ',\n    'におい',\n    'にかい',\n    'にがて',\n    'にきび',\n    'にくしみ',\n    'にくまん',\n    'にげる',\n    'にさんかたんそ',\n    'にしき',\n    'にせもの',\n    'にちじょう',\n    'にちようび',\n    'にっか',\n    'にっき',\n    'にっけい',\n    'にっこう',\n    'にっさん',\n    'にっしょく',\n    'にっすう',\n    'にっせき',\n    'にってい',\n    'になう',\n    'にほん',\n    'にまめ',\n    'にもつ',\n    'にやり',\n    'にゅういん',\n    'にりんしゃ',\n    'にわとり',\n    'にんい',\n    'にんか',\n    'にんき',\n    'にんげん',\n    'にんしき',\n    'にんずう',\n    'にんそう',\n    'にんたい',\n    'にんち',\n    'にんてい',\n    'にんにく',\n    'にんぷ',\n    'にんまり',\n    'にんむ',\n    'にんめい',\n    'にんよう',\n    'ぬいくぎ',\n    'ぬかす',\n    'ぬぐいとる',\n    'ぬぐう',\n    'ぬくもり',\n    'ぬすむ',\n    'ぬまえび',\n    'ぬめり',\n    'ぬらす',\n    'ぬんちゃく',\n    'ねあげ',\n    'ねいき',\n    'ねいる',\n    'ねいろ',\n    'ねぐせ',\n    'ねくたい',\n    'ねくら',\n    'ねこぜ',\n    'ねこむ',\n    'ねさげ',\n    'ねすごす',\n    'ねそべる',\n    'ねだん',\n    'ねつい',\n    'ねっしん',\n    'ねつぞう',\n    'ねったいぎょ',\n    'ねぶそく',\n    'ねふだ',\n    'ねぼう',\n    'ねほりはほり',\n    'ねまき',\n    'ねまわし',\n    'ねみみ',\n    'ねむい',\n    'ねむたい',\n    'ねもと',\n    'ねらう',\n    'ねわざ',\n    'ねんいり',\n    'ねんおし',\n    'ねんかん',\n    'ねんきん',\n    'ねんぐ',\n    'ねんざ',\n    'ねんし',\n    'ねんちゃく',\n    'ねんど',\n    'ねんぴ',\n    'ねんぶつ',\n    'ねんまつ',\n    'ねんりょう',\n    'ねんれい',\n    'のいず',\n    'のおづま',\n    'のがす',\n    'のきなみ',\n    'のこぎり',\n    'のこす',\n    'のこる',\n    'のせる',\n    'のぞく',\n    'のぞむ',\n    'のたまう',\n    'のちほど',\n    'のっく',\n    'のばす',\n    'のはら',\n    'のべる',\n    'のぼる',\n    'のみもの',\n    'のやま',\n    'のらいぬ',\n    'のらねこ',\n    'のりもの',\n    'のりゆき',\n    'のれん',\n    'のんき',\n    'ばあい',\n    'はあく',\n    'ばあさん',\n    'ばいか',\n    'ばいく',\n    'はいけん',\n    'はいご',\n    'はいしん',\n    'はいすい',\n    'はいせん',\n    'はいそう',\n    'はいち',\n    'ばいばい',\n    'はいれつ',\n    'はえる',\n    'はおる',\n    'はかい',\n    'ばかり',\n    'はかる',\n    'はくしゅ',\n    'はけん',\n    'はこぶ',\n    'はさみ',\n    'はさん',\n    'はしご',\n    'ばしょ',\n    'はしる',\n    'はせる',\n    'ぱそこん',\n    'はそん',\n    'はたん',\n    'はちみつ',\n    'はつおん',\n    'はっかく',\n    'はづき',\n    'はっきり',\n    'はっくつ',\n    'はっけん',\n    'はっこう',\n    'はっさん',\n    'はっしん',\n    'はったつ',\n    'はっちゅう',\n    'はってん',\n    'はっぴょう',\n    'はっぽう',\n    'はなす',\n    'はなび',\n    'はにかむ',\n    'はぶらし',\n    'はみがき',\n    'はむかう',\n    'はめつ',\n    'はやい',\n    'はやし',\n    'はらう',\n    'はろうぃん',\n    'はわい',\n    'はんい',\n    'はんえい',\n    'はんおん',\n    'はんかく',\n    'はんきょう',\n    'ばんぐみ',\n    'はんこ',\n    'はんしゃ',\n    'はんすう',\n    'はんだん',\n    'ぱんち',\n    'ぱんつ',\n    'はんてい',\n    'はんとし',\n    'はんのう',\n    'はんぱ',\n    'はんぶん',\n    'はんぺん',\n    'はんぼうき',\n    'はんめい',\n    'はんらん',\n    'はんろん',\n    'ひいき',\n    'ひうん',\n    'ひえる',\n    'ひかく',\n    'ひかり',\n    'ひかる',\n    'ひかん',\n    'ひくい',\n    'ひけつ',\n    'ひこうき',\n    'ひこく',\n    'ひさい',\n    'ひさしぶり',\n    'ひさん',\n    'びじゅつかん',\n    'ひしょ'\n];\n//# sourceMappingURL=japanese.js.map","// SPDX-License-Identifier: MIT\nexport const WORDLIST = [\n    'abaular',\n    'abdominal',\n    'abeto',\n    'abissinio',\n    'abjeto',\n    'ablucao',\n    'abnegar',\n    'abotoar',\n    'abrutalhar',\n    'absurdo',\n    'abutre',\n    'acautelar',\n    'accessorios',\n    'acetona',\n    'achocolatado',\n    'acirrar',\n    'acne',\n    'acovardar',\n    'acrostico',\n    'actinomicete',\n    'acustico',\n    'adaptavel',\n    'adeus',\n    'adivinho',\n    'adjunto',\n    'admoestar',\n    'adnominal',\n    'adotivo',\n    'adquirir',\n    'adriatico',\n    'adsorcao',\n    'adutora',\n    'advogar',\n    'aerossol',\n    'afazeres',\n    'afetuoso',\n    'afixo',\n    'afluir',\n    'afortunar',\n    'afrouxar',\n    'aftosa',\n    'afunilar',\n    'agentes',\n    'agito',\n    'aglutinar',\n    'aiatola',\n    'aimore',\n    'aino',\n    'aipo',\n    'airoso',\n    'ajeitar',\n    'ajoelhar',\n    'ajudante',\n    'ajuste',\n    'alazao',\n    'albumina',\n    'alcunha',\n    'alegria',\n    'alexandre',\n    'alforriar',\n    'alguns',\n    'alhures',\n    'alivio',\n    'almoxarife',\n    'alotropico',\n    'alpiste',\n    'alquimista',\n    'alsaciano',\n    'altura',\n    'aluviao',\n    'alvura',\n    'amazonico',\n    'ambulatorio',\n    'ametodico',\n    'amizades',\n    'amniotico',\n    'amovivel',\n    'amurada',\n    'anatomico',\n    'ancorar',\n    'anexo',\n    'anfora',\n    'aniversario',\n    'anjo',\n    'anotar',\n    'ansioso',\n    'anturio',\n    'anuviar',\n    'anverso',\n    'anzol',\n    'aonde',\n    'apaziguar',\n    'apito',\n    'aplicavel',\n    'apoteotico',\n    'aprimorar',\n    'aprumo',\n    'apto',\n    'apuros',\n    'aquoso',\n    'arauto',\n    'arbusto',\n    'arduo',\n    'aresta',\n    'arfar',\n    'arguto',\n    'aritmetico',\n    'arlequim',\n    'armisticio',\n    'aromatizar',\n    'arpoar',\n    'arquivo',\n    'arrumar',\n    'arsenio',\n    'arturiano',\n    'aruaque',\n    'arvores',\n    'asbesto',\n    'ascorbico',\n    'aspirina',\n    'asqueroso',\n    'assustar',\n    'astuto',\n    'atazanar',\n    'ativo',\n    'atletismo',\n    'atmosferico',\n    'atormentar',\n    'atroz',\n    'aturdir',\n    'audivel',\n    'auferir',\n    'augusto',\n    'aula',\n    'aumento',\n    'aurora',\n    'autuar',\n    'avatar',\n    'avexar',\n    'avizinhar',\n    'avolumar',\n    'avulso',\n    'axiomatico',\n    'azerbaijano',\n    'azimute',\n    'azoto',\n    'azulejo',\n    'bacteriologista',\n    'badulaque',\n    'baforada',\n    'baixote',\n    'bajular',\n    'balzaquiana',\n    'bambuzal',\n    'banzo',\n    'baoba',\n    'baqueta',\n    'barulho',\n    'bastonete',\n    'batuta',\n    'bauxita',\n    'bavaro',\n    'bazuca',\n    'bcrepuscular',\n    'beato',\n    'beduino',\n    'begonia',\n    'behaviorista',\n    'beisebol',\n    'belzebu',\n    'bemol',\n    'benzido',\n    'beocio',\n    'bequer',\n    'berro',\n    'besuntar',\n    'betume',\n    'bexiga',\n    'bezerro',\n    'biatlon',\n    'biboca',\n    'bicuspide',\n    'bidirecional',\n    'bienio',\n    'bifurcar',\n    'bigorna',\n    'bijuteria',\n    'bimotor',\n    'binormal',\n    'bioxido',\n    'bipolarizacao',\n    'biquini',\n    'birutice',\n    'bisturi',\n    'bituca',\n    'biunivoco',\n    'bivalve',\n    'bizarro',\n    'blasfemo',\n    'blenorreia',\n    'blindar',\n    'bloqueio',\n    'blusao',\n    'boazuda',\n    'bofete',\n    'bojudo',\n    'bolso',\n    'bombordo',\n    'bonzo',\n    'botina',\n    'boquiaberto',\n    'bostoniano',\n    'botulismo',\n    'bourbon',\n    'bovino',\n    'boximane',\n    'bravura',\n    'brevidade',\n    'britar',\n    'broxar',\n    'bruno',\n    'bruxuleio',\n    'bubonico',\n    'bucolico',\n    'buda',\n    'budista',\n    'bueiro',\n    'buffer',\n    'bugre',\n    'bujao',\n    'bumerangue',\n    'burundines',\n    'busto',\n    'butique',\n    'buzios',\n    'caatinga',\n    'cabuqui',\n    'cacunda',\n    'cafuzo',\n    'cajueiro',\n    'camurca',\n    'canudo',\n    'caquizeiro',\n    'carvoeiro',\n    'casulo',\n    'catuaba',\n    'cauterizar',\n    'cebolinha',\n    'cedula',\n    'ceifeiro',\n    'celulose',\n    'cerzir',\n    'cesto',\n    'cetro',\n    'ceus',\n    'cevar',\n    'chavena',\n    'cheroqui',\n    'chita',\n    'chovido',\n    'chuvoso',\n    'ciatico',\n    'cibernetico',\n    'cicuta',\n    'cidreira',\n    'cientistas',\n    'cifrar',\n    'cigarro',\n    'cilio',\n    'cimo',\n    'cinzento',\n    'cioso',\n    'cipriota',\n    'cirurgico',\n    'cisto',\n    'citrico',\n    'ciumento',\n    'civismo',\n    'clavicula',\n    'clero',\n    'clitoris',\n    'cluster',\n    'coaxial',\n    'cobrir',\n    'cocota',\n    'codorniz',\n    'coexistir',\n    'cogumelo',\n    'coito',\n    'colusao',\n    'compaixao',\n    'comutativo',\n    'contentamento',\n    'convulsivo',\n    'coordenativa',\n    'coquetel',\n    'correto',\n    'corvo',\n    'costureiro',\n    'cotovia',\n    'covil',\n    'cozinheiro',\n    'cretino',\n    'cristo',\n    'crivo',\n    'crotalo',\n    'cruzes',\n    'cubo',\n    'cucuia',\n    'cueiro',\n    'cuidar',\n    'cujo',\n    'cultural',\n    'cunilingua',\n    'cupula',\n    'curvo',\n    'custoso',\n    'cutucar',\n    'czarismo',\n    'dablio',\n    'dacota',\n    'dados',\n    'daguerreotipo',\n    'daiquiri',\n    'daltonismo',\n    'damista',\n    'dantesco',\n    'daquilo',\n    'darwinista',\n    'dasein',\n    'dativo',\n    'deao',\n    'debutantes',\n    'decurso',\n    'deduzir',\n    'defunto',\n    'degustar',\n    'dejeto',\n    'deltoide',\n    'demover',\n    'denunciar',\n    'deputado',\n    'deque',\n    'dervixe',\n    'desvirtuar',\n    'deturpar',\n    'deuteronomio',\n    'devoto',\n    'dextrose',\n    'dezoito',\n    'diatribe',\n    'dicotomico',\n    'didatico',\n    'dietista',\n    'difuso',\n    'digressao',\n    'diluvio',\n    'diminuto',\n    'dinheiro',\n    'dinossauro',\n    'dioxido',\n    'diplomatico',\n    'dique',\n    'dirimivel',\n    'disturbio',\n    'diurno',\n    'divulgar',\n    'dizivel',\n    'doar',\n    'dobro',\n    'docura',\n    'dodoi',\n    'doer',\n    'dogue',\n    'doloso',\n    'domo',\n    'donzela',\n    'doping',\n    'dorsal',\n    'dossie',\n    'dote',\n    'doutro',\n    'doze',\n    'dravidico',\n    'dreno',\n    'driver',\n    'dropes',\n    'druso',\n    'dubnio',\n    'ducto',\n    'dueto',\n    'dulija',\n    'dundum',\n    'duodeno',\n    'duquesa',\n    'durou',\n    'duvidoso',\n    'duzia',\n    'ebano',\n    'ebrio',\n    'eburneo',\n    'echarpe',\n    'eclusa',\n    'ecossistema',\n    'ectoplasma',\n    'ecumenismo',\n    'eczema',\n    'eden',\n    'editorial',\n    'edredom',\n    'edulcorar',\n    'efetuar',\n    'efigie',\n    'efluvio',\n    'egiptologo',\n    'egresso',\n    'egua',\n    'einsteiniano',\n    'eira',\n    'eivar',\n    'eixos',\n    'ejetar',\n    'elastomero',\n    'eldorado',\n    'elixir',\n    'elmo',\n    'eloquente',\n    'elucidativo',\n    'emaranhar',\n    'embutir',\n    'emerito',\n    'emfa',\n    'emitir',\n    'emotivo',\n    'empuxo',\n    'emulsao',\n    'enamorar',\n    'encurvar',\n    'enduro',\n    'enevoar',\n    'enfurnar',\n    'enguico',\n    'enho',\n    'enigmista',\n    'enlutar',\n    'enormidade',\n    'enpreendimento',\n    'enquanto',\n    'enriquecer',\n    'enrugar',\n    'entusiastico',\n    'enunciar',\n    'envolvimento',\n    'enxuto',\n    'enzimatico',\n    'eolico',\n    'epiteto',\n    'epoxi',\n    'epura',\n    'equivoco',\n    'erario',\n    'erbio',\n    'ereto',\n    'erguido',\n    'erisipela',\n    'ermo',\n    'erotizar',\n    'erros',\n    'erupcao',\n    'ervilha',\n    'esburacar',\n    'escutar',\n    'esfuziante',\n    'esguio',\n    'esloveno',\n    'esmurrar',\n    'esoterismo',\n    'esperanca',\n    'espirito',\n    'espurio',\n    'essencialmente',\n    'esturricar',\n    'esvoacar',\n    'etario',\n    'eterno',\n    'etiquetar',\n    'etnologo',\n    'etos',\n    'etrusco',\n    'euclidiano',\n    'euforico',\n    'eugenico',\n    'eunuco',\n    'europio',\n    'eustaquio',\n    'eutanasia',\n    'evasivo',\n    'eventualidade',\n    'evitavel',\n    'evoluir',\n    'exaustor',\n    'excursionista',\n    'exercito',\n    'exfoliado',\n    'exito',\n    'exotico',\n    'expurgo',\n    'exsudar',\n    'extrusora',\n    'exumar',\n    'fabuloso',\n    'facultativo',\n    'fado',\n    'fagulha',\n    'faixas',\n    'fajuto',\n    'faltoso',\n    'famoso',\n    'fanzine',\n    'fapesp',\n    'faquir',\n    'fartura',\n    'fastio',\n    'faturista',\n    'fausto',\n    'favorito',\n    'faxineira',\n    'fazer',\n    'fealdade',\n    'febril',\n    'fecundo',\n    'fedorento',\n    'feerico',\n    'feixe',\n    'felicidade',\n    'felpudo',\n    'feltro',\n    'femur',\n    'fenotipo',\n    'fervura',\n    'festivo',\n    'feto',\n    'feudo',\n    'fevereiro',\n    'fezinha',\n    'fiasco',\n    'fibra',\n    'ficticio',\n    'fiduciario',\n    'fiesp',\n    'fifa',\n    'figurino',\n    'fijiano',\n    'filtro',\n    'finura',\n    'fiorde',\n    'fiquei',\n    'firula',\n    'fissurar',\n    'fitoteca',\n    'fivela',\n    'fixo',\n    'flavio',\n    'flexor',\n    'flibusteiro',\n    'flotilha',\n    'fluxograma',\n    'fobos',\n    'foco',\n    'fofura',\n    'foguista',\n    'foie',\n    'foliculo',\n    'fominha',\n    'fonte',\n    'forum',\n    'fosso',\n    'fotossintese',\n    'foxtrote',\n    'fraudulento',\n    'frevo',\n    'frivolo',\n    'frouxo',\n    'frutose',\n    'fuba',\n    'fucsia',\n    'fugitivo',\n    'fuinha',\n    'fujao',\n    'fulustreco',\n    'fumo',\n    'funileiro',\n    'furunculo',\n    'fustigar',\n    'futurologo',\n    'fuxico',\n    'fuzue',\n    'gabriel',\n    'gado',\n    'gaelico',\n    'gafieira',\n    'gaguejo',\n    'gaivota',\n    'gajo',\n    'galvanoplastico',\n    'gamo',\n    'ganso',\n    'garrucha',\n    'gastronomo',\n    'gatuno',\n    'gaussiano',\n    'gaviao',\n    'gaxeta',\n    'gazeteiro',\n    'gear',\n    'geiser',\n    'geminiano',\n    'generoso',\n    'genuino',\n    'geossinclinal',\n    'gerundio',\n    'gestual',\n    'getulista',\n    'gibi',\n    'gigolo',\n    'gilete',\n    'ginseng',\n    'giroscopio',\n    'glaucio',\n    'glacial',\n    'gleba',\n    'glifo',\n    'glote',\n    'glutonia',\n    'gnostico',\n    'goela',\n    'gogo',\n    'goitaca',\n    'golpista',\n    'gomo',\n    'gonzo',\n    'gorro',\n    'gostou',\n    'goticula',\n    'gourmet',\n    'governo',\n    'gozo',\n    'graxo',\n    'grevista',\n    'grito',\n    'grotesco',\n    'gruta',\n    'guaxinim',\n    'gude',\n    'gueto',\n    'guizo',\n    'guloso',\n    'gume',\n    'guru',\n    'gustativo',\n    'grelhado',\n    'gutural',\n    'habitue',\n    'haitiano',\n    'halterofilista',\n    'hamburguer',\n    'hanseniase',\n    'happening',\n    'harpista',\n    'hastear',\n    'haveres',\n    'hebreu',\n    'hectometro',\n    'hedonista',\n    'hegira',\n    'helena',\n    'helminto',\n    'hemorroidas',\n    'henrique',\n    'heptassilabo',\n    'hertziano',\n    'hesitar',\n    'heterossexual',\n    'heuristico',\n    'hexagono',\n    'hiato',\n    'hibrido',\n    'hidrostatico',\n    'hieroglifo',\n    'hifenizar',\n    'higienizar',\n    'hilario',\n    'himen',\n    'hino',\n    'hippie',\n    'hirsuto',\n    'historiografia',\n    'hitlerista',\n    'hodometro',\n    'hoje',\n    'holograma',\n    'homus',\n    'honroso',\n    'hoquei',\n    'horto',\n    'hostilizar',\n    'hotentote',\n    'huguenote',\n    'humilde',\n    'huno',\n    'hurra',\n    'hutu',\n    'iaia',\n    'ialorixa',\n    'iambico',\n    'iansa',\n    'iaque',\n    'iara',\n    'iatista',\n    'iberico',\n    'ibis',\n    'icar',\n    'iceberg',\n    'icosagono',\n    'idade',\n    'ideologo',\n    'idiotice',\n    'idoso',\n    'iemenita',\n    'iene',\n    'igarape',\n    'iglu',\n    'ignorar',\n    'igreja',\n    'iguaria',\n    'iidiche',\n    'ilativo',\n    'iletrado',\n    'ilharga',\n    'ilimitado',\n    'ilogismo',\n    'ilustrissimo',\n    'imaturo',\n    'imbuzeiro',\n    'imerso',\n    'imitavel',\n    'imovel',\n    'imputar',\n    'imutavel',\n    'inaveriguavel',\n    'incutir',\n    'induzir',\n    'inextricavel',\n    'infusao',\n    'ingua',\n    'inhame',\n    'iniquo',\n    'injusto',\n    'inning',\n    'inoxidavel',\n    'inquisitorial',\n    'insustentavel',\n    'intumescimento',\n    'inutilizavel',\n    'invulneravel',\n    'inzoneiro',\n    'iodo',\n    'iogurte',\n    'ioio',\n    'ionosfera',\n    'ioruba',\n    'iota',\n    'ipsilon',\n    'irascivel',\n    'iris',\n    'irlandes',\n    'irmaos',\n    'iroques',\n    'irrupcao',\n    'isca',\n    'isento',\n    'islandes',\n    'isotopo',\n    'isqueiro',\n    'israelita',\n    'isso',\n    'isto',\n    'iterbio',\n    'itinerario',\n    'itrio',\n    'iuane',\n    'iugoslavo',\n    'jabuticabeira',\n    'jacutinga',\n    'jade',\n    'jagunco',\n    'jainista',\n    'jaleco',\n    'jambo',\n    'jantarada',\n    'japones',\n    'jaqueta',\n    'jarro',\n    'jasmim',\n    'jato',\n    'jaula',\n    'javel',\n    'jazz',\n    'jegue',\n    'jeitoso',\n    'jejum',\n    'jenipapo',\n    'jeova',\n    'jequitiba',\n    'jersei',\n    'jesus',\n    'jetom',\n    'jiboia',\n    'jihad',\n    'jilo',\n    'jingle',\n    'jipe',\n    'jocoso',\n    'joelho',\n    'joguete',\n    'joio',\n    'jojoba',\n    'jorro',\n    'jota',\n    'joule',\n    'joviano',\n    'jubiloso',\n    'judoca',\n    'jugular',\n    'juizo',\n    'jujuba',\n    'juliano',\n    'jumento',\n    'junto',\n    'jururu',\n    'justo',\n    'juta',\n    'juventude',\n    'labutar',\n    'laguna',\n    'laico',\n    'lajota',\n    'lanterninha',\n    'lapso',\n    'laquear',\n    'lastro',\n    'lauto',\n    'lavrar',\n    'laxativo',\n    'lazer',\n    'leasing',\n    'lebre',\n    'lecionar',\n    'ledo',\n    'leguminoso',\n    'leitura',\n    'lele',\n    'lemure',\n    'lento',\n    'leonardo',\n    'leopardo',\n    'lepton',\n    'leque',\n    'leste',\n    'letreiro',\n    'leucocito',\n    'levitico',\n    'lexicologo',\n    'lhama',\n    'lhufas',\n    'liame',\n    'licoroso',\n    'lidocaina',\n    'liliputiano',\n    'limusine',\n    'linotipo',\n    'lipoproteina',\n    'liquidos',\n    'lirismo',\n    'lisura',\n    'liturgico',\n    'livros',\n    'lixo',\n    'lobulo',\n    'locutor',\n    'lodo',\n    'logro',\n    'lojista',\n    'lombriga',\n    'lontra',\n    'loop',\n    'loquaz',\n    'lorota',\n    'losango',\n    'lotus',\n    'louvor',\n    'luar',\n    'lubrificavel',\n    'lucros',\n    'lugubre',\n    'luis',\n    'luminoso',\n    'luneta',\n    'lustroso',\n    'luto',\n    'luvas',\n    'luxuriante',\n    'luzeiro',\n    'maduro',\n    'maestro',\n    'mafioso',\n    'magro',\n    'maiuscula',\n    'majoritario',\n    'malvisto',\n    'mamute',\n    'manutencao',\n    'mapoteca',\n    'maquinista',\n    'marzipa',\n    'masturbar',\n    'matuto',\n    'mausoleu',\n    'mavioso',\n    'maxixe',\n    'mazurca',\n    'meandro',\n    'mecha',\n    'medusa',\n    'mefistofelico',\n    'megera',\n    'meirinho',\n    'melro',\n    'memorizar',\n    'menu',\n    'mequetrefe',\n    'mertiolate',\n    'mestria',\n    'metroviario',\n    'mexilhao',\n    'mezanino',\n    'miau',\n    'microssegundo',\n    'midia',\n    'migratorio',\n    'mimosa',\n    'minuto',\n    'miosotis',\n    'mirtilo',\n    'misturar',\n    'mitzvah',\n    'miudos',\n    'mixuruca',\n    'mnemonico',\n    'moagem',\n    'mobilizar',\n    'modulo',\n    'moer',\n    'mofo',\n    'mogno',\n    'moita',\n    'molusco',\n    'monumento',\n    'moqueca',\n    'morubixaba',\n    'mostruario',\n    'motriz',\n    'mouse',\n    'movivel',\n    'mozarela',\n    'muarra',\n    'muculmano',\n    'mudo',\n    'mugir',\n    'muitos',\n    'mumunha',\n    'munir',\n    'muon',\n    'muquira',\n    'murros',\n    'musselina',\n    'nacoes',\n    'nado',\n    'naftalina',\n    'nago',\n    'naipe',\n    'naja',\n    'nalgum',\n    'namoro',\n    'nanquim',\n    'napolitano',\n    'naquilo',\n    'nascimento',\n    'nautilo',\n    'navios',\n    'nazista',\n    'nebuloso',\n    'nectarina',\n    'nefrologo',\n    'negus',\n    'nelore',\n    'nenufar',\n    'nepotismo',\n    'nervura',\n    'neste',\n    'netuno',\n    'neutron',\n    'nevoeiro',\n    'newtoniano',\n    'nexo',\n    'nhenhenhem',\n    'nhoque',\n    'nigeriano',\n    'niilista',\n    'ninho',\n    'niobio',\n    'niponico',\n    'niquelar',\n    'nirvana',\n    'nisto',\n    'nitroglicerina',\n    'nivoso',\n    'nobreza',\n    'nocivo',\n    'noel',\n    'nogueira',\n    'noivo',\n    'nojo',\n    'nominativo',\n    'nonuplo',\n    'noruegues',\n    'nostalgico',\n    'noturno',\n    'nouveau',\n    'nuanca',\n    'nublar',\n    'nucleotideo',\n    'nudista',\n    'nulo',\n    'numismatico',\n    'nunquinha',\n    'nupcias',\n    'nutritivo',\n    'nuvens',\n    'oasis',\n    'obcecar',\n    'obeso',\n    'obituario',\n    'objetos',\n    'oblongo',\n    'obnoxio',\n    'obrigatorio',\n    'obstruir',\n    'obtuso',\n    'obus',\n    'obvio',\n    'ocaso',\n    'occipital',\n    'oceanografo',\n    'ocioso',\n    'oclusivo',\n    'ocorrer',\n    'ocre',\n    'octogono',\n    'odalisca',\n    'odisseia',\n    'odorifico',\n    'oersted',\n    'oeste',\n    'ofertar',\n    'ofidio',\n    'oftalmologo',\n    'ogiva',\n    'ogum',\n    'oigale',\n    'oitavo',\n    'oitocentos',\n    'ojeriza',\n    'olaria',\n    'oleoso',\n    'olfato',\n    'olhos',\n    'oliveira',\n    'olmo',\n    'olor',\n    'olvidavel',\n    'ombudsman',\n    'omeleteira',\n    'omitir',\n    'omoplata',\n    'onanismo',\n    'ondular',\n    'oneroso',\n    'onomatopeico',\n    'ontologico',\n    'onus',\n    'onze',\n    'opalescente',\n    'opcional',\n    'operistico',\n    'opio',\n    'oposto',\n    'oprobrio',\n    'optometrista',\n    'opusculo',\n    'oratorio',\n    'orbital',\n    'orcar',\n    'orfao',\n    'orixa',\n    'orla',\n    'ornitologo',\n    'orquidea',\n    'ortorrombico',\n    'orvalho',\n    'osculo',\n    'osmotico',\n    'ossudo',\n    'ostrogodo',\n    'otario',\n    'otite',\n    'ouro',\n    'ousar',\n    'outubro',\n    'ouvir',\n    'ovario',\n    'overnight',\n    'oviparo',\n    'ovni',\n    'ovoviviparo',\n    'ovulo',\n    'oxala',\n    'oxente',\n    'oxiuro',\n    'oxossi',\n    'ozonizar',\n    'paciente',\n    'pactuar',\n    'padronizar',\n    'paete',\n    'pagodeiro',\n    'paixao',\n    'pajem',\n    'paludismo',\n    'pampas',\n    'panturrilha',\n    'papudo',\n    'paquistanes',\n    'pastoso',\n    'patua',\n    'paulo',\n    'pauzinhos',\n    'pavoroso',\n    'paxa',\n    'pazes',\n    'peao',\n    'pecuniario',\n    'pedunculo',\n    'pegaso',\n    'peixinho',\n    'pejorativo',\n    'pelvis',\n    'penuria',\n    'pequno',\n    'petunia',\n    'pezada',\n    'piauiense',\n    'pictorico',\n    'pierro',\n    'pigmeu',\n    'pijama',\n    'pilulas',\n    'pimpolho',\n    'pintura',\n    'piorar',\n    'pipocar',\n    'piqueteiro',\n    'pirulito',\n    'pistoleiro',\n    'pituitaria',\n    'pivotar',\n    'pixote',\n    'pizzaria',\n    'plistoceno',\n    'plotar',\n    'pluviometrico',\n    'pneumonico',\n    'poco',\n    'podridao',\n    'poetisa',\n    'pogrom',\n    'pois',\n    'polvorosa',\n    'pomposo',\n    'ponderado',\n    'pontudo',\n    'populoso',\n    'poquer',\n    'porvir',\n    'posudo',\n    'potro',\n    'pouso',\n    'povoar',\n    'prazo',\n    'prezar',\n    'privilegios',\n    'proximo',\n    'prussiano',\n    'pseudopode',\n    'psoriase',\n    'pterossauros',\n    'ptialina',\n    'ptolemaico',\n    'pudor',\n    'pueril',\n    'pufe',\n    'pugilista',\n    'puir',\n    'pujante',\n    'pulverizar',\n    'pumba',\n    'punk',\n    'purulento',\n    'pustula',\n    'putsch',\n    'puxe',\n    'quatrocentos',\n    'quetzal',\n    'quixotesco',\n    'quotizavel',\n    'rabujice',\n    'racista',\n    'radonio',\n    'rafia',\n    'ragu',\n    'rajado',\n    'ralo',\n    'rampeiro',\n    'ranzinza',\n    'raptor',\n    'raquitismo',\n    'raro',\n    'rasurar',\n    'ratoeira',\n    'ravioli',\n    'razoavel',\n    'reavivar',\n    'rebuscar',\n    'recusavel',\n    'reduzivel',\n    'reexposicao',\n    'refutavel',\n    'regurgitar',\n    'reivindicavel',\n    'rejuvenescimento',\n    'relva',\n    'remuneravel',\n    'renunciar',\n    'reorientar',\n    'repuxo',\n    'requisito',\n    'resumo',\n    'returno',\n    'reutilizar',\n    'revolvido',\n    'rezonear',\n    'riacho',\n    'ribossomo',\n    'ricota',\n    'ridiculo',\n    'rifle',\n    'rigoroso',\n    'rijo',\n    'rimel',\n    'rins',\n    'rios',\n    'riqueza',\n    'respeito',\n    'rissole',\n    'ritualistico',\n    'rivalizar',\n    'rixa',\n    'robusto',\n    'rococo',\n    'rodoviario',\n    'roer',\n    'rogo',\n    'rojao',\n    'rolo',\n    'rompimento',\n    'ronronar',\n    'roqueiro',\n    'rorqual',\n    'rosto',\n    'rotundo',\n    'rouxinol',\n    'roxo',\n    'royal',\n    'ruas',\n    'rucula',\n    'rudimentos',\n    'ruela',\n    'rufo',\n    'rugoso',\n    'ruivo',\n    'rule',\n    'rumoroso',\n    'runico',\n    'ruptura',\n    'rural',\n    'rustico',\n    'rutilar',\n    'saariano',\n    'sabujo',\n    'sacudir',\n    'sadomasoquista',\n    'safra',\n    'sagui',\n    'sais',\n    'samurai',\n    'santuario',\n    'sapo',\n    'saquear',\n    'sartriano',\n    'saturno',\n    'saude',\n    'sauva',\n    'saveiro',\n    'saxofonista',\n    'sazonal',\n    'scherzo',\n    'script',\n    'seara',\n    'seborreia',\n    'secura',\n    'seduzir',\n    'sefardim',\n    'seguro',\n    'seja',\n    'selvas',\n    'sempre',\n    'senzala',\n    'sepultura',\n    'sequoia',\n    'sestercio',\n    'setuplo',\n    'seus',\n    'seviciar',\n    'sezonismo',\n    'shalom',\n    'siames',\n    'sibilante',\n    'sicrano',\n    'sidra',\n    'sifilitico',\n    'signos',\n    'silvo',\n    'simultaneo',\n    'sinusite',\n    'sionista',\n    'sirio',\n    'sisudo',\n    'situar',\n    'sivan',\n    'slide',\n    'slogan',\n    'soar',\n    'sobrio',\n    'socratico',\n    'sodomizar',\n    'soerguer',\n    'software',\n    'sogro',\n    'soja',\n    'solver',\n    'somente',\n    'sonso',\n    'sopro',\n    'soquete',\n    'sorveteiro',\n    'sossego',\n    'soturno',\n    'sousafone',\n    'sovinice',\n    'sozinho',\n    'suavizar',\n    'subverter',\n    'sucursal',\n    'sudoriparo',\n    'sufragio',\n    'sugestoes',\n    'suite',\n    'sujo',\n    'sultao',\n    'sumula',\n    'suntuoso',\n    'suor',\n    'supurar',\n    'suruba',\n    'susto',\n    'suturar',\n    'suvenir',\n    'tabuleta',\n    'taco',\n    'tadjique',\n    'tafeta',\n    'tagarelice',\n    'taitiano',\n    'talvez',\n    'tampouco',\n    'tanzaniano',\n    'taoista',\n    'tapume',\n    'taquion',\n    'tarugo',\n    'tascar',\n    'tatuar',\n    'tautologico',\n    'tavola',\n    'taxionomista',\n    'tchecoslovaco',\n    'teatrologo',\n    'tectonismo',\n    'tedioso',\n    'teflon',\n    'tegumento',\n    'teixo',\n    'telurio',\n    'temporas',\n    'tenue',\n    'teosofico',\n    'tepido',\n    'tequila',\n    'terrorista',\n    'testosterona',\n    'tetrico',\n    'teutonico',\n    'teve',\n    'texugo',\n    'tiara',\n    'tibia',\n    'tiete',\n    'tifoide',\n    'tigresa',\n    'tijolo',\n    'tilintar',\n    'timpano',\n    'tintureiro',\n    'tiquete',\n    'tiroteio',\n    'tisico',\n    'titulos',\n    'tive',\n    'toar',\n    'toboga',\n    'tofu',\n    'togoles',\n    'toicinho',\n    'tolueno',\n    'tomografo',\n    'tontura',\n    'toponimo',\n    'toquio',\n    'torvelinho',\n    'tostar',\n    'toto',\n    'touro',\n    'toxina',\n    'trazer',\n    'trezentos',\n    'trivialidade',\n    'trovoar',\n    'truta',\n    'tuaregue',\n    'tubular',\n    'tucano',\n    'tudo',\n    'tufo',\n    'tuiste',\n    'tulipa',\n    'tumultuoso',\n    'tunisino',\n    'tupiniquim',\n    'turvo',\n    'tutu',\n    'ucraniano',\n    'udenista',\n    'ufanista',\n    'ufologo',\n    'ugaritico',\n    'uiste',\n    'uivo',\n    'ulceroso',\n    'ulema',\n    'ultravioleta',\n    'umbilical',\n    'umero',\n    'umido',\n    'umlaut',\n    'unanimidade',\n    'unesco',\n    'ungulado',\n    'unheiro',\n    'univoco',\n    'untuoso',\n    'urano',\n    'urbano',\n    'urdir',\n    'uretra',\n    'urgente',\n    'urinol',\n    'urna',\n    'urologo',\n    'urro',\n    'ursulina',\n    'urtiga',\n    'urupe',\n    'usavel',\n    'usbeque',\n    'usei',\n    'usineiro',\n    'usurpar',\n    'utero',\n    'utilizar',\n    'utopico',\n    'uvular',\n    'uxoricidio',\n    'vacuo',\n    'vadio',\n    'vaguear',\n    'vaivem',\n    'valvula',\n    'vampiro',\n    'vantajoso',\n    'vaporoso',\n    'vaquinha',\n    'varziano',\n    'vasto',\n    'vaticinio',\n    'vaudeville',\n    'vazio',\n    'veado',\n    'vedico',\n    'veemente',\n    'vegetativo',\n    'veio',\n    'veja',\n    'veludo',\n    'venusiano',\n    'verdade',\n    'verve',\n    'vestuario',\n    'vetusto',\n    'vexatorio',\n    'vezes',\n    'viavel',\n    'vibratorio',\n    'victor',\n    'vicunha',\n    'vidros',\n    'vietnamita',\n    'vigoroso',\n    'vilipendiar',\n    'vime',\n    'vintem',\n    'violoncelo',\n    'viquingue',\n    'virus',\n    'visualizar',\n    'vituperio',\n    'viuvo',\n    'vivo',\n    'vizir',\n    'voar',\n    'vociferar',\n    'vodu',\n    'vogar',\n    'voile',\n    'volver',\n    'vomito',\n    'vontade',\n    'vortice',\n    'vosso',\n    'voto',\n    'vovozinha',\n    'voyeuse',\n    'vozes',\n    'vulva',\n    'vupt',\n    'western',\n    'xadrez',\n    'xale',\n    'xampu',\n    'xango',\n    'xarope',\n    'xaual',\n    'xavante',\n    'xaxim',\n    'xenonio',\n    'xepa',\n    'xerox',\n    'xicara',\n    'xifopago',\n    'xiita',\n    'xilogravura',\n    'xinxim',\n    'xistoso',\n    'xixi',\n    'xodo',\n    'xogum',\n    'xucro',\n    'zabumba',\n    'zagueiro',\n    'zambiano',\n    'zanzar',\n    'zarpar',\n    'zebu',\n    'zefiro',\n    'zeloso',\n    'zenite',\n    'zumbi'\n];\n//# sourceMappingURL=portuguese.js.map","// SPDX-License-Identifier: MIT\nexport const WORDLIST = [\n    'абажур',\n    'абзац',\n    'абонент',\n    'абрикос',\n    'абсурд',\n    'авангард',\n    'август',\n    'авиация',\n    'авоська',\n    'автор',\n    'агат',\n    'агент',\n    'агитатор',\n    'агнец',\n    'агония',\n    'агрегат',\n    'адвокат',\n    'адмирал',\n    'адрес',\n    'ажиотаж',\n    'азарт',\n    'азбука',\n    'азот',\n    'аист',\n    'айсберг',\n    'академия',\n    'аквариум',\n    'аккорд',\n    'акробат',\n    'аксиома',\n    'актер',\n    'акула',\n    'акция',\n    'алгоритм',\n    'алебарда',\n    'аллея',\n    'алмаз',\n    'алтарь',\n    'алфавит',\n    'алхимик',\n    'алый',\n    'альбом',\n    'алюминий',\n    'амбар',\n    'аметист',\n    'амнезия',\n    'ампула',\n    'амфора',\n    'анализ',\n    'ангел',\n    'анекдот',\n    'анимация',\n    'анкета',\n    'аномалия',\n    'ансамбль',\n    'антенна',\n    'апатия',\n    'апельсин',\n    'апофеоз',\n    'аппарат',\n    'апрель',\n    'аптека',\n    'арабский',\n    'арбуз',\n    'аргумент',\n    'арест',\n    'ария',\n    'арка',\n    'армия',\n    'аромат',\n    'арсенал',\n    'артист',\n    'архив',\n    'аршин',\n    'асбест',\n    'аскетизм',\n    'аспект',\n    'ассорти',\n    'астроном',\n    'асфальт',\n    'атака',\n    'ателье',\n    'атлас',\n    'атом',\n    'атрибут',\n    'аудитор',\n    'аукцион',\n    'аура',\n    'афера',\n    'афиша',\n    'ахинея',\n    'ацетон',\n    'аэропорт',\n    'бабушка',\n    'багаж',\n    'бадья',\n    'база',\n    'баклажан',\n    'балкон',\n    'бампер',\n    'банк',\n    'барон',\n    'бассейн',\n    'батарея',\n    'бахрома',\n    'башня',\n    'баян',\n    'бегство',\n    'бедро',\n    'бездна',\n    'бекон',\n    'белый',\n    'бензин',\n    'берег',\n    'беседа',\n    'бетонный',\n    'биатлон',\n    'библия',\n    'бивень',\n    'бигуди',\n    'бидон',\n    'бизнес',\n    'бикини',\n    'билет',\n    'бинокль',\n    'биология',\n    'биржа',\n    'бисер',\n    'битва',\n    'бицепс',\n    'благо',\n    'бледный',\n    'близкий',\n    'блок',\n    'блуждать',\n    'блюдо',\n    'бляха',\n    'бобер',\n    'богатый',\n    'бодрый',\n    'боевой',\n    'бокал',\n    'большой',\n    'борьба',\n    'босой',\n    'ботинок',\n    'боцман',\n    'бочка',\n    'боярин',\n    'брать',\n    'бревно',\n    'бригада',\n    'бросать',\n    'брызги',\n    'брюки',\n    'бублик',\n    'бугор',\n    'будущее',\n    'буква',\n    'бульвар',\n    'бумага',\n    'бунт',\n    'бурный',\n    'бусы',\n    'бутылка',\n    'буфет',\n    'бухта',\n    'бушлат',\n    'бывалый',\n    'быль',\n    'быстрый',\n    'быть',\n    'бюджет',\n    'бюро',\n    'бюст',\n    'вагон',\n    'важный',\n    'ваза',\n    'вакцина',\n    'валюта',\n    'вампир',\n    'ванная',\n    'вариант',\n    'вассал',\n    'вата',\n    'вафля',\n    'вахта',\n    'вдова',\n    'вдыхать',\n    'ведущий',\n    'веер',\n    'вежливый',\n    'везти',\n    'веко',\n    'великий',\n    'вена',\n    'верить',\n    'веселый',\n    'ветер',\n    'вечер',\n    'вешать',\n    'вещь',\n    'веяние',\n    'взаимный',\n    'взбучка',\n    'взвод',\n    'взгляд',\n    'вздыхать',\n    'взлетать',\n    'взмах',\n    'взнос',\n    'взор',\n    'взрыв',\n    'взывать',\n    'взятка',\n    'вибрация',\n    'визит',\n    'вилка',\n    'вино',\n    'вирус',\n    'висеть',\n    'витрина',\n    'вихрь',\n    'вишневый',\n    'включать',\n    'вкус',\n    'власть',\n    'влечь',\n    'влияние',\n    'влюблять',\n    'внешний',\n    'внимание',\n    'внук',\n    'внятный',\n    'вода',\n    'воевать',\n    'вождь',\n    'воздух',\n    'войти',\n    'вокзал',\n    'волос',\n    'вопрос',\n    'ворота',\n    'восток',\n    'впадать',\n    'впускать',\n    'врач',\n    'время',\n    'вручать',\n    'всадник',\n    'всеобщий',\n    'вспышка',\n    'встреча',\n    'вторник',\n    'вулкан',\n    'вурдалак',\n    'входить',\n    'въезд',\n    'выбор',\n    'вывод',\n    'выгодный',\n    'выделять',\n    'выезжать',\n    'выживать',\n    'вызывать',\n    'выигрыш',\n    'вылезать',\n    'выносить',\n    'выпивать',\n    'высокий',\n    'выходить',\n    'вычет',\n    'вышка',\n    'выяснять',\n    'вязать',\n    'вялый',\n    'гавань',\n    'гадать',\n    'газета',\n    'гаишник',\n    'галстук',\n    'гамма',\n    'гарантия',\n    'гастроли',\n    'гвардия',\n    'гвоздь',\n    'гектар',\n    'гель',\n    'генерал',\n    'геолог',\n    'герой',\n    'гешефт',\n    'гибель',\n    'гигант',\n    'гильза',\n    'гимн',\n    'гипотеза',\n    'гитара',\n    'глаз',\n    'глина',\n    'глоток',\n    'глубокий',\n    'глыба',\n    'глядеть',\n    'гнать',\n    'гнев',\n    'гнить',\n    'гном',\n    'гнуть',\n    'говорить',\n    'годовой',\n    'голова',\n    'гонка',\n    'город',\n    'гость',\n    'готовый',\n    'граница',\n    'грех',\n    'гриб',\n    'громкий',\n    'группа',\n    'грызть',\n    'грязный',\n    'губа',\n    'гудеть',\n    'гулять',\n    'гуманный',\n    'густой',\n    'гуща',\n    'давать',\n    'далекий',\n    'дама',\n    'данные',\n    'дарить',\n    'дать',\n    'дача',\n    'дверь',\n    'движение',\n    'двор',\n    'дебют',\n    'девушка',\n    'дедушка',\n    'дежурный',\n    'дезертир',\n    'действие',\n    'декабрь',\n    'дело',\n    'демократ',\n    'день',\n    'депутат',\n    'держать',\n    'десяток',\n    'детский',\n    'дефицит',\n    'дешевый',\n    'деятель',\n    'джаз',\n    'джинсы',\n    'джунгли',\n    'диалог',\n    'диван',\n    'диета',\n    'дизайн',\n    'дикий',\n    'динамика',\n    'диплом',\n    'директор',\n    'диск',\n    'дитя',\n    'дичь',\n    'длинный',\n    'дневник',\n    'добрый',\n    'доверие',\n    'договор',\n    'дождь',\n    'доза',\n    'документ',\n    'должен',\n    'домашний',\n    'допрос',\n    'дорога',\n    'доход',\n    'доцент',\n    'дочь',\n    'дощатый',\n    'драка',\n    'древний',\n    'дрожать',\n    'друг',\n    'дрянь',\n    'дубовый',\n    'дуга',\n    'дудка',\n    'дукат',\n    'дуло',\n    'думать',\n    'дупло',\n    'дурак',\n    'дуть',\n    'духи',\n    'душа',\n    'дуэт',\n    'дымить',\n    'дыня',\n    'дыра',\n    'дыханье',\n    'дышать',\n    'дьявол',\n    'дюжина',\n    'дюйм',\n    'дюна',\n    'дядя',\n    'дятел',\n    'егерь',\n    'единый',\n    'едкий',\n    'ежевика',\n    'ежик',\n    'езда',\n    'елка',\n    'емкость',\n    'ерунда',\n    'ехать',\n    'жадный',\n    'жажда',\n    'жалеть',\n    'жанр',\n    'жара',\n    'жать',\n    'жгучий',\n    'ждать',\n    'жевать',\n    'желание',\n    'жемчуг',\n    'женщина',\n    'жертва',\n    'жесткий',\n    'жечь',\n    'живой',\n    'жидкость',\n    'жизнь',\n    'жилье',\n    'жирный',\n    'житель',\n    'журнал',\n    'жюри',\n    'забывать',\n    'завод',\n    'загадка',\n    'задача',\n    'зажечь',\n    'зайти',\n    'закон',\n    'замечать',\n    'занимать',\n    'западный',\n    'зарплата',\n    'засыпать',\n    'затрата',\n    'захват',\n    'зацепка',\n    'зачет',\n    'защита',\n    'заявка',\n    'звать',\n    'звезда',\n    'звонить',\n    'звук',\n    'здание',\n    'здешний',\n    'здоровье',\n    'зебра',\n    'зевать',\n    'зеленый',\n    'земля',\n    'зенит',\n    'зеркало',\n    'зефир',\n    'зигзаг',\n    'зима',\n    'зиять',\n    'злак',\n    'злой',\n    'змея',\n    'знать',\n    'зной',\n    'зодчий',\n    'золотой',\n    'зомби',\n    'зона',\n    'зоопарк',\n    'зоркий',\n    'зрачок',\n    'зрение',\n    'зритель',\n    'зубной',\n    'зыбкий',\n    'зять',\n    'игла',\n    'иголка',\n    'играть',\n    'идея',\n    'идиот',\n    'идол',\n    'идти',\n    'иерархия',\n    'избрать',\n    'известие',\n    'изгонять',\n    'издание',\n    'излагать',\n    'изменять',\n    'износ',\n    'изоляция',\n    'изрядный',\n    'изучать',\n    'изымать',\n    'изящный',\n    'икона',\n    'икра',\n    'иллюзия',\n    'имбирь',\n    'иметь',\n    'имидж',\n    'иммунный',\n    'империя',\n    'инвестор',\n    'индивид',\n    'инерция',\n    'инженер',\n    'иномарка',\n    'институт',\n    'интерес',\n    'инфекция',\n    'инцидент',\n    'ипподром',\n    'ирис',\n    'ирония',\n    'искать',\n    'история',\n    'исходить',\n    'исчезать',\n    'итог',\n    'июль',\n    'июнь',\n    'кабинет',\n    'кавалер',\n    'кадр',\n    'казарма',\n    'кайф',\n    'кактус',\n    'калитка',\n    'камень',\n    'канал',\n    'капитан',\n    'картина',\n    'касса',\n    'катер',\n    'кафе',\n    'качество',\n    'каша',\n    'каюта',\n    'квартира',\n    'квинтет',\n    'квота',\n    'кедр',\n    'кекс',\n    'кенгуру',\n    'кепка',\n    'керосин',\n    'кетчуп',\n    'кефир',\n    'кибитка',\n    'кивнуть',\n    'кидать',\n    'километр',\n    'кино',\n    'киоск',\n    'кипеть',\n    'кирпич',\n    'кисть',\n    'китаец',\n    'класс',\n    'клетка',\n    'клиент',\n    'клоун',\n    'клуб',\n    'клык',\n    'ключ',\n    'клятва',\n    'книга',\n    'кнопка',\n    'кнут',\n    'князь',\n    'кобура',\n    'ковер',\n    'коготь',\n    'кодекс',\n    'кожа',\n    'козел',\n    'койка',\n    'коктейль',\n    'колено',\n    'компания',\n    'конец',\n    'копейка',\n    'короткий',\n    'костюм',\n    'котел',\n    'кофе',\n    'кошка',\n    'красный',\n    'кресло',\n    'кричать',\n    'кровь',\n    'крупный',\n    'крыша',\n    'крючок',\n    'кубок',\n    'кувшин',\n    'кудрявый',\n    'кузов',\n    'кукла',\n    'культура',\n    'кумир',\n    'купить',\n    'курс',\n    'кусок',\n    'кухня',\n    'куча',\n    'кушать',\n    'кювет',\n    'лабиринт',\n    'лавка',\n    'лагерь',\n    'ладонь',\n    'лазерный',\n    'лайнер',\n    'лакей',\n    'лампа',\n    'ландшафт',\n    'лапа',\n    'ларек',\n    'ласковый',\n    'лауреат',\n    'лачуга',\n    'лаять',\n    'лгать',\n    'лебедь',\n    'левый',\n    'легкий',\n    'ледяной',\n    'лежать',\n    'лекция',\n    'лента',\n    'лепесток',\n    'лесной',\n    'лето',\n    'лечь',\n    'леший',\n    'лживый',\n    'либерал',\n    'ливень',\n    'лига',\n    'лидер',\n    'ликовать',\n    'лиловый',\n    'лимон',\n    'линия',\n    'липа',\n    'лирика',\n    'лист',\n    'литр',\n    'лифт',\n    'лихой',\n    'лицо',\n    'личный',\n    'лишний',\n    'лобовой',\n    'ловить',\n    'логика',\n    'лодка',\n    'ложка',\n    'лозунг',\n    'локоть',\n    'ломать',\n    'лоно',\n    'лопата',\n    'лорд',\n    'лось',\n    'лоток',\n    'лохматый',\n    'лошадь',\n    'лужа',\n    'лукавый',\n    'луна',\n    'лупить',\n    'лучший',\n    'лыжный',\n    'лысый',\n    'львиный',\n    'льгота',\n    'льдина',\n    'любить',\n    'людской',\n    'люстра',\n    'лютый',\n    'лягушка',\n    'магазин',\n    'мадам',\n    'мазать',\n    'майор',\n    'максимум',\n    'мальчик',\n    'манера',\n    'март',\n    'масса',\n    'мать',\n    'мафия',\n    'махать',\n    'мачта',\n    'машина',\n    'маэстро',\n    'маяк',\n    'мгла',\n    'мебель',\n    'медведь',\n    'мелкий',\n    'мемуары',\n    'менять',\n    'мера',\n    'место',\n    'метод',\n    'механизм',\n    'мечтать',\n    'мешать',\n    'миграция',\n    'мизинец',\n    'микрофон',\n    'миллион',\n    'минута',\n    'мировой',\n    'миссия',\n    'митинг',\n    'мишень',\n    'младший',\n    'мнение',\n    'мнимый',\n    'могила',\n    'модель',\n    'мозг',\n    'мойка',\n    'мокрый',\n    'молодой',\n    'момент',\n    'монах',\n    'море',\n    'мост',\n    'мотор',\n    'мохнатый',\n    'мочь',\n    'мошенник',\n    'мощный',\n    'мрачный',\n    'мстить',\n    'мудрый',\n    'мужчина',\n    'музыка',\n    'мука',\n    'мумия',\n    'мундир',\n    'муравей',\n    'мусор',\n    'мутный',\n    'муфта',\n    'муха',\n    'мучить',\n    'мушкетер',\n    'мыло',\n    'мысль',\n    'мыть',\n    'мычать',\n    'мышь',\n    'мэтр',\n    'мюзикл',\n    'мягкий',\n    'мякиш',\n    'мясо',\n    'мятый',\n    'мячик',\n    'набор',\n    'навык',\n    'нагрузка',\n    'надежда',\n    'наемный',\n    'нажать',\n    'называть',\n    'наивный',\n    'накрыть',\n    'налог',\n    'намерен',\n    'наносить',\n    'написать',\n    'народ',\n    'натура',\n    'наука',\n    'нация',\n    'начать',\n    'небо',\n    'невеста',\n    'негодяй',\n    'неделя',\n    'нежный',\n    'незнание',\n    'нелепый',\n    'немалый',\n    'неправда',\n    'нервный',\n    'нести',\n    'нефть',\n    'нехватка',\n    'нечистый',\n    'неясный',\n    'нива',\n    'нижний',\n    'низкий',\n    'никель',\n    'нирвана',\n    'нить',\n    'ничья',\n    'ниша',\n    'нищий',\n    'новый',\n    'нога',\n    'ножницы',\n    'ноздря',\n    'ноль',\n    'номер',\n    'норма',\n    'нота',\n    'ночь',\n    'ноша',\n    'ноябрь',\n    'нрав',\n    'нужный',\n    'нутро',\n    'нынешний',\n    'нырнуть',\n    'ныть',\n    'нюанс',\n    'нюхать',\n    'няня',\n    'оазис',\n    'обаяние',\n    'обвинять',\n    'обгонять',\n    'обещать',\n    'обжигать',\n    'обзор',\n    'обида',\n    'область',\n    'обмен',\n    'обнимать',\n    'оборона',\n    'образ',\n    'обучение',\n    'обходить',\n    'обширный',\n    'общий',\n    'объект',\n    'обычный',\n    'обязать',\n    'овальный',\n    'овес',\n    'овощи',\n    'овраг',\n    'овца',\n    'овчарка',\n    'огненный',\n    'огонь',\n    'огромный',\n    'огурец',\n    'одежда',\n    'одинокий',\n    'одобрить',\n    'ожидать',\n    'ожог',\n    'озарение',\n    'озеро',\n    'означать',\n    'оказать',\n    'океан',\n    'оклад',\n    'окно',\n    'округ',\n    'октябрь',\n    'окурок',\n    'олень',\n    'опасный',\n    'операция',\n    'описать',\n    'оплата',\n    'опора',\n    'оппонент',\n    'опрос',\n    'оптимизм',\n    'опускать',\n    'опыт',\n    'орать',\n    'орбита',\n    'орган',\n    'орден',\n    'орел',\n    'оригинал',\n    'оркестр',\n    'орнамент',\n    'оружие',\n    'осадок',\n    'освещать',\n    'осень',\n    'осина',\n    'осколок',\n    'осмотр',\n    'основной',\n    'особый',\n    'осуждать',\n    'отбор',\n    'отвечать',\n    'отдать',\n    'отец',\n    'отзыв',\n    'открытие',\n    'отмечать',\n    'относить',\n    'отпуск',\n    'отрасль',\n    'отставка',\n    'оттенок',\n    'отходить',\n    'отчет',\n    'отъезд',\n    'офицер',\n    'охапка',\n    'охота',\n    'охрана',\n    'оценка',\n    'очаг',\n    'очередь',\n    'очищать',\n    'очки',\n    'ошейник',\n    'ошибка',\n    'ощущение',\n    'павильон',\n    'падать',\n    'паек',\n    'пакет',\n    'палец',\n    'память',\n    'панель',\n    'папка',\n    'партия',\n    'паспорт',\n    'патрон',\n    'пауза',\n    'пафос',\n    'пахнуть',\n    'пациент',\n    'пачка',\n    'пашня',\n    'певец',\n    'педагог',\n    'пейзаж',\n    'пельмень',\n    'пенсия',\n    'пепел',\n    'период',\n    'песня',\n    'петля',\n    'пехота',\n    'печать',\n    'пешеход',\n    'пещера',\n    'пианист',\n    'пиво',\n    'пиджак',\n    'пиковый',\n    'пилот',\n    'пионер',\n    'пирог',\n    'писать',\n    'пить',\n    'пицца',\n    'пишущий',\n    'пища',\n    'план',\n    'плечо',\n    'плита',\n    'плохой',\n    'плыть',\n    'плюс',\n    'пляж',\n    'победа',\n    'повод',\n    'погода',\n    'подумать',\n    'поехать',\n    'пожимать',\n    'позиция',\n    'поиск',\n    'покой',\n    'получать',\n    'помнить',\n    'пони',\n    'поощрять',\n    'попадать',\n    'порядок',\n    'пост',\n    'поток',\n    'похожий',\n    'поцелуй',\n    'почва',\n    'пощечина',\n    'поэт',\n    'пояснить',\n    'право',\n    'предмет',\n    'проблема',\n    'пруд',\n    'прыгать',\n    'прямой',\n    'психолог',\n    'птица',\n    'публика',\n    'пугать',\n    'пудра',\n    'пузырь',\n    'пуля',\n    'пункт',\n    'пурга',\n    'пустой',\n    'путь',\n    'пухлый',\n    'пучок',\n    'пушистый',\n    'пчела',\n    'пшеница',\n    'пыль',\n    'пытка',\n    'пыхтеть',\n    'пышный',\n    'пьеса',\n    'пьяный',\n    'пятно',\n    'работа',\n    'равный',\n    'радость',\n    'развитие',\n    'район',\n    'ракета',\n    'рамка',\n    'ранний',\n    'рапорт',\n    'рассказ',\n    'раунд',\n    'рация',\n    'рвать',\n    'реальный',\n    'ребенок',\n    'реветь',\n    'регион',\n    'редакция',\n    'реестр',\n    'режим',\n    'резкий',\n    'рейтинг',\n    'река',\n    'религия',\n    'ремонт',\n    'рента',\n    'реплика',\n    'ресурс',\n    'реформа',\n    'рецепт',\n    'речь',\n    'решение',\n    'ржавый',\n    'рисунок',\n    'ритм',\n    'рифма',\n    'робкий',\n    'ровный',\n    'рогатый',\n    'родитель',\n    'рождение',\n    'розовый',\n    'роковой',\n    'роль',\n    'роман',\n    'ронять',\n    'рост',\n    'рота',\n    'роща',\n    'рояль',\n    'рубль',\n    'ругать',\n    'руда',\n    'ружье',\n    'руины',\n    'рука',\n    'руль',\n    'румяный',\n    'русский',\n    'ручка',\n    'рыба',\n    'рывок',\n    'рыдать',\n    'рыжий',\n    'рынок',\n    'рысь',\n    'рыть',\n    'рыхлый',\n    'рыцарь',\n    'рычаг',\n    'рюкзак',\n    'рюмка',\n    'рябой',\n    'рядовой',\n    'сабля',\n    'садовый',\n    'сажать',\n    'салон',\n    'самолет',\n    'сани',\n    'сапог',\n    'сарай',\n    'сатира',\n    'сауна',\n    'сахар',\n    'сбегать',\n    'сбивать',\n    'сбор',\n    'сбыт',\n    'свадьба',\n    'свет',\n    'свидание',\n    'свобода',\n    'связь',\n    'сгорать',\n    'сдвигать',\n    'сеанс',\n    'северный',\n    'сегмент',\n    'седой',\n    'сезон',\n    'сейф',\n    'секунда',\n    'сельский',\n    'семья',\n    'сентябрь',\n    'сердце',\n    'сеть',\n    'сечение',\n    'сеять',\n    'сигнал',\n    'сидеть',\n    'сизый',\n    'сила',\n    'символ',\n    'синий',\n    'сирота',\n    'система',\n    'ситуация',\n    'сиять',\n    'сказать',\n    'скважина',\n    'скелет',\n    'скидка',\n    'склад',\n    'скорый',\n    'скрывать',\n    'скучный',\n    'слава',\n    'слеза',\n    'слияние',\n    'слово',\n    'случай',\n    'слышать',\n    'слюна',\n    'смех',\n    'смирение',\n    'смотреть',\n    'смутный',\n    'смысл',\n    'смятение',\n    'снаряд',\n    'снег',\n    'снижение',\n    'сносить',\n    'снять',\n    'событие',\n    'совет',\n    'согласие',\n    'сожалеть',\n    'сойти',\n    'сокол',\n    'солнце',\n    'сомнение',\n    'сонный',\n    'сообщать',\n    'соперник',\n    'сорт',\n    'состав',\n    'сотня',\n    'соус',\n    'социолог',\n    'сочинять',\n    'союз',\n    'спать',\n    'спешить',\n    'спина',\n    'сплошной',\n    'способ',\n    'спутник',\n    'средство',\n    'срок',\n    'срывать',\n    'стать',\n    'ствол',\n    'стена',\n    'стихи',\n    'сторона',\n    'страна',\n    'студент',\n    'стыд',\n    'субъект',\n    'сувенир',\n    'сугроб',\n    'судьба',\n    'суета',\n    'суждение',\n    'сукно',\n    'сулить',\n    'сумма',\n    'сунуть',\n    'супруг',\n    'суровый',\n    'сустав',\n    'суть',\n    'сухой',\n    'суша',\n    'существо',\n    'сфера',\n    'схема',\n    'сцена',\n    'счастье',\n    'счет',\n    'считать',\n    'сшивать',\n    'съезд',\n    'сынок',\n    'сыпать',\n    'сырье',\n    'сытый',\n    'сыщик',\n    'сюжет',\n    'сюрприз',\n    'таблица',\n    'таежный',\n    'таинство',\n    'тайна',\n    'такси',\n    'талант',\n    'таможня',\n    'танец',\n    'тарелка',\n    'таскать',\n    'тахта',\n    'тачка',\n    'таять',\n    'тварь',\n    'твердый',\n    'творить',\n    'театр',\n    'тезис',\n    'текст',\n    'тело',\n    'тема',\n    'тень',\n    'теория',\n    'теплый',\n    'терять',\n    'тесный',\n    'тетя',\n    'техника',\n    'течение',\n    'тигр',\n    'типичный',\n    'тираж',\n    'титул',\n    'тихий',\n    'тишина',\n    'ткань',\n    'товарищ',\n    'толпа',\n    'тонкий',\n    'топливо',\n    'торговля',\n    'тоска',\n    'точка',\n    'тощий',\n    'традиция',\n    'тревога',\n    'трибуна',\n    'трогать',\n    'труд',\n    'трюк',\n    'тряпка',\n    'туалет',\n    'тугой',\n    'туловище',\n    'туман',\n    'тундра',\n    'тупой',\n    'турнир',\n    'тусклый',\n    'туфля',\n    'туча',\n    'туша',\n    'тыкать',\n    'тысяча',\n    'тьма',\n    'тюльпан',\n    'тюрьма',\n    'тяга',\n    'тяжелый',\n    'тянуть',\n    'убеждать',\n    'убирать',\n    'убогий',\n    'убыток',\n    'уважение',\n    'уверять',\n    'увлекать',\n    'угнать',\n    'угол',\n    'угроза',\n    'удар',\n    'удивлять',\n    'удобный',\n    'уезд',\n    'ужас',\n    'ужин',\n    'узел',\n    'узкий',\n    'узнавать',\n    'узор',\n    'уйма',\n    'уклон',\n    'укол',\n    'уксус',\n    'улетать',\n    'улица',\n    'улучшать',\n    'улыбка',\n    'уметь',\n    'умиление',\n    'умный',\n    'умолять',\n    'умысел',\n    'унижать',\n    'уносить',\n    'уныние',\n    'упасть',\n    'уплата',\n    'упор',\n    'упрекать',\n    'упускать',\n    'уран',\n    'урна',\n    'уровень',\n    'усадьба',\n    'усердие',\n    'усилие',\n    'ускорять',\n    'условие',\n    'усмешка',\n    'уснуть',\n    'успеть',\n    'усыпать',\n    'утешать',\n    'утка',\n    'уточнять',\n    'утро',\n    'утюг',\n    'уходить',\n    'уцелеть',\n    'участие',\n    'ученый',\n    'учитель',\n    'ушко',\n    'ущерб',\n    'уютный',\n    'уяснять',\n    'фабрика',\n    'фаворит',\n    'фаза',\n    'файл',\n    'факт',\n    'фамилия',\n    'фантазия',\n    'фара',\n    'фасад',\n    'февраль',\n    'фельдшер',\n    'феномен',\n    'ферма',\n    'фигура',\n    'физика',\n    'фильм',\n    'финал',\n    'фирма',\n    'фишка',\n    'флаг',\n    'флейта',\n    'флот',\n    'фокус',\n    'фольклор',\n    'фонд',\n    'форма',\n    'фото',\n    'фраза',\n    'фреска',\n    'фронт',\n    'фрукт',\n    'функция',\n    'фуражка',\n    'футбол',\n    'фыркать',\n    'халат',\n    'хамство',\n    'хаос',\n    'характер',\n    'хата',\n    'хватать',\n    'хвост',\n    'хижина',\n    'хилый',\n    'химия',\n    'хирург',\n    'хитрый',\n    'хищник',\n    'хлам',\n    'хлеб',\n    'хлопать',\n    'хмурый',\n    'ходить',\n    'хозяин',\n    'хоккей',\n    'холодный',\n    'хороший',\n    'хотеть',\n    'хохотать',\n    'храм',\n    'хрен',\n    'хриплый',\n    'хроника',\n    'хрупкий',\n    'художник',\n    'хулиган',\n    'хутор',\n    'царь',\n    'цвет',\n    'цель',\n    'цемент',\n    'центр',\n    'цепь',\n    'церковь',\n    'цикл',\n    'цилиндр',\n    'циничный',\n    'цирк',\n    'цистерна',\n    'цитата',\n    'цифра',\n    'цыпленок',\n    'чадо',\n    'чайник',\n    'часть',\n    'чашка',\n    'человек',\n    'чемодан',\n    'чепуха',\n    'черный',\n    'честь',\n    'четкий',\n    'чехол',\n    'чиновник',\n    'число',\n    'читать',\n    'членство',\n    'чреватый',\n    'чтение',\n    'чувство',\n    'чугунный',\n    'чудо',\n    'чужой',\n    'чукча',\n    'чулок',\n    'чума',\n    'чуткий',\n    'чучело',\n    'чушь',\n    'шаблон',\n    'шагать',\n    'шайка',\n    'шакал',\n    'шалаш',\n    'шампунь',\n    'шанс',\n    'шапка',\n    'шарик',\n    'шасси',\n    'шатер',\n    'шахта',\n    'шашлык',\n    'швейный',\n    'швырять',\n    'шевелить',\n    'шедевр',\n    'шейка',\n    'шелковый',\n    'шептать',\n    'шерсть',\n    'шестерка',\n    'шикарный',\n    'шинель',\n    'шипеть',\n    'широкий',\n    'шить',\n    'шишка',\n    'шкаф',\n    'школа',\n    'шкура',\n    'шланг',\n    'шлем',\n    'шлюпка',\n    'шляпа',\n    'шнур',\n    'шоколад',\n    'шорох',\n    'шоссе',\n    'шофер',\n    'шпага',\n    'шпион',\n    'шприц',\n    'шрам',\n    'шрифт',\n    'штаб',\n    'штора',\n    'штраф',\n    'штука',\n    'штык',\n    'шуба',\n    'шуметь',\n    'шуршать',\n    'шутка',\n    'щадить',\n    'щедрый',\n    'щека',\n    'щель',\n    'щенок',\n    'щепка',\n    'щетка',\n    'щука',\n    'эволюция',\n    'эгоизм',\n    'экзамен',\n    'экипаж',\n    'экономия',\n    'экран',\n    'эксперт',\n    'элемент',\n    'элита',\n    'эмблема',\n    'эмигрант',\n    'эмоция',\n    'энергия',\n    'эпизод',\n    'эпоха',\n    'эскиз',\n    'эссе',\n    'эстрада',\n    'этап',\n    'этика',\n    'этюд',\n    'эфир',\n    'эффект',\n    'эшелон',\n    'юбилей',\n    'юбка',\n    'южный',\n    'юмор',\n    'юноша',\n    'юрист',\n    'яблоко',\n    'явление',\n    'ягода',\n    'ядерный',\n    'ядовитый',\n    'ядро',\n    'язва',\n    'язык',\n    'яйцо',\n    'якорь',\n    'январь',\n    'японец',\n    'яркий',\n    'ярмарка',\n    'ярость',\n    'ярус',\n    'ясный',\n    'яхта',\n    'ячейка',\n    'ящик'\n];\n//# sourceMappingURL=russian.js.map","// SPDX-License-Identifier: MIT\nexport const WORDLIST = [\n    'ábaco',\n    'abdomen',\n    'abeja',\n    'abierto',\n    'abogado',\n    'abono',\n    'aborto',\n    'abrazo',\n    'abrir',\n    'abuelo',\n    'abuso',\n    'acabar',\n    'academia',\n    'acceso',\n    'acción',\n    'aceite',\n    'acelga',\n    'acento',\n    'aceptar',\n    'ácido',\n    'aclarar',\n    'acné',\n    'acoger',\n    'acoso',\n    'activo',\n    'acto',\n    'actriz',\n    'actuar',\n    'acudir',\n    'acuerdo',\n    'acusar',\n    'adicto',\n    'admitir',\n    'adoptar',\n    'adorno',\n    'aduana',\n    'adulto',\n    'aéreo',\n    'afectar',\n    'afición',\n    'afinar',\n    'afirmar',\n    'ágil',\n    'agitar',\n    'agonía',\n    'agosto',\n    'agotar',\n    'agregar',\n    'agrio',\n    'agua',\n    'agudo',\n    'águila',\n    'aguja',\n    'ahogo',\n    'ahorro',\n    'aire',\n    'aislar',\n    'ajedrez',\n    'ajeno',\n    'ajuste',\n    'alacrán',\n    'alambre',\n    'alarma',\n    'alba',\n    'álbum',\n    'alcalde',\n    'aldea',\n    'alegre',\n    'alejar',\n    'alerta',\n    'aleta',\n    'alfiler',\n    'alga',\n    'algodón',\n    'aliado',\n    'aliento',\n    'alivio',\n    'alma',\n    'almeja',\n    'almíbar',\n    'altar',\n    'alteza',\n    'altivo',\n    'alto',\n    'altura',\n    'alumno',\n    'alzar',\n    'amable',\n    'amante',\n    'amapola',\n    'amargo',\n    'amasar',\n    'ámbar',\n    'ámbito',\n    'ameno',\n    'amigo',\n    'amistad',\n    'amor',\n    'amparo',\n    'amplio',\n    'ancho',\n    'anciano',\n    'ancla',\n    'andar',\n    'andén',\n    'anemia',\n    'ángulo',\n    'anillo',\n    'ánimo',\n    'anís',\n    'anotar',\n    'antena',\n    'antiguo',\n    'antojo',\n    'anual',\n    'anular',\n    'anuncio',\n    'añadir',\n    'añejo',\n    'año',\n    'apagar',\n    'aparato',\n    'apetito',\n    'apio',\n    'aplicar',\n    'apodo',\n    'aporte',\n    'apoyo',\n    'aprender',\n    'aprobar',\n    'apuesta',\n    'apuro',\n    'arado',\n    'araña',\n    'arar',\n    'árbitro',\n    'árbol',\n    'arbusto',\n    'archivo',\n    'arco',\n    'arder',\n    'ardilla',\n    'arduo',\n    'área',\n    'árido',\n    'aries',\n    'armonía',\n    'arnés',\n    'aroma',\n    'arpa',\n    'arpón',\n    'arreglo',\n    'arroz',\n    'arruga',\n    'arte',\n    'artista',\n    'asa',\n    'asado',\n    'asalto',\n    'ascenso',\n    'asegurar',\n    'aseo',\n    'asesor',\n    'asiento',\n    'asilo',\n    'asistir',\n    'asno',\n    'asombro',\n    'áspero',\n    'astilla',\n    'astro',\n    'astuto',\n    'asumir',\n    'asunto',\n    'atajo',\n    'ataque',\n    'atar',\n    'atento',\n    'ateo',\n    'ático',\n    'atleta',\n    'átomo',\n    'atraer',\n    'atroz',\n    'atún',\n    'audaz',\n    'audio',\n    'auge',\n    'aula',\n    'aumento',\n    'ausente',\n    'autor',\n    'aval',\n    'avance',\n    'avaro',\n    'ave',\n    'avellana',\n    'avena',\n    'avestruz',\n    'avión',\n    'aviso',\n    'ayer',\n    'ayuda',\n    'ayuno',\n    'azafrán',\n    'azar',\n    'azote',\n    'azúcar',\n    'azufre',\n    'azul',\n    'baba',\n    'babor',\n    'bache',\n    'bahía',\n    'baile',\n    'bajar',\n    'balanza',\n    'balcón',\n    'balde',\n    'bambú',\n    'banco',\n    'banda',\n    'baño',\n    'barba',\n    'barco',\n    'barniz',\n    'barro',\n    'báscula',\n    'bastón',\n    'basura',\n    'batalla',\n    'batería',\n    'batir',\n    'batuta',\n    'baúl',\n    'bazar',\n    'bebé',\n    'bebida',\n    'bello',\n    'besar',\n    'beso',\n    'bestia',\n    'bicho',\n    'bien',\n    'bingo',\n    'blanco',\n    'bloque',\n    'blusa',\n    'boa',\n    'bobina',\n    'bobo',\n    'boca',\n    'bocina',\n    'boda',\n    'bodega',\n    'boina',\n    'bola',\n    'bolero',\n    'bolsa',\n    'bomba',\n    'bondad',\n    'bonito',\n    'bono',\n    'bonsái',\n    'borde',\n    'borrar',\n    'bosque',\n    'bote',\n    'botín',\n    'bóveda',\n    'bozal',\n    'bravo',\n    'brazo',\n    'brecha',\n    'breve',\n    'brillo',\n    'brinco',\n    'brisa',\n    'broca',\n    'broma',\n    'bronce',\n    'brote',\n    'bruja',\n    'brusco',\n    'bruto',\n    'buceo',\n    'bucle',\n    'bueno',\n    'buey',\n    'bufanda',\n    'bufón',\n    'búho',\n    'buitre',\n    'bulto',\n    'burbuja',\n    'burla',\n    'burro',\n    'buscar',\n    'butaca',\n    'buzón',\n    'caballo',\n    'cabeza',\n    'cabina',\n    'cabra',\n    'cacao',\n    'cadáver',\n    'cadena',\n    'caer',\n    'café',\n    'caída',\n    'caimán',\n    'caja',\n    'cajón',\n    'cal',\n    'calamar',\n    'calcio',\n    'caldo',\n    'calidad',\n    'calle',\n    'calma',\n    'calor',\n    'calvo',\n    'cama',\n    'cambio',\n    'camello',\n    'camino',\n    'campo',\n    'cáncer',\n    'candil',\n    'canela',\n    'canguro',\n    'canica',\n    'canto',\n    'caña',\n    'cañón',\n    'caoba',\n    'caos',\n    'capaz',\n    'capitán',\n    'capote',\n    'captar',\n    'capucha',\n    'cara',\n    'carbón',\n    'cárcel',\n    'careta',\n    'carga',\n    'cariño',\n    'carne',\n    'carpeta',\n    'carro',\n    'carta',\n    'casa',\n    'casco',\n    'casero',\n    'caspa',\n    'castor',\n    'catorce',\n    'catre',\n    'caudal',\n    'causa',\n    'cazo',\n    'cebolla',\n    'ceder',\n    'cedro',\n    'celda',\n    'célebre',\n    'celoso',\n    'célula',\n    'cemento',\n    'ceniza',\n    'centro',\n    'cerca',\n    'cerdo',\n    'cereza',\n    'cero',\n    'cerrar',\n    'certeza',\n    'césped',\n    'cetro',\n    'chacal',\n    'chaleco',\n    'champú',\n    'chancla',\n    'chapa',\n    'charla',\n    'chico',\n    'chiste',\n    'chivo',\n    'choque',\n    'choza',\n    'chuleta',\n    'chupar',\n    'ciclón',\n    'ciego',\n    'cielo',\n    'cien',\n    'cierto',\n    'cifra',\n    'cigarro',\n    'cima',\n    'cinco',\n    'cine',\n    'cinta',\n    'ciprés',\n    'circo',\n    'ciruela',\n    'cisne',\n    'cita',\n    'ciudad',\n    'clamor',\n    'clan',\n    'claro',\n    'clase',\n    'clave',\n    'cliente',\n    'clima',\n    'clínica',\n    'cobre',\n    'cocción',\n    'cochino',\n    'cocina',\n    'coco',\n    'código',\n    'codo',\n    'cofre',\n    'coger',\n    'cohete',\n    'cojín',\n    'cojo',\n    'cola',\n    'colcha',\n    'colegio',\n    'colgar',\n    'colina',\n    'collar',\n    'colmo',\n    'columna',\n    'combate',\n    'comer',\n    'comida',\n    'cómodo',\n    'compra',\n    'conde',\n    'conejo',\n    'conga',\n    'conocer',\n    'consejo',\n    'contar',\n    'copa',\n    'copia',\n    'corazón',\n    'corbata',\n    'corcho',\n    'cordón',\n    'corona',\n    'correr',\n    'coser',\n    'cosmos',\n    'costa',\n    'cráneo',\n    'cráter',\n    'crear',\n    'crecer',\n    'creído',\n    'crema',\n    'cría',\n    'crimen',\n    'cripta',\n    'crisis',\n    'cromo',\n    'crónica',\n    'croqueta',\n    'crudo',\n    'cruz',\n    'cuadro',\n    'cuarto',\n    'cuatro',\n    'cubo',\n    'cubrir',\n    'cuchara',\n    'cuello',\n    'cuento',\n    'cuerda',\n    'cuesta',\n    'cueva',\n    'cuidar',\n    'culebra',\n    'culpa',\n    'culto',\n    'cumbre',\n    'cumplir',\n    'cuna',\n    'cuneta',\n    'cuota',\n    'cupón',\n    'cúpula',\n    'curar',\n    'curioso',\n    'curso',\n    'curva',\n    'cutis',\n    'dama',\n    'danza',\n    'dar',\n    'dardo',\n    'dátil',\n    'deber',\n    'débil',\n    'década',\n    'decir',\n    'dedo',\n    'defensa',\n    'definir',\n    'dejar',\n    'delfín',\n    'delgado',\n    'delito',\n    'demora',\n    'denso',\n    'dental',\n    'deporte',\n    'derecho',\n    'derrota',\n    'desayuno',\n    'deseo',\n    'desfile',\n    'desnudo',\n    'destino',\n    'desvío',\n    'detalle',\n    'detener',\n    'deuda',\n    'día',\n    'diablo',\n    'diadema',\n    'diamante',\n    'diana',\n    'diario',\n    'dibujo',\n    'dictar',\n    'diente',\n    'dieta',\n    'diez',\n    'difícil',\n    'digno',\n    'dilema',\n    'diluir',\n    'dinero',\n    'directo',\n    'dirigir',\n    'disco',\n    'diseño',\n    'disfraz',\n    'diva',\n    'divino',\n    'doble',\n    'doce',\n    'dolor',\n    'domingo',\n    'don',\n    'donar',\n    'dorado',\n    'dormir',\n    'dorso',\n    'dos',\n    'dosis',\n    'dragón',\n    'droga',\n    'ducha',\n    'duda',\n    'duelo',\n    'dueño',\n    'dulce',\n    'dúo',\n    'duque',\n    'durar',\n    'dureza',\n    'duro',\n    'ébano',\n    'ebrio',\n    'echar',\n    'eco',\n    'ecuador',\n    'edad',\n    'edición',\n    'edificio',\n    'editor',\n    'educar',\n    'efecto',\n    'eficaz',\n    'eje',\n    'ejemplo',\n    'elefante',\n    'elegir',\n    'elemento',\n    'elevar',\n    'elipse',\n    'élite',\n    'elixir',\n    'elogio',\n    'eludir',\n    'embudo',\n    'emitir',\n    'emoción',\n    'empate',\n    'empeño',\n    'empleo',\n    'empresa',\n    'enano',\n    'encargo',\n    'enchufe',\n    'encía',\n    'enemigo',\n    'enero',\n    'enfado',\n    'enfermo',\n    'engaño',\n    'enigma',\n    'enlace',\n    'enorme',\n    'enredo',\n    'ensayo',\n    'enseñar',\n    'entero',\n    'entrar',\n    'envase',\n    'envío',\n    'época',\n    'equipo',\n    'erizo',\n    'escala',\n    'escena',\n    'escolar',\n    'escribir',\n    'escudo',\n    'esencia',\n    'esfera',\n    'esfuerzo',\n    'espada',\n    'espejo',\n    'espía',\n    'esposa',\n    'espuma',\n    'esquí',\n    'estar',\n    'este',\n    'estilo',\n    'estufa',\n    'etapa',\n    'eterno',\n    'ética',\n    'etnia',\n    'evadir',\n    'evaluar',\n    'evento',\n    'evitar',\n    'exacto',\n    'examen',\n    'exceso',\n    'excusa',\n    'exento',\n    'exigir',\n    'exilio',\n    'existir',\n    'éxito',\n    'experto',\n    'explicar',\n    'exponer',\n    'extremo',\n    'fábrica',\n    'fábula',\n    'fachada',\n    'fácil',\n    'factor',\n    'faena',\n    'faja',\n    'falda',\n    'fallo',\n    'falso',\n    'faltar',\n    'fama',\n    'familia',\n    'famoso',\n    'faraón',\n    'farmacia',\n    'farol',\n    'farsa',\n    'fase',\n    'fatiga',\n    'fauna',\n    'favor',\n    'fax',\n    'febrero',\n    'fecha',\n    'feliz',\n    'feo',\n    'feria',\n    'feroz',\n    'fértil',\n    'fervor',\n    'festín',\n    'fiable',\n    'fianza',\n    'fiar',\n    'fibra',\n    'ficción',\n    'ficha',\n    'fideo',\n    'fiebre',\n    'fiel',\n    'fiera',\n    'fiesta',\n    'figura',\n    'fijar',\n    'fijo',\n    'fila',\n    'filete',\n    'filial',\n    'filtro',\n    'fin',\n    'finca',\n    'fingir',\n    'finito',\n    'firma',\n    'flaco',\n    'flauta',\n    'flecha',\n    'flor',\n    'flota',\n    'fluir',\n    'flujo',\n    'flúor',\n    'fobia',\n    'foca',\n    'fogata',\n    'fogón',\n    'folio',\n    'folleto',\n    'fondo',\n    'forma',\n    'forro',\n    'fortuna',\n    'forzar',\n    'fosa',\n    'foto',\n    'fracaso',\n    'frágil',\n    'franja',\n    'frase',\n    'fraude',\n    'freír',\n    'freno',\n    'fresa',\n    'frío',\n    'frito',\n    'fruta',\n    'fuego',\n    'fuente',\n    'fuerza',\n    'fuga',\n    'fumar',\n    'función',\n    'funda',\n    'furgón',\n    'furia',\n    'fusil',\n    'fútbol',\n    'futuro',\n    'gacela',\n    'gafas',\n    'gaita',\n    'gajo',\n    'gala',\n    'galería',\n    'gallo',\n    'gamba',\n    'ganar',\n    'gancho',\n    'ganga',\n    'ganso',\n    'garaje',\n    'garza',\n    'gasolina',\n    'gastar',\n    'gato',\n    'gavilán',\n    'gemelo',\n    'gemir',\n    'gen',\n    'género',\n    'genio',\n    'gente',\n    'geranio',\n    'gerente',\n    'germen',\n    'gesto',\n    'gigante',\n    'gimnasio',\n    'girar',\n    'giro',\n    'glaciar',\n    'globo',\n    'gloria',\n    'gol',\n    'golfo',\n    'goloso',\n    'golpe',\n    'goma',\n    'gordo',\n    'gorila',\n    'gorra',\n    'gota',\n    'goteo',\n    'gozar',\n    'grada',\n    'gráfico',\n    'grano',\n    'grasa',\n    'gratis',\n    'grave',\n    'grieta',\n    'grillo',\n    'gripe',\n    'gris',\n    'grito',\n    'grosor',\n    'grúa',\n    'grueso',\n    'grumo',\n    'grupo',\n    'guante',\n    'guapo',\n    'guardia',\n    'guerra',\n    'guía',\n    'guiño',\n    'guion',\n    'guiso',\n    'guitarra',\n    'gusano',\n    'gustar',\n    'haber',\n    'hábil',\n    'hablar',\n    'hacer',\n    'hacha',\n    'hada',\n    'hallar',\n    'hamaca',\n    'harina',\n    'haz',\n    'hazaña',\n    'hebilla',\n    'hebra',\n    'hecho',\n    'helado',\n    'helio',\n    'hembra',\n    'herir',\n    'hermano',\n    'héroe',\n    'hervir',\n    'hielo',\n    'hierro',\n    'hígado',\n    'higiene',\n    'hijo',\n    'himno',\n    'historia',\n    'hocico',\n    'hogar',\n    'hoguera',\n    'hoja',\n    'hombre',\n    'hongo',\n    'honor',\n    'honra',\n    'hora',\n    'hormiga',\n    'horno',\n    'hostil',\n    'hoyo',\n    'hueco',\n    'huelga',\n    'huerta',\n    'hueso',\n    'huevo',\n    'huida',\n    'huir',\n    'humano',\n    'húmedo',\n    'humilde',\n    'humo',\n    'hundir',\n    'huracán',\n    'hurto',\n    'icono',\n    'ideal',\n    'idioma',\n    'ídolo',\n    'iglesia',\n    'iglú',\n    'igual',\n    'ilegal',\n    'ilusión',\n    'imagen',\n    'imán',\n    'imitar',\n    'impar',\n    'imperio',\n    'imponer',\n    'impulso',\n    'incapaz',\n    'índice',\n    'inerte',\n    'infiel',\n    'informe',\n    'ingenio',\n    'inicio',\n    'inmenso',\n    'inmune',\n    'innato',\n    'insecto',\n    'instante',\n    'interés',\n    'íntimo',\n    'intuir',\n    'inútil',\n    'invierno',\n    'ira',\n    'iris',\n    'ironía',\n    'isla',\n    'islote',\n    'jabalí',\n    'jabón',\n    'jamón',\n    'jarabe',\n    'jardín',\n    'jarra',\n    'jaula',\n    'jazmín',\n    'jefe',\n    'jeringa',\n    'jinete',\n    'jornada',\n    'joroba',\n    'joven',\n    'joya',\n    'juerga',\n    'jueves',\n    'juez',\n    'jugador',\n    'jugo',\n    'juguete',\n    'juicio',\n    'junco',\n    'jungla',\n    'junio',\n    'juntar',\n    'júpiter',\n    'jurar',\n    'justo',\n    'juvenil',\n    'juzgar',\n    'kilo',\n    'koala',\n    'labio',\n    'lacio',\n    'lacra',\n    'lado',\n    'ladrón',\n    'lagarto',\n    'lágrima',\n    'laguna',\n    'laico',\n    'lamer',\n    'lámina',\n    'lámpara',\n    'lana',\n    'lancha',\n    'langosta',\n    'lanza',\n    'lápiz',\n    'largo',\n    'larva',\n    'lástima',\n    'lata',\n    'látex',\n    'latir',\n    'laurel',\n    'lavar',\n    'lazo',\n    'leal',\n    'lección',\n    'leche',\n    'lector',\n    'leer',\n    'legión',\n    'legumbre',\n    'lejano',\n    'lengua',\n    'lento',\n    'leña',\n    'león',\n    'leopardo',\n    'lesión',\n    'letal',\n    'letra',\n    'leve',\n    'leyenda',\n    'libertad',\n    'libro',\n    'licor',\n    'líder',\n    'lidiar',\n    'lienzo',\n    'liga',\n    'ligero',\n    'lima',\n    'límite',\n    'limón',\n    'limpio',\n    'lince',\n    'lindo',\n    'línea',\n    'lingote',\n    'lino',\n    'linterna',\n    'líquido',\n    'liso',\n    'lista',\n    'litera',\n    'litio',\n    'litro',\n    'llaga',\n    'llama',\n    'llanto',\n    'llave',\n    'llegar',\n    'llenar',\n    'llevar',\n    'llorar',\n    'llover',\n    'lluvia',\n    'lobo',\n    'loción',\n    'loco',\n    'locura',\n    'lógica',\n    'logro',\n    'lombriz',\n    'lomo',\n    'lonja',\n    'lote',\n    'lucha',\n    'lucir',\n    'lugar',\n    'lujo',\n    'luna',\n    'lunes',\n    'lupa',\n    'lustro',\n    'luto',\n    'luz',\n    'maceta',\n    'macho',\n    'madera',\n    'madre',\n    'maduro',\n    'maestro',\n    'mafia',\n    'magia',\n    'mago',\n    'maíz',\n    'maldad',\n    'maleta',\n    'malla',\n    'malo',\n    'mamá',\n    'mambo',\n    'mamut',\n    'manco',\n    'mando',\n    'manejar',\n    'manga',\n    'maniquí',\n    'manjar',\n    'mano',\n    'manso',\n    'manta',\n    'mañana',\n    'mapa',\n    'máquina',\n    'mar',\n    'marco',\n    'marea',\n    'marfil',\n    'margen',\n    'marido',\n    'mármol',\n    'marrón',\n    'martes',\n    'marzo',\n    'masa',\n    'máscara',\n    'masivo',\n    'matar',\n    'materia',\n    'matiz',\n    'matriz',\n    'máximo',\n    'mayor',\n    'mazorca',\n    'mecha',\n    'medalla',\n    'medio',\n    'médula',\n    'mejilla',\n    'mejor',\n    'melena',\n    'melón',\n    'memoria',\n    'menor',\n    'mensaje',\n    'mente',\n    'menú',\n    'mercado',\n    'merengue',\n    'mérito',\n    'mes',\n    'mesón',\n    'meta',\n    'meter',\n    'método',\n    'metro',\n    'mezcla',\n    'miedo',\n    'miel',\n    'miembro',\n    'miga',\n    'mil',\n    'milagro',\n    'militar',\n    'millón',\n    'mimo',\n    'mina',\n    'minero',\n    'mínimo',\n    'minuto',\n    'miope',\n    'mirar',\n    'misa',\n    'miseria',\n    'misil',\n    'mismo',\n    'mitad',\n    'mito',\n    'mochila',\n    'moción',\n    'moda',\n    'modelo',\n    'moho',\n    'mojar',\n    'molde',\n    'moler',\n    'molino',\n    'momento',\n    'momia',\n    'monarca',\n    'moneda',\n    'monja',\n    'monto',\n    'moño',\n    'morada',\n    'morder',\n    'moreno',\n    'morir',\n    'morro',\n    'morsa',\n    'mortal',\n    'mosca',\n    'mostrar',\n    'motivo',\n    'mover',\n    'móvil',\n    'mozo',\n    'mucho',\n    'mudar',\n    'mueble',\n    'muela',\n    'muerte',\n    'muestra',\n    'mugre',\n    'mujer',\n    'mula',\n    'muleta',\n    'multa',\n    'mundo',\n    'muñeca',\n    'mural',\n    'muro',\n    'músculo',\n    'museo',\n    'musgo',\n    'música',\n    'muslo',\n    'nácar',\n    'nación',\n    'nadar',\n    'naipe',\n    'naranja',\n    'nariz',\n    'narrar',\n    'nasal',\n    'natal',\n    'nativo',\n    'natural',\n    'náusea',\n    'naval',\n    'nave',\n    'navidad',\n    'necio',\n    'néctar',\n    'negar',\n    'negocio',\n    'negro',\n    'neón',\n    'nervio',\n    'neto',\n    'neutro',\n    'nevar',\n    'nevera',\n    'nicho',\n    'nido',\n    'niebla',\n    'nieto',\n    'niñez',\n    'niño',\n    'nítido',\n    'nivel',\n    'nobleza',\n    'noche',\n    'nómina',\n    'noria',\n    'norma',\n    'norte',\n    'nota',\n    'noticia',\n    'novato',\n    'novela',\n    'novio',\n    'nube',\n    'nuca',\n    'núcleo',\n    'nudillo',\n    'nudo',\n    'nuera',\n    'nueve',\n    'nuez',\n    'nulo',\n    'número',\n    'nutria',\n    'oasis',\n    'obeso',\n    'obispo',\n    'objeto',\n    'obra',\n    'obrero',\n    'observar',\n    'obtener',\n    'obvio',\n    'oca',\n    'ocaso',\n    'océano',\n    'ochenta',\n    'ocho',\n    'ocio',\n    'ocre',\n    'octavo',\n    'octubre',\n    'oculto',\n    'ocupar',\n    'ocurrir',\n    'odiar',\n    'odio',\n    'odisea',\n    'oeste',\n    'ofensa',\n    'oferta',\n    'oficio',\n    'ofrecer',\n    'ogro',\n    'oído',\n    'oír',\n    'ojo',\n    'ola',\n    'oleada',\n    'olfato',\n    'olivo',\n    'olla',\n    'olmo',\n    'olor',\n    'olvido',\n    'ombligo',\n    'onda',\n    'onza',\n    'opaco',\n    'opción',\n    'ópera',\n    'opinar',\n    'oponer',\n    'optar',\n    'óptica',\n    'opuesto',\n    'oración',\n    'orador',\n    'oral',\n    'órbita',\n    'orca',\n    'orden',\n    'oreja',\n    'órgano',\n    'orgía',\n    'orgullo',\n    'oriente',\n    'origen',\n    'orilla',\n    'oro',\n    'orquesta',\n    'oruga',\n    'osadía',\n    'oscuro',\n    'osezno',\n    'oso',\n    'ostra',\n    'otoño',\n    'otro',\n    'oveja',\n    'óvulo',\n    'óxido',\n    'oxígeno',\n    'oyente',\n    'ozono',\n    'pacto',\n    'padre',\n    'paella',\n    'página',\n    'pago',\n    'país',\n    'pájaro',\n    'palabra',\n    'palco',\n    'paleta',\n    'pálido',\n    'palma',\n    'paloma',\n    'palpar',\n    'pan',\n    'panal',\n    'pánico',\n    'pantera',\n    'pañuelo',\n    'papá',\n    'papel',\n    'papilla',\n    'paquete',\n    'parar',\n    'parcela',\n    'pared',\n    'parir',\n    'paro',\n    'párpado',\n    'parque',\n    'párrafo',\n    'parte',\n    'pasar',\n    'paseo',\n    'pasión',\n    'paso',\n    'pasta',\n    'pata',\n    'patio',\n    'patria',\n    'pausa',\n    'pauta',\n    'pavo',\n    'payaso',\n    'peatón',\n    'pecado',\n    'pecera',\n    'pecho',\n    'pedal',\n    'pedir',\n    'pegar',\n    'peine',\n    'pelar',\n    'peldaño',\n    'pelea',\n    'peligro',\n    'pellejo',\n    'pelo',\n    'peluca',\n    'pena',\n    'pensar',\n    'peñón',\n    'peón',\n    'peor',\n    'pepino',\n    'pequeño',\n    'pera',\n    'percha',\n    'perder',\n    'pereza',\n    'perfil',\n    'perico',\n    'perla',\n    'permiso',\n    'perro',\n    'persona',\n    'pesa',\n    'pesca',\n    'pésimo',\n    'pestaña',\n    'pétalo',\n    'petróleo',\n    'pez',\n    'pezuña',\n    'picar',\n    'pichón',\n    'pie',\n    'piedra',\n    'pierna',\n    'pieza',\n    'pijama',\n    'pilar',\n    'piloto',\n    'pimienta',\n    'pino',\n    'pintor',\n    'pinza',\n    'piña',\n    'piojo',\n    'pipa',\n    'pirata',\n    'pisar',\n    'piscina',\n    'piso',\n    'pista',\n    'pitón',\n    'pizca',\n    'placa',\n    'plan',\n    'plata',\n    'playa',\n    'plaza',\n    'pleito',\n    'pleno',\n    'plomo',\n    'pluma',\n    'plural',\n    'pobre',\n    'poco',\n    'poder',\n    'podio',\n    'poema',\n    'poesía',\n    'poeta',\n    'polen',\n    'policía',\n    'pollo',\n    'polvo',\n    'pomada',\n    'pomelo',\n    'pomo',\n    'pompa',\n    'poner',\n    'porción',\n    'portal',\n    'posada',\n    'poseer',\n    'posible',\n    'poste',\n    'potencia',\n    'potro',\n    'pozo',\n    'prado',\n    'precoz',\n    'pregunta',\n    'premio',\n    'prensa',\n    'preso',\n    'previo',\n    'primo',\n    'príncipe',\n    'prisión',\n    'privar',\n    'proa',\n    'probar',\n    'proceso',\n    'producto',\n    'proeza',\n    'profesor',\n    'programa',\n    'prole',\n    'promesa',\n    'pronto',\n    'propio',\n    'próximo',\n    'prueba',\n    'público',\n    'puchero',\n    'pudor',\n    'pueblo',\n    'puerta',\n    'puesto',\n    'pulga',\n    'pulir',\n    'pulmón',\n    'pulpo',\n    'pulso',\n    'puma',\n    'punto',\n    'puñal',\n    'puño',\n    'pupa',\n    'pupila',\n    'puré',\n    'quedar',\n    'queja',\n    'quemar',\n    'querer',\n    'queso',\n    'quieto',\n    'química',\n    'quince',\n    'quitar',\n    'rábano',\n    'rabia',\n    'rabo',\n    'ración',\n    'radical',\n    'raíz',\n    'rama',\n    'rampa',\n    'rancho',\n    'rango',\n    'rapaz',\n    'rápido',\n    'rapto',\n    'rasgo',\n    'raspa',\n    'rato',\n    'rayo',\n    'raza',\n    'razón',\n    'reacción',\n    'realidad',\n    'rebaño',\n    'rebote',\n    'recaer',\n    'receta',\n    'rechazo',\n    'recoger',\n    'recreo',\n    'recto',\n    'recurso',\n    'red',\n    'redondo',\n    'reducir',\n    'reflejo',\n    'reforma',\n    'refrán',\n    'refugio',\n    'regalo',\n    'regir',\n    'regla',\n    'regreso',\n    'rehén',\n    'reino',\n    'reír',\n    'reja',\n    'relato',\n    'relevo',\n    'relieve',\n    'relleno',\n    'reloj',\n    'remar',\n    'remedio',\n    'remo',\n    'rencor',\n    'rendir',\n    'renta',\n    'reparto',\n    'repetir',\n    'reposo',\n    'reptil',\n    'res',\n    'rescate',\n    'resina',\n    'respeto',\n    'resto',\n    'resumen',\n    'retiro',\n    'retorno',\n    'retrato',\n    'reunir',\n    'revés',\n    'revista',\n    'rey',\n    'rezar',\n    'rico',\n    'riego',\n    'rienda',\n    'riesgo',\n    'rifa',\n    'rígido',\n    'rigor',\n    'rincón',\n    'riñón',\n    'río',\n    'riqueza',\n    'risa',\n    'ritmo',\n    'rito'\n];\n//# sourceMappingURL=spanish.js.map","// SPDX-License-Identifier: MIT\nimport { Mnemonic } from '../mnemonic';\nimport { MoneroEntropy, MONERO_ENTROPY_STRENGTHS } from '../../entropies';\nimport { crc32 } from '../../crypto';\nimport { hexToBytes, bytesToHex, bytesToInteger, bytesChunkToWords, wordsToBytesChunk, getBytes, concatBytes } from '../../utils';\nimport { MnemonicError, EntropyError, ChecksumError } from '../../exceptions';\nimport { MONERO_CHINESE_SIMPLIFIED_WORDLIST, MONERO_DUTCH_WORDLIST, MONERO_ENGLISH_WORDLIST, MONERO_FRENCH_WORDLIST, MONERO_GERMAN_WORDLIST, MONERO_ITALIAN_WORDLIST, MONERO_JAPANESE_WORDLIST, MONERO_PORTUGUESE_WORDLIST, MONERO_RUSSIAN_WORDLIST, MONERO_SPANISH_WORDLIST } from './wordlists';\nexport const MONERO_MNEMONIC_WORDS = {\n    TWELVE: 12,\n    THIRTEEN: 13,\n    TWENTY_FOUR: 24,\n    TWENTY_FIVE: 25,\n};\nexport const MONERO_MNEMONIC_LANGUAGES = {\n    CHINESE_SIMPLIFIED: 'chinese-simplified',\n    DUTCH: 'dutch',\n    ENGLISH: 'english',\n    FRENCH: 'french',\n    GERMAN: 'german',\n    ITALIAN: 'italian',\n    JAPANESE: 'japanese',\n    PORTUGUESE: 'portuguese',\n    RUSSIAN: 'russian',\n    SPANISH: 'spanish',\n};\nexport class MoneroMnemonic extends Mnemonic {\n    static wordBitLength = 11;\n    static wordsList = [\n        MONERO_MNEMONIC_WORDS.TWELVE,\n        MONERO_MNEMONIC_WORDS.THIRTEEN,\n        MONERO_MNEMONIC_WORDS.TWENTY_FOUR,\n        MONERO_MNEMONIC_WORDS.TWENTY_FIVE\n    ];\n    static wordsToStrength = {\n        12: MONERO_ENTROPY_STRENGTHS.ONE_HUNDRED_TWENTY_EIGHT,\n        13: MONERO_ENTROPY_STRENGTHS.ONE_HUNDRED_TWENTY_EIGHT,\n        24: MONERO_ENTROPY_STRENGTHS.TWO_HUNDRED_FIFTY_SIX,\n        25: MONERO_ENTROPY_STRENGTHS.TWO_HUNDRED_FIFTY_SIX\n    };\n    static checksumWordCounts = [\n        MONERO_MNEMONIC_WORDS.THIRTEEN,\n        MONERO_MNEMONIC_WORDS.TWENTY_FIVE\n    ];\n    static languages = Object.values(MONERO_MNEMONIC_LANGUAGES);\n    static languageUniquePrefixLengths = {\n        [MONERO_MNEMONIC_LANGUAGES.CHINESE_SIMPLIFIED]: 1,\n        [MONERO_MNEMONIC_LANGUAGES.DUTCH]: 4,\n        [MONERO_MNEMONIC_LANGUAGES.ENGLISH]: 3,\n        [MONERO_MNEMONIC_LANGUAGES.FRENCH]: 4,\n        [MONERO_MNEMONIC_LANGUAGES.GERMAN]: 4,\n        [MONERO_MNEMONIC_LANGUAGES.ITALIAN]: 4,\n        [MONERO_MNEMONIC_LANGUAGES.JAPANESE]: 4,\n        [MONERO_MNEMONIC_LANGUAGES.PORTUGUESE]: 4,\n        [MONERO_MNEMONIC_LANGUAGES.RUSSIAN]: 4,\n        [MONERO_MNEMONIC_LANGUAGES.SPANISH]: 4,\n    };\n    static wordLists = {\n        [MONERO_MNEMONIC_LANGUAGES.CHINESE_SIMPLIFIED]: MONERO_CHINESE_SIMPLIFIED_WORDLIST,\n        [MONERO_MNEMONIC_LANGUAGES.DUTCH]: MONERO_DUTCH_WORDLIST,\n        [MONERO_MNEMONIC_LANGUAGES.ENGLISH]: MONERO_ENGLISH_WORDLIST,\n        [MONERO_MNEMONIC_LANGUAGES.FRENCH]: MONERO_FRENCH_WORDLIST,\n        [MONERO_MNEMONIC_LANGUAGES.GERMAN]: MONERO_GERMAN_WORDLIST,\n        [MONERO_MNEMONIC_LANGUAGES.ITALIAN]: MONERO_ITALIAN_WORDLIST,\n        [MONERO_MNEMONIC_LANGUAGES.JAPANESE]: MONERO_JAPANESE_WORDLIST,\n        [MONERO_MNEMONIC_LANGUAGES.PORTUGUESE]: MONERO_PORTUGUESE_WORDLIST,\n        [MONERO_MNEMONIC_LANGUAGES.RUSSIAN]: MONERO_RUSSIAN_WORDLIST,\n        [MONERO_MNEMONIC_LANGUAGES.SPANISH]: MONERO_SPANISH_WORDLIST\n    };\n    static getName() {\n        return 'Monero';\n    }\n    static fromWords(count, language, options = {}) {\n        if (!this.wordsList.includes(count)) {\n            throw new MnemonicError('Invalid word count', { expected: this.wordsList, got: count });\n        }\n        if (this.checksumWordCounts.includes(count) && !options.checksum) {\n            options = { ...options, checksum: true };\n        }\n        const strength = this.wordsToStrength[count];\n        const entropyBytes = MoneroEntropy.generate(strength);\n        return this.encode(entropyBytes, language, options);\n    }\n    static fromEntropy(entropy, language, options = {}) {\n        let raw;\n        if (typeof entropy === 'string') {\n            raw = hexToBytes(entropy);\n        }\n        else if (entropy instanceof Uint8Array) {\n            raw = entropy;\n        }\n        else {\n            raw = hexToBytes(entropy.getEntropy());\n        }\n        return this.encode(raw, language, options);\n    }\n    static encode(entropy, language, options = {}) {\n        const entropyBytes = getBytes(entropy);\n        if (!MoneroEntropy.isValidBytesStrength(entropyBytes.length)) {\n            throw new EntropyError('Wrong entropy strength', { expected: MoneroEntropy.strengths, got: entropyBytes.length * 8 });\n        }\n        const rawList = this.getWordsListByLanguage(language, this.wordLists);\n        const wordList = this.normalize(rawList);\n        if (wordList.length !== 1626) {\n            throw new Error(`Expected 1626 words in list for '${language}', got ${wordList.length}`);\n        }\n        const mnemonic = [];\n        for (let i = 0; i < entropyBytes.length; i += 4) {\n            const chunk = entropyBytes.slice(i, i + 4);\n            mnemonic.push(...bytesChunkToWords(chunk, wordList, 'little'));\n        }\n        if (options.checksum) {\n            const prefixLen = this.languageUniquePrefixLengths[language];\n            const prefixes = mnemonic.map(w => w.slice(0, prefixLen)).join('');\n            const lenBig = BigInt(mnemonic.length);\n            const idxBig = bytesToInteger(crc32(prefixes)) % lenBig;\n            const idx = Number(idxBig);\n            mnemonic.push(mnemonic[idx]);\n        }\n        return this.normalize(mnemonic).join(' ');\n    }\n    static decode(input, options = {}) {\n        const words = this.normalize(input);\n        const count = words.length;\n        if (!this.wordsList.includes(count)) {\n            throw new MnemonicError('Invalid word count', { expected: this.wordsList, got: count });\n        }\n        const [wordsList, language] = this.findLanguage(words, this.wordLists);\n        if (wordsList.length !== 1626) {\n            throw new Error(`Expected 1626 words in list for '${language}', got ${wordsList.length}`);\n        }\n        const phraseWords = [...words];\n        if (this.checksumWordCounts.includes(count)) {\n            const last = phraseWords.pop();\n            const prefixLen = this.languageUniquePrefixLengths[language];\n            const prefixes = phraseWords.map(w => w.slice(0, prefixLen)).join('');\n            const lenBig = BigInt(phraseWords.length);\n            const idxBig = bytesToInteger(crc32(prefixes)) % lenBig;\n            const idx = Number(idxBig);\n            const expected = phraseWords[idx];\n            if (last !== expected) {\n                throw new ChecksumError('Invalid checksum', { expected, got: last });\n            }\n        }\n        const buffers = [];\n        for (let i = 0; i < phraseWords.length; i += 3) {\n            const [w1, w2, w3] = phraseWords.slice(i, i + 3);\n            const chunk = wordsToBytesChunk(w1, w2, w3, wordsList, 'little');\n            buffers.push(getBytes(chunk));\n        }\n        return bytesToHex(concatBytes(...buffers), false);\n    }\n    static normalize(input) {\n        const arr = typeof input === 'string' ? input.trim().split(/\\s+/) : input;\n        return arr.map(w => w.normalize('NFKD').toLowerCase());\n    }\n}\n//# sourceMappingURL=mnemonic.js.map","// SPDX-License-Identifier: MIT\nimport { Mnemonic } from './mnemonic';\nimport { AlgorandMnemonic, ALGORAND_MNEMONIC_WORDS, ALGORAND_MNEMONIC_LANGUAGES } from './algorand/mnemonic';\nimport { BIP39Mnemonic, BIP39_MNEMONIC_WORDS, BIP39_MNEMONIC_LANGUAGES } from './bip39/mnemonic';\nimport { ElectrumV1Mnemonic, ELECTRUM_V1_MNEMONIC_WORDS, ELECTRUM_V1_MNEMONIC_LANGUAGES } from './electrum/v1/mnemonic';\nimport { ElectrumV2Mnemonic, ELECTRUM_V2_MNEMONIC_WORDS, ELECTRUM_V2_MNEMONIC_LANGUAGES, ELECTRUM_V2_MNEMONIC_TYPES } from './electrum/v2/mnemonic';\nimport { MoneroMnemonic, MONERO_MNEMONIC_WORDS, MONERO_MNEMONIC_LANGUAGES } from './monero/mnemonic';\nimport { MnemonicError } from '../exceptions';\nexport class MNEMONICS {\n    static dictionary = {\n        [AlgorandMnemonic.getName()]: AlgorandMnemonic,\n        [BIP39Mnemonic.getName()]: BIP39Mnemonic,\n        [ElectrumV1Mnemonic.getName()]: ElectrumV1Mnemonic,\n        [ElectrumV2Mnemonic.getName()]: ElectrumV2Mnemonic,\n        [MoneroMnemonic.getName()]: MoneroMnemonic\n    };\n    static getNames() {\n        return Object.keys(this.dictionary);\n    }\n    static getClasses() {\n        return Object.values(this.dictionary);\n    }\n    static getMnemonicClass(name) {\n        if (!this.isMnemonic(name)) {\n            throw new MnemonicError('Invalid Mnemonic name', { expected: this.getNames(), got: name });\n        }\n        return this.dictionary[name];\n    }\n    static isMnemonic(name) {\n        return this.getNames().includes(name);\n    }\n}\nexport { Mnemonic, AlgorandMnemonic, ALGORAND_MNEMONIC_WORDS, ALGORAND_MNEMONIC_LANGUAGES, BIP39Mnemonic, BIP39_MNEMONIC_WORDS, BIP39_MNEMONIC_LANGUAGES, ElectrumV1Mnemonic, ELECTRUM_V1_MNEMONIC_WORDS, ELECTRUM_V1_MNEMONIC_LANGUAGES, ElectrumV2Mnemonic, ELECTRUM_V2_MNEMONIC_WORDS, ELECTRUM_V2_MNEMONIC_LANGUAGES, ELECTRUM_V2_MNEMONIC_TYPES, MoneroMnemonic, MONERO_MNEMONIC_WORDS, MONERO_MNEMONIC_LANGUAGES };\n//# sourceMappingURL=index.js.map","// SPDX-License-Identifier: MIT\nexport class Seed {\n    seed;\n    options;\n    constructor(seed, options = {}) {\n        this.seed = seed;\n        this.options = options;\n    }\n    static getName() {\n        throw new Error(\"Must override getName()\");\n    }\n    getName() {\n        return this.constructor.getName();\n    }\n    getSeed() {\n        return this.seed;\n    }\n    static fromMnemonic(mnemonic, options = {}) {\n        throw new Error(\"Must override fromMnemonic()\");\n    }\n}\n//# sourceMappingURL=seed.js.map","// SPDX-License-Identifier: MIT\nimport { Seed } from './seed';\nimport { AlgorandMnemonic } from '../mnemonics';\nimport { MnemonicError } from '../exceptions';\nexport class AlgorandSeed extends Seed {\n    static getName() {\n        return 'Algorand';\n    }\n    static fromMnemonic(mnemonic) {\n        const phrase = typeof mnemonic === 'string' ? mnemonic : mnemonic.getMnemonic();\n        if (!AlgorandMnemonic.isValid(phrase)) {\n            throw new MnemonicError(`Invalid ${this.getName()} mnemonic words`);\n        }\n        return AlgorandMnemonic.decode(phrase);\n    }\n}\n//# sourceMappingURL=algorand.js.map","// SPDX-License-Identifier: MIT\nimport { Seed } from './seed';\nimport { BIP39Mnemonic } from '../mnemonics';\nimport { pbkdf2HmacSha512 } from '../crypto';\nimport { bytesToString } from '../utils';\nimport { MnemonicError } from '../exceptions';\nexport class BIP39Seed extends Seed {\n    static seedSaltModifier = 'mnemonic';\n    static seedPbkdf2Rounds = 2048;\n    static getName() {\n        return 'BIP39';\n    }\n    static fromMnemonic(mnemonic, options = {}) {\n        const phrase = typeof mnemonic === 'string' ? mnemonic : mnemonic.getMnemonic();\n        if (!BIP39Mnemonic.isValid(phrase)) {\n            throw new MnemonicError(`Invalid ${this.getName()} mnemonic words`);\n        }\n        const saltBase = this.seedSaltModifier + (options.passphrase ?? '');\n        const salt = saltBase.normalize('NFKD');\n        const seedBytes = pbkdf2HmacSha512(phrase, salt, this.seedPbkdf2Rounds);\n        return bytesToString(seedBytes);\n    }\n}\n//# sourceMappingURL=bip39.js.map","const f={POS_INT:0,NEG_INT:1,BYTE_STRING:2,UTF8_STRING:3,ARRAY:4,MAP:5,TAG:6,SIMPLE_FLOAT:7},I={DATE_STRING:0,DATE_EPOCH:1,POS_BIGINT:2,NEG_BIGINT:3,DECIMAL_FRAC:4,BIGFLOAT:5,BASE64URL_EXPECTED:21,BASE64_EXPECTED:22,BASE16_EXPECTED:23,CBOR:24,URI:32,BASE64URL:33,BASE64:34,MIME:36,SET:258,JSON:262,WTF8:273,REGEXP:21066,SELF_DESCRIBED:55799,INVALID_16:65535,INVALID_32:4294967295,INVALID_64:0xffffffffffffffffn},o={ZERO:0,ONE:24,TWO:25,FOUR:26,EIGHT:27,INDEFINITE:31},T={FALSE:20,TRUE:21,NULL:22,UNDEFINED:23};class N{static BREAK=Symbol.for(\"github.com/hildjj/cbor2/break\");static ENCODED=Symbol.for(\"github.com/hildjj/cbor2/cbor-encoded\");static LENGTH=Symbol.for(\"github.com/hildjj/cbor2/length\")}const S={MIN:-(2n**63n),MAX:2n**64n-1n};export{S as DCBOR_INT,f as MT,o as NUMBYTES,T as SIMPLE,N as SYMS,I as TAG};\n","class i{static#e=new Map;tag;contents;constructor(e,t=void 0){this.tag=e,this.contents=t}get noChildren(){return!!i.#e.get(this.tag)?.noChildren}static registerDecoder(e,t,n){const o=this.#e.get(e);return this.#e.set(e,t),o&&(\"comment\"in t||(t.comment=o.comment),\"noChildren\"in t||(t.noChildren=o.noChildren)),n&&!t.comment&&(t.comment=()=>`(${n})`),o}static clearDecoder(e){const t=this.#e.get(e);return this.#e.delete(e),t}static getDecoder(e){return this.#e.get(e)}static getAllDecoders(){return new Map(this.#e)}*[Symbol.iterator](){yield this.contents}push(e){return this.contents=e,1}decode(e){const t=e?.tags?.get(this.tag)??i.#e.get(this.tag);return t?t(this,e):this}comment(e,t){const n=e?.tags?.get(this.tag)??i.#e.get(this.tag);if(n?.comment)return n.comment(this,e,t)}toCBOR(){return[this.tag,this.contents]}[Symbol.for(\"nodejs.util.inspect.custom\")](e,t,n){return`${this.tag}(${n(this.contents,t)})`}}export{i as Tag};\n","import{SYMS as i}from\"./constants.js\";import{Tag as o}from\"./tag.js\";function f(n){if(n!=null&&typeof n==\"object\")return n[i.ENCODED]}function s(n){if(n!=null&&typeof n==\"object\")return n[i.LENGTH]}function u(n,e){Object.defineProperty(n,i.ENCODED,{configurable:!0,enumerable:!1,value:e})}function l(n,e){Object.defineProperty(n,i.LENGTH,{configurable:!0,enumerable:!1,value:e})}function d(n,e){const r=Object(n);return u(r,e),r}function t(n){if(!n||typeof n!=\"object\")return n;switch(n.constructor){case BigInt:case Boolean:case Number:case String:case Symbol:return n.valueOf();case Array:return n.map(e=>t(e));case Map:{const e=t([...n.entries()]);return e.every(([r])=>typeof r==\"string\")?Object.fromEntries(e):new Map(e)}case o:return new o(t(n.tag),t(n.contents));case Object:{const e={};for(const[r,a]of Object.entries(n))e[r]=t(a);return e}}return n}export{d as box,f as getEncoded,s as getEncodedLength,u as saveEncoded,l as saveEncodedLength,t as unbox};\n","const g=Symbol(\"CBOR_RANGES\");function c(r,n){Object.defineProperty(r,g,{configurable:!1,enumerable:!1,writable:!1,value:n})}function f(r){return r[g]}function l(r){return f(r)!==void 0}function R(r,n=0,t=r.length-1){const o=r.subarray(n,t),a=f(r);if(a){const s=[];for(const e of a)if(e[0]>=n&&e[0]+e[1]<=t){const i=[...e];i[0]-=n,s.push(i)}s.length&&c(o,s)}return o}function b(r){let n=Math.ceil(r.length/2);const t=new Uint8Array(n);n--;for(let o=r.length,a=o-2;o>=0;o=a,a-=2,n--)t[n]=parseInt(r.substring(a,o),16);return t}function A(r){return r.reduce((n,t)=>n+t.toString(16).padStart(2,\"0\"),\"\")}function d(r){const n=r.reduce((e,i)=>e+i.length,0),t=r.some(e=>l(e)),o=[],a=new Uint8Array(n);let s=0;for(const e of r){if(!(e instanceof Uint8Array))throw new TypeError(`Invalid array: ${e}`);if(a.set(e,s),t){const i=e[g]??[[0,e.length]];for(const u of i)u[0]+=s;o.push(...i)}s+=e.length}return t&&c(a,o),a}function y(r){const n=atob(r);return Uint8Array.from(n,t=>t.codePointAt(0))}const p={\"-\":\"+\",_:\"/\"};function x(r){const n=r.replace(/[_-]/g,t=>p[t]);return y(n.padEnd(Math.ceil(n.length/4)*4,\"=\"))}function h(){const r=new Uint8Array(4),n=new Uint32Array(r.buffer);return!((n[0]=1)&r[0])}function U(r){let n=\"\";for(const t of r){const o=t.codePointAt(0)?.toString(16).padStart(4,\"0\");n&&(n+=\", \"),n+=`U+${o}`}return n}export{g as CBOR_RANGES,y as base64ToBytes,x as base64UrlToBytes,f as getRanges,l as hasRanges,b as hexToU8,h as isBigEndian,c as setRanges,U as stringToHex,R as subarrayRanges,d as u8concat,A as u8toHex};\n","class s{#e=new Map;registerEncoder(e,t){const n=this.#e.get(e);return this.#e.set(e,t),n}get(e){return this.#e.get(e)}delete(e){return this.#e.delete(e)}clear(){this.#e.clear()}}export{s as TypeEncoderMap};\n","function f(c,d){const[u,a,n]=c,[l,s,t]=d,r=Math.min(n.length,t.length);for(let o=0;o<r;o++){const e=n[o]-t[o];if(e!==0)return e}return 0}function y(c,d){const[u,a,n]=c,[l,s,t]=d,r=n.length-t.length;if(r!==0)return r;const o=Math.min(n.length,t.length);for(let e=0;e<o;e++){const i=n[e]-t[e];if(i!==0)return i}return 0}export{f as sortCoreDeterministic,y as sortLengthFirstDeterministic};\n","class e{static defaultOptions={chunkSize:4096};#r;#i=[];#s=null;#t=0;#a=0;constructor(t={}){if(this.#r={...e.defaultOptions,...t},this.#r.chunkSize<8)throw new RangeError(`Expected size >= 8, got ${this.#r.chunkSize}`);this.#n()}get length(){return this.#a}read(){this.#o();const t=new Uint8Array(this.#a);let i=0;for(const s of this.#i)t.set(s,i),i+=s.length;return this.#n(),t}write(t){const i=t.length;i>this.#l()?(this.#o(),i>this.#r.chunkSize?(this.#i.push(t),this.#n()):(this.#n(),this.#i[this.#i.length-1].set(t),this.#t=i)):(this.#i[this.#i.length-1].set(t,this.#t),this.#t+=i),this.#a+=i}writeUint8(t){this.#e(1),this.#s.setUint8(this.#t,t),this.#h(1)}writeUint16(t,i=!1){this.#e(2),this.#s.setUint16(this.#t,t,i),this.#h(2)}writeUint32(t,i=!1){this.#e(4),this.#s.setUint32(this.#t,t,i),this.#h(4)}writeBigUint64(t,i=!1){this.#e(8),this.#s.setBigUint64(this.#t,t,i),this.#h(8)}writeInt16(t,i=!1){this.#e(2),this.#s.setInt16(this.#t,t,i),this.#h(2)}writeInt32(t,i=!1){this.#e(4),this.#s.setInt32(this.#t,t,i),this.#h(4)}writeBigInt64(t,i=!1){this.#e(8),this.#s.setBigInt64(this.#t,t,i),this.#h(8)}writeFloat32(t,i=!1){this.#e(4),this.#s.setFloat32(this.#t,t,i),this.#h(4)}writeFloat64(t,i=!1){this.#e(8),this.#s.setFloat64(this.#t,t,i),this.#h(8)}clear(){this.#a=0,this.#i=[],this.#n()}#n(){const t=new Uint8Array(this.#r.chunkSize);this.#i.push(t),this.#t=0,this.#s=new DataView(t.buffer,t.byteOffset,t.byteLength)}#o(){if(this.#t===0){this.#i.pop();return}const t=this.#i.length-1;this.#i[t]=this.#i[t].subarray(0,this.#t),this.#t=0,this.#s=null}#l(){const t=this.#i.length-1;return this.#i[t].length-this.#t}#e(t){this.#l()<t&&(this.#o(),this.#n())}#h(t){this.#t+=t,this.#a+=t}}export{e as Writer};\n","function o(e,n=0,t=!1){const r=e[n]&128?-1:1,f=(e[n]&124)>>2,a=(e[n]&3)<<8|e[n+1];if(f===0){if(t&&a!==0)throw new Error(`Unwanted subnormal: ${r*5960464477539063e-23*a}`);return r*5960464477539063e-23*a}else if(f===31)return a?NaN:r*(1/0);return r*2**(f-25)*(1024+a)}function s(e){const n=new DataView(new ArrayBuffer(4));n.setFloat32(0,e,!1);const t=n.getUint32(0,!1);if((t&8191)!==0)return null;let r=t>>16&32768;const f=t>>23&255,a=t&8388607;if(!(f===0&&a===0))if(f>=113&&f<=142)r+=(f-112<<10)+(a>>13);else if(f>=103&&f<113){if(a&(1<<126-f)-1)return null;r+=a+8388608>>126-f}else if(f===255)r|=31744,r|=a>>13;else return null;return r}function i(e){if(e!==0){const n=new ArrayBuffer(8),t=new DataView(n);t.setFloat64(0,e,!1);const r=t.getBigUint64(0,!1);if((r&0x7ff0000000000000n)===0n)return r&0x8000000000000000n?-0:0}return e}function l(e){switch(e.length){case 2:o(e,0,!0);break;case 4:{const n=new DataView(e.buffer,e.byteOffset,e.byteLength),t=n.getUint32(0,!1);if((t&2139095040)===0&&t&8388607)throw new Error(`Unwanted subnormal: ${n.getFloat32(0,!1)}`);break}case 8:{const n=new DataView(e.buffer,e.byteOffset,e.byteLength),t=n.getBigUint64(0,!1);if((t&0x7ff0000000000000n)===0n&&t&0x000fffffffffffn)throw new Error(`Unwanted subnormal: ${n.getFloat64(0,!1)}`);break}default:throw new TypeError(`Bad input to isSubnormal: ${e}`)}}export{l as checkSubnormal,i as flushToZero,s as halfToUint,o as parseHalf};\n","export class DecodeError extends TypeError {\n    code = 'ERR_ENCODING_INVALID_ENCODED_DATA';\n    constructor() {\n        super('The encoded data was not valid for encoding wtf-8');\n    }\n}\nexport class InvalidEncodingError extends RangeError {\n    code = 'ERR_ENCODING_NOT_SUPPORTED';\n    constructor(label) {\n        super(`Invalid encoding: \"${label}\"`);\n    }\n}\n","export const BOM = 0xfeff;\nexport const EMPTY = new Uint8Array(0);\nexport const MAX_HIGH_SURROGATE = 0xdbff;\nexport const MAX_LOW_SURROGATE = 0xdfff;\nexport const MIN_HIGH_SURROGATE = 0xd800;\nexport const MIN_LOW_SURROGATE = 0xdc00;\nexport const REPLACEMENT = 0xfffd;\nexport const WTF8 = 'wtf-8';\n","import { BOM, EMPTY, MIN_HIGH_SURROGATE, MIN_LOW_SURROGATE, REPLACEMENT, WTF8, } from './const.js';\nimport { DecodeError, InvalidEncodingError } from './errors.js';\nfunction isArrayBufferView(input) {\n    return (input &&\n        !(input instanceof ArrayBuffer) &&\n        input.buffer instanceof ArrayBuffer);\n}\nfunction getUint8(input) {\n    if (!input) {\n        return EMPTY;\n    }\n    if (input instanceof Uint8Array) {\n        return input;\n    }\n    if (isArrayBufferView(input)) {\n        return new Uint8Array(input.buffer, input.byteOffset, input.byteLength);\n    }\n    return new Uint8Array(input);\n}\nconst REMAINDER = [\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    -1,\n    -1,\n    -1,\n    -1,\n    1,\n    1,\n    2,\n    3,\n];\nexport class Wtf8Decoder {\n    static DEFAULT_BUFFERSIZE = 0x1000;\n    encoding = WTF8;\n    fatal;\n    ignoreBOM;\n    bufferSize;\n    #left = 0;\n    #cur = 0;\n    #pending = 0;\n    #first = true;\n    #buf;\n    constructor(label = 'wtf8', options = undefined) {\n        if (label.toLowerCase().replace('-', '') !== 'wtf8') {\n            throw new InvalidEncodingError(label);\n        }\n        this.fatal = Boolean(options?.fatal);\n        this.ignoreBOM = Boolean(options?.ignoreBOM);\n        this.bufferSize = Math.floor(options?.bufferSize ?? Wtf8Decoder.DEFAULT_BUFFERSIZE);\n        if (isNaN(this.bufferSize) || (this.bufferSize < 1)) {\n            throw new RangeError(`Invalid buffer size: ${options?.bufferSize}`);\n        }\n        this.#buf = new Uint16Array(this.bufferSize);\n    }\n    decode(input, options) {\n        const streaming = Boolean(options?.stream);\n        const bytes = getUint8(input);\n        const res = [];\n        const out = this.#buf;\n        const maxSize = this.bufferSize - 3;\n        let pos = 0;\n        const fatal = () => {\n            this.#cur = 0;\n            this.#left = 0;\n            this.#pending = 0;\n            if (this.fatal) {\n                throw new DecodeError();\n            }\n            out[pos++] = REPLACEMENT;\n        };\n        const fatals = () => {\n            const p = this.#pending;\n            for (let i = 0; i < p; i++) {\n                fatal();\n            }\n        };\n        const oneByte = (b) => {\n            if (this.#left === 0) {\n                const n = REMAINDER[b >> 4];\n                switch (n) {\n                    case -1:\n                        fatal();\n                        break;\n                    case 0:\n                        out[pos++] = b;\n                        break;\n                    case 1:\n                        this.#cur = b & 0x1f;\n                        if ((this.#cur & 0x1e) === 0) {\n                            fatal();\n                        }\n                        else {\n                            this.#left = 1;\n                            this.#pending = 1;\n                        }\n                        break;\n                    case 2:\n                        this.#cur = b & 0x0f;\n                        this.#left = 2;\n                        this.#pending = 1;\n                        break;\n                    case 3:\n                        if (b & 0x08) {\n                            fatal();\n                        }\n                        else {\n                            this.#cur = b & 0x07;\n                            this.#left = 3;\n                            this.#pending = 1;\n                        }\n                        break;\n                }\n            }\n            else {\n                if ((b & 0xc0) !== 0x80) {\n                    fatals();\n                    return oneByte(b);\n                }\n                if ((this.#pending === 1) &&\n                    (this.#left === 2) &&\n                    (this.#cur === 0) &&\n                    ((b & 0x20) === 0)) {\n                    fatals();\n                    return oneByte(b);\n                }\n                if ((this.#left === 3) && (this.#cur === 0) && ((b & 0x30) === 0)) {\n                    fatals();\n                    return oneByte(b);\n                }\n                this.#cur = (this.#cur << 6) | (b & 0x3f);\n                this.#pending++;\n                if (--this.#left === 0) {\n                    if (this.ignoreBOM || !this.#first || (this.#cur !== BOM)) {\n                        if (this.#cur < 0x10000) {\n                            out[pos++] = this.#cur;\n                        }\n                        else {\n                            const cp = this.#cur - 0x10000;\n                            out[pos++] = ((cp >>> 10) & 0x3ff) | MIN_HIGH_SURROGATE;\n                            out[pos++] = (cp & 0x3ff) | MIN_LOW_SURROGATE;\n                        }\n                    }\n                    this.#cur = 0;\n                    this.#pending = 0;\n                    this.#first = false;\n                }\n            }\n        };\n        for (const b of bytes) {\n            if (pos >= maxSize) {\n                res.push(String.fromCharCode.apply(null, out.subarray(0, pos)));\n                pos = 0;\n            }\n            oneByte(b);\n        }\n        if (!streaming) {\n            this.#first = true;\n            if (this.#cur || this.#left) {\n                fatals();\n            }\n        }\n        if (pos > 0) {\n            res.push(String.fromCharCode.apply(null, out.subarray(0, pos)));\n        }\n        return res.join('');\n    }\n}\n","import { EMPTY, WTF8 } from './const.js';\nfunction utf8length(str) {\n    let len = 0;\n    for (const s of str) {\n        const cp = s.codePointAt(0);\n        if (cp < 0x80) {\n            len++;\n        }\n        else if (cp < 0x800) {\n            len += 2;\n        }\n        else if (cp < 0x10000) {\n            len += 3;\n        }\n        else {\n            len += 4;\n        }\n    }\n    return len;\n}\nexport class Wtf8Encoder {\n    encoding = WTF8;\n    encode(input) {\n        if (!input) {\n            return EMPTY;\n        }\n        const buf = new Uint8Array(utf8length(String(input)));\n        this.encodeInto(input, buf);\n        return buf;\n    }\n    encodeInto(source, destination) {\n        const str = String(source);\n        const len = str.length;\n        const outLen = destination.length;\n        let written = 0;\n        let read = 0;\n        for (read = 0; read < len; read++) {\n            const c = str.codePointAt(read);\n            if (c < 0x80) {\n                if (written >= outLen) {\n                    break;\n                }\n                destination[written++] = c;\n            }\n            else if (c < 0x800) {\n                if (written >= outLen - 1) {\n                    break;\n                }\n                destination[written++] = 0xc0 | (c >> 6);\n                destination[written++] = 0x80 | (c & 0x3f);\n            }\n            else if (c < 0x10000) {\n                if (written >= outLen - 2) {\n                    break;\n                }\n                destination[written++] = 0xe0 | (c >> 12);\n                destination[written++] = 0x80 | ((c >> 6) & 0x3f);\n                destination[written++] = 0x80 | (c & 0x3f);\n            }\n            else {\n                if (written >= outLen - 3) {\n                    break;\n                }\n                destination[written++] = 0xf0 | (c >> 18);\n                destination[written++] = 0x80 | ((c >> 12) & 0x3f);\n                destination[written++] = 0x80 | ((c >> 6) & 0x3f);\n                destination[written++] = 0x80 | (c & 0x3f);\n                read++;\n            }\n        }\n        return {\n            read,\n            written,\n        };\n    }\n}\n","import{TypeEncoderMap as L}from\"./typeEncoderMap.js\";import{DCBOR_INT as x,MT as f,NUMBYTES as d,SIMPLE as l,SYMS as m,TAG as I}from\"./constants.js\";import{sortCoreDeterministic as _}from\"./sorts.js\";import{Writer as O}from\"./writer.js\";import{box as G,getEncodedLength as C}from\"./box.js\";import{flushToZero as D,halfToUint as S}from\"./float.js\";import{Wtf8Encoder as M}from\"@cto.af/wtf8\";import{hexToU8 as W}from\"./utils.js\";const{ENCODED:se}=m,U=f.SIMPLE_FLOAT<<5|d.TWO,h=f.SIMPLE_FLOAT<<5|d.FOUR,B=f.SIMPLE_FLOAT<<5|d.EIGHT,j=f.SIMPLE_FLOAT<<5|l.TRUE,P=f.SIMPLE_FLOAT<<5|l.FALSE,$=f.SIMPLE_FLOAT<<5|l.UNDEFINED,q=f.SIMPLE_FLOAT<<5|l.NULL,z=new TextEncoder,K=new M,k={...O.defaultOptions,avoidInts:!1,cde:!1,collapseBigInts:!0,dcbor:!1,float64:!1,flushToZero:!1,forceEndian:null,ignoreOriginalEncoding:!1,largeNegativeAsBigInt:!1,reduceUnsafeNumbers:!1,rejectBigInts:!1,rejectCustomSimples:!1,rejectDuplicateKeys:!1,rejectFloats:!1,rejectUndefined:!1,simplifyNegativeZero:!1,sortKeys:null,stringNormalization:null,types:null,wtf8:!1},F={cde:!0,ignoreOriginalEncoding:!0,sortKeys:_},H={...F,dcbor:!0,largeNegativeAsBigInt:!0,reduceUnsafeNumbers:!0,rejectCustomSimples:!0,rejectDuplicateKeys:!0,rejectUndefined:!0,simplifyNegativeZero:!0,stringNormalization:\"NFC\"};function y(e){const n=e<0;return typeof e==\"bigint\"?[n?-e-1n:e,n]:[n?-e-1:e,n]}function T(e,n,t){if(t.rejectFloats)throw new Error(`Attempt to encode an unwanted floating point number: ${e}`);if(isNaN(e))n.writeUint8(U),n.writeUint16(32256);else if(!t.float64&&Math.fround(e)===e){const r=S(e);r===null?(n.writeUint8(h),n.writeFloat32(e)):(n.writeUint8(U),n.writeUint16(r))}else n.writeUint8(B),n.writeFloat64(e)}function a(e,n,t){const[r,i]=y(e);if(i&&t)throw new TypeError(`Negative size: ${e}`);t??=i?f.NEG_INT:f.POS_INT,t<<=5,r<24?n.writeUint8(t|r):r<=255?(n.writeUint8(t|d.ONE),n.writeUint8(r)):r<=65535?(n.writeUint8(t|d.TWO),n.writeUint16(r)):r<=4294967295?(n.writeUint8(t|d.FOUR),n.writeUint32(r)):(n.writeUint8(t|d.EIGHT),n.writeBigUint64(BigInt(r)))}function p(e,n,t){typeof e==\"number\"?a(e,n,f.TAG):typeof e==\"object\"&&!t.ignoreOriginalEncoding&&m.ENCODED in e?n.write(e[m.ENCODED]):e<=Number.MAX_SAFE_INTEGER?a(Number(e),n,f.TAG):(n.writeUint8(f.TAG<<5|d.EIGHT),n.writeBigUint64(BigInt(e)))}function N(e,n,t){const[r,i]=y(e);if(t.collapseBigInts&&(!t.largeNegativeAsBigInt||e>=-0x8000000000000000n)){if(r<=0xffffffffn){a(Number(e),n);return}if(r<=0xffffffffffffffffn){const E=(i?f.NEG_INT:f.POS_INT)<<5;n.writeUint8(E|d.EIGHT),n.writeBigUint64(r);return}}if(t.rejectBigInts)throw new Error(`Attempt to encode unwanted bigint: ${e}`);const o=i?I.NEG_BIGINT:I.POS_BIGINT,c=r.toString(16),s=c.length%2?\"0\":\"\";p(o,n,t);const u=W(s+c);a(u.length,n,f.BYTE_STRING),n.write(u)}function Y(e,n,t){t.flushToZero&&(e=D(e)),Object.is(e,-0)?t.simplifyNegativeZero?t.avoidInts?T(0,n,t):a(0,n):T(e,n,t):!t.avoidInts&&Number.isSafeInteger(e)?a(e,n):t.reduceUnsafeNumbers&&Math.floor(e)===e&&e>=x.MIN&&e<=x.MAX?N(BigInt(e),n,t):T(e,n,t)}function Z(e,n,t){const r=t.stringNormalization?e.normalize(t.stringNormalization):e;if(t.wtf8&&!e.isWellFormed()){const i=K.encode(r);p(I.WTF8,n,t),a(i.length,n,f.BYTE_STRING),n.write(i)}else{const i=z.encode(r);a(i.length,n,f.UTF8_STRING),n.write(i)}}function J(e,n,t){const r=e;R(r,r.length,f.ARRAY,n,t);for(const i of r)g(i,n,t)}function V(e,n){a(e.length,n,f.BYTE_STRING),n.write(e)}const b=new L;b.registerEncoder(Array,J),b.registerEncoder(Uint8Array,V);function ce(e,n){return b.registerEncoder(e,n)}function ue(e){const n=b.get(e);return b.delete(e),n}function R(e,n,t,r,i){const o=C(e);o&&!i.ignoreOriginalEncoding?r.write(o):a(n,r,t)}function X(e,n,t){if(e===null){n.writeUint8(q);return}if(!t.ignoreOriginalEncoding&&m.ENCODED in e){n.write(e[m.ENCODED]);return}const r=e.constructor;if(r){const o=t.types?.get(r)??b.get(r);if(o){const c=o(e,n,t);if(c!==void 0){if(!Array.isArray(c)||c.length!==2)throw new Error(\"Invalid encoder return value\");(typeof c[0]==\"bigint\"||isFinite(Number(c[0])))&&p(c[0],n,t),g(c[1],n,t)}return}}if(typeof e.toCBOR==\"function\"){const o=e.toCBOR(n,t);o&&((typeof o[0]==\"bigint\"||isFinite(Number(o[0])))&&p(o[0],n,t),g(o[1],n,t));return}if(typeof e.toJSON==\"function\"){g(e.toJSON(),n,t);return}const i=Object.entries(e).map(o=>[o[0],o[1],Q(o[0],t)]);t.sortKeys&&i.sort(t.sortKeys),R(e,i.length,f.MAP,n,t);for(const[o,c,s]of i)n.write(s),g(c,n,t)}function g(e,n,t){switch(typeof e){case\"number\":Y(e,n,t);break;case\"bigint\":N(e,n,t);break;case\"string\":Z(e,n,t);break;case\"boolean\":n.writeUint8(e?j:P);break;case\"undefined\":if(t.rejectUndefined)throw new Error(\"Attempt to encode unwanted undefined.\");n.writeUint8($);break;case\"object\":X(e,n,t);break;case\"symbol\":throw new TypeError(`Unknown symbol: ${e.toString()}`);default:throw new TypeError(`Unknown type: ${typeof e}, ${String(e)}`)}}function Q(e,n={}){const t={...k};n.dcbor?Object.assign(t,H):n.cde&&Object.assign(t,F),Object.assign(t,n);const r=new O(t);return g(e,r,t),r.read()}function de(e,n,t=f.POS_INT){n||(n=\"f\");const r={...k,collapseBigInts:!1,chunkSize:10,simplifyNegativeZero:!1},i=new O(r),o=Number(e);function c(s){if(Object.is(e,-0))throw new Error(\"Invalid integer: -0\");const[u,E]=y(e);if(E&&t!==f.POS_INT)throw new Error(\"Invalid major type combination\");const w=typeof s==\"number\"&&isFinite(s);if(w&&!Number.isSafeInteger(o))throw new TypeError(`Unsafe number for ${n}: ${e}`);if(u>s)throw new TypeError(`Undersized encoding ${n} for: ${e}`);const A=(E?f.NEG_INT:t)<<5;return w?[A,Number(u)]:[A,u]}switch(n){case\"bigint\":if(Object.is(e,-0))throw new TypeError(\"Invalid bigint: -0\");e=BigInt(e),N(e,i,r);break;case\"f\":T(o,i,r);break;case\"f16\":{const s=S(o);if(s===null)throw new TypeError(`Invalid f16: ${e}`);i.writeUint8(U),i.writeUint16(s);break}case\"f32\":if(!isNaN(o)&&Math.fround(o)!==o)throw new TypeError(`Invalid f32: ${e}`);i.writeUint8(h),i.writeFloat32(o);break;case\"f64\":i.writeUint8(B),i.writeFloat64(o);break;case\"i\":if(Object.is(e,-0))throw new Error(\"Invalid integer: -0\");if(Number.isSafeInteger(o))a(o,i,e<0?void 0:t);else{const[s,u]=c(1/0);u>0xffffffffffffffffn?(e=BigInt(e),N(e,i,r)):(i.writeUint8(s|d.EIGHT),i.writeBigUint64(BigInt(u)))}break;case\"i0\":{const[s,u]=c(23);i.writeUint8(s|u);break}case\"i8\":{const[s,u]=c(255);i.writeUint8(s|d.ONE),i.writeUint8(u);break}case\"i16\":{const[s,u]=c(65535);i.writeUint8(s|d.TWO),i.writeUint16(u);break}case\"i32\":{const[s,u]=c(4294967295);i.writeUint8(s|d.FOUR),i.writeUint32(u);break}case\"i64\":{const[s,u]=c(0xffffffffffffffffn);i.writeUint8(s|d.EIGHT),i.writeBigUint64(BigInt(u));break}default:throw new TypeError(`Invalid number encoding: \"${n}\"`)}return G(e,i.read())}export{se as ENCODED,F as cdeEncodeOptions,ue as clearEncoder,H as dcborEncodeOptions,k as defaultEncodeOptions,Q as encode,de as encodedNumber,ce as registerEncoder,J as writeArray,N as writeBigInt,T as writeFloat,a as writeInt,R as writeLength,Y as writeNumber,Z as writeString,p as writeTag,V as writeUint8Array,g as writeUnknown};\n","var o=(e=>(e[e.NEVER=-1]=\"NEVER\",e[e.PREFERRED=0]=\"PREFERRED\",e[e.ALWAYS=1]=\"ALWAYS\",e))(o||{});export{o as DiagnosticSizes};\n","import{MT as u,SIMPLE as n}from\"./constants.js\";import{writeInt as o}from\"./encoder.js\";class t{static KnownSimple=new Map([[n.FALSE,!1],[n.TRUE,!0],[n.NULL,null],[n.UNDEFINED,void 0]]);value;constructor(e){this.value=e}static create(e){return t.KnownSimple.has(e)?t.KnownSimple.get(e):new t(e)}toCBOR(e,i){if(i.rejectCustomSimples)throw new Error(`Cannot encode non-standard Simple value: ${this.value}`);o(this.value,e,u.SIMPLE_FLOAT)}toString(){return`simple(${this.value})`}decode(){return t.KnownSimple.has(this.value)?t.KnownSimple.get(this.value):this}[Symbol.for(\"nodejs.util.inspect.custom\")](e,i,r){return`simple(${r(this.value,i)})`}}export{t as Simple};\n","import{MT as s,NUMBYTES as l,SYMS as d}from\"./constants.js\";import{base64ToBytes as m,hexToU8 as b,subarrayRanges as u}from\"./utils.js\";import{Simple as g}from\"./simple.js\";import{parseHalf as E}from\"./float.js\";const p=new TextDecoder(\"utf8\",{fatal:!0,ignoreBOM:!0});class y{static defaultOptions={maxDepth:1024,encoding:\"hex\",requirePreferred:!1};#t;#r;#e=0;#i;constructor(t,r){if(this.#i={...y.defaultOptions,...r},typeof t==\"string\")switch(this.#i.encoding){case\"hex\":this.#t=b(t);break;case\"base64\":this.#t=m(t);break;default:throw new TypeError(`Encoding not implemented: \"${this.#i.encoding}\"`)}else this.#t=t;this.#r=new DataView(this.#t.buffer,this.#t.byteOffset,this.#t.byteLength)}toHere(t){return u(this.#t,t,this.#e)}*[Symbol.iterator](){if(yield*this.#n(0),this.#e!==this.#t.length)throw new Error(\"Extra data in input\")}*seq(){for(;this.#e<this.#t.length;)yield*this.#n(0)}*#n(t){if(t++>this.#i.maxDepth)throw new Error(`Maximum depth ${this.#i.maxDepth} exceeded`);const r=this.#e,c=this.#r.getUint8(this.#e++),i=c>>5,n=c&31;let e=n,f=!1,a=0;switch(n){case l.ONE:if(a=1,e=this.#r.getUint8(this.#e),i===s.SIMPLE_FLOAT){if(e<32)throw new Error(`Invalid simple encoding in extra byte: ${e}`);f=!0}else if(this.#i.requirePreferred&&e<24)throw new Error(`Unexpectedly long integer encoding (1) for ${e}`);break;case l.TWO:if(a=2,i===s.SIMPLE_FLOAT)e=E(this.#t,this.#e);else if(e=this.#r.getUint16(this.#e,!1),this.#i.requirePreferred&&e<=255)throw new Error(`Unexpectedly long integer encoding (2) for ${e}`);break;case l.FOUR:if(a=4,i===s.SIMPLE_FLOAT)e=this.#r.getFloat32(this.#e,!1);else if(e=this.#r.getUint32(this.#e,!1),this.#i.requirePreferred&&e<=65535)throw new Error(`Unexpectedly long integer encoding (4) for ${e}`);break;case l.EIGHT:{if(a=8,i===s.SIMPLE_FLOAT)e=this.#r.getFloat64(this.#e,!1);else if(e=this.#r.getBigUint64(this.#e,!1),e<=Number.MAX_SAFE_INTEGER&&(e=Number(e)),this.#i.requirePreferred&&e<=4294967295)throw new Error(`Unexpectedly long integer encoding (8) for ${e}`);break}case 28:case 29:case 30:throw new Error(`Additional info not implemented: ${n}`);case l.INDEFINITE:switch(i){case s.POS_INT:case s.NEG_INT:case s.TAG:throw new Error(`Invalid indefinite encoding for MT ${i}`);case s.SIMPLE_FLOAT:yield[i,n,d.BREAK,r,0];return}e=1/0;break;default:f=!0}switch(this.#e+=a,i){case s.POS_INT:yield[i,n,e,r,a];break;case s.NEG_INT:yield[i,n,typeof e==\"bigint\"?-1n-e:-1-Number(e),r,a];break;case s.BYTE_STRING:e===1/0?yield*this.#s(i,t,r):yield[i,n,this.#a(e),r,e];break;case s.UTF8_STRING:e===1/0?yield*this.#s(i,t,r):yield[i,n,p.decode(this.#a(e)),r,e];break;case s.ARRAY:if(e===1/0)yield*this.#s(i,t,r,!1);else{const o=Number(e);yield[i,n,o,r,a];for(let h=0;h<o;h++)yield*this.#n(t+1)}break;case s.MAP:if(e===1/0)yield*this.#s(i,t,r,!1);else{const o=Number(e);yield[i,n,o,r,a];for(let h=0;h<o;h++)yield*this.#n(t),yield*this.#n(t)}break;case s.TAG:yield[i,n,e,r,a],yield*this.#n(t);break;case s.SIMPLE_FLOAT:{const o=e;f&&(e=g.create(Number(e))),yield[i,n,e,r,o];break}}}#a(t){const r=u(this.#t,this.#e,this.#e+=t);if(r.length!==t)throw new Error(`Unexpected end of stream reading ${t} bytes, got ${r.length}`);return r}*#s(t,r,c,i=!0){for(yield[t,l.INDEFINITE,1/0,c,1/0];;){const n=this.#n(r),e=n.next(),[f,a,o]=e.value;if(o===d.BREAK){yield e.value,n.next();return}if(i){if(f!==t)throw new Error(`Unmatched major type.  Expected ${t}, got ${f}.`);if(a===l.INDEFINITE)throw new Error(\"New stream started in typed stream\")}yield e.value,yield*n}}}export{y as DecodeStream};\n","import{DCBOR_INT as h,MT as a,NUMBYTES as u}from\"./constants.js\";import{DiagnosticSizes as j}from\"./options.js\";import{sortCoreDeterministic as y}from\"./sorts.js\";import{box as f,getEncoded as b,saveEncoded as N}from\"./box.js\";import{defaultEncodeOptions as E,encode as T}from\"./encoder.js\";import{stringToHex as p,u8concat as S,u8toHex as g}from\"./utils.js\";import{DecodeStream as I}from\"./decodeStream.js\";import{Simple as O}from\"./simple.js\";import{Tag as m}from\"./tag.js\";import{checkSubnormal as D}from\"./float.js\";const v=new Map([[u.ZERO,1],[u.ONE,2],[u.TWO,3],[u.FOUR,5],[u.EIGHT,9]]),A=new Uint8Array(0);function k(d,r){return!r.boxed&&!r.preferMap&&d.every(([i])=>typeof i==\"string\")?Object.fromEntries(d):new Map(d)}class w{static defaultDecodeOptions={...I.defaultOptions,ParentType:w,boxed:!1,cde:!1,dcbor:!1,diagnosticSizes:j.PREFERRED,convertUnsafeIntsToFloat:!1,createObject:k,pretty:!1,preferMap:!1,rejectLargeNegatives:!1,rejectBigInts:!1,rejectDuplicateKeys:!1,rejectFloats:!1,rejectInts:!1,rejectLongLoundNaN:!1,rejectLongFloats:!1,rejectNegativeZero:!1,rejectSimple:!1,rejectStreaming:!1,rejectStringsNotNormalizedAs:null,rejectSubnormals:!1,rejectUndefined:!1,rejectUnsafeFloatInts:!1,saveOriginal:!1,sortKeys:null,tags:null};static cdeDecodeOptions={cde:!0,rejectStreaming:!0,requirePreferred:!0,sortKeys:y};static dcborDecodeOptions={...this.cdeDecodeOptions,dcbor:!0,convertUnsafeIntsToFloat:!0,rejectDuplicateKeys:!0,rejectLargeNegatives:!0,rejectLongLoundNaN:!0,rejectLongFloats:!0,rejectNegativeZero:!0,rejectSimple:!0,rejectUndefined:!0,rejectUnsafeFloatInts:!0,rejectStringsNotNormalizedAs:\"NFC\"};parent;mt;ai;left;offset;count=0;children=[];depth=0;#e;#t=null;constructor(r,i,e,t){if([this.mt,this.ai,,this.offset]=r,this.left=i,this.parent=e,this.#e=t,e&&(this.depth=e.depth+1),this.mt===a.MAP&&(this.#e.sortKeys||this.#e.rejectDuplicateKeys)&&(this.#t=[]),this.#e.rejectStreaming&&this.ai===u.INDEFINITE)throw new Error(\"Streaming not supported\")}get isStreaming(){return this.left===1/0}get done(){return this.left===0}static create(r,i,e,t){const[s,l,n,c]=r;switch(s){case a.POS_INT:case a.NEG_INT:{if(e.rejectInts)throw new Error(`Unexpected integer: ${n}`);if(e.rejectLargeNegatives&&n<-0x8000000000000000n)throw new Error(`Invalid 65bit negative number: ${n}`);let o=n;return e.convertUnsafeIntsToFloat&&o>=h.MIN&&o<=h.MAX&&(o=Number(n)),e.boxed?f(o,t.toHere(c)):o}case a.SIMPLE_FLOAT:if(l>u.ONE){if(e.rejectFloats)throw new Error(`Decoding unwanted floating point number: ${n}`);if(e.rejectNegativeZero&&Object.is(n,-0))throw new Error(\"Decoding negative zero\");if(e.rejectLongLoundNaN&&isNaN(n)){const o=t.toHere(c);if(o.length!==3||o[1]!==126||o[2]!==0)throw new Error(`Invalid NaN encoding: \"${g(o)}\"`)}if(e.rejectSubnormals&&D(t.toHere(c+1)),e.rejectLongFloats){const o=T(n,{chunkSize:9,reduceUnsafeNumbers:e.rejectUnsafeFloatInts});if(o[0]>>5!==s)throw new Error(`Should have been encoded as int, not float: ${n}`);if(o.length<v.get(l))throw new Error(`Number should have been encoded shorter: ${n}`)}if(typeof n==\"number\"&&e.boxed)return f(n,t.toHere(c))}else{if(e.rejectSimple&&n instanceof O)throw new Error(`Invalid simple value: ${n}`);if(e.rejectUndefined&&n===void 0)throw new Error(\"Unexpected undefined\")}return n;case a.BYTE_STRING:case a.UTF8_STRING:if(n===1/0)return new e.ParentType(r,1/0,i,e);if(e.rejectStringsNotNormalizedAs&&typeof n==\"string\"){const o=n.normalize(e.rejectStringsNotNormalizedAs);if(n!==o)throw new Error(`String not normalized as \"${e.rejectStringsNotNormalizedAs}\", got [${p(n)}] instead of [${p(o)}]`)}return e.boxed?f(n,t.toHere(c)):n;case a.ARRAY:return new e.ParentType(r,n,i,e);case a.MAP:return new e.ParentType(r,n*2,i,e);case a.TAG:{const o=new e.ParentType(r,1,i,e);return o.children=new m(n),o}}throw new TypeError(`Invalid major type: ${s}`)}static decodeToEncodeOpts(r){return{...E,avoidInts:r.rejectInts,float64:!r.rejectLongFloats,flushToZero:r.rejectSubnormals,largeNegativeAsBigInt:r.rejectLargeNegatives,sortKeys:r.sortKeys}}push(r,i,e){if(this.children.push(r),this.#t){const t=b(r)||i.toHere(e);this.#t.push(t)}return--this.left}replaceLast(r,i,e){let t,s=-1/0;if(this.children instanceof m?(s=0,t=this.children.contents,this.children.contents=r):(s=this.children.length-1,t=this.children[s],this.children[s]=r),this.#t){const l=b(r)||e.toHere(i.offset);this.#t[s]=l}return t}convert(r){let i;switch(this.mt){case a.ARRAY:i=this.children;break;case a.MAP:{const e=this.#r();if(this.#e.sortKeys){let t;for(const s of e){if(t&&this.#e.sortKeys(t,s)>=0)throw new Error(`Duplicate or out of order key: \"0x${s[2]}\"`);t=s}}else if(this.#e.rejectDuplicateKeys){const t=new Set;for(const[s,l,n]of e){const c=g(n);if(t.has(c))throw new Error(`Duplicate key: \"0x${c}\"`);t.add(c)}}i=this.#e.createObject(e,this.#e);break}case a.BYTE_STRING:return S(this.children);case a.UTF8_STRING:{const e=this.children.join(\"\");i=this.#e.boxed?f(e,r.toHere(this.offset)):e;break}case a.TAG:i=this.children.decode(this.#e);break;default:throw new TypeError(`Invalid mt on convert: ${this.mt}`)}return this.#e.saveOriginal&&i&&typeof i==\"object\"&&N(i,r.toHere(this.offset)),i}#r(){const r=this.children,i=r.length;if(i%2)throw new Error(\"Missing map value\");const e=new Array(i/2);if(this.#t)for(let t=0;t<i;t+=2)e[t>>1]=[r[t],r[t+1],this.#t[t]];else for(let t=0;t<i;t+=2)e[t>>1]=[r[t],r[t+1],A];return e}}export{w as CBORcontainer};\n","import{DiagnosticSizes as b}from\"./options.js\";import{MT as s,NUMBYTES as f,SYMS as d}from\"./constants.js\";import{CBORcontainer as S}from\"./container.js\";import{DecodeStream as E}from\"./decodeStream.js\";import{Simple as N}from\"./simple.js\";import{halfToUint as I}from\"./float.js\";import{u8toHex as _}from\"./utils.js\";const O=\"  \",y=new TextEncoder;class g extends S{close=\"\";quote='\"';get isEmptyStream(){return(this.mt===s.UTF8_STRING||this.mt===s.BYTE_STRING)&&this.count===0}}function a(m,l,n,p){let t=\"\";if(l===f.INDEFINITE)t+=\"_\";else{if(p.diagnosticSizes===b.NEVER)return\"\";{let r=p.diagnosticSizes===b.ALWAYS;if(!r){let e=f.ZERO;if(Object.is(n,-0))e=f.TWO;else if(m===s.POS_INT||m===s.NEG_INT){const T=n<0,u=typeof n==\"bigint\"?1n:1,o=T?-n-u:n;o<=23?e=Number(o):o<=255?e=f.ONE:o<=65535?e=f.TWO:o<=4294967295?e=f.FOUR:e=f.EIGHT}else isFinite(n)?Math.fround(n)===n?I(n)==null?e=f.FOUR:e=f.TWO:e=f.EIGHT:e=f.TWO;r=e!==l}r&&(t+=\"_\",l<f.ONE?t+=\"i\":t+=String(l-24))}}return t}function M(m,l){const n={...S.defaultDecodeOptions,...l,ParentType:g},p=new E(m,n);let t,r,e=\"\";for(const T of p){const[u,o,i]=T;switch(t&&(t.count>0&&i!==d.BREAK&&(t.mt===s.MAP&&t.count%2?e+=\": \":(e+=\",\",n.pretty||(e+=\" \"))),n.pretty&&(t.mt!==s.MAP||t.count%2===0)&&(e+=`\n${O.repeat(t.depth+1)}`)),r=S.create(T,t,n,p),u){case s.POS_INT:case s.NEG_INT:e+=String(i),e+=a(u,o,i,n);break;case s.SIMPLE_FLOAT:if(i!==d.BREAK)if(typeof i==\"number\"){const c=Object.is(i,-0)?\"-0.0\":String(i);e+=c,isFinite(i)&&!/[.e]/.test(c)&&(e+=\".0\"),e+=a(u,o,i,n)}else i instanceof N?(e+=\"simple(\",e+=String(i.value),e+=a(s.POS_INT,o,i.value,n),e+=\")\"):e+=String(i);break;case s.BYTE_STRING:i===1/0?(e+=\"(_ \",r.close=\")\",r.quote=\"'\"):(e+=\"h'\",e+=_(i),e+=\"'\",e+=a(s.POS_INT,o,i.length,n));break;case s.UTF8_STRING:i===1/0?(e+=\"(_ \",r.close=\")\"):(e+=JSON.stringify(i),e+=a(s.POS_INT,o,y.encode(i).length,n));break;case s.ARRAY:{e+=\"[\";const c=a(s.POS_INT,o,i,n);e+=c,c&&(e+=\" \"),n.pretty&&i?r.close=`\n${O.repeat(r.depth)}]`:r.close=\"]\";break}case s.MAP:{e+=\"{\";const c=a(s.POS_INT,o,i,n);e+=c,c&&(e+=\" \"),n.pretty&&i?r.close=`\n${O.repeat(r.depth)}}`:r.close=\"}\";break}case s.TAG:e+=String(i),e+=a(s.POS_INT,o,i,n),e+=\"(\",r.close=\")\";break}if(r===d.BREAK)if(t?.isStreaming)t.left=0;else throw new Error(\"Unexpected BREAK\");else t&&(t.count++,t.left--);for(r instanceof g&&(t=r);t?.done;){if(t.isEmptyStream)e=e.slice(0,-3),e+=`${t.quote}${t.quote}_`;else{if(t.mt===s.MAP&&t.count%2!==0)throw new Error(`Odd streaming map size: ${t.count}`);e+=t.close}t=t.parent}}return e}export{M as diagnose};\n","import{MT as u,NUMBYTES as b,SYMS as E}from\"./constants.js\";import{getEncoded as B,saveEncoded as R}from\"./box.js\";import{getRanges as S,subarrayRanges as I,u8toHex as C}from\"./utils.js\";import{CBORcontainer as T}from\"./container.js\";import{DecodeStream as M}from\"./decodeStream.js\";import{Simple as N}from\"./simple.js\";import{Tag as P}from\"./tag.js\";import{diagnose as U}from\"./diagnostic.js\";const H=new TextDecoder;class A extends T{depth=0;leaf=!1;value;length;[E.ENCODED];constructor(a,f,e,n){super(a,f,e,n),this.parent?this.depth=this.parent.depth+1:this.depth=n.initialDepth,[,,this.value,,this.length]=a}numBytes(){switch(this.ai){case b.ONE:return 1;case b.TWO:return 2;case b.FOUR:return 4;case b.EIGHT:return 8}return 0}}function k(t){return t instanceof A}function O(t,a){return t===1/0?\"Indefinite\":a?`${t} ${a}${t!==1&&t!==1n?\"s\":\"\"}`:String(t)}function y(t){return\"\".padStart(t,\" \")}function x(t,a,f){let e=\"\";e+=y(t.depth*2);const n=B(t);e+=C(n.subarray(0,1));const r=t.numBytes();r&&(e+=\" \",e+=C(n.subarray(1,r+1))),e=e.padEnd(a.minCol+1,\" \"),e+=\"-- \",f!==void 0&&(e+=y(t.depth*2),f!==\"\"&&(e+=`[${f}] `));let p=!1;const[s]=t.children;switch(t.mt){case u.POS_INT:e+=`Unsigned: ${s}`,typeof s==\"bigint\"&&(e+=\"n\");break;case u.NEG_INT:e+=`Negative: ${s}`,typeof s==\"bigint\"&&(e+=\"n\");break;case u.BYTE_STRING:e+=`Bytes (Length: ${O(t.length)})`;break;case u.UTF8_STRING:e+=`UTF8 (Length: ${O(t.length)})`,t.length!==1/0&&(e+=`: ${JSON.stringify(s)}`);break;case u.ARRAY:e+=`Array (Length: ${O(t.value,\"item\")})`;break;case u.MAP:e+=`Map (Length: ${O(t.value,\"pair\")})`;break;case u.TAG:{e+=`Tag #${t.value}`;const o=t.children,[m]=o.contents.children,i=new P(o.tag,m);R(i,n);const l=i.comment(a,t.depth);l&&(e+=\": \",e+=l),p||=i.noChildren;break}case u.SIMPLE_FLOAT:s===E.BREAK?e+=\"BREAK\":t.ai>b.ONE?Object.is(s,-0)?e+=\"Float: -0\":e+=`Float: ${s}`:(e+=\"Simple: \",s instanceof N?e+=s.value:e+=s);break}if(!p)if(t.leaf){if(e+=`\n`,n.length>r+1){const o=y((t.depth+1)*2),m=S(n);if(m?.length){m.sort((l,c)=>{const g=l[0]-c[0];return g||c[1]-l[1]});let i=0;for(const[l,c,g]of m)if(!(l<i)){if(i=l+c,g===\"<<\"){e+=y(a.minCol+1),e+=\"--\",e+=o,e+=\"<< \";const d=I(n,l,l+c),h=S(d);if(h){const $=h.findIndex(([w,D,v])=>w===0&&D===c&&v===\"<<\");$>=0&&h.splice($,1)}e+=U(d),e+=` >>\n`,e+=L(d,{initialDepth:t.depth+1,minCol:a.minCol,noPrefixHex:!0});continue}else g===\"'\"&&(e+=y(a.minCol+1),e+=\"--\",e+=o,e+=\"'\",e+=H.decode(n.subarray(l,l+c)),e+=`'\n`);if(l>r)for(let d=l;d<l+c;d+=8){const h=Math.min(d+8,l+c);e+=o,e+=C(n.subarray(d,h)),e+=`\n`}}}else for(let i=r+1;i<n.length;i+=8)e+=o,e+=C(n.subarray(i,i+8)),e+=`\n`}}else{e+=`\n`;let o=0;for(const m of t.children){if(k(m)){let i=String(o);t.mt===u.MAP?i=o%2?`val ${(o-1)/2}`:`key ${o/2}`:t.mt===u.TAG&&(i=\"\"),e+=x(m,a,i)}o++}}return e}const q={...T.defaultDecodeOptions,initialDepth:0,noPrefixHex:!1,minCol:0};function L(t,a){const f={...q,...a,ParentType:A,saveOriginal:!0},e=new M(t,f);let n,r;for(const s of e){if(r=T.create(s,n,f,e),s[2]===E.BREAK)if(n?.isStreaming)n.left=1;else throw new Error(\"Unexpected BREAK\");if(!k(r)){const i=new A(s,0,n,f);i.leaf=!0,i.children.push(r),R(i,e.toHere(s[3])),r=i}let o=(r.depth+1)*2;const m=r.numBytes();for(m&&(o+=1,o+=m*2),f.minCol=Math.max(f.minCol,o),n&&n.push(r,e,s[3]),n=r;n?.done;)r=n,r.leaf||R(r,e.toHere(r.offset)),{parent:n}=n}a&&(a.minCol=f.minCol);let p=f.noPrefixHex?\"\":`0x${C(e.toHere(0))}\n`;return p+=x(r,f),p}export{L as comment};\n","import{MT as R,TAG as a}from\"./constants.js\";import{box as L,getEncoded as q}from\"./box.js\";import{base64ToBytes as C,base64UrlToBytes as v,isBigEndian as V,u8toHex as A}from\"./utils.js\";import{encode as b,registerEncoder as s,writeInt as W,writeLength as k,writeTag as F,writeUnknown as P}from\"./encoder.js\";import{CBORcontainer as M}from\"./container.js\";import{Tag as i}from\"./tag.js\";import{Wtf8Decoder as B}from\"@cto.af/wtf8\";import{comment as K}from\"./comment.js\";const S=!V();function O(e){if(typeof e==\"object\"&&e){if(e.constructor!==Number)throw new Error(`Expected number: ${e}`)}else if(typeof e!=\"number\")throw new Error(`Expected number: ${e}`)}function E(e){if(typeof e==\"object\"&&e){if(e.constructor!==String)throw new Error(`Expected string: ${e}`)}else if(typeof e!=\"string\")throw new Error(`Expected string: ${e}`)}function f(e){if(!(e instanceof Uint8Array))throw new Error(`Expected Uint8Array: ${e}`)}function U(e){if(!Array.isArray(e))throw new Error(`Expected Array: ${e}`)}s(Map,(e,r,n)=>{const t=[...e.entries()].map(o=>[o[0],o[1],b(o[0],n)]);if(n.rejectDuplicateKeys){const o=new Set;for(const[d,u,y]of t){const g=A(y);if(o.has(g))throw new Error(`Duplicate map key: 0x${g}`);o.add(g)}}n.sortKeys&&t.sort(n.sortKeys),k(e,e.size,R.MAP,r,n);for(const[o,d,u]of t)r.write(u),P(d,r,n)});function h(e){return E(e.contents),new Date(e.contents)}h.comment=e=>(E(e.contents),`(String Date) ${new Date(e.contents).toISOString()}`),i.registerDecoder(a.DATE_STRING,h);function N(e){return O(e.contents),new Date(e.contents*1e3)}N.comment=e=>(O(e.contents),`(Epoch Date) ${new Date(e.contents*1e3).toISOString()}`),i.registerDecoder(a.DATE_EPOCH,N),s(Date,e=>[a.DATE_EPOCH,e.valueOf()/1e3]);function T(e,r,n){if(f(r.contents),n.rejectBigInts)throw new Error(`Decoding unwanted big integer: ${r}(h'${A(r.contents)}')`);if(n.requirePreferred&&r.contents[0]===0)throw new Error(`Decoding overly-large bigint: ${r.tag}(h'${A(r.contents)})`);let t=r.contents.reduce((o,d)=>o<<8n|BigInt(d),0n);if(e&&(t=-1n-t),n.requirePreferred&&t>=Number.MIN_SAFE_INTEGER&&t<=Number.MAX_SAFE_INTEGER)throw new Error(`Decoding bigint that could have been int: ${t}n`);return n.boxed?L(t,r.contents):t}const _=T.bind(null,!1),$=T.bind(null,!0);_.comment=(e,r)=>`(Positive BigInt) ${T(!1,e,r)}n`,$.comment=(e,r)=>`(Negative BigInt) ${T(!0,e,r)}n`,i.registerDecoder(a.POS_BIGINT,_),i.registerDecoder(a.NEG_BIGINT,$);function D(e,r){return f(e.contents),e}D.comment=(e,r,n)=>{f(e.contents);const t={...r,initialDepth:n+2,noPrefixHex:!0},o=q(e);let u=2**((o[0]&31)-24)+1;const y=o[u]&31;let g=A(o.subarray(u,++u));y>=24&&(g+=\" \",g+=A(o.subarray(u,u+2**(y-24)))),t.minCol=Math.max(t.minCol,(n+1)*2+g.length);const p=K(e.contents,t);let I=`Embedded CBOR\n`;return I+=`${\"\".padStart((n+1)*2,\" \")}${g}`.padEnd(t.minCol+1,\" \"),I+=`-- Bytes (Length: ${e.contents.length})\n`,I+=p,I},D.noChildren=!0,i.registerDecoder(a.CBOR,D),i.registerDecoder(a.URI,e=>(E(e.contents),new URL(e.contents)),\"URI\"),s(URL,e=>[a.URI,e.toString()]),i.registerDecoder(a.BASE64URL,e=>(E(e.contents),v(e.contents)),\"Base64url-encoded\"),i.registerDecoder(a.BASE64,e=>(E(e.contents),C(e.contents)),\"Base64-encoded\"),i.registerDecoder(35,e=>(E(e.contents),new RegExp(e.contents)),\"RegExp\"),i.registerDecoder(21065,e=>{E(e.contents);const r=`^(?:${e.contents})$`;return new RegExp(r,\"u\")},\"I-RegExp\"),i.registerDecoder(a.REGEXP,e=>{if(U(e.contents),e.contents.length<1||e.contents.length>2)throw new Error(`Invalid RegExp Array: ${e.contents}`);return new RegExp(e.contents[0],e.contents[1])},\"RegExp\"),s(RegExp,e=>[a.REGEXP,[e.source,e.flags]]),i.registerDecoder(64,e=>(f(e.contents),e.contents),\"uint8 Typed Array\");function c(e,r,n){f(e.contents);let t=e.contents.length;if(t%r.BYTES_PER_ELEMENT!==0)throw new Error(`Number of bytes must be divisible by ${r.BYTES_PER_ELEMENT}, got: ${t}`);t/=r.BYTES_PER_ELEMENT;const o=new r(t),d=new DataView(e.contents.buffer,e.contents.byteOffset,e.contents.byteLength),u=d[`get${r.name.replace(/Array/,\"\")}`].bind(d);for(let y=0;y<t;y++)o[y]=u(y*r.BYTES_PER_ELEMENT,n);return o}function l(e,r,n,t,o){const d=o.forceEndian??S;if(F(d?r:n,e,o),W(t.byteLength,e,R.BYTE_STRING),S===d)e.write(new Uint8Array(t.buffer,t.byteOffset,t.byteLength));else{const y=`write${t.constructor.name.replace(/Array/,\"\")}`,g=e[y].bind(e);for(const p of t)g(p,d)}}i.registerDecoder(65,e=>c(e,Uint16Array,!1),\"uint16, big endian, Typed Array\"),i.registerDecoder(66,e=>c(e,Uint32Array,!1),\"uint32, big endian, Typed Array\"),i.registerDecoder(67,e=>c(e,BigUint64Array,!1),\"uint64, big endian, Typed Array\"),i.registerDecoder(68,e=>(f(e.contents),new Uint8ClampedArray(e.contents)),\"uint8 Typed Array, clamped arithmetic\"),s(Uint8ClampedArray,e=>[68,new Uint8Array(e.buffer,e.byteOffset,e.byteLength)]),i.registerDecoder(69,e=>c(e,Uint16Array,!0),\"uint16, little endian, Typed Array\"),s(Uint16Array,(e,r,n)=>l(r,69,65,e,n)),i.registerDecoder(70,e=>c(e,Uint32Array,!0),\"uint32, little endian, Typed Array\"),s(Uint32Array,(e,r,n)=>l(r,70,66,e,n)),i.registerDecoder(71,e=>c(e,BigUint64Array,!0),\"uint64, little endian, Typed Array\"),s(BigUint64Array,(e,r,n)=>l(r,71,67,e,n)),i.registerDecoder(72,e=>(f(e.contents),new Int8Array(e.contents)),\"sint8 Typed Array\"),s(Int8Array,e=>[72,new Uint8Array(e.buffer,e.byteOffset,e.byteLength)]),i.registerDecoder(73,e=>c(e,Int16Array,!1),\"sint16, big endian, Typed Array\"),i.registerDecoder(74,e=>c(e,Int32Array,!1),\"sint32, big endian, Typed Array\"),i.registerDecoder(75,e=>c(e,BigInt64Array,!1),\"sint64, big endian, Typed Array\"),i.registerDecoder(77,e=>c(e,Int16Array,!0),\"sint16, little endian, Typed Array\"),s(Int16Array,(e,r,n)=>l(r,77,73,e,n)),i.registerDecoder(78,e=>c(e,Int32Array,!0),\"sint32, little endian, Typed Array\"),s(Int32Array,(e,r,n)=>l(r,78,74,e,n)),i.registerDecoder(79,e=>c(e,BigInt64Array,!0),\"sint64, little endian, Typed Array\"),s(BigInt64Array,(e,r,n)=>l(r,79,75,e,n)),i.registerDecoder(81,e=>c(e,Float32Array,!1),\"IEEE 754 binary32, big endian, Typed Array\"),i.registerDecoder(82,e=>c(e,Float64Array,!1),\"IEEE 754 binary64, big endian, Typed Array\"),i.registerDecoder(85,e=>c(e,Float32Array,!0),\"IEEE 754 binary32, little endian, Typed Array\"),s(Float32Array,(e,r,n)=>l(r,85,81,e,n)),i.registerDecoder(86,e=>c(e,Float64Array,!0),\"IEEE 754 binary64, big endian, Typed Array\"),s(Float64Array,(e,r,n)=>l(r,86,82,e,n)),i.registerDecoder(a.SET,(e,r)=>{if(U(e.contents),r.sortKeys){const n=M.decodeToEncodeOpts(r);let t=null;for(const o of e.contents){const d=[o,void 0,b(o,n)];if(t&&r.sortKeys(t,d)>=0)throw new Error(`Set items out of order in tag #${a.SET}`);t=d}}return new Set(e.contents)},\"Set\"),s(Set,(e,r,n)=>{let t=[...e];if(n.sortKeys){const o=t.map(d=>[d,void 0,b(d,n)]);o.sort(n.sortKeys),t=o.map(([d])=>d)}return[a.SET,t]}),i.registerDecoder(a.JSON,e=>(E(e.contents),JSON.parse(e.contents)),\"JSON-encoded\");function x(e){return f(e.contents),new B().decode(e.contents)}x.comment=e=>{f(e.contents);const r=new B;return`(WTF8 string): ${JSON.stringify(r.decode(e.contents))}`},i.registerDecoder(a.WTF8,x),i.registerDecoder(a.SELF_DESCRIBED,e=>e.contents,\"Self-Described\"),i.registerDecoder(a.INVALID_16,()=>{throw new Error(`Tag always invalid: ${a.INVALID_16}`)},\"Invalid\"),i.registerDecoder(a.INVALID_32,()=>{throw new Error(`Tag always invalid: ${a.INVALID_32}`)},\"Invalid\"),i.registerDecoder(a.INVALID_64,()=>{throw new Error(`Tag always invalid: ${a.INVALID_64}`)},\"Invalid\");function w(e){throw new Error(`Encoding ${e.constructor.name} intentionally unimplmented.  It is not concrete enough to interoperate.  Convert to Uint8Array first.`)}s(ArrayBuffer,w),s(DataView,w),typeof SharedArrayBuffer<\"u\"&&s(SharedArrayBuffer,w);function m(e){return[NaN,e.valueOf()]}s(Boolean,m),s(Number,m),s(String,m),s(BigInt,m);\n","import{DecodeStream as a}from\"./decodeStream.js\";import{CBORcontainer as s}from\"./container.js\";import{SYMS as u}from\"./constants.js\";function c(i){const e={...s.defaultDecodeOptions};if(i.dcbor?Object.assign(e,s.dcborDecodeOptions):i.cde&&Object.assign(e,s.cdeDecodeOptions),Object.assign(e,i),Object.hasOwn(e,\"rejectLongNumbers\"))throw new TypeError(\"rejectLongNumbers has changed to requirePreferred\");return e.boxed&&(e.saveOriginal=!0),e}class d{parent=void 0;ret=void 0;step(e,n,t){if(this.ret=s.create(e,this.parent,n,t),e[2]===u.BREAK)if(this.parent?.isStreaming)this.parent.left=0;else throw new Error(\"Unexpected BREAK\");else this.parent&&this.parent.push(this.ret,t,e[3]);for(this.ret instanceof s&&(this.parent=this.ret);this.parent?.done;){this.ret=this.parent.convert(t);const r=this.parent.parent;r?.replaceLast(this.ret,this.parent,t),this.parent=r}}}function l(i,e={}){const n=c(e),t=new a(i,n),r=new d;for(const o of t)r.step(o,n,t);return r.ret}class O{#t;#e;constructor(e,n={}){const t=new a(e,c(n));this.#t=t.seq()}peek(){return this.#e||(this.#e=this.#n()),this.#e}read(){const e=this.#e??this.#n();return this.#e=void 0,e}*[Symbol.iterator](){for(;;){const e=this.read();if(!e)return;yield e}}#n(){const{value:e,done:n}=this.#t.next();if(!n)return e}}function*b(i,e={}){const n=c(e),t=new a(i,n),r=new d;for(const o of t.seq())r.step(o,n,t),r.parent||(yield r.ret)}export{O as SequenceEvents,l as decode,b as decodeSequence};\n","// SPDX-License-Identifier: MIT\nimport { encode } from 'cbor2';\nimport { Seed } from './seed';\nimport { BIP39Seed } from './bip39';\nimport { Cardano } from '../cryptocurrencies';\nimport { BIP39Mnemonic } from '../mnemonics';\nimport { blake2b256 } from '../crypto';\nimport { bytesToString, hexToBytes } from '../utils';\nimport { MnemonicError, SeedError } from '../exceptions';\nexport class CardanoSeed extends Seed {\n    constructor(seed, options = {\n        cardanoType: Cardano.TYPES.BYRON_ICARUS\n    }) {\n        if (options.cardanoType && !Cardano.TYPES.isCardanoType(options.cardanoType)) {\n            throw new SeedError('Invalid Cardano type', {\n                expected: Cardano.TYPES.getCardanoTypes(), got: options.cardanoType\n            });\n        }\n        super(seed, options);\n    }\n    static getName() {\n        return 'Cardano';\n    }\n    getCardanoType() {\n        if (!this.options?.cardanoType) {\n            throw new SeedError('cardanoType is not found');\n        }\n        return this.options?.cardanoType;\n    }\n    static fromMnemonic(mnemonic, options = {\n        cardanoType: Cardano.TYPES.BYRON_ICARUS\n    }) {\n        switch (options.cardanoType) {\n            case Cardano.TYPES.BYRON_ICARUS:\n                return this.generateByronIcarus(mnemonic);\n            case Cardano.TYPES.BYRON_LEDGER:\n                return this.generateByronLedger(mnemonic, options.passphrase);\n            case Cardano.TYPES.BYRON_LEGACY:\n                return this.generateByronLegacy(mnemonic);\n            case Cardano.TYPES.SHELLEY_ICARUS:\n                return this.generateShelleyIcarus(mnemonic);\n            case Cardano.TYPES.SHELLEY_LEDGER:\n                return this.generateShelleyLedger(mnemonic, options.passphrase);\n            default:\n                throw new SeedError('Invalid Cardano type', {\n                    expected: Cardano.TYPES.getCardanoTypes(), got: options.cardanoType\n                });\n        }\n    }\n    static generateByronIcarus(mnemonic) {\n        const phrase = typeof mnemonic === 'string' ? mnemonic : mnemonic.getMnemonic();\n        if (!BIP39Mnemonic.isValid(phrase)) {\n            throw new MnemonicError(`Invalid Cardano mnemonic words`);\n        }\n        return BIP39Mnemonic.decode(phrase);\n    }\n    static generateByronLedger(mnemonic, passphrase) {\n        const phrase = typeof mnemonic === 'string' ? mnemonic : mnemonic.getMnemonic();\n        return BIP39Seed.fromMnemonic(phrase, { passphrase: passphrase });\n    }\n    static generateByronLegacy(mnemonic) {\n        const phrase = typeof mnemonic === 'string' ? mnemonic : mnemonic.getMnemonic();\n        if (!BIP39Mnemonic.isValid(phrase)) {\n            throw new MnemonicError(`Invalid Cardano mnemonic words`);\n        }\n        const decoded = BIP39Mnemonic.decode(phrase);\n        const rawBytes = hexToBytes(decoded);\n        const cborBytes = encode(rawBytes);\n        const hash = blake2b256(cborBytes);\n        return bytesToString(hash);\n    }\n    static generateShelleyIcarus(mnemonic) {\n        return this.generateByronIcarus(mnemonic);\n    }\n    static generateShelleyLedger(mnemonic, passphrase) {\n        return this.generateByronLedger(mnemonic, passphrase);\n    }\n}\n//# sourceMappingURL=cardano.js.map","// SPDX-License-Identifier: MIT\nimport { Seed } from '../seed';\nimport { ElectrumV1Mnemonic } from '../../mnemonics';\nimport { sha256 } from '../../crypto';\nimport { bytesToString, concatBytes, toBuffer } from '../../utils';\nimport { MnemonicError } from '../../exceptions';\nexport class ElectrumV1Seed extends Seed {\n    static hashIterationNumber = 10 ** 5;\n    static getName() {\n        return 'Electrum-V1';\n    }\n    static fromMnemonic(mnemonic) {\n        const phrase = typeof mnemonic === 'string' ? mnemonic : mnemonic.getMnemonic();\n        if (!ElectrumV1Mnemonic.isValid(phrase)) {\n            throw new MnemonicError(`Invalid ${this.getName()} mnemonic words`);\n        }\n        const entropy = ElectrumV1Mnemonic.decode(phrase);\n        const entropyBuffer = toBuffer(entropy, 'utf8');\n        let entropyHash = entropyBuffer;\n        for (let i = 0; i < this.hashIterationNumber; i++) {\n            entropyHash = sha256(concatBytes(entropyHash, entropyBuffer));\n        }\n        return bytesToString(entropyHash);\n    }\n}\n//# sourceMappingURL=v1.js.map","// SPDX-License-Identifier: MIT\nimport { Seed } from '../seed';\nimport { ElectrumV2Mnemonic, ELECTRUM_V2_MNEMONIC_TYPES } from '../../mnemonics';\nimport { pbkdf2HmacSha512 } from '../../crypto';\nimport { bytesToString } from '../../utils';\nimport { MnemonicError, SeedError } from '../../exceptions';\nexport class ElectrumV2Seed extends Seed {\n    static seedSaltModifier = 'electrum';\n    static seedPbkdf2Rounds = 2048;\n    static getName() {\n        return 'Electrum-V2';\n    }\n    static fromMnemonic(mnemonic, options = {\n        mnemonicType: ELECTRUM_V2_MNEMONIC_TYPES.STANDARD\n    }) {\n        const phrase = typeof mnemonic === 'string' ? mnemonic : mnemonic.getMnemonic();\n        if (!ElectrumV2Mnemonic.isValid(phrase, { mnemonicType: options.mnemonicType })) {\n            throw new MnemonicError(`Invalid ${this.getName()} mnemonic words`);\n        }\n        const saltBase = (this.seedSaltModifier + (options.passphrase ?? '')).normalize('NFKD');\n        const seedBytes = pbkdf2HmacSha512(phrase, saltBase, this.seedPbkdf2Rounds);\n        return bytesToString(seedBytes);\n    }\n    getMnemonicType() {\n        if (!this.options?.mnemonicType) {\n            throw new SeedError('mnemonicType is not found');\n        }\n        return this.options?.mnemonicType;\n    }\n}\n//# sourceMappingURL=v2.js.map","// SPDX-License-Identifier: MIT\nimport { MoneroMnemonic } from '../mnemonics';\nimport { MnemonicError } from '../exceptions';\nimport { Seed } from './seed';\nexport class MoneroSeed extends Seed {\n    static getName() {\n        return 'Monero';\n    }\n    static fromMnemonic(mnemonic) {\n        const phrase = typeof mnemonic === 'string' ? mnemonic : mnemonic.getMnemonic();\n        if (!MoneroMnemonic.isValid(phrase)) {\n            throw new MnemonicError(`Invalid ${this.getName()} mnemonic words`);\n        }\n        return MoneroMnemonic.decode(phrase);\n    }\n}\n//# sourceMappingURL=monero.js.map","// SPDX-License-Identifier: MIT\nimport { Seed } from './seed';\nimport { SeedError } from '../exceptions';\nimport { AlgorandSeed } from './algorand';\nimport { BIP39Seed } from './bip39';\nimport { CardanoSeed } from './cardano';\nimport { ElectrumV1Seed, ElectrumV2Seed } from './electrum';\nimport { MoneroSeed } from './monero';\nexport class SEEDS {\n    static dictionary = {\n        [AlgorandSeed.getName()]: AlgorandSeed,\n        [BIP39Seed.getName()]: BIP39Seed,\n        [CardanoSeed.getName()]: CardanoSeed,\n        [ElectrumV1Seed.getName()]: ElectrumV1Seed,\n        [ElectrumV2Seed.getName()]: ElectrumV2Seed,\n        [MoneroSeed.getName()]: MoneroSeed\n    };\n    static getNames() {\n        return Object.keys(this.dictionary);\n    }\n    static getClasses() {\n        return Object.values(this.dictionary);\n    }\n    static getSeedClass(name) {\n        if (!this.isSeed(name)) {\n            throw new SeedError('Invalid seed name', { expected: this.getNames(), got: name });\n        }\n        return this.dictionary[name];\n    }\n    static isSeed(name) {\n        return this.getNames().includes(name);\n    }\n}\nexport { Seed, AlgorandSeed, BIP39Seed, CardanoSeed, ElectrumV1Seed, ElectrumV2Seed, MoneroSeed };\n//# sourceMappingURL=index.js.map","// SPDX-License-Identifier: MIT\nimport { normalizeDerivation } from '../utils';\nexport class Derivation {\n    path;\n    indexes;\n    derivations;\n    purpose = [0, true];\n    constructor(options = {}) {\n        const [path, indexes, derivations] = normalizeDerivation(options?.path, options?.indexes);\n        this.derivations = derivations;\n        this.indexes = indexes;\n        this.path = path;\n    }\n    static getName() {\n        throw new Error('Must override getName()');\n    }\n    getName() {\n        return this.constructor.getName();\n    }\n    clean() {\n        throw new Error('Must override clean()');\n    }\n    getPath() {\n        return this.path;\n    }\n    getIndexes() {\n        return this.indexes;\n    }\n    getDerivations() {\n        return this.derivations;\n    }\n    getDepth() {\n        return this.derivations.length;\n    }\n    getPurpose() {\n        throw new Error('Must override getPurpose()');\n    }\n    getCoinType() {\n        throw new Error('Must override getCoinType()');\n    }\n    getAccount() {\n        throw new Error('Must override getAccount()');\n    }\n    getChange(...args) {\n        throw new Error('Must override getChange()');\n    }\n    getRole(...args) {\n        throw new Error('Must override getRole()');\n    }\n    getAddress() {\n        throw new Error('Must override getAddress()');\n    }\n    getMinor() {\n        throw new Error('Must override getMinor()');\n    }\n    getMajor() {\n        throw new Error('Must override getMajor()');\n    }\n}\n//# sourceMappingURL=derivation.js.map","// SPDX-License-Identifier: MIT\nimport { Derivation } from './derivation';\nimport { normalizeDerivation } from '../utils';\nimport { DerivationError } from '../exceptions';\nexport class CustomDerivation extends Derivation {\n    static getName() {\n        return 'Custom';\n    }\n    fromPath(path) {\n        if (!path.startsWith('m/')) {\n            throw new DerivationError('Bad path format', { expected: \"like this type of path \\'m/0'/0\\'\", got: path });\n        }\n        const [_path, indexes, derivations] = normalizeDerivation(path, undefined);\n        this.derivations = derivations;\n        this.indexes = indexes;\n        this.path = _path;\n        return this;\n    }\n    fromIndexes(indexes) {\n        const [path, _indexes, derivations] = normalizeDerivation(undefined, indexes);\n        this.derivations = derivations;\n        this.indexes = _indexes;\n        this.path = path;\n        return this;\n    }\n    fromIndex(index, hardened = false) {\n        const path = hardened ? `${index}'` : `${index}`;\n        return this.fromPath(this.path === 'm/' ? `${this.path}${path}` : `${this.path}/${path}`);\n    }\n    clean() {\n        const [path, indexes, derivations] = normalizeDerivation(undefined, undefined);\n        this.derivations = derivations;\n        this.indexes = indexes;\n        this.path = path;\n        return this;\n    }\n}\n//# sourceMappingURL=custom.js.map","// SPDX-License-Identifier: MIT\nimport { Derivation } from './derivation';\nimport { Bitcoin } from '../cryptocurrencies';\nimport { normalizeIndex, normalizeDerivation, indexTupleToString } from '../utils';\nimport { DerivationError } from '../exceptions';\nexport const CHANGES = {\n    EXTERNAL_CHAIN: 'external-chain',\n    INTERNAL_CHAIN: 'internal-chain'\n};\nexport class BIP44Derivation extends Derivation {\n    purpose = [44, true];\n    coinType;\n    account;\n    change;\n    address;\n    constructor(options = {\n        coinType: Bitcoin.COIN_TYPE, account: 0, change: CHANGES.EXTERNAL_CHAIN, address: 0\n    }) {\n        super(options);\n        this.coinType = normalizeIndex(options.coinType ?? Bitcoin.COIN_TYPE, true);\n        this.account = normalizeIndex(options.account ?? 0, true);\n        this.change = normalizeIndex(this.getChangeValue(options.change ?? CHANGES.EXTERNAL_CHAIN), false);\n        this.address = normalizeIndex(options.address ?? 0, false);\n        this.updateDerivation();\n    }\n    static getName() {\n        return 'BIP44';\n    }\n    getChangeValue(change, nameOnly = false) {\n        if (Array.isArray(change)) {\n            throw new DerivationError('Bad change instance', {\n                expected: 'number | string', got: typeof change\n            });\n        }\n        const externalChange = [CHANGES.EXTERNAL_CHAIN, 0, '0'];\n        const internalChange = [CHANGES.INTERNAL_CHAIN, 1, '1'];\n        const exceptedChange = [\n            ...externalChange, ...internalChange\n        ];\n        if (!exceptedChange.includes(change)) {\n            throw new DerivationError(`Bad ${this.getName()} change index`, {\n                expected: exceptedChange, got: change\n            });\n        }\n        if (externalChange.includes(change))\n            return nameOnly ? CHANGES.EXTERNAL_CHAIN : 0;\n        if (internalChange.includes(change))\n            return nameOnly ? CHANGES.INTERNAL_CHAIN : 1;\n    }\n    updateDerivation() {\n        const [path, indexes, derivations] = normalizeDerivation(`m/${indexTupleToString(this.purpose)}/` +\n            `${indexTupleToString(this.coinType)}/` +\n            `${indexTupleToString(this.account)}/` +\n            `${indexTupleToString(this.change)}/` +\n            `${indexTupleToString(this.address)}`);\n        this.derivations = derivations;\n        this.indexes = indexes;\n        this.path = path;\n    }\n    fromCoinType(coinType) {\n        this.coinType = normalizeIndex(coinType, true);\n        this.updateDerivation();\n        return this;\n    }\n    fromAccount(account) {\n        this.account = normalizeIndex(account, true);\n        this.updateDerivation();\n        return this;\n    }\n    fromChange(change) {\n        this.change = normalizeIndex(this.getChangeValue(change), false);\n        this.updateDerivation();\n        return this;\n    }\n    fromAddress(address) {\n        this.address = normalizeIndex(address, false);\n        this.updateDerivation();\n        return this;\n    }\n    clean() {\n        this.coinType = normalizeIndex(Bitcoin.COIN_TYPE, true);\n        this.account = normalizeIndex(0, true);\n        this.change = normalizeIndex(this.getChangeValue(CHANGES.EXTERNAL_CHAIN), false);\n        this.address = normalizeIndex(0, false);\n        this.updateDerivation();\n        return this;\n    }\n    getPurpose() {\n        return this.purpose[0];\n    }\n    getCoinType() {\n        return this.coinType[0];\n    }\n    getAccount() {\n        return this.account.length === 3 ? this.account[1] : this.account[0];\n    }\n    getChange(nameOnly = true) {\n        return this.getChangeValue(this.change[0], nameOnly);\n    }\n    getAddress() {\n        return this.address.length === 3 ? this.address[1] : this.address[0];\n    }\n}\n//# sourceMappingURL=bip44.js.map","// SPDX-License-Identifier: MIT\nimport { BIP44Derivation, CHANGES } from './bip44';\nimport { Bitcoin } from '../cryptocurrencies';\nexport class BIP49Derivation extends BIP44Derivation {\n    purpose = [49, true];\n    constructor(options = {\n        coinType: Bitcoin.COIN_TYPE, account: 0, change: CHANGES.EXTERNAL_CHAIN, address: 0\n    }) {\n        super(options);\n        this.updateDerivation();\n    }\n    static getName() {\n        return 'BIP49';\n    }\n}\n//# sourceMappingURL=bip49.js.map","// SPDX-License-Identifier: MIT\nimport { BIP44Derivation, CHANGES } from './bip44';\nimport { Bitcoin } from '../cryptocurrencies';\nexport class BIP84Derivation extends BIP44Derivation {\n    purpose = [84, true];\n    constructor(options = {\n        coinType: Bitcoin.COIN_TYPE, account: 0, change: CHANGES.EXTERNAL_CHAIN, address: 0\n    }) {\n        super(options);\n        this.updateDerivation();\n    }\n    static getName() {\n        return 'BIP84';\n    }\n}\n//# sourceMappingURL=bip84.js.map","// SPDX-License-Identifier: MIT\nimport { BIP44Derivation, CHANGES } from './bip44';\nimport { Bitcoin } from '../cryptocurrencies';\nexport class BIP86Derivation extends BIP44Derivation {\n    purpose = [86, true];\n    constructor(options = {\n        coinType: Bitcoin.COIN_TYPE, account: 0, change: CHANGES.EXTERNAL_CHAIN, address: 0\n    }) {\n        super(options);\n        this.updateDerivation();\n    }\n    static getName() {\n        return 'BIP86';\n    }\n}\n//# sourceMappingURL=bip86.js.map","// SPDX-License-Identifier: MIT\nimport { Derivation } from './derivation';\nimport { Cardano } from '../cryptocurrencies';\nimport { normalizeIndex, normalizeDerivation, indexTupleToString } from '../utils';\nimport { DerivationError } from '../exceptions';\nexport const ROLES = {\n    EXTERNAL_CHAIN: 'external-chain',\n    INTERNAL_CHAIN: 'internal-chain',\n    STAKING_KEY: 'staking-key'\n};\nexport class CIP1852Derivation extends Derivation {\n    purpose = [1852, true];\n    coinType;\n    account;\n    role;\n    address;\n    constructor(options = {\n        coinType: Cardano.COIN_TYPE, account: 0, role: ROLES.EXTERNAL_CHAIN, address: 0\n    }) {\n        super(options);\n        this.coinType = normalizeIndex(options.coinType ?? Cardano.COIN_TYPE, true);\n        this.account = normalizeIndex(options.account ?? 0, true);\n        this.role = normalizeIndex(this.getRoleValue(options.role ?? ROLES.EXTERNAL_CHAIN), false);\n        this.address = normalizeIndex(options.address ?? 0, false);\n        this.updateDerivation();\n    }\n    static getName() {\n        return 'CIP1852';\n    }\n    getRoleValue(role, nameOnly = false) {\n        if (Array.isArray(role)) {\n            throw new DerivationError('Bad role instance', {\n                expected: 'number | string', got: typeof role\n            });\n        }\n        const externalChange = [ROLES.EXTERNAL_CHAIN, 0, '0'];\n        const internalChange = [ROLES.INTERNAL_CHAIN, 1, '1'];\n        const stakingKey = [ROLES.STAKING_KEY, 2, '2'];\n        const exceptedRole = [\n            ...externalChange, ...internalChange, ...stakingKey\n        ];\n        if (!exceptedRole.includes(role)) {\n            throw new DerivationError(`Bad ${this.getName()} role index`, {\n                expected: exceptedRole, got: role\n            });\n        }\n        if (externalChange.includes(role))\n            return nameOnly ? ROLES.EXTERNAL_CHAIN : 0;\n        if (internalChange.includes(role))\n            return nameOnly ? ROLES.INTERNAL_CHAIN : 1;\n        if (stakingKey.includes(role))\n            return nameOnly ? ROLES.STAKING_KEY : 2;\n    }\n    updateDerivation() {\n        const [path, indexes, derivations] = normalizeDerivation(`m/${indexTupleToString(this.purpose)}/` +\n            `${indexTupleToString(this.coinType)}/` +\n            `${indexTupleToString(this.account)}/` +\n            `${indexTupleToString(this.role)}/` +\n            `${indexTupleToString(this.address)}`);\n        this.derivations = derivations;\n        this.indexes = indexes;\n        this.path = path;\n    }\n    fromCoinType(coinType) {\n        this.coinType = normalizeIndex(coinType, true);\n        this.updateDerivation();\n        return this;\n    }\n    fromAccount(account) {\n        this.account = normalizeIndex(account, true);\n        this.updateDerivation();\n        return this;\n    }\n    fromRole(role) {\n        this.role = normalizeIndex(this.getRoleValue(role), false);\n        this.updateDerivation();\n        return this;\n    }\n    fromAddress(address) {\n        this.address = normalizeIndex(address, false);\n        this.updateDerivation();\n        return this;\n    }\n    clean() {\n        this.coinType = normalizeIndex(Cardano.COIN_TYPE, true);\n        this.account = normalizeIndex(0, true);\n        this.role = normalizeIndex(this.getRoleValue(ROLES.EXTERNAL_CHAIN), false);\n        this.address = normalizeIndex(0, false);\n        this.updateDerivation();\n        return this;\n    }\n    getPurpose() {\n        return this.purpose[0];\n    }\n    getCoinType() {\n        return this.coinType[0];\n    }\n    getAccount() {\n        return this.account.length === 3 ? this.account[1] : this.account[0];\n    }\n    getRole(nameOnly = true) {\n        return this.getRoleValue(this.role[0], nameOnly);\n    }\n    getAddress() {\n        return this.address.length === 3 ? this.address[1] : this.address[0];\n    }\n}\n//# sourceMappingURL=cip1852.js.map","// SPDX-License-Identifier: MIT\nimport { Derivation } from './derivation';\nimport { normalizeIndex, normalizeDerivation, indexTupleToString } from '../utils';\nexport class ElectrumDerivation extends Derivation {\n    change;\n    address;\n    constructor(options = {\n        change: 0, address: 0\n    }) {\n        super(options);\n        this.change = normalizeIndex(options.change ?? 0, false);\n        this.address = normalizeIndex(options.address ?? 0, false);\n        this.updateDerivation();\n    }\n    static getName() {\n        return 'Electrum';\n    }\n    updateDerivation() {\n        const [path, indexes, derivations] = normalizeDerivation(`m/${indexTupleToString(this.change)}/` +\n            `${indexTupleToString(this.address)}`);\n        this.derivations = derivations;\n        this.indexes = indexes;\n        this.path = path;\n    }\n    fromChange(change) {\n        this.change = normalizeIndex(change, false);\n        this.updateDerivation();\n        return this;\n    }\n    fromAddress(address) {\n        this.address = normalizeIndex(address, false);\n        this.updateDerivation();\n        return this;\n    }\n    clean() {\n        this.change = normalizeIndex(0, false);\n        this.address = normalizeIndex(0, false);\n        this.updateDerivation();\n        return this;\n    }\n    getChange() {\n        return this.change.length === 3 ? this.change[1] : this.change[0];\n    }\n    getAddress() {\n        return this.address.length === 3 ? this.address[1] : this.address[0];\n    }\n}\n//# sourceMappingURL=electrum.js.map","// SPDX-License-Identifier: MIT\nimport { Derivation } from './derivation';\nimport { normalizeIndex, normalizeDerivation, indexTupleToString } from '../utils';\nexport class MoneroDerivation extends Derivation {\n    minor;\n    major;\n    constructor(options = {\n        minor: 1, major: 0\n    }) {\n        super(options);\n        this.minor = normalizeIndex(options.minor ?? 0, false);\n        this.major = normalizeIndex(options.major ?? 0, false);\n        this.updateDerivation();\n    }\n    static getName() {\n        return 'Monero';\n    }\n    updateDerivation() {\n        const [path, indexes, derivations] = normalizeDerivation(`m/${indexTupleToString(this.minor)}/` +\n            `${indexTupleToString(this.major)}`);\n        this.derivations = derivations;\n        this.indexes = indexes;\n        this.path = path;\n    }\n    fromMinor(minor) {\n        this.minor = normalizeIndex(minor, false);\n        this.updateDerivation();\n        return this;\n    }\n    fromMajor(major) {\n        this.major = normalizeIndex(major, false);\n        this.updateDerivation();\n        return this;\n    }\n    clean() {\n        this.minor = normalizeIndex(1, false);\n        this.major = normalizeIndex(0, false);\n        this.updateDerivation();\n        return this;\n    }\n    getMinor() {\n        return this.minor.length === 3 ? this.minor[1] : this.minor[0];\n    }\n    getMajor() {\n        return this.major.length === 3 ? this.major[1] : this.major[0];\n    }\n}\n//# sourceMappingURL=monero.js.map","// SPDX-License-Identifier: MIT\nimport { Derivation } from './derivation';\nimport { normalizeIndex, normalizeDerivation, indexTupleToString, ensureTypeMatch } from '../utils';\nimport { EllipticCurveCryptography, SLIP10Secp256k1ECC, SLIP10Ed25519ECC, SLIP10Nist256p1ECC, KholawEd25519ECC, SLIP10Ed25519Blake2bECC, SLIP10Ed25519MoneroECC } from '../eccs';\nimport { DerivationError } from '../exceptions';\nexport class HDWDerivation extends Derivation {\n    account;\n    ecc;\n    address;\n    constructor(options = {\n        account: 0, ecc: SLIP10Secp256k1ECC, address: 0\n    }) {\n        super(options);\n        this.account = normalizeIndex(options.account ?? 0, true);\n        this.ecc = normalizeIndex(this.getECCValue(options.ecc ?? SLIP10Secp256k1ECC), false);\n        this.address = normalizeIndex(options.address ?? 0, false);\n        this.updateDerivation();\n    }\n    static getName() {\n        return 'HDW';\n    }\n    getECCValue(ecc, nameOnly = false) {\n        const { value, isValid } = ensureTypeMatch(ecc, EllipticCurveCryptography, { otherTypes: ['string', 'number'] });\n        const curve = isValid ? value.NAME : ecc;\n        const slip10Secp256k1 = [SLIP10Secp256k1ECC.NAME, 0, '0'];\n        const slip10Ed25519 = [SLIP10Ed25519ECC.NAME, 1, '1'];\n        const slip10Nist256p1 = [SLIP10Nist256p1ECC.NAME, 2, '2'];\n        const kholawEd25519 = [KholawEd25519ECC.NAME, 3, '3'];\n        const slip10Ed25519Blake2b = [SLIP10Ed25519Blake2bECC.NAME, 4, '4'];\n        const slip10Ed25519Monero = [SLIP10Ed25519MoneroECC.NAME, 5, '5'];\n        const exceptedECC = [\n            ...slip10Secp256k1, ...slip10Ed25519, ...slip10Nist256p1,\n            ...kholawEd25519, ...slip10Ed25519Blake2b, ...slip10Ed25519Monero\n        ];\n        if (!exceptedECC.includes(curve)) {\n            throw new DerivationError(`Bad ${this.getName()} ECC index`, {\n                expected: exceptedECC, got: curve\n            });\n        }\n        if (slip10Secp256k1.includes(curve))\n            return nameOnly ? SLIP10Secp256k1ECC.NAME : 0;\n        if (slip10Ed25519.includes(curve))\n            return nameOnly ? SLIP10Ed25519ECC.NAME : 1;\n        if (slip10Nist256p1.includes(curve))\n            return nameOnly ? SLIP10Nist256p1ECC.NAME : 2;\n        if (kholawEd25519.includes(curve))\n            return nameOnly ? KholawEd25519ECC.NAME : 3;\n        if (slip10Ed25519Blake2b.includes(curve))\n            return nameOnly ? SLIP10Ed25519Blake2bECC.NAME : 4;\n        if (slip10Ed25519Monero.includes(curve))\n            return nameOnly ? SLIP10Ed25519MoneroECC.NAME : 5;\n    }\n    updateDerivation() {\n        const [path, indexes, derivations] = normalizeDerivation(`m/${indexTupleToString(this.account)}/` +\n            `${indexTupleToString(this.ecc)}/` +\n            `${indexTupleToString(this.address)}`);\n        this.derivations = derivations;\n        this.indexes = indexes;\n        this.path = path;\n    }\n    fromAccount(account) {\n        this.account = normalizeIndex(account, true);\n        this.updateDerivation();\n        return this;\n    }\n    fromECC(ecc) {\n        this.ecc = normalizeIndex(this.getECCValue(ecc), false);\n        this.updateDerivation();\n        return this;\n    }\n    fromAddress(address) {\n        this.address = normalizeIndex(address, false);\n        this.updateDerivation();\n        return this;\n    }\n    clean() {\n        this.account = normalizeIndex(0, true);\n        this.ecc = normalizeIndex(this.getECCValue(SLIP10Secp256k1ECC), false);\n        this.address = normalizeIndex(0, false);\n        this.updateDerivation();\n        return this;\n    }\n    getAccount() {\n        return this.account.length === 3 ? this.account[1] : this.account[0];\n    }\n    getECC(nameOnly = true) {\n        return this.getECCValue(this.ecc[0], nameOnly);\n    }\n    getAddress() {\n        return this.address.length === 3 ? this.address[1] : this.address[0];\n    }\n}\n//# sourceMappingURL=hdw.js.map","// SPDX-License-Identifier: MIT\nimport { Derivation } from './derivation';\nimport { CustomDerivation } from './custom';\nimport { BIP44Derivation, CHANGES } from './bip44';\nimport { BIP49Derivation } from './bip49';\nimport { BIP84Derivation } from './bip84';\nimport { BIP86Derivation } from './bip86';\nimport { CIP1852Derivation, ROLES } from './cip1852';\nimport { ElectrumDerivation } from './electrum';\nimport { MoneroDerivation } from './monero';\nimport { HDWDerivation } from './hdw';\nimport { DerivationError } from '../exceptions';\nexport class DERIVATIONS {\n    static dictionary = {\n        [CustomDerivation.getName()]: CustomDerivation,\n        [BIP44Derivation.getName()]: BIP44Derivation,\n        [BIP49Derivation.getName()]: BIP49Derivation,\n        [BIP84Derivation.getName()]: BIP84Derivation,\n        [BIP86Derivation.getName()]: BIP86Derivation,\n        [CIP1852Derivation.getName()]: CIP1852Derivation,\n        [ElectrumDerivation.getName()]: ElectrumDerivation,\n        [MoneroDerivation.getName()]: MoneroDerivation,\n        [HDWDerivation.getName()]: HDWDerivation\n    };\n    static getNames() {\n        return Object.keys(this.dictionary);\n    }\n    static getClasses() {\n        return Object.values(this.dictionary);\n    }\n    static getDerivationClass(name) {\n        if (!this.isDerivation(name)) {\n            throw new DerivationError('Invalid derivation name', { expected: this.getNames(), got: name });\n        }\n        return this.dictionary[name];\n    }\n    static isDerivation(name) {\n        return this.dictionary.hasOwnProperty(name);\n    }\n}\nexport { Derivation, CustomDerivation, BIP44Derivation, CHANGES, BIP49Derivation, BIP84Derivation, BIP86Derivation, CIP1852Derivation, ROLES, ElectrumDerivation, MoneroDerivation, HDWDerivation };\n//# sourceMappingURL=index.js.map","// SPDX-License-Identifier: MIT\nexport class HD {\n    derivation;\n    constructor(options = {}) { }\n    static getName() {\n        throw new Error('Must override getName()');\n    }\n    getName() {\n        return this.constructor.getName();\n    }\n    fromSeed(...args) {\n        throw new Error('Not implemented');\n    }\n    fromXPrivateKey(...args) {\n        throw new Error('Not implemented');\n    }\n    fromXPublicKey(...args) {\n        throw new Error('Not implemented');\n    }\n    fromWIF(wif) {\n        throw new Error('Not implemented');\n    }\n    fromPrivateKey(privateKey) {\n        throw new Error('Not implemented');\n    }\n    fromSpendPrivateKey(spendPrivateKey) {\n        throw new Error('Not implemented');\n    }\n    fromPublicKey(publicKey) {\n        throw new Error('Not implemented');\n    }\n    fromWatchOnly(viewPrivateKey, spendPublicKey) {\n        throw new Error('Not implemented');\n    }\n    fromDerivation(derivation) {\n        throw new Error('Not implemented');\n    }\n    updateDerivation(derivation) {\n        throw new Error('Not implemented');\n    }\n    cleanDerivation() {\n        throw new Error('Not implemented');\n    }\n    getDerivation() {\n        return this.derivation;\n    }\n    getSeed() {\n        throw new Error('Not implemented');\n    }\n    getSemantic() {\n        return null;\n    }\n    getRootXPrivateKey(...args) {\n        throw new Error('Not implemented');\n    }\n    getRootXPublicKey(...args) {\n        throw new Error('Not implemented');\n    }\n    getMasterXPrivateKey(...args) {\n        return this.getRootXPrivateKey(...args);\n    }\n    getMasterXPublicKey(...args) {\n        return this.getRootXPublicKey(...args);\n    }\n    getRootPrivateKey(...args) {\n        throw new Error('Not implemented');\n    }\n    getRootWIF(...args) {\n        throw new Error('Not implemented');\n    }\n    getRootChainCode() {\n        throw new Error('Not implemented');\n    }\n    getRootPublicKey(...args) {\n        throw new Error('Not implemented');\n    }\n    getMasterPrivateKey(...args) {\n        throw new Error('Not implemented');\n    }\n    getMasterWIF(...args) {\n        throw new Error('Not implemented');\n    }\n    getMasterChainCode(...args) {\n        return this.getRootChainCode();\n    }\n    getMasterPublicKey(...args) {\n        throw new Error('Not implemented');\n    }\n    getXPrivateKey(...args) {\n        throw new Error('Not implemented');\n    }\n    getXPublicKey(...args) {\n        throw new Error('Not implemented');\n    }\n    getPrivateKey(...args) {\n        throw new Error('Not implemented');\n    }\n    getStrict() {\n        throw new Error('Not implemented');\n    }\n    getSpendPrivateKey() {\n        throw new Error('Not implemented');\n    }\n    getViewPrivateKey() {\n        throw new Error('Not implemented');\n    }\n    getWIF(..._args) {\n        throw new Error('Not implemented');\n    }\n    getWIFType() {\n        throw new Error('Not implemented');\n    }\n    getChainCode() {\n        throw new Error('Not implemented');\n    }\n    getPublicKey(...args) {\n        throw new Error('Not implemented');\n    }\n    getCompressed() {\n        throw new Error('Not implemented');\n    }\n    getUncompressed() {\n        throw new Error('Not implemented');\n    }\n    getSpendPublicKey() {\n        throw new Error('Not implemented');\n    }\n    getViewPublicKey() {\n        throw new Error('Not implemented');\n    }\n    getPublicKeyType() {\n        throw new Error('Not implemented');\n    }\n    getMode() {\n        throw new Error('Not implemented');\n    }\n    getHash() {\n        throw new Error('Not implemented');\n    }\n    getFingerprint() {\n        throw new Error('Not implemented');\n    }\n    getParentFingerprint() {\n        throw new Error('Not implemented');\n    }\n    getDepth() {\n        throw new Error('Not implemented');\n    }\n    getPath() {\n        throw new Error('Not implemented');\n    }\n    getPathKey() {\n        return null;\n    }\n    getIndex() {\n        throw new Error('Not implemented');\n    }\n    getIndexes() {\n        throw new Error('Not implemented');\n    }\n    getIntegratedAddress(...args) {\n        throw new Error('Not implemented');\n    }\n    getPrimaryAddress(...args) {\n        throw new Error('Not implemented');\n    }\n    getSubAddress(...args) {\n        throw new Error('Not implemented');\n    }\n    getAddress(...args) {\n        throw new Error('Not implemented');\n    }\n}\n//# sourceMappingURL=hd.js.map","// SPDX-License-Identifier: MIT\nexport class Address {\n    static getName() {\n        throw new Error('Address.getName() not implemented');\n    }\n    static encode(publicKey, options) {\n        throw new Error('Address.encode() not implemented');\n    }\n    static decode(address, options) {\n        throw new Error('Address.decode() not implemented');\n    }\n}\n//# sourceMappingURL=address.js.map","// SPDX-License-Identifier: MIT\nimport { sha256, keccak256 } from '../crypto';\nimport { bytesToString, stringToInteger, concatBytes, hexToBytes, equalBytes } from '../utils';\nexport function checksumEncode(address, crypto = 'eth') {\n    const prefix = crypto === 'eth' ? '0x' : 'xdc';\n    // lower-case and strip “0x” or “xdc” prefix\n    let addr = address.toLowerCase().replace(/^0x|^xdc/, '');\n    // keccak256 expects a Uint8Array of ASCII bytes, so convert hex chars to their char codes\n    const asciiBytes = new Uint8Array(addr.length);\n    for (let i = 0; i < addr.length; i++) {\n        asciiBytes[i] = addr.charCodeAt(i);\n    }\n    const hashHex = bytesToString(keccak256(asciiBytes)); // 64-char hex of the 32-byte keccak\n    let out = '';\n    for (let i = 0; i < addr.length; i++) {\n        const c = addr[i];\n        // hashHex[i] is a hex character; parse its value 0–15\n        out += parseInt(hashHex[i], 16) >= 8 ? c.toUpperCase() : c;\n    }\n    return prefix + out;\n}\nexport function encode(data, alphabet = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz') {\n    const buf = typeof data === 'string' ? hexToBytes(data) : data;\n    let val = stringToInteger(buf);\n    const base = BigInt(alphabet.length);\n    let enc = '';\n    // convert to Base58 digits\n    while (val >= base) {\n        const mod = Number(val % base);\n        enc = alphabet[mod] + enc;\n        val = val / base;\n    }\n    if (val > BigInt(0)) {\n        enc = alphabet[Number(val)] + enc;\n    }\n    // preserve leading zero bytes\n    let leading = 0;\n    for (const b of buf) {\n        if (b === 0)\n            leading++;\n        else\n            break;\n    }\n    return alphabet[0].repeat(leading) + enc;\n}\nexport function checkEncode(raw, alphabet = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz') {\n    const buf = typeof raw === 'string' ? hexToBytes(raw) : raw;\n    const hash1 = sha256(buf);\n    const hash2 = sha256(hash1);\n    const chk = hash2.slice(0, 4); // first 4 bytes\n    const payload = concatBytes(buf, chk);\n    return encode(payload, alphabet);\n}\nexport function decode(input, alphabet = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz') {\n    let val = BigInt(0);\n    let prefixZeros = 0;\n    // for each Base58 character, accumulate into a big integer\n    for (const char of input) {\n        const idx = alphabet.indexOf(char);\n        if (idx < 0) {\n            throw new Error(`Invalid Base58 character '${char}'`);\n        }\n        val = val * BigInt(alphabet.length) + BigInt(idx);\n        if (val === BigInt(0)) {\n            prefixZeros++;\n        }\n    }\n    // convert big integer into bytes (big-endian)\n    const outBytes = [];\n    while (val > BigInt(0)) {\n        const mod = Number(val % BigInt(256));\n        outBytes.push(mod);\n        val = val / BigInt(256);\n    }\n    // restore leading zero bytes\n    for (let i = 0; i < prefixZeros; i++) {\n        outBytes.push(0);\n    }\n    return new Uint8Array(outBytes.reverse());\n}\nexport function checkDecode(enc, alphabet = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz') {\n    const full = decode(enc, alphabet);\n    if (full.length < 5) {\n        throw new Error('Input too short for Base58Check');\n    }\n    const raw = full.slice(0, full.length - 4);\n    const chk = full.slice(full.length - 4);\n    const hash1 = sha256(raw);\n    const hash2 = sha256(hash1);\n    const expected = hash2.slice(0, 4);\n    if (!equalBytes(chk, expected)) {\n        throw new Error('Base58Check checksum failed');\n    }\n    return raw;\n}\nexport function pad(enc, padLen, alphabet = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz') {\n    return enc.padStart(padLen, alphabet[0]);\n}\nexport function encodeMonero(data) {\n    const blockEncLen = 11;\n    const blockDecLen = 8;\n    // sizes[k] = encoded length for a k-byte block\n    const sizes = [0, 2, 3, 5, 6, 7, 9, 10, 11];\n    const buf = data;\n    const fullBlocks = Math.floor(buf.length / blockDecLen);\n    const lastLen = buf.length % blockDecLen;\n    let out = '';\n    for (let i = 0; i < fullBlocks; i++) {\n        const block = buf.slice(i * blockDecLen, (i + 1) * blockDecLen);\n        out += pad(encode(block), blockEncLen);\n    }\n    if (lastLen > 0) {\n        const block = buf.slice(fullBlocks * blockDecLen);\n        out += pad(encode(block), sizes[lastLen]);\n    }\n    return out;\n}\nfunction unpad(dec, unpadLen) {\n    return dec.slice(dec.length - unpadLen);\n}\nexport function decodeMonero(data) {\n    const blockEncLen = 11;\n    const blockDecLen = 8;\n    const sizes = [0, 2, 3, 5, 6, 7, 9, 10, 11];\n    const fullBlocks = Math.floor(data.length / blockEncLen);\n    const lastEncLen = data.length % blockEncLen;\n    const lastDecLen = sizes.indexOf(lastEncLen);\n    const out = [];\n    for (let i = 0; i < fullBlocks; i++) {\n        const chunk = data.slice(i * blockEncLen, (i + 1) * blockEncLen);\n        const dec = decode(chunk);\n        out.push(...unpad(dec, blockDecLen));\n    }\n    if (lastEncLen > 0) {\n        const chunk = data.slice(fullBlocks * blockEncLen);\n        const dec = decode(chunk);\n        out.push(...unpad(dec, lastDecLen));\n    }\n    return new Uint8Array(out);\n}\n//# sourceMappingURL=base58.js.map","// SPDX-License-Identifier: MIT\nimport { checkDecode, checkEncode } from '../libs/base58';\nimport { PUBLIC_KEY_TYPES } from '../consts';\nimport { SLIP10Secp256k1PublicKey, validateAndGetPublicKey } from '../eccs';\nimport { Bitcoin } from '../cryptocurrencies';\nimport { bytesToString, concatBytes, integerToBytes, getBytes, ensureString, equalBytes, bytesToHex } from '../utils';\nimport { hash160 } from '../crypto';\nimport { Address } from './address';\nimport { AddressError } from '../exceptions';\nexport class P2PKHAddress extends Address {\n    static publicKeyAddressPrefix = Bitcoin.NETWORKS.MAINNET.PUBLIC_KEY_ADDRESS_PREFIX;\n    static alphabet = Bitcoin.PARAMS.ALPHABET;\n    static getName() {\n        return 'P2PKH';\n    }\n    static encode(publicKey, options = {\n        publicKeyAddressPrefix: this.publicKeyAddressPrefix,\n        publicKeyType: PUBLIC_KEY_TYPES.COMPRESSED,\n        alphabet: this.alphabet\n    }) {\n        const prefixValue = options.publicKeyAddressPrefix ?? this.publicKeyAddressPrefix;\n        const prefixBytes = integerToBytes(prefixValue);\n        const pk = validateAndGetPublicKey(publicKey, SLIP10Secp256k1PublicKey);\n        const rawPubBytes = options.publicKeyType === PUBLIC_KEY_TYPES.UNCOMPRESSED\n            ? pk.getRawUncompressed() : pk.getRawCompressed();\n        const pubKeyHash = hash160(getBytes(rawPubBytes));\n        const payload = concatBytes(prefixBytes, pubKeyHash);\n        const alphabet = options.alphabet ?? this.alphabet;\n        return ensureString(checkEncode(payload, alphabet));\n    }\n    static decode(address, options = {\n        publicKeyAddressPrefix: this.publicKeyAddressPrefix,\n        alphabet: this.alphabet\n    }) {\n        const prefixValue = options.publicKeyAddressPrefix ?? this.publicKeyAddressPrefix;\n        const prefixBytes = getBytes(integerToBytes(prefixValue));\n        const alphabet = options.alphabet ?? this.alphabet;\n        const decoded = checkDecode(address, alphabet);\n        const expectedLen = prefixBytes.length + 20;\n        if (decoded.length !== expectedLen) {\n            throw new AddressError('Invalid length', { expected: expectedLen, got: decoded.length });\n        }\n        const gotPrefix = decoded.slice(0, prefixBytes.length);\n        if (!equalBytes(prefixBytes, gotPrefix)) {\n            throw new AddressError('Invalid prefix', { expected: bytesToHex(prefixBytes), got: bytesToHex(gotPrefix) });\n        }\n        const pubKeyHash = decoded.slice(prefixBytes.length);\n        return bytesToString(pubKeyHash);\n    }\n}\n//# sourceMappingURL=p2pkh.js.map","// SPDX-License-Identifier: MIT\nimport { checkDecode, checkEncode } from '../libs/base58';\nimport { PUBLIC_KEY_TYPES } from '../consts';\nimport { SLIP10Secp256k1PublicKey, validateAndGetPublicKey } from '../eccs';\nimport { Bitcoin } from '../cryptocurrencies';\nimport { hash160 } from '../crypto';\nimport { AddressError } from '../exceptions';\nimport { bytesToString, getBytes, integerToBytes, ensureString, concatBytes, equalBytes, bytesToHex } from '../utils';\nimport { Address } from './address';\nexport class P2SHAddress extends Address {\n    static scriptAddressPrefix = Bitcoin.NETWORKS.MAINNET.SCRIPT_ADDRESS_PREFIX;\n    static alphabet = Bitcoin.PARAMS.ALPHABET;\n    static getName() {\n        return 'P2SH';\n    }\n    static encode(publicKey, options = {\n        scriptAddressPrefix: this.scriptAddressPrefix,\n        publicKeyType: PUBLIC_KEY_TYPES.COMPRESSED,\n        alphabet: this.alphabet\n    }) {\n        const prefixValue = options.scriptAddressPrefix ?? this.scriptAddressPrefix;\n        const prefixBytes = integerToBytes(prefixValue);\n        const pk = validateAndGetPublicKey(publicKey, SLIP10Secp256k1PublicKey);\n        const rawBytes = options.publicKeyType === PUBLIC_KEY_TYPES.UNCOMPRESSED\n            ? pk.getRawUncompressed() : pk.getRawCompressed();\n        const pubKeyHash = hash160(rawBytes);\n        const redeemScriptHex = '76a914' + bytesToString(pubKeyHash) + '88ac';\n        const redeemScript = getBytes(redeemScriptHex);\n        const scriptHash = hash160(redeemScript);\n        const payload = concatBytes(prefixBytes, scriptHash);\n        const alphabet = options.alphabet ?? this.alphabet;\n        return ensureString(checkEncode(payload, alphabet));\n    }\n    static decode(address, options = {\n        scriptAddressPrefix: this.scriptAddressPrefix,\n        alphabet: this.alphabet\n    }) {\n        const prefixValue = options.scriptAddressPrefix ?? this.scriptAddressPrefix;\n        const prefixBytes = getBytes(integerToBytes(prefixValue));\n        const alphabet = options.alphabet ?? this.alphabet;\n        const decoded = checkDecode(address, alphabet);\n        const expectedLen = prefixBytes.length + 20;\n        if (decoded.length !== expectedLen) {\n            throw new AddressError('Invalid length', { expected: expectedLen, got: decoded.length });\n        }\n        const gotPrefix = decoded.slice(0, prefixBytes.length);\n        if (!equalBytes(prefixBytes, gotPrefix)) {\n            throw new AddressError('Invalid prefix', { expected: bytesToHex(prefixBytes), got: bytesToHex(gotPrefix) });\n        }\n        const scriptHash = decoded.slice(prefixBytes.length);\n        return bytesToString(scriptHash);\n    }\n}\n//# sourceMappingURL=p2sh.js.map","// SPDX-License-Identifier: MIT\nconst CHARSET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\nconst CHARSET_REV = CHARSET\n    .split('')\n    .reduce((map, char, i) => ((map[char] = i), map), {});\nfunction bech32Polymod(values) {\n    const GENERATOR = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\n    let chk = 1;\n    for (const value of values) {\n        const top = chk >>> 25;\n        chk = ((chk & 0x1ffffff) << 5) ^ value;\n        for (let i = 0; i < 5; i++) {\n            if ((top >>> i) & 1)\n                chk ^= GENERATOR[i];\n        }\n    }\n    return chk;\n}\nfunction bech32HrpExpand(hrp) {\n    return [\n        ...hrp.split('').map(c => c.charCodeAt(0) >>> 5),\n        0,\n        ...hrp.split('').map(c => c.charCodeAt(0) & 31)\n    ];\n}\nfunction bech32CreateChecksum(hrp, data) {\n    const encoding = data[0] === 0 ? 1 : 0x2bc830a3;\n    const values = [...bech32HrpExpand(hrp), ...data];\n    const polymod = bech32Polymod([...values, 0, 0, 0, 0, 0, 0]) ^ encoding;\n    return Array.from({ length: 6 }, (_, i) => (polymod >>> (5 * (5 - i))) & 31);\n}\nfunction bech32VerifyChecksum(hrp, data) {\n    const encoding = data[0] === 0 ? 1 : 0x2bc830a3;\n    return bech32Polymod([...bech32HrpExpand(hrp), ...data]) === encoding;\n}\nfunction convertBits(data, fromBits, toBits, pad = true) {\n    let acc = 0;\n    let bits = 0;\n    const ret = [];\n    const maxv = (1 << toBits) - 1;\n    const maxAcc = (1 << (fromBits + toBits - 1)) - 1;\n    for (const value of data) {\n        if (value < 0 || (value >>> fromBits))\n            return null;\n        acc = ((acc << fromBits) | value) & maxAcc;\n        bits += fromBits;\n        while (bits >= toBits) {\n            bits -= toBits;\n            ret.push((acc >>> bits) & maxv);\n        }\n    }\n    if (pad) {\n        if (bits)\n            ret.push((acc << (toBits - bits)) & maxv);\n    }\n    else if (bits >= fromBits || ((acc << (toBits - bits)) & maxv)) {\n        return null;\n    }\n    return ret;\n}\nexport function baseBech32Encode(hrp, data) {\n    const combined = [...data, ...bech32CreateChecksum(hrp, data)];\n    return hrp + '1' + combined.map(d => CHARSET[d]).join('');\n}\nexport function baseBech32Decode(bech) {\n    if (bech.length > 90 ||\n        [...bech].some(x => x.charCodeAt(0) < 33 || x.charCodeAt(0) > 126) ||\n        (bech !== bech.toLowerCase() && bech !== bech.toUpperCase()))\n        return [null, null];\n    const lowered = bech.toLowerCase();\n    const pos = lowered.lastIndexOf('1');\n    if (pos < 1 || pos + 7 > lowered.length)\n        return [null, null];\n    const hrp = lowered.slice(0, pos);\n    const data = lowered.slice(pos + 1).split('').map(c => CHARSET_REV[c]);\n    // @ts-ignore\n    if (data.includes(undefined))\n        return [null, null];\n    if (!bech32VerifyChecksum(hrp, data))\n        return [null, null];\n    return [hrp, data.slice(0, -6)];\n}\nexport function bech32Encode(hrp, witprog) {\n    const ret = baseBech32Encode(hrp, convertBits(witprog, 8, 5) ?? []);\n    return baseBech32Decode(ret)[0] === null ? null : ret;\n}\nexport function bech32Decode(hrp, addr) {\n    const [gotHrp, data] = baseBech32Decode(addr);\n    if (gotHrp !== hrp || !data)\n        return [null, null];\n    return [data[0], convertBits(data.slice(1), 5, 8, false)];\n}\nexport function segwitEncode(hrp, witver, witprog) {\n    const data = [witver, ...(convertBits([...witprog], 8, 5) ?? [])];\n    const ret = baseBech32Encode(hrp, data);\n    return segwitDecode(hrp, ret)[0] === null ? '' : ret;\n}\nexport function segwitDecode(hrp, addr) {\n    const [gotHrp, data] = baseBech32Decode(addr);\n    if (gotHrp !== hrp || !data || data.length < 1 || data[0] > 16)\n        return [null, null];\n    const decoded = convertBits(data.slice(1), 5, 8, false);\n    if (!decoded || decoded.length < 2 || decoded.length > 40)\n        return [null, null];\n    if (data[0] === 0 && decoded.length !== 20 && decoded.length !== 32)\n        return [null, null];\n    return [data[0], Uint8Array.from(decoded)];\n}\n//# sourceMappingURL=segwit-bech32.js.map","// SPDX-License-Identifier: MIT\nimport { segwitEncode, segwitDecode } from '../libs/segwit-bech32';\nimport { SLIP10Secp256k1ECC, SLIP10Secp256k1Point, SLIP10Secp256k1PublicKey, validateAndGetPublicKey } from '../eccs';\nimport { Bitcoin } from '../cryptocurrencies';\nimport { sha256 } from '../crypto';\nimport { getBytes, integerToBytes, bytesToInteger, bytesToString } from '../utils';\nimport { Address } from './address';\nexport class P2TRAddress extends Address {\n    static hrp = Bitcoin.NETWORKS.MAINNET.HRP;\n    static fieldSize = BigInt(Bitcoin.PARAMS.FIELD_SIZE);\n    static tapTweakTagHash = getBytes(Bitcoin.PARAMS.TAP_TWEAK_SHA256);\n    static witnessVersion = Bitcoin.NETWORKS.MAINNET.WITNESS_VERSIONS.P2TR;\n    static getName() {\n        return 'P2TR';\n    }\n    static taggedHash(tag, data) {\n        const tagHash = typeof tag === 'string' ? sha256(tag) : tag;\n        return sha256(new Uint8Array([...tagHash, ...tagHash, ...data]));\n    }\n    static hashTapTweak(pubKey) {\n        const x = BigInt(pubKey.getPoint().getX());\n        return this.taggedHash(this.tapTweakTagHash, integerToBytes(x));\n    }\n    static liftX(pubKey) {\n        const p = this.fieldSize;\n        const x = BigInt(pubKey.getPoint().getX());\n        if (x >= p)\n            throw new Error('Unable to compute LiftX point');\n        const xCubed = this.modPow(x, BigInt(3), p);\n        const c = (xCubed + BigInt(7)) % p;\n        const y = this.modularSqrt(c, p);\n        const ySquared = this.modPow(y, BigInt(2), p);\n        if (ySquared !== c)\n            throw new Error('Unable to compute LiftX point');\n        const evenY = y % BigInt(2) === BigInt(0) ? y : p - y;\n        return SLIP10Secp256k1Point.fromCoordinates(x, evenY);\n    }\n    static tweakPublicKey(pubKey) {\n        const tweak = BigInt(bytesToInteger(this.hashTapTweak(pubKey)));\n        const lifted = this.liftX(pubKey);\n        const tweaked = lifted.add(SLIP10Secp256k1ECC.GENERATOR.multiply(tweak));\n        return integerToBytes(BigInt(tweaked.getX()));\n    }\n    static encode(publicKey, options = {\n        hrp: this.hrp,\n        witnessVersion: this.witnessVersion\n    }) {\n        const pubKey = validateAndGetPublicKey(publicKey, SLIP10Secp256k1PublicKey);\n        return segwitEncode(options.hrp ?? this.hrp, options.witnessVersion ?? this.witnessVersion, this.tweakPublicKey(pubKey));\n    }\n    static decode(address, options = { hrp: this.hrp }) {\n        const [witnessVersion, data] = segwitDecode(options.hrp ?? this.hrp, address);\n        const expectedLength = SLIP10Secp256k1PublicKey.getCompressedLength() - 1;\n        if (data?.length !== expectedLength) {\n            throw new Error(`Invalid length (expected: ${expectedLength}, got: ${data?.length})`);\n        }\n        if (witnessVersion !== this.witnessVersion) {\n            throw new Error(`Invalid witness version (expected: ${this.witnessVersion}, got: ${witnessVersion})`);\n        }\n        return bytesToString(data);\n    }\n    static modPow(base, exponent, modulus) {\n        if (modulus === BigInt(1))\n            return BigInt(0);\n        let result = BigInt(1);\n        base = base % modulus;\n        while (exponent > BigInt(0)) {\n            if (exponent % BigInt(2) === BigInt(1)) {\n                result = (result * base) % modulus;\n            }\n            exponent = exponent >> BigInt(1);\n            base = (base * base) % modulus;\n        }\n        return result;\n    }\n    static modularSqrt(a, p) {\n        const exponent = (p + BigInt(1)) / BigInt(4);\n        return this.modPow(a, exponent, p);\n    }\n}\n//# sourceMappingURL=p2tr.js.map","// SPDX-License-Identifier: MIT\nimport { segwitEncode, segwitDecode } from '../libs/segwit-bech32';\nimport { PUBLIC_KEY_TYPES } from '../consts';\nimport { SLIP10Secp256k1PublicKey, validateAndGetPublicKey } from '../eccs';\nimport { Bitcoin } from '../cryptocurrencies';\nimport { hash160 } from '../crypto';\nimport { bytesToString, ensureString } from '../utils';\nimport { Address } from './address';\nimport { AddressError } from '../exceptions';\nexport class P2WPKHAddress extends Address {\n    static hrp = Bitcoin.NETWORKS.MAINNET.HRP;\n    static witnessVersion = Bitcoin.NETWORKS.MAINNET.WITNESS_VERSIONS.P2WPKH;\n    static getName() {\n        return 'P2WPKH';\n    }\n    static encode(publicKey, options = {\n        hrp: this.hrp,\n        publicKeyType: PUBLIC_KEY_TYPES.COMPRESSED,\n        witnessVersion: this.witnessVersion\n    }) {\n        const pk = validateAndGetPublicKey(publicKey, SLIP10Secp256k1PublicKey);\n        const rawPubBytes = options.publicKeyType === PUBLIC_KEY_TYPES.UNCOMPRESSED\n            ? pk.getRawUncompressed() : pk.getRawCompressed();\n        const pubKeyHash = hash160(rawPubBytes);\n        const hrp = options.hrp ?? this.hrp;\n        const witnessVersion = options.witnessVersion ?? this.witnessVersion;\n        return ensureString(segwitEncode(hrp, witnessVersion, pubKeyHash));\n    }\n    static decode(address, options = { hrp: this.hrp }) {\n        const hrp = options.hrp ?? this.hrp;\n        const [witnessVersion, decoded] = segwitDecode(hrp, address);\n        if (!decoded) {\n            throw new AddressError('Invalid address decoding');\n        }\n        return bytesToString(decoded);\n    }\n}\n//# sourceMappingURL=p2wpkh.js.map","// SPDX-License-Identifier: MIT\nimport { checkEncode } from '../libs/base58';\nimport { PUBLIC_KEY_TYPES } from '../consts';\nimport { SLIP10Secp256k1PublicKey, validateAndGetPublicKey } from '../eccs';\nimport { hash160 } from '../crypto';\nimport { getBytes, integerToBytes, bytesToString, concatBytes, ensureString } from '../utils';\nimport { P2SHAddress } from './p2sh';\nexport class P2WPKHInP2SHAddress extends P2SHAddress {\n    static getName() {\n        return 'P2WPKH-In-P2SH';\n    }\n    static encode(publicKey, options = {\n        scriptAddressPrefix: this.scriptAddressPrefix,\n        publicKeyType: PUBLIC_KEY_TYPES.COMPRESSED,\n        alphabet: this.alphabet\n    }) {\n        const prefixValue = options.scriptAddressPrefix ?? this.scriptAddressPrefix;\n        const prefixBytes = integerToBytes(prefixValue);\n        const pk = validateAndGetPublicKey(publicKey, SLIP10Secp256k1PublicKey);\n        const rawPubBytes = options.publicKeyType === PUBLIC_KEY_TYPES.UNCOMPRESSED\n            ? pk.getRawUncompressed() : pk.getRawCompressed();\n        const pubKeyHash = hash160(rawPubBytes);\n        const redeemScript = getBytes('0014' + bytesToString(pubKeyHash));\n        const scriptHash = hash160(redeemScript);\n        const alphabet = options.alphabet ?? this.alphabet;\n        return ensureString(checkEncode(concatBytes(prefixBytes, scriptHash), alphabet));\n    }\n}\n//# sourceMappingURL=p2wpkh-in-p2sh.js.map","// SPDX-License-Identifier: MIT\nimport { segwitEncode } from '../libs/segwit-bech32';\nimport { PUBLIC_KEY_TYPES } from '../consts';\nimport { SLIP10Secp256k1PublicKey, validateAndGetPublicKey } from '../eccs';\nimport { Bitcoin } from '../cryptocurrencies';\nimport { sha256 } from '../crypto';\nimport { bytesToString, getBytes, ensureString } from '../utils';\nimport { P2WPKHAddress } from './p2wpkh';\nexport class P2WSHAddress extends P2WPKHAddress {\n    static witnessVersion = Bitcoin.NETWORKS.MAINNET.WITNESS_VERSIONS.P2WSH;\n    static getName() {\n        return 'P2WSH';\n    }\n    static encode(publicKey, options = {\n        hrp: this.hrp,\n        publicKeyType: PUBLIC_KEY_TYPES.COMPRESSED,\n        witnessVersion: this.witnessVersion\n    }) {\n        const pk = validateAndGetPublicKey(publicKey, SLIP10Secp256k1PublicKey);\n        const rawPubBytes = options.publicKeyType === PUBLIC_KEY_TYPES.UNCOMPRESSED\n            ? pk.getRawUncompressed() : pk.getRawCompressed();\n        const script = '5121' + bytesToString(rawPubBytes) + '51ae';\n        const scriptHash = sha256(getBytes(script));\n        const hrp = options.hrp ?? this.hrp;\n        const version = options.witnessVersion ?? this.witnessVersion;\n        return ensureString(segwitEncode(hrp, version, scriptHash));\n    }\n}\n//# sourceMappingURL=p2wsh.js.map","// SPDX-License-Identifier: MIT\nimport { checkEncode } from '../libs/base58';\nimport { PUBLIC_KEY_TYPES } from '../consts';\nimport { SLIP10Secp256k1PublicKey, validateAndGetPublicKey } from '../eccs';\nimport { hash160, sha256 } from '../crypto';\nimport { getBytes, integerToBytes, bytesToString, concatBytes, ensureString } from '../utils';\nimport { P2SHAddress } from './p2sh';\nexport class P2WSHInP2SHAddress extends P2SHAddress {\n    static getName() {\n        return 'P2WSH-In-P2SH';\n    }\n    static encode(publicKey, options = {\n        scriptAddressPrefix: this.scriptAddressPrefix,\n        publicKeyType: PUBLIC_KEY_TYPES.COMPRESSED,\n        alphabet: this.alphabet\n    }) {\n        const prefixValue = options.scriptAddressPrefix ?? this.scriptAddressPrefix;\n        const prefixBytes = integerToBytes(prefixValue);\n        const pk = validateAndGetPublicKey(publicKey, SLIP10Secp256k1PublicKey);\n        const rawPubBytes = options.publicKeyType === PUBLIC_KEY_TYPES.UNCOMPRESSED\n            ? pk.getRawUncompressed() : pk.getRawCompressed();\n        const redeemScript = getBytes('5121' + bytesToString(rawPubBytes) + '51ae');\n        const sha = sha256(redeemScript);\n        const witnessScript = getBytes('0020' + bytesToString(sha));\n        const scriptHash = hash160(witnessScript);\n        const alphabet = options.alphabet ?? this.alphabet;\n        return ensureString(checkEncode(concatBytes(prefixBytes, scriptHash), alphabet));\n    }\n}\n//# sourceMappingURL=p2wsh-in-p2sh.js.map","// SPDX-License-Identifier: MIT\nimport { SLIP10Secp256k1PublicKey, validateAndGetPublicKey } from '../eccs';\nimport { Ethereum } from '../cryptocurrencies';\nimport { keccak256 } from '../crypto';\nimport { bytesToString } from '../utils';\nimport { AddressError } from '../exceptions';\nimport { Address } from './address';\nexport class EthereumAddress extends Address {\n    static addressPrefix = Ethereum.PARAMS.ADDRESS_PREFIX;\n    static getName() {\n        return 'Ethereum';\n    }\n    static checksumEncode(address) {\n        let output = '';\n        const addressHash = bytesToString(keccak256(new TextEncoder().encode(address.toLowerCase())));\n        for (let i = 0; i < address.length; i++) {\n            output += parseInt(addressHash[i], 16) >= 8\n                ? address[i].toUpperCase()\n                : address[i];\n        }\n        return output;\n    }\n    static encode(publicKey, options = {\n        skipChecksumEncode: false\n    }) {\n        const pk = validateAndGetPublicKey(publicKey, SLIP10Secp256k1PublicKey);\n        const pubKeyHash = bytesToString(keccak256(pk.getRawUncompressed().slice(1))).slice(-40);\n        return this.addressPrefix + (options.skipChecksumEncode ? pubKeyHash : this.checksumEncode(pubKeyHash));\n    }\n    static decode(address, options = {\n        skipChecksumEncode: false\n    }) {\n        const prefix = address.slice(0, this.addressPrefix.length);\n        if (prefix !== this.addressPrefix) {\n            throw new AddressError('Invalid address prefix', {\n                expected: this.addressPrefix,\n                got: prefix\n            });\n        }\n        const addressPart = address.slice(this.addressPrefix.length);\n        if (addressPart.length !== 40) {\n            throw new AddressError('Invalid length', {\n                expected: 40,\n                got: addressPart.length\n            });\n        }\n        if (!options.skipChecksumEncode && addressPart !== this.checksumEncode(addressPart)) {\n            throw new AddressError('Invalid checksum encode', {\n                expected: this.checksumEncode(addressPart),\n                got: addressPart\n            });\n        }\n        return addressPart.toLowerCase();\n    }\n}\n//# sourceMappingURL=ethereum.js.map","// SPDX-License-Identifier: MIT\nconst CHARSET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\nconst CHARSET_REV = Object.fromEntries(CHARSET.split('').map((c, i) => [c, i]));\nfunction bech32Polymod(values) {\n    const GENERATOR = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\n    let chk = 1;\n    for (const value of values) {\n        const top = chk >>> 25;\n        chk = ((chk & 0x1ffffff) << 5) ^ value;\n        for (let i = 0; i < 5; i++) {\n            chk ^= (top >> i) & 1 ? GENERATOR[i] : 0;\n        }\n    }\n    return chk;\n}\nfunction bech32HrpExpand(hrp) {\n    const hrpChars = hrp.split('').map(c => c.charCodeAt(0));\n    return [\n        ...hrpChars.map(c => c >> 5),\n        0,\n        ...hrpChars.map(c => c & 31)\n    ];\n}\nfunction bech32CreateChecksum(hrp, data) {\n    const values = [...bech32HrpExpand(hrp), ...data];\n    const polymod = bech32Polymod([...values, 0, 0, 0, 0, 0, 0]) ^ 1;\n    return Array.from({ length: 6 }, (_, i) => (polymod >> (5 * (5 - i))) & 31);\n}\nfunction bech32VerifyChecksum(hrp, data) {\n    return bech32Polymod([...bech32HrpExpand(hrp), ...data]) === 1;\n}\nfunction baseBech32Encode(hrp, data) {\n    const combined = [...data, ...bech32CreateChecksum(hrp, data)];\n    return hrp + '1' + combined.map(d => CHARSET[d]).join('');\n}\nfunction baseBech32Decode(bech) {\n    if ([...bech].some(c => c.charCodeAt(0) < 33 || c.charCodeAt(0) > 126) ||\n        (bech.toLowerCase() !== bech && bech.toUpperCase() !== bech)) {\n        return [null, null];\n    }\n    bech = bech.toLowerCase();\n    const pos = bech.lastIndexOf('1');\n    if (pos < 1 || pos + 7 > bech.length || pos + 1 >= bech.length) {\n        return [null, null];\n    }\n    const hrp = bech.slice(0, pos);\n    const dataPart = bech.slice(pos + 1);\n    const data = [];\n    for (const c of dataPart) {\n        const val = CHARSET_REV[c];\n        if (val === undefined)\n            return [null, null];\n        data.push(val);\n    }\n    if (!bech32VerifyChecksum(hrp, data)) {\n        return [null, null];\n    }\n    return [hrp, data.slice(0, -6)];\n}\nfunction convertBits(data, fromBits, toBits, pad = true) {\n    let acc = 0;\n    let bits = 0;\n    const ret = [];\n    const maxv = (1 << toBits) - 1;\n    const maxAcc = (1 << (fromBits + toBits - 1)) - 1;\n    for (const value of data) {\n        if (value < 0 || value >> fromBits)\n            return null;\n        acc = ((acc << fromBits) | value) & maxAcc;\n        bits += fromBits;\n        while (bits >= toBits) {\n            bits -= toBits;\n            ret.push((acc >> bits) & maxv);\n        }\n    }\n    if (pad) {\n        if (bits)\n            ret.push((acc << (toBits - bits)) & maxv);\n    }\n    else if (bits >= fromBits || ((acc << (toBits - bits)) & maxv)) {\n        return null;\n    }\n    return ret;\n}\n// Final export: exposed API for encoding/decoding Bech32\nexport function bech32Encode(hrp, witprog) {\n    const data = convertBits([...witprog], 8, 5);\n    if (!data) {\n        throw new Error('bech32Encode: Failed to convert bits from 8 to 5');\n    }\n    const ret = baseBech32Encode(hrp, data);\n    const [decodedHrp, decodedData] = baseBech32Decode(ret);\n    if (decodedHrp !== hrp ||\n        decodedData === null ||\n        decodedData.length !== data.length ||\n        !decodedData.every((v, i) => v === data[i])) {\n        throw new Error('bech32Encode: Sanity check failed after encoding');\n    }\n    return ret;\n}\nexport function bech32Decode(expectedHrp, addr) {\n    const [hrp, data] = baseBech32Decode(addr);\n    if (hrp !== expectedHrp || !data || data.length === 0) {\n        throw new Error('bech32Decode: Invalid HRP or data format');\n    }\n    const decoded = convertBits(data, 5, 8, false);\n    if (!decoded) {\n        throw new Error('bech32Decode: Failed to convert bits from 5 to 8');\n    }\n    return [hrp, new Uint8Array(decoded)];\n}\n//# sourceMappingURL=bech32.js.map","// SPDX-License-Identifier: MIT\nimport { bech32Encode, bech32Decode } from '../libs/bech32';\nimport { SLIP10Secp256k1PublicKey, validateAndGetPublicKey } from '../eccs';\nimport { Cosmos } from '../cryptocurrencies';\nimport { sha256, ripemd160 } from '../crypto';\nimport { bytesToString } from '../utils';\nimport { Address } from './address';\nimport { AddressError } from '../exceptions';\nexport class CosmosAddress extends Address {\n    static hrp = Cosmos.NETWORKS.MAINNET.HRP;\n    static getName() {\n        return 'Cosmos';\n    }\n    static encode(publicKey, options = {\n        hrp: this.hrp\n    }) {\n        const pk = validateAndGetPublicKey(publicKey, SLIP10Secp256k1PublicKey);\n        const hash = ripemd160(sha256(pk.getRawCompressed()));\n        const hrp = options.hrp ?? this.hrp;\n        const encoded = bech32Encode(hrp, hash);\n        if (encoded === null) {\n            throw new AddressError('Failed to encode Bech32 address');\n        }\n        return encoded;\n    }\n    static decode(address, options = {\n        hrp: this.hrp\n    }) {\n        const hrp = options.hrp ?? this.hrp;\n        const [gotHrp, decoded] = bech32Decode(hrp, address);\n        if (typeof gotHrp !== 'string' || gotHrp !== hrp) {\n            throw new AddressError('Invalid HRP prefix or decode failure', {\n                expected: hrp, got: gotHrp\n            });\n        }\n        return bytesToString(decoded);\n    }\n}\n//# sourceMappingURL=cosmos.js.map","// SPDX-License-Identifier: MIT\nimport { EthereumAddress } from './ethereum';\nimport { XinFin } from '../cryptocurrencies';\nexport class XinFinAddress extends EthereumAddress {\n    static addressPrefix = XinFin.PARAMS.ADDRESS_PREFIX;\n    static getName() {\n        return 'XinFin';\n    }\n}\n//# sourceMappingURL=xinfin.js.map","// SPDX-License-Identifier: MIT\nimport { checkEncode, checkDecode } from '../libs/base58';\nimport { SLIP10Secp256k1PublicKey, validateAndGetPublicKey } from '../eccs';\nimport { Tron } from '../cryptocurrencies';\nimport { keccak256 } from '../crypto';\nimport { integerToBytes, bytesToString, ensureString, concatBytes, hexToBytes, getBytes, equalBytes, bytesToHex } from '../utils';\nimport { Address } from './address';\nimport { AddressError } from '../exceptions';\nexport class TronAddress extends Address {\n    static publicKeyAddressPrefix = Tron.NETWORKS.MAINNET.PUBLIC_KEY_ADDRESS_PREFIX;\n    static alphabet = Tron.PARAMS.ALPHABET;\n    static getName() {\n        return 'Tron';\n    }\n    static encode(publicKey, options = {\n        publicKeyAddressPrefix: this.publicKeyAddressPrefix,\n        alphabet: this.alphabet\n    }) {\n        const pk = validateAndGetPublicKey(publicKey, SLIP10Secp256k1PublicKey);\n        const addressHash = bytesToString(keccak256(pk.getRawUncompressed().slice(1))).slice(-40); // last 20 bytes\n        const prefixBytes = integerToBytes(options.publicKeyAddressPrefix ?? this.publicKeyAddressPrefix);\n        const alphabet = options.alphabet ?? this.alphabet;\n        const payload = concatBytes(prefixBytes, hexToBytes(addressHash));\n        return ensureString(checkEncode(payload, alphabet));\n    }\n    static decode(address, options = {\n        publicKeyAddressPrefix: this.publicKeyAddressPrefix,\n        alphabet: this.alphabet\n    }) {\n        const alphabet = options.alphabet ?? this.alphabet;\n        const decoded = checkDecode(address, alphabet);\n        const prefixValue = integerToBytes(options.publicKeyAddressPrefix ?? this.publicKeyAddressPrefix);\n        const prefixBytes = getBytes(prefixValue);\n        const expectedLength = 20 + prefixBytes.length;\n        if (decoded.length !== expectedLength) {\n            throw new AddressError('Invalid length', {\n                expected: expectedLength, got: decoded.length\n            });\n        }\n        const prefixGot = decoded.slice(0, prefixBytes.length);\n        if (!equalBytes(prefixGot, prefixBytes)) {\n            throw new AddressError('Invalid prefix', {\n                expected: bytesToHex(prefixBytes), got: bytesToHex(prefixGot)\n            });\n        }\n        return bytesToString(decoded.slice(prefixBytes.length));\n    }\n}\n//# sourceMappingURL=tron.js.map","// SPDX-License-Identifier: MIT\nimport { P2PKHAddress } from './p2pkh';\nimport { Ripple } from '../cryptocurrencies';\nexport class RippleAddress extends P2PKHAddress {\n    static alphabet = Ripple.PARAMS.ALPHABET;\n    static getName() {\n        return 'Ripple';\n    }\n}\n//# sourceMappingURL=ripple.js.map","\"use strict\";\n\n/**\n * Generate a character map.\n * @param {string} alphabet e.g. \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\"\n * @param {object} mappings map overrides from key to value\n * @method\n */\n\nvar charmap = function (alphabet, mappings) {\n  mappings || (mappings = {});\n  alphabet.split(\"\").forEach(function (c, i) {\n    if (!(c in mappings)) mappings[c] = i;\n  });\n  return mappings;\n}\n\n/**\n * The RFC 4648 base 32 alphabet and character map.\n * @see {@link https://tools.ietf.org/html/rfc4648}\n */\n\nvar rfc4648 = {\n  alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\",\n  charmap: {\n    0: 14,\n    1: 8\n  }\n};\n\nrfc4648.charmap = charmap(rfc4648.alphabet, rfc4648.charmap);\n\n/**\n * The Crockford base 32 alphabet and character map.\n * @see {@link http://www.crockford.com/wrmg/base32.html}\n */\n\nvar crockford = {\n  alphabet: \"0123456789ABCDEFGHJKMNPQRSTVWXYZ\",\n  charmap: {\n    O: 0,\n    I: 1,\n    L: 1\n  }\n};\n\ncrockford.charmap = charmap(crockford.alphabet, crockford.charmap);\n\n/**\n * base32hex\n * @see {@link https://en.wikipedia.org/wiki/Base32#base32hex}\n */\n\nvar base32hex = {\n  alphabet: \"0123456789ABCDEFGHIJKLMNOPQRSTUV\",\n  charmap: {}\n};\n\nbase32hex.charmap = charmap(base32hex.alphabet, base32hex.charmap);\n\n/**\n * Create a new `Decoder` with the given options.\n *\n * @param {object} [options]\n *   @param {string} [type] Supported Base-32 variants are \"rfc4648\" and\n *     \"crockford\".\n *   @param {object} [charmap] Override the character map used in decoding.\n * @constructor\n */\n\nfunction Decoder (options) {\n  this.buf = [];\n  this.shift = 8;\n  this.carry = 0;\n\n  if (options) {\n\n    switch (options.type) {\n      case \"rfc4648\":\n        this.charmap = exports.rfc4648.charmap;\n        break;\n      case \"crockford\":\n        this.charmap = exports.crockford.charmap;\n        break;\n      case \"base32hex\":\n        this.charmap = exports.base32hex.charmap;\n        break;\n      default:\n        throw new Error(\"invalid type\");\n    }\n\n    if (options.charmap) this.charmap = options.charmap;\n  }\n}\n\n/**\n * The default character map coresponds to RFC4648.\n */\n\nDecoder.prototype.charmap = rfc4648.charmap;\n\n/**\n * Decode a string, continuing from the previous state.\n *\n * @param {string} str\n * @return {Decoder} this\n */\n\nDecoder.prototype.write = function (str) {\n  var charmap = this.charmap;\n  var buf = this.buf;\n  var shift = this.shift;\n  var carry = this.carry;\n\n  // decode string\n  str.toUpperCase().split(\"\").forEach(function (char) {\n\n    // ignore padding\n    if (char == \"=\") return;\n\n    // lookup symbol\n    var symbol = charmap[char] & 0xff;\n\n    // 1: 00000 000\n    // 2:          00 00000 0\n    // 3:                    0000 0000\n    // 4:                             0 00000 00\n    // 5:                                       000 00000\n    // 6:                                                00000 000\n    // 7:                                                         00 00000 0\n\n    shift -= 5;\n    if (shift > 0) {\n      carry |= symbol << shift;\n    } else if (shift < 0) {\n      buf.push(carry | (symbol >> -shift));\n      shift += 8;\n      carry = (symbol << shift) & 0xff;\n    } else {\n      buf.push(carry | symbol);\n      shift = 8;\n      carry = 0;\n    }\n  });\n\n  // save state\n  this.shift = shift;\n  this.carry = carry;\n\n  // for chaining\n  return this;\n};\n\n/**\n * Finish decoding.\n *\n * @param {string} [str] The final string to decode.\n * @return {Array} Decoded byte array.\n */\n\nDecoder.prototype.finalize = function (str) {\n  if (str) {\n    this.write(str);\n  }\n  if (this.shift !== 8 && this.carry !== 0) {\n    this.buf.push(this.carry);\n    this.shift = 8;\n    this.carry = 0;\n  }\n  return this.buf;\n};\n\n/**\n * Create a new `Encoder` with the given options.\n *\n * @param {object} [options]\n *   @param {string} [type] Supported Base-32 variants are \"rfc4648\" and\n *     \"crockford\".\n *   @param {object} [alphabet] Override the alphabet used in encoding.\n * @constructor\n */\n\nfunction Encoder (options) {\n  this.buf = \"\";\n  this.shift = 3;\n  this.carry = 0;\n\n  if (options) {\n\n    switch (options.type) {\n      case \"rfc4648\":\n        this.alphabet = exports.rfc4648.alphabet;\n        break;\n      case \"crockford\":\n        this.alphabet = exports.crockford.alphabet;\n        break;\n      case \"base32hex\":\n        this.alphabet = exports.base32hex.alphabet;\n        break;\n      default:\n        throw new Error(\"invalid type\");\n    }\n\n    if (options.alphabet) this.alphabet = options.alphabet;\n    else if (options.lc) this.alphabet = this.alphabet.toLowerCase();\n  }\n}\n\n/**\n * The default alphabet coresponds to RFC4648.\n */\n\nEncoder.prototype.alphabet = rfc4648.alphabet;\n\n/**\n * Encode a byte array, continuing from the previous state.\n *\n * @param {byte[]} buf The byte array to encode.\n * @return {Encoder} this\n */\n\nEncoder.prototype.write = function (buf) {\n  var shift = this.shift;\n  var carry = this.carry;\n  var symbol;\n  var byte;\n  var i;\n\n  // encode each byte in buf\n  for (i = 0; i < buf.length; i++) {\n    byte = buf[i];\n\n    // 1: 00000 000\n    // 2:          00 00000 0\n    // 3:                    0000 0000\n    // 4:                             0 00000 00\n    // 5:                                       000 00000\n    // 6:                                                00000 000\n    // 7:                                                         00 00000 0\n\n    symbol = carry | (byte >> shift);\n    this.buf += this.alphabet[symbol & 0x1f];\n\n    if (shift > 5) {\n      shift -= 5;\n      symbol = byte >> shift;\n      this.buf += this.alphabet[symbol & 0x1f];\n    }\n\n    shift = 5 - shift;\n    carry = byte << shift;\n    shift = 8 - shift;\n  }\n\n  // save state\n  this.shift = shift;\n  this.carry = carry;\n\n  // for chaining\n  return this;\n};\n\n/**\n * Finish encoding.\n *\n * @param {byte[]} [buf] The final byte array to encode.\n * @return {string} The encoded byte array.\n */\n\nEncoder.prototype.finalize = function (buf) {\n  if (buf) {\n    this.write(buf);\n  }\n  if (this.shift !== 3) {\n    this.buf += this.alphabet[this.carry & 0x1f];\n    this.shift = 3;\n    this.carry = 0;\n  }\n  return this.buf;\n};\n\n/**\n * Convenience encoder.\n *\n * @param {byte[]} buf The byte array to encode.\n * @param {object} [options] Options to pass to the encoder.\n * @return {string} The encoded string.\n */\n\nexports.encode = function (buf, options) {\n  return new Encoder(options).finalize(buf);\n};\n\n/**\n * Convenience decoder.\n *\n * @param {string} str The string to decode.\n * @param {object} [options] Options to pass to the decoder.\n * @return {byte[]} The decoded byte array.\n */\n\nexports.decode = function (str, options) {\n  return new Decoder(options).finalize(str);\n};\n\n// Exports.\nexports.Decoder = Decoder;\nexports.Encoder = Encoder;\nexports.charmap = charmap;\nexports.crockford = crockford;\nexports.rfc4648 = rfc4648;\nexports.base32hex = base32hex;\n","// SPDX-License-Identifier: MIT\n// @ts-ignore: no declaration file for 'base32.js'\nimport * as base32 from 'base32.js';\nimport { hexToBytes, bytesToHex } from '../utils';\nconst ALPHABET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567';\nconst translate = (s, from, to) => s.split('')\n    .map(c => {\n    const i = from.indexOf(c);\n    return i === -1 ? c : to[i];\n})\n    .join('');\nconst pad = (s) => (s.length % 8 ? s + '='.repeat(8 - (s.length % 8)) : s);\nexport function encode(hex, customAlphabet) {\n    const bytes = hexToBytes(hex);\n    const encoder = new base32.Encoder({ type: 'rfc4648', alphabet: ALPHABET });\n    const b32 = encoder.write(bytes).finalize().toUpperCase(); // base32.js returns lower\n    return customAlphabet ? translate(b32, ALPHABET, customAlphabet) : b32;\n}\nexport const encodeNoPadding = (hex, alpha) => encode(hex, alpha).replace(/=+$/, '');\nexport function decode(data, customAlphabet) {\n    try {\n        let inp = pad(data);\n        if (customAlphabet) {\n            inp = translate(inp, customAlphabet, ALPHABET);\n        }\n        const dec = new base32.Decoder({ type: 'rfc4648', alphabet: ALPHABET });\n        const bytes = dec.write(inp).finalize();\n        return bytesToHex(bytes);\n    }\n    catch {\n        throw new Error('Invalid Base32 string');\n    }\n}\n//# sourceMappingURL=base32.js.map","// SPDX-License-Identifier: MIT\nimport { encodeNoPadding, decode } from '../libs/base32';\nimport { SLIP10Secp256k1PublicKey, validateAndGetPublicKey } from '../eccs';\nimport { Filecoin } from '../cryptocurrencies';\nimport { blake2b160, blake2b32 } from '../crypto';\nimport { integerToBytes, bytesToString, getBytes, concatBytes, equalBytes, bytesToHex } from '../utils';\nimport { Address } from './address';\nimport { AddressError } from '../exceptions';\nexport class FilecoinAddress extends Address {\n    static alphabet = Filecoin.PARAMS.ALPHABET;\n    static addressPrefix = Filecoin.PARAMS.ADDRESS_PREFIX;\n    static addressType = Filecoin.DEFAULT_ADDRESS_TYPE;\n    static addressTypes = {\n        secp256k1: Filecoin.PARAMS.ADDRESS_TYPES.SECP256K1,\n        bls: Filecoin.PARAMS.ADDRESS_TYPES.BLS\n    };\n    static getName() {\n        return 'Filecoin';\n    }\n    static computeChecksum(pubKeyHash, addressType) {\n        return blake2b32(concatBytes(integerToBytes(addressType), pubKeyHash));\n    }\n    static encode(publicKey, options = {\n        addressPrefix: this.addressPrefix,\n        addressType: this.addressType\n    }) {\n        const pk = validateAndGetPublicKey(publicKey, SLIP10Secp256k1PublicKey);\n        const pubKeyHash = blake2b160(pk.getRawUncompressed());\n        const typeKey = options.addressType ?? this.addressType;\n        const addressType = this.addressTypes[typeKey];\n        if (addressType === undefined) {\n            throw new AddressError('Invalid Filecoin address type', {\n                expected: Object.keys(FilecoinAddress.addressTypes),\n                got: typeKey\n            });\n        }\n        const checksum = FilecoinAddress.computeChecksum(pubKeyHash, addressType);\n        const base32Encoded = encodeNoPadding(bytesToString(concatBytes(pubKeyHash, checksum)), FilecoinAddress.alphabet);\n        return FilecoinAddress.addressPrefix + String.fromCharCode(addressType + '0'.charCodeAt(0)) + base32Encoded;\n    }\n    static decode(address, options = {\n        addressPrefix: this.addressPrefix,\n        addressType: this.addressType\n    }) {\n        const prefix = FilecoinAddress.addressPrefix;\n        if (!address.startsWith(prefix)) {\n            throw new AddressError('Invalid prefix', {\n                expected: prefix,\n                got: address.slice(0, prefix.length)\n            });\n        }\n        const addressBody = address.slice(prefix.length);\n        const typeKey = options.addressType ?? this.addressType;\n        const expectedType = FilecoinAddress.addressTypes[typeKey];\n        if (expectedType === undefined) {\n            throw new AddressError('Invalid Filecoin address type', {\n                expected: Object.keys(FilecoinAddress.addressTypes),\n                got: typeKey\n            });\n        }\n        const actualType = addressBody.charCodeAt(0) - '0'.charCodeAt(0);\n        if (expectedType !== actualType) {\n            throw new AddressError('Invalid address type', {\n                expected: expectedType,\n                got: actualType\n            });\n        }\n        const payloadBytes = getBytes(decode(addressBody.slice(1), FilecoinAddress.alphabet));\n        if (payloadBytes.length !== 24) {\n            throw new AddressError('Invalid length', {\n                expected: 24, got: payloadBytes.length\n            });\n        }\n        const publicKeyHash = payloadBytes.slice(0, 20);\n        const checksum = payloadBytes.slice(20);\n        const expectedChecksum = FilecoinAddress.computeChecksum(publicKeyHash, expectedType);\n        if (!equalBytes(checksum, expectedChecksum)) {\n            throw new AddressError('Invalid checksum', {\n                expected: bytesToHex(expectedChecksum), got: bytesToHex(checksum)\n            });\n        }\n        return bytesToString(publicKeyHash);\n    }\n}\n//# sourceMappingURL=filecoin.js.map","// SPDX-License-Identifier: MIT\nimport { CosmosAddress } from './cosmos';\nimport { Avalanche } from '../cryptocurrencies';\nimport { Address } from './address';\nimport { AddressError } from '../exceptions';\nexport class AvalancheAddress extends Address {\n    static hrp = Avalanche.NETWORKS.MAINNET.HRP;\n    static addressType = Avalanche.DEFAULT_ADDRESS_TYPE;\n    static addressTypes = {\n        'p-chain': Avalanche.PARAMS.ADDRESS_TYPES.P_CHAIN,\n        'x-chain': Avalanche.PARAMS.ADDRESS_TYPES.X_CHAIN\n    };\n    static getName() {\n        return 'Avalanche';\n    }\n    static encode(publicKey, options = {\n        hrp: this.hrp, addressType: this.addressType\n    }) {\n        const typeKey = options.addressType ?? this.addressType;\n        const addressType = AvalancheAddress.addressTypes[typeKey];\n        if (!addressType) {\n            throw new AddressError('Invalid Avalanche address type', {\n                expected: Object.keys(AvalancheAddress.addressTypes), got: typeKey\n            });\n        }\n        const base = CosmosAddress.encode(publicKey, {\n            hrp: options.hrp ?? this.hrp\n        });\n        return addressType + base;\n    }\n    static decode(address, options = {\n        addressType: this.addressType\n    }) {\n        const typeKey = options.addressType ?? this.addressType;\n        const addressType = AvalancheAddress.addressTypes[typeKey];\n        if (!addressType) {\n            throw new AddressError('Invalid Avalanche address type', {\n                expected: Object.keys(AvalancheAddress.addressTypes), got: typeKey\n            });\n        }\n        const prefix = address.slice(0, addressType.length);\n        if (prefix !== addressType) {\n            throw new AddressError('Invalid prefix', {\n                expected: addressType, got: prefix\n            });\n        }\n        const rest = address.slice(addressType.length);\n        return CosmosAddress.decode(rest, { hrp: options.hrp ?? this.hrp });\n    }\n}\n//# sourceMappingURL=avalanche.js.map","// SPDX-License-Identifier: MIT\nimport { encode, decode } from '../libs/base58';\nimport { SLIP10Secp256k1PublicKey, validateAndGetPublicKey } from '../eccs';\nimport { EOS } from '../cryptocurrencies';\nimport { ripemd160 } from '../crypto';\nimport { bytesToString, getBytes, concatBytes, ensureString, equalBytes, bytesToHex } from '../utils';\nimport { Address } from './address';\nimport { AddressError } from '../exceptions';\nexport class EOSAddress extends Address {\n    static addressPrefix = EOS.PARAMS.ADDRESS_PREFIX;\n    static checksumLength = EOS.PARAMS.CHECKSUM_LENGTH;\n    static getName() {\n        return 'EOS';\n    }\n    static computeChecksum(pubKeyBytes) {\n        return ripemd160(pubKeyBytes).slice(0, this.checksumLength);\n    }\n    static encode(publicKey, options = {\n        addressPrefix: this.addressPrefix\n    }) {\n        const pk = validateAndGetPublicKey(publicKey, SLIP10Secp256k1PublicKey);\n        const raw = getBytes(pk.getRawCompressed());\n        const checksum = this.computeChecksum(raw);\n        const prefix = options.addressPrefix ?? this.addressPrefix;\n        return prefix + ensureString(encode(concatBytes(raw, checksum)));\n    }\n    static decode(address, options = {\n        addressPrefix: this.addressPrefix\n    }) {\n        const prefix = options.addressPrefix ?? this.addressPrefix;\n        if (!address.startsWith(prefix)) {\n            throw new AddressError('Invalid prefix', {\n                expected: prefix, got: address.slice(0, prefix.length)\n            });\n        }\n        const withoutPrefix = address.slice(prefix.length);\n        const decoded = decode(withoutPrefix);\n        const expectedLength = SLIP10Secp256k1PublicKey.getCompressedLength() + this.checksumLength;\n        if (decoded.length !== expectedLength) {\n            throw new AddressError('Invalid length', {\n                expected: expectedLength, got: decoded.length\n            });\n        }\n        const publicKeyBytes = decoded.slice(0, -this.checksumLength);\n        const checksum = decoded.slice(-this.checksumLength);\n        const computedChecksum = this.computeChecksum(publicKeyBytes);\n        if (!equalBytes(checksum, computedChecksum)) {\n            throw new AddressError('Invalid checksum', {\n                expected: bytesToHex(computedChecksum), got: bytesToHex(checksum)\n            });\n        }\n        if (!SLIP10Secp256k1PublicKey.isValidBytes(publicKeyBytes)) {\n            throw new AddressError('Invalid public key bytes', {\n                got: bytesToHex(publicKeyBytes)\n            });\n        }\n        return bytesToString(publicKeyBytes);\n    }\n}\n//# sourceMappingURL=eos.js.map","// SPDX-License-Identifier: MIT\nimport { encode, decode } from '../libs/base58';\nimport { SLIP10Secp256k1PublicKey, validateAndGetPublicKey } from '../eccs';\nimport { Ergo } from '../cryptocurrencies';\nimport { blake2b256 } from '../crypto';\nimport { bytesToString, ensureTypeMatch, integerToBytes, getBytes, concatBytes, ensureString, equalBytes, bytesToHex } from '../utils';\nimport { Address } from './address';\nimport { AddressError, NetworkError } from '../exceptions';\nimport { Network } from '../cryptocurrencies/cryptocurrency';\nexport class ErgoAddress extends Address {\n    static checksumLength = Ergo.PARAMS.CHECKSUM_LENGTH;\n    static addressType = Ergo.DEFAULT_ADDRESS_TYPE;\n    static addressTypes = {\n        'p2pkh': Ergo.PARAMS.ADDRESS_TYPES.P2PKH,\n        'p2sh': Ergo.PARAMS.ADDRESS_TYPES.P2SH\n    };\n    static networkType = Ergo.DEFAULT_NETWORK;\n    static networkTypes = {\n        'mainnet': Ergo.NETWORKS.MAINNET.TYPE,\n        'testnet': Ergo.NETWORKS.TESTNET.TYPE\n    };\n    static getName() {\n        return 'Ergo';\n    }\n    static computeChecksum(data) {\n        return blake2b256(data).slice(0, this.checksumLength);\n    }\n    static encode(publicKey, options = {\n        addressType: this.addressType,\n        networkType: this.networkType\n    }) {\n        const network = options.networkType ?? this.networkType;\n        const resolvedNetwork = ensureTypeMatch(network, Network, { otherTypes: ['string'] });\n        const networkName = resolvedNetwork.isValid ? resolvedNetwork.value.getName() : network;\n        const networkType = this.networkTypes[networkName];\n        if (networkType === undefined) {\n            throw new NetworkError('Invalid Ergo network type', {\n                expected: Object.keys(this.networkTypes), got: network\n            });\n        }\n        const addressType = this.addressTypes[options.addressType ?? this.addressType];\n        if (addressType === undefined) {\n            throw new AddressError('Invalid Ergo address type', {\n                expected: Object.keys(this.addressTypes), got: options.addressType\n            });\n        }\n        const pk = validateAndGetPublicKey(publicKey, SLIP10Secp256k1PublicKey);\n        const prefix = integerToBytes(addressType + networkType);\n        const addressPayload = concatBytes(prefix, pk.getRawCompressed());\n        const checksum = this.computeChecksum(addressPayload);\n        return ensureString(encode(concatBytes(addressPayload, checksum)));\n    }\n    static decode(address, options = {\n        addressType: this.addressType,\n        networkType: this.networkType\n    }) {\n        const network = options.networkType ?? this.networkType;\n        const resolvedNetwork = ensureTypeMatch(network, Network, { otherTypes: ['string'] });\n        const networkName = resolvedNetwork.isValid ? resolvedNetwork.value.getName() : network;\n        const networkType = this.networkTypes[networkName];\n        if (networkType === undefined) {\n            throw new NetworkError('Invalid Ergo network type', {\n                expected: Object.keys(this.networkTypes), got: options.networkType\n            });\n        }\n        const addressType = this.addressTypes[options.addressType ?? this.addressType];\n        if (addressType === undefined) {\n            throw new AddressError('Invalid Ergo address type', {\n                expected: Object.keys(this.addressTypes), got: options.addressType\n            });\n        }\n        const prefix = getBytes(integerToBytes(addressType + networkType));\n        const decoded = decode(address);\n        const expectedLength = SLIP10Secp256k1PublicKey.getCompressedLength() + this.checksumLength + prefix.length;\n        if (decoded.length !== expectedLength) {\n            throw new AddressError('Invalid length', {\n                expected: expectedLength, got: decoded.length\n            });\n        }\n        const checksum = decoded.slice(-this.checksumLength);\n        const payload = decoded.slice(0, -this.checksumLength);\n        const checksumExpected = this.computeChecksum(payload);\n        if (!equalBytes(checksum, checksumExpected)) {\n            throw new AddressError('Invalid checksum', {\n                expected: bytesToHex(checksumExpected), got: bytesToHex(checksum)\n            });\n        }\n        const prefixGot = payload.slice(0, prefix.length);\n        if (!equalBytes(prefix, prefixGot)) {\n            throw new AddressError('Invalid prefix', {\n                expected: bytesToHex(prefix), got: bytesToHex(prefixGot)\n            });\n        }\n        const pubKey = payload.slice(prefix.length);\n        if (!SLIP10Secp256k1PublicKey.isValidBytes(pubKey)) {\n            throw new AddressError('Invalid public key', {\n                got: bytesToHex(pubKey)\n            });\n        }\n        return bytesToString(pubKey);\n    }\n}\n//# sourceMappingURL=ergo.js.map","// SPDX-License-Identifier: MIT\nimport { Icon } from '../cryptocurrencies';\nimport { SLIP10Secp256k1PublicKey, validateAndGetPublicKey } from '../eccs';\nimport { sha3_256 } from '../crypto';\nimport { getBytes, bytesToString } from '../utils';\nimport { Address } from './address';\nimport { AddressError } from '../exceptions';\nexport class IconAddress extends Address {\n    static addressPrefix = Icon.PARAMS.ADDRESS_PREFIX;\n    static keyHashLength = Icon.PARAMS.KEY_HASH_LENGTH;\n    static getName() {\n        return 'Icon';\n    }\n    static encode(publicKey) {\n        const pk = validateAndGetPublicKey(publicKey, SLIP10Secp256k1PublicKey);\n        const raw = pk.getRawUncompressed().slice(1); // Remove prefix byte (0x04)\n        const hash = sha3_256(raw).slice(-this.keyHashLength);\n        return this.addressPrefix + bytesToString(hash);\n    }\n    static decode(address) {\n        const prefix = this.addressPrefix;\n        if (!address.startsWith(prefix)) {\n            throw new AddressError('Invalid prefix', {\n                expected: prefix, got: address.slice(0, prefix.length)\n            });\n        }\n        const withoutPrefix = address.slice(prefix.length);\n        const keyHash = getBytes(withoutPrefix);\n        if (keyHash.length !== this.keyHashLength) {\n            throw new AddressError('Invalid length', {\n                expected: this.keyHashLength, got: keyHash.length\n            });\n        }\n        return bytesToString(keyHash);\n    }\n}\n//# sourceMappingURL=icon.js.map","// SPDX-License-Identifier: MIT\nimport { EthereumAddress } from './ethereum';\nimport { bech32Encode, bech32Decode } from '../libs/bech32';\nimport { OKTChain } from '../cryptocurrencies';\nimport { bytesToString, getBytes } from '../utils';\nimport { Address } from './address';\nimport { AddressError } from '../exceptions';\nexport class OKTChainAddress extends Address {\n    static hrp = OKTChain.NETWORKS.MAINNET.HRP;\n    static getName() {\n        return 'OKT-Chain';\n    }\n    static encode(publicKey, options = {\n        hrp: this.hrp\n    }) {\n        const baseEth = EthereumAddress.encode(publicKey, {\n            skipChecksumEncode: true\n        });\n        const ethHexWithoutPrefix = baseEth.slice(2); // strip \"0x\"\n        const bytes = getBytes(ethHexWithoutPrefix);\n        const hrp = options.hrp ?? this.hrp;\n        const encoded = bech32Encode(hrp, bytes);\n        if (!encoded) {\n            throw new AddressError('Failed to encode OKTChain Bech32 address');\n        }\n        return encoded;\n    }\n    static decode(address, options = {\n        hrp: this.hrp\n    }) {\n        const hrp = options.hrp ?? this.hrp;\n        const [decodedHrp, data] = bech32Decode(hrp, address);\n        if (!decodedHrp || !data) {\n            throw new AddressError('Failed to decode OKTChain Bech32 address');\n        }\n        const ethHex = EthereumAddress.addressPrefix + bytesToString(data);\n        return EthereumAddress.decode(ethHex, {\n            skipChecksumEncode: true\n        });\n    }\n}\n//# sourceMappingURL=okt-chain.js.map","// SPDX-License-Identifier: MIT\nimport { OKTChainAddress } from './okt-chain';\nimport { Harmony } from '../cryptocurrencies';\nexport class HarmonyAddress extends OKTChainAddress {\n    static hrp = Harmony.NETWORKS.MAINNET.HRP;\n    static getName() {\n        return 'Harmony';\n    }\n}\n//# sourceMappingURL=harmony.js.map","// SPDX-License-Identifier: MIT\nimport { bech32Encode, bech32Decode } from '../libs/bech32';\nimport { SLIP10Secp256k1PublicKey, validateAndGetPublicKey } from '../eccs';\nimport { Zilliqa } from '../cryptocurrencies';\nimport { sha256 } from '../crypto';\nimport { bytesToString } from '../utils';\nimport { Address } from './address';\nimport { AddressError } from '../exceptions';\nexport class ZilliqaAddress extends Address {\n    static hrp = Zilliqa.NETWORKS.MAINNET.HRP;\n    static getName() {\n        return 'Zilliqa';\n    }\n    static encode(publicKey, options = {\n        hrp: this.hrp\n    }) {\n        const pk = validateAndGetPublicKey(publicKey, SLIP10Secp256k1PublicKey);\n        const hash = sha256(pk.getRawCompressed()).slice(-20);\n        const hrp = options.hrp ?? this.hrp;\n        const encoded = bech32Encode(hrp, hash);\n        if (!encoded) {\n            throw new AddressError('Failed to encode Bech32 Zilliqa address');\n        }\n        return encoded;\n    }\n    static decode(address, options = {\n        hrp: this.hrp\n    }) {\n        const hrp = options.hrp ?? this.hrp;\n        const [gotHrp, data] = bech32Decode(hrp, address);\n        if (!gotHrp || !data) {\n            throw new AddressError('Failed to decode Bech32 Zilliqa address');\n        }\n        if (data.length !== 20) {\n            throw new AddressError('Invalid address length', {\n                expected: 20, got: data.length\n            });\n        }\n        return bytesToString(data);\n    }\n}\n//# sourceMappingURL=zilliqa.js.map","// SPDX-License-Identifier: MIT\nimport { EthereumAddress } from './ethereum';\nimport { bech32Encode, bech32Decode } from '../libs/bech32';\nimport { SLIP10Secp256k1PublicKey, validateAndGetPublicKey } from '../eccs';\nimport { Injective } from '../cryptocurrencies';\nimport { bytesToString, getBytes } from '../utils';\nimport { Address } from './address';\nimport { AddressError } from '../exceptions';\nexport class InjectiveAddress extends Address {\n    static hrp = Injective.NETWORKS.MAINNET.HRP;\n    static getName() {\n        return 'Injective';\n    }\n    static encode(publicKey, options = {\n        hrp: this.hrp\n    }) {\n        const pk = validateAndGetPublicKey(publicKey, SLIP10Secp256k1PublicKey);\n        const ethEncoded = EthereumAddress.encode(pk, {\n            skipChecksumEncode: true\n        });\n        const rawBytes = getBytes(ethEncoded.slice(2)); // remove \"0x\"\n        const hrp = options.hrp ?? this.hrp;\n        const encoded = bech32Encode(hrp, rawBytes);\n        if (!encoded) {\n            throw new AddressError('Failed to encode Bech32 Injective address');\n        }\n        return encoded;\n    }\n    static decode(address, options = {\n        hrp: this.hrp\n    }) {\n        const hrp = options.hrp ?? this.hrp;\n        const [gotHrp, data] = bech32Decode(hrp, address);\n        if (!gotHrp || !data) {\n            throw new AddressError('Failed to decode Bech32 Injective address');\n        }\n        if (data.length !== 20) {\n            throw new AddressError('Invalid length', {\n                expected: 20, got: data.length\n            });\n        }\n        return bytesToString(data);\n    }\n}\n//# sourceMappingURL=injective.js.map","// SPDX-License-Identifier: MIT\nimport { encode, decode, Tag } from 'cbor2';\nimport { Cardano } from '../cryptocurrencies';\nimport { bech32Encode, bech32Decode } from '../libs/bech32';\nimport { encode as base58Encode, decode as base58Decode } from '../libs/base58';\nimport { KholawEd25519PublicKey, validateAndGetPublicKey } from '../eccs';\nimport { crc32, blake2b224, sha3_256, chacha20Poly1305Encrypt } from '../crypto';\nimport { getBytes, bytesToInteger, bytesToString, integerToBytes, pathToIndexes, concatBytes, ensureString, equalBytes } from '../utils';\nimport { AddressError, BaseError } from '../exceptions';\nimport { Address } from './address';\nexport class CardanoAddress extends Address {\n    static addressTypes = {\n        'public-key': Cardano.PARAMS.PUBLIC_KEY_ADDRESS,\n        'redemption': Cardano.PARAMS.REDEMPTION_ADDRESS\n    };\n    static networkTypes = {\n        'mainnet': Cardano.NETWORKS.MAINNET.TYPE,\n        'testnet': Cardano.NETWORKS.TESTNET.TYPE\n    };\n    static prefixTypes = {\n        'payment': Cardano.PARAMS.PAYMENT_PREFIX,\n        'reward': Cardano.PARAMS.REWARD_PREFIX\n    };\n    static paymentAddressHrp = {\n        'mainnet': Cardano.NETWORKS.MAINNET.PAYMENT_ADDRESS_HRP,\n        'testnet': Cardano.NETWORKS.TESTNET.PAYMENT_ADDRESS_HRP\n    };\n    static rewardAddressHrp = {\n        'mainnet': Cardano.NETWORKS.MAINNET.REWARD_ADDRESS_HRP,\n        'testnet': Cardano.NETWORKS.TESTNET.REWARD_ADDRESS_HRP\n    };\n    static chacha20Poly1305AssociatedData = new Uint8Array();\n    static chacha20Poly1305Nonce = getBytes('7365726f6b656c6c666f7265');\n    static payloadTag = 24;\n    static getName() {\n        return 'Cardano';\n    }\n    static encode(publicKey, options = {\n        encodeType: Cardano.ADDRESS_TYPES.PAYMENT\n    }) {\n        const encodeType = options.encodeType ?? Cardano.ADDRESS_TYPES.PAYMENT;\n        if (encodeType === Cardano.TYPES.BYRON_LEGACY) {\n            return this.encodeByronLegacy(publicKey, options.path, options.pathKey, options.chainCode, options.addressType ?? Cardano.ADDRESS_TYPES.PUBLIC_KEY);\n        }\n        else if (encodeType === Cardano.TYPES.BYRON_ICARUS) {\n            return this.encodeByronIcarus(publicKey, options.chainCode, options.addressType ?? Cardano.ADDRESS_TYPES.PUBLIC_KEY);\n        }\n        else if (encodeType === Cardano.ADDRESS_TYPES.PAYMENT) {\n            return this.encodeShelley(publicKey, options.stakingPublicKey, options.network ?? 'mainnet');\n        }\n        else if (encodeType === Cardano.ADDRESS_TYPES.STAKING ||\n            encodeType === Cardano.ADDRESS_TYPES.REWARD) {\n            return this.encodeShelleyStaking(publicKey, options.network ?? 'mainnet');\n        }\n        throw new AddressError('Invalid encode type');\n    }\n    static decode(address, options = {\n        decodeType: Cardano.ADDRESS_TYPES.PAYMENT\n    }) {\n        const decodeType = options.decodeType ?? Cardano.ADDRESS_TYPES.PAYMENT;\n        if (decodeType === Cardano.TYPES.BYRON_LEGACY ||\n            decodeType === Cardano.TYPES.BYRON_ICARUS) {\n            return this.decodeByron(address, options.addressType ?? Cardano.ADDRESS_TYPES.PUBLIC_KEY);\n        }\n        else if (decodeType === Cardano.ADDRESS_TYPES.PAYMENT) {\n            return this.decodeShelley(address, options.network ?? 'mainnet');\n        }\n        else if (decodeType === Cardano.ADDRESS_TYPES.STAKING ||\n            decodeType === Cardano.ADDRESS_TYPES.REWARD) {\n            return this.decodeShelleyStaking(address, options.network ?? 'mainnet');\n        }\n        throw new AddressError('Invalid decode type');\n    }\n    static encodeByron(publicKey, chainCode, addressAttributes, addressType = Cardano.ADDRESS_TYPES.PUBLIC_KEY) {\n        if (!(addressType in this.addressTypes)) {\n            throw new AddressError('Invalid address type');\n        }\n        const serialized = encode([\n            this.addressTypes[addressType],\n            [this.addressTypes[addressType], concatBytes(publicKey.getRawCompressed().slice(1), chainCode)],\n            addressAttributes\n        ]);\n        const rootHash = blake2b224(sha3_256(serialized));\n        const payload = encode([\n            rootHash,\n            addressAttributes,\n            this.addressTypes[addressType]\n        ]);\n        const full = encode([\n            new Tag(this.payloadTag, payload), bytesToInteger(crc32(payload))\n        ]);\n        return ensureString(base58Encode(full));\n    }\n    static encodeByronIcarus(publicKey, chainCode, addressType = Cardano.ADDRESS_TYPES.PUBLIC_KEY) {\n        const pk = validateAndGetPublicKey(publicKey, KholawEd25519PublicKey);\n        return this.encodeByron(pk, getBytes(chainCode), {}, addressType);\n    }\n    static encodeByronLegacy(publicKey, path, pathKey, chainCode, addressType = Cardano.ADDRESS_TYPES.PUBLIC_KEY) {\n        const pathK = getBytes(pathKey);\n        if (pathK.length !== 32) {\n            throw new BaseError('Invalid HD path key length', { expected: 32, got: pathK.length });\n        }\n        const pk = validateAndGetPublicKey(publicKey, KholawEd25519PublicKey);\n        const indexes = pathToIndexes(path);\n        const plain = concatBytes(integerToBytes(0x9f), ...indexes.map(i => encode(i)), integerToBytes(0xff));\n        const { cipherText, tag } = chacha20Poly1305Encrypt(pathK, this.chacha20Poly1305Nonce, this.chacha20Poly1305AssociatedData, plain);\n        const attributes = new Map();\n        attributes.set(1, encode(concatBytes(cipherText, tag)));\n        return this.encodeByron(pk, getBytes(chainCode), attributes, addressType);\n    }\n    static decodeByron(address, addressType = Cardano.ADDRESS_TYPES.PUBLIC_KEY) {\n        const decoded = base58Decode(address);\n        const outer = decode(decoded);\n        if (!Array.isArray(outer) || outer.length !== 2 || !(outer[0] instanceof Tag)) {\n            throw new AddressError('Invalid address encoding');\n        }\n        const tag = outer[0];\n        if (tag.tag !== this.payloadTag) {\n            throw new AddressError('Invalid CBOR tag');\n        }\n        const payload = tag.contents;\n        const crcExpected = outer[1];\n        const crcActual = bytesToInteger(crc32(payload));\n        if (Number(crcExpected) !== Number(crcActual)) {\n            throw new AddressError('Invalid CRC', { expected: crcExpected, got: crcActual });\n        }\n        const inner = decode(payload);\n        const [rootHash, attrs, tagType] = inner;\n        if (tagType !== this.addressTypes[addressType]) {\n            throw new AddressError('Invalid address type', { expected: this.addressTypes[addressType], got: tagType });\n        }\n        if (rootHash.length !== 28) {\n            throw new AddressError('Invalid root hash length', { expected: 28, got: rootHash.length });\n        }\n        let extra = new Uint8Array(0);\n        if (attrs instanceof Map && attrs.has(1)) {\n            const attr1 = attrs.get(1);\n            const decrypted = decode(attr1);\n            extra = typeof decrypted === 'string' ? getBytes(decrypted) : decrypted;\n        }\n        return bytesToString(concatBytes(rootHash, extra));\n    }\n    static decodeByronIcarus(address, addressType = Cardano.ADDRESS_TYPES.PUBLIC_KEY) {\n        return CardanoAddress.decodeByron(address, addressType);\n    }\n    static decodeByronLegacy(address, addressType = Cardano.ADDRESS_TYPES.PUBLIC_KEY) {\n        return CardanoAddress.decodeByron(address, addressType);\n    }\n    static encodeShelley(publicKey, stakingPublicKey, network) {\n        const pk = validateAndGetPublicKey(publicKey, KholawEd25519PublicKey);\n        const spk = validateAndGetPublicKey(stakingPublicKey, KholawEd25519PublicKey);\n        const prefix = integerToBytes((this.prefixTypes['payment'] << 4) + this.networkTypes[network]);\n        const hash1 = blake2b224(pk.getRawCompressed().slice(1));\n        const hash2 = blake2b224(spk.getRawCompressed().slice(1));\n        return bech32Encode(this.paymentAddressHrp[network], concatBytes(prefix, hash1, hash2));\n    }\n    static decodeShelley(address, network) {\n        const [hrp, data] = bech32Decode(this.paymentAddressHrp[network], address);\n        if (!data || data.length !== 57) {\n            throw new AddressError('Invalid length', { expected: 57, got: data?.length });\n        }\n        const prefix = integerToBytes((this.prefixTypes['payment'] << 4) + this.networkTypes[network]);\n        if (!equalBytes(data.slice(0, 1), prefix)) {\n            throw new AddressError('Invalid prefix');\n        }\n        return bytesToString(data.slice(1));\n    }\n    static encodeShelleyStaking(publicKey, network) {\n        const pk = validateAndGetPublicKey(publicKey, KholawEd25519PublicKey);\n        const prefix = integerToBytes((this.prefixTypes['reward'] << 4) + this.networkTypes[network]);\n        const hash = blake2b224(pk.getRawCompressed().slice(1));\n        return bech32Encode(this.rewardAddressHrp[network], concatBytes(prefix, hash));\n    }\n    static decodeShelleyStaking(address, network) {\n        const [hrp, data] = bech32Decode(this.rewardAddressHrp[network], address);\n        if (!data || data.length !== 29) {\n            throw new AddressError('Invalid length', { expected: 29, got: data?.length });\n        }\n        const prefix = integerToBytes((this.prefixTypes['reward'] << 4) + this.networkTypes[network]);\n        if (!equalBytes(data.slice(0, 1), prefix)) {\n            throw new AddressError('Invalid prefix');\n        }\n        return bytesToString(data.slice(1));\n    }\n}\n//# sourceMappingURL=cardano.js.map","// SPDX-License-Identifier: MIT\nimport { Monero } from '../cryptocurrencies';\nimport { decodeMonero, encodeMonero } from '../libs/base58';\nimport { keccak256 } from '../crypto';\nimport { SLIP10Ed25519MoneroPublicKey, validateAndGetPublicKey } from '../eccs';\nimport { bytesToString, concatBytes, ensureTypeMatch, getBytes, integerToBytes, equalBytes } from '../utils';\nimport { Network } from '../cryptocurrencies/cryptocurrency';\nimport { AddressError, BaseError } from '../exceptions';\nimport { Address } from './address';\nexport class MoneroAddress extends Address {\n    static checksumLength = Monero.PARAMS.CHECKSUM_LENGTH;\n    static paymentIDLength = Monero.PARAMS.PAYMENT_ID_LENGTH;\n    static network = Monero.DEFAULT_NETWORK;\n    static addressType = Monero.DEFAULT_ADDRESS_TYPE;\n    static networks = {\n        mainnet: {\n            addressTypes: {\n                'standard': Monero.NETWORKS.MAINNET.STANDARD,\n                'integrated': Monero.NETWORKS.MAINNET.INTEGRATED,\n                'sub-address': Monero.NETWORKS.MAINNET.SUB_ADDRESS\n            }\n        },\n        stagenet: {\n            addressTypes: {\n                'standard': Monero.NETWORKS.STAGENET.STANDARD,\n                'integrated': Monero.NETWORKS.STAGENET.INTEGRATED,\n                'sub-address': Monero.NETWORKS.STAGENET.SUB_ADDRESS\n            }\n        },\n        testnet: {\n            addressTypes: {\n                'standard': Monero.NETWORKS.TESTNET.STANDARD,\n                'integrated': Monero.NETWORKS.TESTNET.INTEGRATED,\n                'sub-address': Monero.NETWORKS.TESTNET.SUB_ADDRESS\n            }\n        }\n    };\n    static getName() {\n        return 'Monero';\n    }\n    static computeChecksum(data) {\n        return keccak256(data).subarray(0, this.checksumLength);\n    }\n    static encode(publicKeys, options = {\n        network: this.network, addressType: this.addressType\n    }) {\n        const { spendPublicKey, viewPublicKey } = publicKeys;\n        const addressType = options.addressType ?? this.addressType;\n        const paymentID = options.paymentID ? getBytes(options.paymentID) : undefined;\n        const spend = validateAndGetPublicKey(spendPublicKey, SLIP10Ed25519MoneroPublicKey);\n        const view = validateAndGetPublicKey(viewPublicKey, SLIP10Ed25519MoneroPublicKey);\n        if (paymentID && paymentID.length !== this.paymentIDLength) {\n            throw new BaseError('Invalid payment ID length', {\n                expected: this.paymentIDLength, got: paymentID.length\n            });\n        }\n        const network = options.network ?? this.network;\n        const resolvedNetwork = ensureTypeMatch(network, Network, { otherTypes: ['string'] });\n        const networkName = resolvedNetwork.isValid ? resolvedNetwork.value.getName() : network;\n        const version = integerToBytes(this.networks[networkName].addressTypes[addressType]);\n        const payload = concatBytes(version, spend.getRawCompressed(), view.getRawCompressed(), getBytes(paymentID ?? new Uint8Array(0)));\n        const checksum = this.computeChecksum(getBytes(payload));\n        return encodeMonero(getBytes(concatBytes(payload, checksum)));\n    }\n    static decode(address, options = {\n        network: this.network, addressType: this.addressType\n    }) {\n        const addressType = options.addressType ?? this.addressType;\n        const paymentID = getBytes(options.paymentID ?? new Uint8Array(0));\n        const decoded = decodeMonero(address);\n        const checksum = decoded.subarray(-this.checksumLength);\n        const payloadWithPrefix = decoded.subarray(0, -this.checksumLength);\n        const computedChecksum = this.computeChecksum(payloadWithPrefix);\n        if (!equalBytes(checksum, computedChecksum)) {\n            throw new AddressError('Invalid checksum', {\n                expected: bytesToString(checksum), got: bytesToString(computedChecksum)\n            });\n        }\n        const network = options.network ?? this.network;\n        const resolvedNetwork = ensureTypeMatch(network, Network, { otherTypes: ['string'] });\n        const networkName = resolvedNetwork.isValid ? resolvedNetwork.value.getName() : network;\n        const version = integerToBytes(this.networks[networkName].addressTypes[addressType]);\n        const versionGot = payloadWithPrefix.subarray(0, version.length);\n        if (!equalBytes(versionGot, version)) {\n            throw new AddressError('Invalid version', { expected: version, got: versionGot });\n        }\n        const payload = payloadWithPrefix.subarray(version.length);\n        const pubkeyLen = SLIP10Ed25519MoneroPublicKey.getCompressedLength();\n        let spend;\n        let view;\n        if (payload.length === 2 * pubkeyLen) {\n            spend = payload.subarray(0, pubkeyLen);\n            view = payload.subarray(pubkeyLen);\n        }\n        else if (payload.length === 2 * pubkeyLen + this.paymentIDLength) {\n            if (!paymentID || paymentID.length !== this.paymentIDLength) {\n                throw new BaseError('Missing or invalid payment ID');\n            }\n            const paymentIDGot = payload.subarray(-this.paymentIDLength);\n            if (!equalBytes(paymentID, paymentIDGot)) {\n                throw new BaseError('Payment ID mismatch', {\n                    expected: bytesToString(paymentIDGot), got: bytesToString(paymentID)\n                });\n            }\n            spend = payload.subarray(0, pubkeyLen);\n            view = payload.subarray(pubkeyLen, pubkeyLen * 2);\n        }\n        else {\n            throw new AddressError('Invalid payload length', {\n                expected: 2 * pubkeyLen, got: payload.length\n            });\n        }\n        if (!SLIP10Ed25519MoneroPublicKey.isValidBytes(spend)) {\n            throw new BaseError('Invalid spend public key');\n        }\n        if (!SLIP10Ed25519MoneroPublicKey.isValidBytes(view)) {\n            throw new BaseError('Invalid view public key');\n        }\n        return [bytesToString(spend), bytesToString(view)];\n    }\n}\n//# sourceMappingURL=monero.js.map","// SPDX-License-Identifier: MIT\nimport { Nano } from '../cryptocurrencies';\nimport { AddressError } from '../exceptions';\nimport { decode as base32Decode, encodeNoPadding } from '../libs/base32';\nimport { blake2b40 } from '../crypto';\nimport { SLIP10Ed25519Blake2bPublicKey, validateAndGetPublicKey } from '../eccs';\nimport { bytesToString, bytesReverse, getBytes, concatBytes, equalBytes } from '../utils';\nimport { Address } from './address';\nexport class NanoAddress extends Address {\n    static addressPrefix = Nano.PARAMS.ADDRESS_PREFIX;\n    static alphabet = Nano.PARAMS.ALPHABET;\n    static payloadPaddingDecoded = getBytes(Nano.PARAMS.PAYLOAD_PADDING_DECODED);\n    static payloadPaddingEncoded = Nano.PARAMS.PAYLOAD_PADDING_ENCODED;\n    static getName() {\n        return 'Nano';\n    }\n    static computeChecksum(publicKey) {\n        return bytesReverse(blake2b40(publicKey));\n    }\n    static encode(publicKey) {\n        const pk = validateAndGetPublicKey(publicKey, SLIP10Ed25519Blake2bPublicKey);\n        const raw = pk.getRawCompressed().subarray(1);\n        const checksum = this.computeChecksum(getBytes(raw));\n        const payload = concatBytes(this.payloadPaddingDecoded, raw, checksum);\n        const b32 = encodeNoPadding(bytesToString(payload), this.alphabet);\n        return this.addressPrefix + b32.slice(this.payloadPaddingEncoded.length);\n    }\n    static decode(address) {\n        const prefix = address.slice(0, this.addressPrefix.length);\n        if (prefix !== this.addressPrefix) {\n            throw new AddressError('Invalid prefix', { expected: this.addressPrefix, got: prefix });\n        }\n        const body = address.slice(this.addressPrefix.length);\n        const fullEncoded = this.payloadPaddingEncoded + body;\n        const decoded = getBytes(base32Decode(fullEncoded, this.alphabet));\n        const expectedLen = this.payloadPaddingDecoded.length + SLIP10Ed25519Blake2bPublicKey.getCompressedLength() - 1 + 5;\n        if (decoded.length !== expectedLen) {\n            throw new AddressError('Invalid decoded length', { expected: expectedLen, got: decoded.length });\n        }\n        const data = decoded.subarray(this.payloadPaddingDecoded.length);\n        const pubkey = data.subarray(0, data.length - 5);\n        const checksum = data.subarray(-5);\n        const gotChecksum = this.computeChecksum(pubkey);\n        if (!equalBytes(checksum, gotChecksum)) {\n            throw new AddressError('Invalid checksum', {\n                expected: bytesToString(checksum), got: bytesToString(gotChecksum)\n            });\n        }\n        if (!SLIP10Ed25519Blake2bPublicKey.isValidBytes(pubkey)) {\n            throw new AddressError('Invalid public key');\n        }\n        return bytesToString(pubkey);\n    }\n}\n//# sourceMappingURL=nano.js.map","// SPDX-License-Identifier: MIT\nimport { Neo } from '../cryptocurrencies';\nimport { checkEncode, checkDecode } from '../libs/base58';\nimport { hash160 } from '../crypto';\nimport { SLIP10Nist256p1PublicKey, validateAndGetPublicKey } from '../eccs';\nimport { integerToBytes, bytesToString, concatBytes, getBytes, ensureString, equalBytes } from '../utils';\nimport { AddressError } from '../exceptions';\nimport { Address } from './address';\nexport class NeoAddress extends Address {\n    static addressPrefix = integerToBytes(Neo.PARAMS.ADDRESS_PREFIX);\n    static addressSuffix = integerToBytes(Neo.PARAMS.ADDRESS_SUFFIX);\n    static addressVersion = integerToBytes(Neo.PARAMS.ADDRESS_VERSION);\n    static alphabet = Neo.PARAMS.ALPHABET;\n    static getName() {\n        return 'Neo';\n    }\n    static encode(publicKey, options = {\n        addressVersion: this.addressVersion, alphabet: this.alphabet\n    }) {\n        const pk = validateAndGetPublicKey(publicKey, SLIP10Nist256p1PublicKey);\n        const payload = concatBytes(this.addressPrefix, pk.getRawCompressed(), this.addressSuffix);\n        const hashed = hash160(payload);\n        const version = getBytes(options.addressVersion ?? this.addressVersion);\n        return ensureString(checkEncode(getBytes(concatBytes(version, hashed)), options.alphabet ?? this.alphabet));\n    }\n    static decode(address, options = {\n        addressVersion: this.addressVersion, alphabet: this.alphabet\n    }) {\n        const decoded = checkDecode(address, options.alphabet ?? this.alphabet);\n        const version = getBytes(options.addressVersion ?? this.addressVersion);\n        const expectedLength = 20 + version.length;\n        if (decoded.length !== expectedLength) {\n            throw new AddressError('Invalid length', {\n                expected: expectedLength, got: decoded.length\n            });\n        }\n        const versionGot = decoded.subarray(0, version.length);\n        if (!equalBytes(version, versionGot)) {\n            throw new AddressError('Invalid address version', {\n                expected: bytesToString(version), got: bytesToString(versionGot)\n            });\n        }\n        return bytesToString(decoded.subarray(version.length));\n    }\n}\n//# sourceMappingURL=neo.js.map","// SPDX-License-Identifier: MIT\nimport { Algorand } from '../cryptocurrencies';\nimport { encodeNoPadding, decode as base32Decode } from '../libs/base32';\nimport { sha512_256 } from '../crypto';\nimport { SLIP10Ed25519PublicKey, validateAndGetPublicKey } from '../eccs';\nimport { bytesToString, concatBytes, getBytes, equalBytes } from '../utils';\nimport { AddressError } from '../exceptions';\nimport { Address } from './address';\nexport class AlgorandAddress extends Address {\n    static checksumLength = Algorand.PARAMS.CHECKSUM_LENGTH;\n    static getName() {\n        return 'Algorand';\n    }\n    static computeChecksum(publicKey) {\n        return sha512_256(publicKey).subarray(-4);\n    }\n    static encode(publicKey) {\n        const pk = validateAndGetPublicKey(publicKey, SLIP10Ed25519PublicKey);\n        const raw = pk.getRawCompressed().subarray(1);\n        const checksum = this.computeChecksum(raw);\n        return encodeNoPadding(bytesToString(concatBytes(raw, checksum)));\n    }\n    static decode(address) {\n        const decoded = getBytes(base32Decode(address));\n        const expectedLength = SLIP10Ed25519PublicKey.getCompressedLength() - 1 + this.checksumLength;\n        if (decoded.length !== expectedLength) {\n            throw new AddressError('Invalid decoded length', {\n                expected: expectedLength, got: decoded.length\n            });\n        }\n        const pubkey = decoded.subarray(0, decoded.length - this.checksumLength);\n        const checksum = decoded.subarray(-this.checksumLength);\n        const gotChecksum = this.computeChecksum(pubkey);\n        if (!equalBytes(checksum, gotChecksum)) {\n            throw new AddressError('Invalid checksum', {\n                expected: bytesToString(checksum), got: bytesToString(gotChecksum)\n            });\n        }\n        if (!SLIP10Ed25519PublicKey.isValidBytes(pubkey)) {\n            throw new AddressError('Invalid public key');\n        }\n        return bytesToString(pubkey);\n    }\n}\n//# sourceMappingURL=algorand.js.map","// SPDX-License-Identifier: MIT\nimport { MultiversX } from '../cryptocurrencies';\nimport { bech32Encode, bech32Decode } from '../libs/bech32';\nimport { SLIP10Ed25519PublicKey, validateAndGetPublicKey } from '../eccs';\nimport { bytesToString, getBytes } from '../utils';\nimport { AddressError } from '../exceptions';\nimport { Address } from './address';\nexport class MultiversXAddress extends Address {\n    static hrp = MultiversX.NETWORKS.MAINNET.HRP;\n    static getName() {\n        return 'MultiversX';\n    }\n    static encode(publicKey, options = {\n        hrp: this.hrp\n    }) {\n        const pk = validateAndGetPublicKey(publicKey, SLIP10Ed25519PublicKey);\n        const raw = pk.getRawCompressed().subarray(1);\n        return bech32Encode(options.hrp ?? this.hrp, getBytes(raw));\n    }\n    static decode(address, options = {\n        hrp: this.hrp\n    }) {\n        const [hrpGot, data] = bech32Decode(options.hrp ?? this.hrp, address);\n        if (!data) {\n            throw new AddressError('Invalid Bech32 decoding result');\n        }\n        return bytesToString(data);\n    }\n}\n//# sourceMappingURL=multiversx.js.map","// SPDX-License-Identifier: MIT\nimport { Solana } from '../cryptocurrencies';\nimport { encode as base58Encode, decode as base58Decode } from '../libs/base58';\nimport { SLIP10Ed25519PublicKey, validateAndGetPublicKey } from '../eccs';\nimport { bytesToString, getBytes, ensureString } from '../utils';\nimport { AddressError } from '../exceptions';\nimport { Address } from './address';\nexport class SolanaAddress extends Address {\n    static alphabet = Solana.PARAMS.ALPHABET;\n    static getName() {\n        return 'Solana';\n    }\n    static encode(publicKey) {\n        const pk = validateAndGetPublicKey(publicKey, SLIP10Ed25519PublicKey);\n        return ensureString(base58Encode(getBytes(pk.getRawCompressed().subarray(1))));\n    }\n    static decode(address) {\n        const publicKey = base58Decode(address);\n        const expectedLength = SLIP10Ed25519PublicKey.getCompressedLength() - 1;\n        if (publicKey.length !== expectedLength) {\n            throw new AddressError('Invalid public key length', {\n                expected: expectedLength, got: publicKey.length\n            });\n        }\n        if (!SLIP10Ed25519PublicKey.isValidBytes(publicKey)) {\n            throw new AddressError(`Invalid SLIP10-Ed25519 public key`);\n        }\n        return bytesToString(publicKey);\n    }\n}\n//# sourceMappingURL=solana.js.map","// SPDX-License-Identifier: MIT\nimport { Stellar } from '../cryptocurrencies';\nimport { encodeNoPadding, decode as base32Decode } from '../libs/base32';\nimport { xmodemCrc } from '../crypto';\nimport { SLIP10Ed25519PublicKey, validateAndGetPublicKey } from '../eccs';\nimport { bytesToString, bytesReverse, integerToBytes, concatBytes, getBytes, equalBytes } from '../utils';\nimport { AddressError } from '../exceptions';\nimport { Address } from './address';\nexport class StellarAddress extends Address {\n    static checksumLength = Stellar.PARAMS.CHECKSUM_LENGTH;\n    static addressType = Stellar.DEFAULT_ADDRESS_TYPE;\n    static addressTypes = {\n        privateKey: Stellar.PARAMS.ADDRESS_TYPES.PRIVATE_KEY,\n        publicKey: Stellar.PARAMS.ADDRESS_TYPES.PUBLIC_KEY\n    };\n    static getName() {\n        return 'Stellar';\n    }\n    static computeChecksum(payload) {\n        return bytesReverse(xmodemCrc(payload));\n    }\n    static encode(publicKey, options = {\n        addressType: this.addressType\n    }) {\n        const addressTypeName = options.addressType ?? this.addressType;\n        if (!(addressTypeName in this.addressTypes)) {\n            throw new AddressError('Invalid Stellar address type', {\n                expected: Object.keys(this.addressTypes), got: addressTypeName\n            });\n        }\n        const addressType = this.addressTypes[addressTypeName];\n        const pk = validateAndGetPublicKey(publicKey, SLIP10Ed25519PublicKey);\n        const payload = concatBytes(integerToBytes(addressType), pk.getRawCompressed().subarray(1));\n        const checksum = this.computeChecksum(payload);\n        return encodeNoPadding(bytesToString(concatBytes(payload, checksum)));\n    }\n    static decode(address, options = {\n        addressType: this.addressType\n    }) {\n        const addressTypeName = options.addressType ?? this.addressType;\n        if (!(addressTypeName in this.addressTypes)) {\n            throw new AddressError('Invalid Stellar address type', {\n                expected: Object.keys(this.addressTypes), got: addressTypeName\n            });\n        }\n        const addressType = this.addressTypes[addressTypeName];\n        const decoded = getBytes(base32Decode(address));\n        const expectedLength = SLIP10Ed25519PublicKey.getCompressedLength() + this.checksumLength;\n        if (decoded.length !== expectedLength) {\n            throw new AddressError('Invalid length', {\n                expected: expectedLength, got: decoded.length\n            });\n        }\n        const checksum = decoded.subarray(-this.checksumLength);\n        const payload = decoded.subarray(0, -this.checksumLength);\n        const addressTypeGot = payload[0];\n        if (addressTypeGot !== addressType) {\n            throw new AddressError('Invalid address type', {\n                expected: addressType,\n                got: addressTypeGot\n            });\n        }\n        const checksumGot = this.computeChecksum(payload);\n        if (!equalBytes(checksum, checksumGot)) {\n            throw new AddressError('Invalid checksum', {\n                expected: bytesToString(checksum),\n                got: bytesToString(checksumGot)\n            });\n        }\n        const pubkey = payload.subarray(1);\n        if (!SLIP10Ed25519PublicKey.isValidBytes(pubkey)) {\n            throw new AddressError('Invalid public key');\n        }\n        return bytesToString(pubkey);\n    }\n}\n//# sourceMappingURL=stellar.js.map","// SPDX-License-Identifier: MIT\nimport { Tezos } from '../cryptocurrencies';\nimport { checkEncode, checkDecode } from '../libs/base58';\nimport { SLIP10Ed25519PublicKey, validateAndGetPublicKey } from '../eccs';\nimport { blake2b160 } from '../crypto';\nimport { bytesToString, concatBytes, getBytes, ensureString, equalBytes } from '../utils';\nimport { AddressError } from '../exceptions';\nimport { Address } from './address';\nexport class TezosAddress extends Address {\n    static addressPrefix = Tezos.DEFAULT_ADDRESS_PREFIX;\n    static addressPrefixes = {\n        tz1: Tezos.PARAMS.ADDRESS_PREFIXES.TZ1,\n        tz2: Tezos.PARAMS.ADDRESS_PREFIXES.TZ2,\n        tz3: Tezos.PARAMS.ADDRESS_PREFIXES.TZ3\n    };\n    static getName() {\n        return 'Tezos';\n    }\n    static encode(publicKey, options = {\n        addressPrefix: this.addressPrefix\n    }) {\n        const prefixKey = options.addressPrefix ?? this.addressPrefix;\n        if (!(prefixKey in this.addressPrefixes)) {\n            throw new AddressError('Invalid Tezos address prefix', {\n                expected: Object.keys(this.addressPrefixes), got: prefixKey\n            });\n        }\n        const prefix = getBytes(this.addressPrefixes[prefixKey]);\n        const pk = validateAndGetPublicKey(publicKey, SLIP10Ed25519PublicKey);\n        const hashed = blake2b160(pk.getRawCompressed().subarray(1));\n        return ensureString(checkEncode(getBytes(concatBytes(prefix, hashed))));\n    }\n    static decode(address, options = {\n        addressPrefix: this.addressPrefix\n    }) {\n        const prefixKey = options.addressPrefix ?? this.addressPrefix;\n        if (!(prefixKey in this.addressPrefixes)) {\n            throw new AddressError('Invalid Tezos address prefix', {\n                expected: Object.keys(this.addressPrefixes), got: prefixKey\n            });\n        }\n        const prefix = getBytes(this.addressPrefixes[prefixKey]);\n        const decoded = checkDecode(address);\n        const expectedLen = prefix.length + 20;\n        if (decoded.length !== expectedLen) {\n            throw new AddressError('Invalid length', {\n                expected: expectedLen, got: decoded.length\n            });\n        }\n        const prefixGot = decoded.subarray(0, prefix.length);\n        if (!equalBytes(prefixGot, prefix)) {\n            throw new AddressError('Invalid prefix', {\n                expected: bytesToString(prefix), got: bytesToString(prefixGot)\n            });\n        }\n        return bytesToString(decoded.subarray(prefix.length));\n    }\n}\n//# sourceMappingURL=tezos.js.map","// SPDX-License-Identifier: MIT\nimport { Sui } from '../cryptocurrencies';\nimport { blake2b256 } from '../crypto';\nimport { SLIP10Ed25519PublicKey, validateAndGetPublicKey } from '../eccs';\nimport { bytesToString, integerToBytes, getBytes } from '../utils';\nimport { AddressError } from '../exceptions';\nimport { Address } from './address';\nexport class SuiAddress extends Address {\n    static keyType = integerToBytes(Sui.PARAMS.KEY_TYPE);\n    static addressPrefix = Sui.PARAMS.ADDRESS_PREFIX;\n    static getName() {\n        return 'Sui';\n    }\n    static encode(publicKey) {\n        const pk = validateAndGetPublicKey(publicKey, SLIP10Ed25519PublicKey);\n        const raw = pk.getRawCompressed().subarray(1);\n        const hash = blake2b256(getBytes(new Uint8Array([...this.keyType, ...raw])));\n        return this.addressPrefix + bytesToString(hash);\n    }\n    static decode(address) {\n        const prefix = address.slice(0, this.addressPrefix.length);\n        if (prefix !== this.addressPrefix) {\n            throw new AddressError('Invalid address prefix', {\n                expected: this.addressPrefix, got: prefix\n            });\n        }\n        const body = address.slice(this.addressPrefix.length);\n        if (body.length !== 64) {\n            throw new AddressError('Invalid address length', {\n                expected: 64, got: body.length\n            });\n        }\n        return body;\n    }\n}\n//# sourceMappingURL=sui.js.map","// SPDX-License-Identifier: MIT\nimport { Aptos } from '../cryptocurrencies';\nimport { sha3_256 } from '../crypto';\nimport { SLIP10Ed25519PublicKey, validateAndGetPublicKey } from '../eccs';\nimport { bytesToString, integerToBytes } from '../utils';\nimport { AddressError } from '../exceptions';\nimport { Address } from './address';\nexport class AptosAddress extends Address {\n    static suffix = integerToBytes(Aptos.PARAMS.SUFFIX);\n    static addressPrefix = Aptos.PARAMS.ADDRESS_PREFIX;\n    static getName() {\n        return 'Aptos';\n    }\n    static encode(publicKey) {\n        const pk = validateAndGetPublicKey(publicKey, SLIP10Ed25519PublicKey);\n        const raw = pk.getRawCompressed().subarray(1);\n        const payload = new Uint8Array([...raw, ...this.suffix]);\n        const hash = sha3_256(payload);\n        return this.addressPrefix + bytesToString(hash).replace(/^0+/, '');\n    }\n    static decode(address) {\n        const prefix = address.slice(0, this.addressPrefix.length);\n        if (prefix !== this.addressPrefix) {\n            throw new AddressError('Invalid address prefix', {\n                expected: this.addressPrefix, got: prefix\n            });\n        }\n        const body = address.slice(this.addressPrefix.length).padStart(64, '0');\n        if (body.length !== 64) {\n            throw new AddressError('Invalid address length', {\n                expected: 64, got: body.length\n            });\n        }\n        return body;\n    }\n}\n//# sourceMappingURL=aptos.js.map","// SPDX-License-Identifier: MIT\nimport { AddressError } from '../exceptions';\nimport { SLIP10Ed25519PublicKey, validateAndGetPublicKey } from '../eccs';\nimport { bytesToString, getBytes } from '../utils';\nimport { Address } from './address';\nexport class NearAddress extends Address {\n    static getName() {\n        return 'Near';\n    }\n    static encode(publicKey) {\n        const pk = validateAndGetPublicKey(publicKey, SLIP10Ed25519PublicKey);\n        return bytesToString(pk.getRawCompressed()).slice(2);\n    }\n    static decode(address) {\n        const bytes = getBytes(address);\n        const expectedLength = 32;\n        if (bytes.length !== expectedLength) {\n            throw new AddressError('Invalid address length', {\n                expected: expectedLength, got: bytes.length\n            });\n        }\n        validateAndGetPublicKey(bytes, SLIP10Ed25519PublicKey);\n        return address;\n    }\n}\n//# sourceMappingURL=near.js.map","// SPDX-License-Identifier: MIT\nimport { Address } from './address';\nimport { P2PKHAddress } from './p2pkh';\nimport { P2SHAddress } from './p2sh';\nimport { P2TRAddress } from './p2tr';\nimport { P2WPKHAddress } from './p2wpkh';\nimport { P2WPKHInP2SHAddress } from './p2wpkh-in-p2sh';\nimport { P2WSHAddress } from './p2wsh';\nimport { P2WSHInP2SHAddress } from './p2wsh-in-p2sh';\nimport { EthereumAddress } from './ethereum';\nimport { CosmosAddress } from './cosmos';\nimport { XinFinAddress } from './xinfin';\nimport { TronAddress } from './tron';\nimport { AddressError } from '../exceptions';\nimport { RippleAddress } from './ripple';\nimport { FilecoinAddress } from './filecoin';\nimport { AvalancheAddress } from './avalanche';\nimport { EOSAddress } from './eos';\nimport { ErgoAddress } from './ergo';\nimport { IconAddress } from './icon';\nimport { OKTChainAddress } from './okt-chain';\nimport { HarmonyAddress } from './harmony';\nimport { ZilliqaAddress } from './zilliqa';\nimport { InjectiveAddress } from './injective';\nimport { CardanoAddress } from './cardano';\nimport { MoneroAddress } from './monero';\nimport { NanoAddress } from './nano';\nimport { NeoAddress } from './neo';\nimport { AlgorandAddress } from './algorand';\nimport { MultiversXAddress } from './multiversx';\nimport { SolanaAddress } from './solana';\nimport { StellarAddress } from './stellar';\nimport { TezosAddress } from './tezos';\nimport { SuiAddress } from './sui';\nimport { AptosAddress } from './aptos';\nimport { NearAddress } from './near';\nexport class ADDRESSES {\n    static dictionary = {\n        [P2PKHAddress.getName()]: P2PKHAddress,\n        [P2SHAddress.getName()]: P2SHAddress,\n        [P2TRAddress.getName()]: P2TRAddress,\n        [P2WPKHAddress.getName()]: P2WPKHAddress,\n        [P2WPKHInP2SHAddress.getName()]: P2WPKHInP2SHAddress,\n        [P2WSHAddress.getName()]: P2WSHAddress,\n        [P2WSHInP2SHAddress.getName()]: P2WSHInP2SHAddress,\n        [EthereumAddress.getName()]: EthereumAddress,\n        [CosmosAddress.getName()]: CosmosAddress,\n        [XinFinAddress.getName()]: XinFinAddress,\n        [TronAddress.getName()]: TronAddress,\n        [RippleAddress.getName()]: RippleAddress,\n        [FilecoinAddress.getName()]: FilecoinAddress,\n        [AvalancheAddress.getName()]: AvalancheAddress,\n        [EOSAddress.getName()]: EOSAddress,\n        [ErgoAddress.getName()]: ErgoAddress,\n        [IconAddress.getName()]: IconAddress,\n        [OKTChainAddress.getName()]: OKTChainAddress,\n        [HarmonyAddress.getName()]: HarmonyAddress,\n        [ZilliqaAddress.getName()]: ZilliqaAddress,\n        [InjectiveAddress.getName()]: InjectiveAddress,\n        [CardanoAddress.getName()]: CardanoAddress,\n        [MoneroAddress.getName()]: MoneroAddress,\n        [NanoAddress.getName()]: NanoAddress,\n        [NeoAddress.getName()]: NeoAddress,\n        [AlgorandAddress.getName()]: AlgorandAddress,\n        [MultiversXAddress.getName()]: MultiversXAddress,\n        [SolanaAddress.getName()]: SolanaAddress,\n        [StellarAddress.getName()]: StellarAddress,\n        [TezosAddress.getName()]: TezosAddress,\n        [SuiAddress.getName()]: SuiAddress,\n        [AptosAddress.getName()]: AptosAddress,\n        [NearAddress.getName()]: NearAddress\n    };\n    static getNames() {\n        return Object.keys(this.dictionary);\n    }\n    static getClasses() {\n        return Object.values(this.dictionary);\n    }\n    static getAddressClass(name) {\n        if (!this.isAddress(name)) {\n            throw new AddressError('Invalid address name', { expected: this.getNames(), got: name });\n        }\n        return this.dictionary[name];\n    }\n    static isAddress(name) {\n        return name in this.dictionary;\n    }\n}\nexport { Address, P2PKHAddress, P2SHAddress, P2TRAddress, P2WPKHAddress, P2WPKHInP2SHAddress, P2WSHAddress, P2WSHInP2SHAddress, EthereumAddress, CosmosAddress, XinFinAddress, TronAddress, RippleAddress, FilecoinAddress, AvalancheAddress, EOSAddress, ErgoAddress, IconAddress, OKTChainAddress, HarmonyAddress, ZilliqaAddress, InjectiveAddress, CardanoAddress, MoneroAddress, NanoAddress, NeoAddress, AlgorandAddress, MultiversXAddress, SolanaAddress, StellarAddress, TezosAddress, SuiAddress, AptosAddress, NearAddress };\n//# sourceMappingURL=index.js.map","// SPDX-License-Identifier: MIT\nimport { Bitcoin } from './cryptocurrencies';\nimport { encode as base58Encode, decode as base58Decode } from './libs/base58';\nimport { getBytes, integerToBytes, bytesToString, concatBytes, equalBytes } from './utils';\nimport { SLIP10_SECP256K1_CONST, WIF_TYPES } from './consts';\nimport { getChecksum } from './crypto';\nimport { WIFError, ECCError } from './exceptions';\nexport function encodeWIF(privateKey, wifPrefix = Bitcoin.NETWORKS.MAINNET.WIF_PREFIX) {\n    const keyBytes = getBytes(privateKey);\n    if (keyBytes.length !== 32) {\n        throw new ECCError('Invalid private key length', { expected: 32, got: keyBytes.length });\n    }\n    const prefix = integerToBytes(wifPrefix, 1);\n    const compressedSuffix = integerToBytes(SLIP10_SECP256K1_CONST.PRIVATE_KEY_COMPRESSED_PREFIX, 1);\n    const uncompressedPayload = concatBytes(prefix, keyBytes);\n    const compressedPayload = concatBytes(prefix, keyBytes, compressedSuffix);\n    return [\n        base58Encode(concatBytes(uncompressedPayload, getChecksum(uncompressedPayload))),\n        base58Encode(concatBytes(compressedPayload, getChecksum(compressedPayload)))\n    ];\n}\nexport function decodeWIF(wif, wifPrefix = Bitcoin.NETWORKS.MAINNET.WIF_PREFIX) {\n    const raw = base58Decode(wif);\n    const prefix = integerToBytes(wifPrefix, 1);\n    if (!equalBytes(raw.subarray(0, prefix.length), prefix)) {\n        throw new WIFError('Invalid Wallet Import Format (WIF) prefix');\n    }\n    const rawWithoutPrefix = raw.subarray(prefix.length);\n    const checksum = rawWithoutPrefix.subarray(-4);\n    let privateKey = rawWithoutPrefix.subarray(0, -4);\n    let wifType = 'wif';\n    if (privateKey.length === 33) {\n        const compressedPrefix = integerToBytes(SLIP10_SECP256K1_CONST.PRIVATE_KEY_COMPRESSED_PREFIX, 1);\n        if (equalBytes(privateKey.subarray(-1), compressedPrefix)) {\n            privateKey = privateKey.subarray(0, -1);\n            wifType = 'wif-compressed';\n        }\n    }\n    else if (privateKey.length !== 32) {\n        throw new WIFError('Invalid WIF length');\n    }\n    return [privateKey, wifType, checksum];\n}\nexport function privateKeyToWIF(privateKey, wifType = 'wif-compressed', wifPrefix = Bitcoin.NETWORKS.MAINNET.WIF_PREFIX) {\n    if (!WIF_TYPES.getTypes().includes(wifType)) {\n        throw new WIFError('Wrong WIF type', {\n            expected: WIF_TYPES.getTypes(), got: wifType\n        });\n    }\n    const [wif, wifCompressed] = encodeWIF(privateKey, wifPrefix);\n    return wifType === 'wif' ? wif : wifCompressed;\n}\nexport function wifToPrivateKey(wif, wifPrefix = Bitcoin.NETWORKS.MAINNET.WIF_PREFIX) {\n    return bytesToString(decodeWIF(wif, wifPrefix)[0]);\n}\nexport function getWIFType(wif, wifPrefix = Bitcoin.NETWORKS.MAINNET.WIF_PREFIX) {\n    return decodeWIF(wif, wifPrefix)[1];\n}\nexport function getWIFChecksum(wif, wifPrefix = Bitcoin.NETWORKS.MAINNET.WIF_PREFIX) {\n    return bytesToString(decodeWIF(wif, wifPrefix)[2]);\n}\n//# sourceMappingURL=wif.js.map","// SPDX-License-Identifier: MIT\nimport { checkEncode, checkDecode } from './libs/base58';\nimport { getBytes, bytesToString, integerToBytes, concatBytes, equalBytes } from './utils';\nimport { ExtendedKeyError } from './exceptions';\nexport function serialize(version, depth, parentFingerprint, index, chainCode, key, encoded = false) {\n    try {\n        // 1. versionBytes: exactly 4 bytes\n        const versionBytes = typeof version === 'number'\n            ? integerToBytes(version, 4)\n            : getBytes(version);\n        // 2. depthByte: 1 byte\n        if (depth < 0 || depth > 0xff) {\n            throw new ExtendedKeyError(`Depth must be 0–255; got ${depth}`);\n        }\n        const depthByte = integerToBytes(depth, 1);\n        // 3. parentFingerprintBytes: exactly 4 bytes\n        const parentBytes = getBytes(parentFingerprint);\n        if (parentBytes.length !== 4) {\n            throw new ExtendedKeyError(`Parent fingerprint must be 4 bytes; got ${parentBytes.length}`);\n        }\n        // 4. indexBytes: exactly 4 bytes, big-endian\n        if (!Number.isInteger(index) || index < 0 || index > 0xffffffff) {\n            throw new ExtendedKeyError(`Index must be 0–2^32-1; got ${index}`);\n        }\n        const indexBytes = integerToBytes(index, 4);\n        // 5. chainCodeBytes: exactly 32 bytes\n        const chainBytes = getBytes(chainCode);\n        if (chainBytes.length !== 32) {\n            throw new ExtendedKeyError(`Chain code must be 32 bytes; got ${chainBytes.length}`);\n        }\n        // 6. keyBytes: exactly 33 bytes\n        const keyBytes = getBytes(key);\n        if (keyBytes.length !== 33) {\n            throw new ExtendedKeyError(`Key data must be 33 bytes; got ${keyBytes.length}`);\n        }\n        // 7. Concatenate all parts in order\n        const raw = concatBytes(versionBytes, // 4 bytes\n        depthByte, // 1 byte\n        parentBytes, // 4 bytes\n        indexBytes, // 4 bytes\n        chainBytes, // 32 bytes\n        keyBytes // 33 bytes\n        );\n        // 8. Return Base58Check if requested, else hex string\n        return encoded ? checkEncode(raw) : bytesToString(raw);\n    }\n    catch (err) {\n        return null;\n    }\n}\nexport function deserialize(key, encoded = true) {\n    // 1. Decode Base58Check if needed, otherwise parse hex\n    const rawBytes = encoded ? checkDecode(key) : getBytes(key);\n    // 2. Ensure total length is exactly 78 bytes\n    if (![78, 110].includes(rawBytes.length)) {\n        throw new ExtendedKeyError('Invalid extended key length', { expected: [78, 110], got: rawBytes.length });\n    }\n    // 3. Parse fields at known offsets\n    const version = rawBytes.slice(0, 4); // 4 bytes\n    const depth = rawBytes[4]; // 1 byte\n    const parentFingerprint = rawBytes.slice(5, 9); // 4 bytes\n    // Index: bytes 9..13 → big-endian uint32\n    const indexView = new DataView(rawBytes.buffer, rawBytes.byteOffset + 9, 4);\n    const index = indexView.getUint32(0, false); // false = big-endian\n    const chainCode = rawBytes.slice(13, 45); // 32 bytes\n    const keyData = rawBytes.slice(45);\n    return [version, depth, parentFingerprint, index, chainCode, keyData];\n}\nexport function isValidKey(key, encoded = true) {\n    try {\n        deserialize(key, encoded);\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nexport function isRootKey(key, encoded = true) {\n    if (!isValidKey(key, encoded)) {\n        throw new ExtendedKeyError('Invalid extended(x) key');\n    }\n    const [_, depth, parentFingerprint, index] = deserialize(key, encoded);\n    // Check that depth === 0, parentFingerprint is all zero bytes, and index === 0\n    const zeroFingerprint = new Uint8Array(4); // [0,0,0,0]\n    return depth === 0 && equalBytes(parentFingerprint, zeroFingerprint) && index === 0;\n}\n//# sourceMappingURL=keys.js.map","// SPDX-License-Identifier: MIT\nimport { HD } from './hd';\nimport { Bitcoin } from '../cryptocurrencies';\nimport { Derivation, CustomDerivation } from '../derivations';\nimport { KholawEd25519PrivateKey } from '../eccs';\nimport { Seed } from '../seeds';\nimport { P2PKHAddress, P2SHAddress, P2TRAddress, P2WPKHAddress, P2WPKHInP2SHAddress, P2WSHAddress, P2WSHInP2SHAddress } from '../addresses';\nimport { PUBLIC_KEY_TYPES, WIF_TYPES } from '../consts';\nimport { hmacSha256, hmacSha512, ripemd160, sha256 } from '../crypto';\nimport { privateKeyToWIF, wifToPrivateKey, getWIFType } from '../wif';\nimport { serialize, deserialize, isValidKey, isRootKey } from '../keys';\nimport { getBytes, getHmac, bytesToInteger, integerToBytes, bytesToString, resetBits, setBits, concatBytes, ensureTypeMatch, hexToBytes } from '../utils';\nimport { AddressError, DerivationError, BaseError, PrivateKeyError, PublicKeyError, SeedError, WIFError, XPrivateKeyError, XPublicKeyError, ECCError } from '../exceptions';\nimport { checkDecode } from '../libs/base58';\nexport class BIP32HD extends HD {\n    ecc;\n    seed;\n    rootPrivateKey;\n    rootChainCode;\n    rootPublicKey;\n    privateKey;\n    chainCode;\n    publicKey;\n    publicKeyType = PUBLIC_KEY_TYPES.COMPRESSED;\n    wifType = WIF_TYPES.WIF_COMPRESSED;\n    wifPrefix;\n    fingerprint;\n    parentFingerprint;\n    strict;\n    rootDepth = 0;\n    rootIndex = 0;\n    depth = 0;\n    index = 0;\n    constructor(options = {\n        publicKeyType: PUBLIC_KEY_TYPES.COMPRESSED\n    }) {\n        super(options);\n        if (!options.ecc) {\n            throw new ECCError('Elliptic Curve Cryptography (ECC) is required');\n        }\n        this.ecc = options.ecc;\n        this.publicKeyType = options.publicKeyType ?? PUBLIC_KEY_TYPES.COMPRESSED;\n        if (this.publicKeyType === PUBLIC_KEY_TYPES.UNCOMPRESSED) {\n            this.wifType = WIF_TYPES.WIF;\n        }\n        else if (this.publicKeyType === PUBLIC_KEY_TYPES.COMPRESSED) {\n            this.wifType = WIF_TYPES.WIF_COMPRESSED;\n        }\n        else {\n            throw new BaseError('Invalid public key type', {\n                expected: PUBLIC_KEY_TYPES.getTypes(), got: this.publicKeyType\n            });\n        }\n        this.wifPrefix = options.wifPrefix ?? Bitcoin.NETWORKS.MAINNET.WIF_PREFIX;\n        this.derivation = new CustomDerivation({\n            path: options.path, indexes: options.indexes\n        });\n    }\n    static getName() {\n        return 'BIP32';\n    }\n    fromSeed(seed) {\n        try {\n            this.seed = getBytes(seed instanceof Seed ? seed.getSeed() : seed);\n        }\n        catch {\n            throw new SeedError('Invalid seed data');\n        }\n        if (this.seed.length < 16) {\n            throw new BaseError('Invalid seed length', {\n                expected: '< 16',\n                got: this.seed.length,\n            });\n        }\n        const hmacHalfLength = 64 / 2;\n        let hmacData = this.seed;\n        let success = false;\n        let hmacResult = new Uint8Array(64);\n        while (!success) {\n            hmacResult = hmacSha512(getHmac(this.ecc.NAME), hmacData);\n            if (this.ecc.NAME === 'Kholaw-Ed25519') {\n                success = (hmacResult[31] & 0x20) === 0;\n                if (!success)\n                    hmacData = hmacResult;\n            }\n            else {\n                const privClass = this.ecc.PRIVATE_KEY;\n                success = privClass.isValidBytes(hmacResult.slice(0, hmacHalfLength));\n                if (!success)\n                    hmacData = hmacResult;\n            }\n        }\n        const tweakMasterKeyBits = (input) => {\n            const data = new Uint8Array(input);\n            data[0] = resetBits(data[0], 0x07);\n            data[31] = resetBits(data[31], 0x80);\n            data[31] = setBits(data[31], 0x40);\n            return data;\n        };\n        if (this.ecc.NAME === 'Kholaw-Ed25519') {\n            let kl = hmacResult.slice(0, hmacHalfLength);\n            const kr = hmacResult.slice(hmacHalfLength);\n            kl = tweakMasterKeyBits(kl);\n            const chainCode = hmacSha256(getHmac(this.ecc.NAME), concatBytes(integerToBytes(0x01), this.seed));\n            this.rootPrivateKey = this.ecc.PRIVATE_KEY.fromBytes(concatBytes(kl, kr));\n            this.rootChainCode = getBytes(chainCode);\n        }\n        else {\n            const privBytes = hmacResult.slice(0, hmacHalfLength);\n            const chainBytes = hmacResult.slice(hmacHalfLength);\n            this.rootPrivateKey = this.ecc.PRIVATE_KEY.fromBytes(privBytes);\n            this.rootChainCode = chainBytes;\n        }\n        this.privateKey = this.rootPrivateKey;\n        this.chainCode = this.rootChainCode;\n        this.parentFingerprint = integerToBytes(0x00, 4);\n        this.rootPublicKey = this.rootPrivateKey.getPublicKey();\n        this.publicKey = this.rootPublicKey;\n        this.strict = true;\n        this.fromDerivation(this.derivation);\n        return this;\n    }\n    fromXPrivateKey(xprv, encoded = true, strict = false) {\n        if (!isValidKey(xprv, encoded)) {\n            throw new XPrivateKeyError('Invalid extended(x) private key');\n        }\n        const raw = encoded ? checkDecode(xprv) : hexToBytes(xprv);\n        if (![78, 110].includes(raw.length)) {\n            throw new XPrivateKeyError('Invalid extended(x) private key');\n        }\n        if (strict && !isRootKey(xprv, encoded)) {\n            throw new XPrivateKeyError('Invalid root extended(x) private key');\n        }\n        const [version, depth, parentFingerprint, index, chainCode, key] = deserialize(xprv, encoded);\n        this.rootChainCode = chainCode;\n        this.rootPrivateKey = this.ecc.PRIVATE_KEY.fromBytes(key.slice(1));\n        this.rootPublicKey = this.rootPrivateKey.getPublicKey();\n        this.rootDepth = depth;\n        this.parentFingerprint = parentFingerprint;\n        this.rootIndex = index;\n        this.chainCode = this.rootChainCode;\n        this.privateKey = this.rootPrivateKey;\n        this.publicKey = this.rootPublicKey;\n        this.depth = this.rootDepth;\n        this.index = this.rootIndex;\n        this.strict = isRootKey(xprv, encoded);\n        this.fromDerivation(this.derivation);\n        return this;\n    }\n    fromXPublicKey(xpub, encoded = true, strict = false) {\n        if (!isValidKey(xpub, encoded)) {\n            throw new XPublicKeyError('Invalid extended(x) public key');\n        }\n        const raw = encoded ? checkDecode(xpub) : hexToBytes(xpub);\n        if (raw.length !== 78) {\n            throw new XPublicKeyError('Invalid extended(x) public key');\n        }\n        if (strict && !isRootKey(xpub, encoded)) {\n            throw new XPublicKeyError('Invalid root extended(x) public key');\n        }\n        const [version, depth, parentFingerprint, index, chainCode, key] = deserialize(xpub, encoded);\n        this.rootChainCode = chainCode;\n        this.rootPublicKey = this.ecc.PUBLIC_KEY.fromBytes(key);\n        this.rootDepth = depth;\n        this.parentFingerprint = parentFingerprint;\n        this.rootIndex = index;\n        this.chainCode = this.rootChainCode;\n        this.publicKey = this.rootPublicKey;\n        this.depth = this.rootDepth;\n        this.index = this.rootIndex;\n        this.strict = isRootKey(xpub, encoded);\n        this.fromDerivation(this.derivation);\n        return this;\n    }\n    fromWIF(wif) {\n        if (this.wifPrefix === null || this.wifPrefix === null) {\n            throw new WIFError('WIF prefix is required');\n        }\n        const wifType = getWIFType(wif, this.wifPrefix);\n        if (wifType === 'wif-compressed') {\n            this.publicKeyType = PUBLIC_KEY_TYPES.COMPRESSED;\n            this.wifType = WIF_TYPES.WIF_COMPRESSED;\n        }\n        else {\n            this.publicKeyType = PUBLIC_KEY_TYPES.UNCOMPRESSED;\n            this.wifType = WIF_TYPES.WIF;\n        }\n        const privKey = wifToPrivateKey(wif, this.wifPrefix);\n        this.fromPrivateKey(privKey);\n        this.strict = null;\n        return this;\n    }\n    fromPrivateKey(privateKey) {\n        try {\n            const bytes = getBytes(privateKey);\n            this.privateKey = this.ecc.PRIVATE_KEY.fromBytes(bytes);\n            this.publicKey = this.privateKey.getPublicKey();\n            this.strict = null;\n            return this;\n        }\n        catch {\n            throw new PrivateKeyError('Invalid private key data');\n        }\n    }\n    fromPublicKey(publicKey) {\n        try {\n            const bytes = getBytes(publicKey);\n            this.publicKey = this.ecc.PUBLIC_KEY.fromBytes(bytes);\n            this.strict = null;\n            return this;\n        }\n        catch {\n            throw new PublicKeyError('Invalid public key data');\n        }\n    }\n    fromDerivation(derivation) {\n        this.derivation = ensureTypeMatch(derivation, Derivation, { errorClass: DerivationError });\n        for (const index of this.derivation.getIndexes()) {\n            this.drive(index);\n        }\n        return this;\n    }\n    updateDerivation(derivation) {\n        this.cleanDerivation();\n        this.fromDerivation(derivation);\n        return this;\n    }\n    cleanDerivation() {\n        if (this.rootPrivateKey) {\n            this.privateKey = this.rootPrivateKey;\n            this.chainCode = this.rootChainCode;\n            this.parentFingerprint = integerToBytes(0, 4);\n            this.publicKey = this.privateKey.getPublicKey();\n            this.derivation.clean();\n            this.depth = 0;\n        }\n        else if (this.rootPublicKey) {\n            this.publicKey = this.rootPublicKey;\n            this.chainCode = this.rootChainCode;\n            this.parentFingerprint = integerToBytes(0, 4);\n            this.derivation.clean();\n            this.depth = 0;\n        }\n        return this;\n    }\n    drive(index) {\n        const hmacHalfLength = 64 / 2; // sha512 output is 64 bytes\n        if (this.ecc.NAME === 'Kholaw-Ed25519') {\n            const indexBytes = integerToBytes(index, 4, 'little');\n            if (this.privateKey) {\n                if (index & 0x80000000) {\n                    const zHmac = hmacSha512(this.chainCode, concatBytes(integerToBytes(0x00, 1), this.privateKey.getRaw(), indexBytes));\n                    const hmac = hmacSha512(this.chainCode, concatBytes(integerToBytes(0x01, 1), this.privateKey.getRaw(), indexBytes));\n                    const zl = zHmac.slice(0, hmacHalfLength);\n                    const zr = zHmac.slice(hmacHalfLength);\n                    const kl = this.privateKey.getRaw().slice(0, hmacHalfLength);\n                    const kr = this.privateKey.getRaw().slice(hmacHalfLength);\n                    const klInt = bytesToInteger(kl, true);\n                    const zlInt = bytesToInteger(zl.slice(0, 28), true);\n                    const left = zlInt * BigInt(8) + klInt;\n                    if (left % this.ecc.ORDER === BigInt(0)) {\n                        throw new BaseError('Computed child key is not valid, very unlucky index');\n                    }\n                    const TWO_POW_256 = BigInt(1) << BigInt(256);\n                    const krInt = (bytesToInteger(zr, true) + bytesToInteger(kr, true)) % TWO_POW_256;\n                    const newPrivate = KholawEd25519PrivateKey.fromBytes(concatBytes(integerToBytes(left, KholawEd25519PrivateKey.getLength() / 2, 'little'), integerToBytes(krInt, KholawEd25519PrivateKey.getLength() / 2, 'little')));\n                    this.privateKey = newPrivate;\n                    this.chainCode = hmac.slice(hmacHalfLength);\n                    this.publicKey = newPrivate.getPublicKey();\n                }\n                else {\n                    const zHmac = hmacSha512(this.chainCode, concatBytes(integerToBytes(0x02, 1), this.publicKey.getRawCompressed().slice(1), indexBytes));\n                    const hmac = hmacSha512(this.chainCode, concatBytes(integerToBytes(0x03, 1), this.publicKey.getRawCompressed().slice(1), indexBytes));\n                    const zlInt = bytesToInteger(zHmac.slice(0, 28), true);\n                    const tweak = zlInt * BigInt(8);\n                    const newPoint = this.publicKey.getPoint().add(this.ecc.GENERATOR.multiply(tweak));\n                    if (newPoint.getX() === BigInt(0) && newPoint.getY() === BigInt(1)) {\n                        throw new BaseError('Computed public child key is not valid, very unlucky index');\n                    }\n                    this.publicKey = this.ecc.PUBLIC_KEY.fromPoint(newPoint);\n                    this.chainCode = hmac.slice(hmacHalfLength);\n                }\n            }\n            else {\n                if (index & 0x80000000) {\n                    throw new DerivationError('Hardened derivation path is invalid for xpublic key');\n                }\n                const zHmac = hmacSha512(this.chainCode, concatBytes(integerToBytes(0x02, 1), this.publicKey.getRawCompressed().slice(1), indexBytes));\n                const hmac = hmacSha512(this.chainCode, concatBytes(integerToBytes(0x03, 1), this.publicKey.getRawCompressed().slice(1), indexBytes));\n                const zlInt = bytesToInteger(zHmac.slice(0, 28), true);\n                const tweak = zlInt * BigInt(8);\n                const newPoint = this.publicKey.getPoint().add(this.ecc.GENERATOR.multiply(tweak));\n                if (newPoint.getX() === BigInt(0) && newPoint.getY() === BigInt(1)) {\n                    throw new BaseError('Computed public child key is not valid, very unlucky index');\n                }\n                this.publicKey = this.ecc.PUBLIC_KEY.fromPoint(newPoint);\n                this.chainCode = hmac.slice(hmacHalfLength);\n            }\n            this.parentFingerprint = getBytes(this.getFingerprint());\n            this.depth += 1;\n            this.index = index;\n            this.fingerprint = getBytes(this.getFingerprint());\n            return this;\n        }\n        else if (['SLIP10-Ed25519', 'SLIP10-Ed25519-Blake2b', 'SLIP10-Ed25519-Monero'].includes(this.ecc.NAME)) {\n            if (!this.privateKey) {\n                throw new DerivationError(`On ${this.ecc.NAME} ECC, public key derivation is not supported`);\n            }\n            const indexBytes = integerToBytes(index, 4, 'big'); // struct.pack(\">L\", index)\n            const data = concatBytes(integerToBytes(0x00, 1), this.privateKey.getRaw(), indexBytes);\n            const hmac = hmacSha512(this.chainCode, data);\n            const hmacL = hmac.slice(0, hmacHalfLength);\n            const hmacR = hmac.slice(hmacHalfLength);\n            const newPrivateKey = this.ecc.PRIVATE_KEY.fromBytes(hmacL);\n            this.privateKey = newPrivateKey;\n            this.chainCode = hmacR;\n            this.publicKey = newPrivateKey.getPublicKey();\n            this.parentFingerprint = getBytes(this.getFingerprint());\n            this.depth += 1;\n            this.index = index;\n            this.fingerprint = getBytes(this.getFingerprint());\n            return this;\n        }\n        else if (['SLIP10-Nist256p1', 'SLIP10-Secp256k1'].includes(this.ecc.NAME)) {\n            const indexBytes = integerToBytes(index, 4, 'big');\n            if (!this.rootPrivateKey && !this.rootPublicKey) {\n                throw new DerivationError('You can\\'t drive this, root/master key are required');\n            }\n            if (!this.chainCode) {\n                throw new DerivationError('You can\\'t drive private_key and private_key');\n            }\n            let data;\n            if (index & 0x80000000) {\n                if (!this.privateKey) {\n                    throw new DerivationError('Hardened derivation path is invalid for xpublic key');\n                }\n                data = concatBytes(integerToBytes(0x00, 1), this.privateKey.getRaw(), indexBytes);\n            }\n            else {\n                data = concatBytes(this.publicKey.getRawCompressed(), indexBytes);\n            }\n            const hmac = hmacSha512(this.chainCode, data);\n            const hmacL = hmac.slice(0, hmacHalfLength);\n            const hmacR = hmac.slice(hmacHalfLength);\n            const hmacLInt = bytesToInteger(hmacL);\n            if (hmacLInt > this.ecc.ORDER) {\n                return null;\n            }\n            if (this.privateKey) {\n                const privInt = bytesToInteger(this.privateKey.getRaw());\n                const keyInt = (hmacLInt + privInt) % this.ecc.ORDER;\n                if (keyInt === BigInt(0)) {\n                    return null;\n                }\n                const newPriv = this.ecc.PRIVATE_KEY.fromBytes(integerToBytes(keyInt, 32));\n                this.parentFingerprint = getBytes(this.getFingerprint());\n                this.privateKey = newPriv;\n                this.chainCode = hmacR;\n                this.publicKey = newPriv.getPublicKey();\n            }\n            else {\n                const tweak = bytesToInteger(hmacL);\n                const newPoint = this.publicKey.getPoint().add(this.ecc.GENERATOR.multiply(tweak));\n                const newPub = this.ecc.PUBLIC_KEY.fromPoint(newPoint);\n                this.parentFingerprint = getBytes(this.getFingerprint());\n                this.chainCode = hmacR;\n                this.publicKey = newPub;\n            }\n            this.depth += 1;\n            this.index = index;\n            this.fingerprint = getBytes(this.getFingerprint());\n            return this;\n        }\n    }\n    getSeed() {\n        return this.seed ? bytesToString(this.seed) : null;\n    }\n    getRootXPrivateKey(version = Bitcoin.NETWORKS.MAINNET.XPRIVATE_KEY_VERSIONS.P2PKH, encoded = true) {\n        if (!this.getRootPrivateKey() || !this.getRootChainCode())\n            return null;\n        return serialize(typeof version === 'number' ? integerToBytes(version) : version, this.rootDepth, new Uint8Array(4), this.rootIndex, this.getRootChainCode(), '00' + this.getRootPrivateKey(), encoded);\n    }\n    getRootXPublicKey(version = Bitcoin.NETWORKS.MAINNET.XPUBLIC_KEY_VERSIONS.P2PKH, encoded = true) {\n        if (!this.getRootChainCode())\n            return null;\n        return serialize(typeof version === 'number' ? integerToBytes(version) : version, this.rootDepth, new Uint8Array(4), this.rootIndex, this.getRootChainCode(), this.getRootPublicKey(PUBLIC_KEY_TYPES.COMPRESSED), encoded);\n    }\n    getRootPrivateKey() {\n        return this.rootPrivateKey ? bytesToString(this.rootPrivateKey.getRaw()) : null;\n    }\n    getRootWIF(wifType) {\n        if (this.wifPrefix == null || !this.getRootPrivateKey())\n            return null;\n        const type = wifType ?? this.wifType;\n        if (!Object.values(WIF_TYPES).includes(type)) {\n            throw new BaseError(`Invalid ${this.getName()} WIF type`, {\n                expected: Object.values(WIF_TYPES),\n                got: type\n            });\n        }\n        return privateKeyToWIF(this.getRootPrivateKey(), type, this.wifPrefix);\n    }\n    getRootChainCode() {\n        return this.rootChainCode ? bytesToString(this.rootChainCode) : null;\n    }\n    getRootPublicKey(publicKeyType = this.publicKeyType) {\n        if (!this.rootPublicKey)\n            return null;\n        if (publicKeyType === PUBLIC_KEY_TYPES.UNCOMPRESSED) {\n            return bytesToString(this.rootPublicKey.getRawUncompressed());\n        }\n        else if (publicKeyType === PUBLIC_KEY_TYPES.COMPRESSED) {\n            return bytesToString(this.rootPublicKey.getRawCompressed());\n        }\n        throw new BaseError(`Invalid ${this.getName()} public key type`, {\n            expected: Object.values(PUBLIC_KEY_TYPES),\n            got: publicKeyType\n        });\n    }\n    getXPrivateKey(version = Bitcoin.NETWORKS.MAINNET.XPRIVATE_KEY_VERSIONS.P2PKH, encoded = true) {\n        if (!this.getPrivateKey() || !this.getChainCode())\n            return null;\n        return serialize(typeof version === 'number' ? integerToBytes(version) : version, this.depth, this.getParentFingerprint(), this.index, this.getChainCode(), '00' + this.getPrivateKey(), encoded);\n    }\n    getXPublicKey(version = Bitcoin.NETWORKS.MAINNET.XPUBLIC_KEY_VERSIONS.P2PKH, encoded = true) {\n        if (!this.getChainCode())\n            return null;\n        return serialize(typeof version === 'number' ? integerToBytes(version) : version, this.depth, this.getParentFingerprint(), this.index, this.getChainCode(), this.getPublicKey(PUBLIC_KEY_TYPES.COMPRESSED), encoded);\n    }\n    getPrivateKey() {\n        return this.privateKey ? bytesToString(this.privateKey.getRaw()) : null;\n    }\n    getWIF(wifType) {\n        if (this.wifPrefix == null)\n            return null;\n        const type = wifType ?? this.wifType;\n        if (!Object.values(WIF_TYPES).includes(type)) {\n            throw new BaseError(`Invalid WIF type`, {\n                expected: Object.values(WIF_TYPES), got: type\n            });\n        }\n        return this.getPrivateKey()\n            ? privateKeyToWIF(this.getPrivateKey(), type, this.wifPrefix)\n            : null;\n    }\n    getWIFType() {\n        return this.getWIF() ? this.wifType : null;\n    }\n    getChainCode() {\n        return this.chainCode ? bytesToString(this.chainCode) : null;\n    }\n    getPublicKey(publicKeyType = this.publicKeyType) {\n        const type = publicKeyType ?? this.publicKeyType;\n        if (!Object.values(PUBLIC_KEY_TYPES).includes(type)) {\n            throw new BaseError(`Invalid public key type`, {\n                expected: Object.values(PUBLIC_KEY_TYPES), got: type\n            });\n        }\n        return type === PUBLIC_KEY_TYPES.UNCOMPRESSED\n            ? this.getUncompressed() : this.getCompressed();\n    }\n    getPublicKeyType() {\n        return this.publicKeyType;\n    }\n    getCompressed() {\n        return bytesToString(this.publicKey.getRawCompressed());\n    }\n    getUncompressed() {\n        return bytesToString(this.publicKey.getRawUncompressed());\n    }\n    getHash() {\n        return bytesToString(ripemd160(sha256(this.getPublicKey())));\n    }\n    getFingerprint() {\n        return this.getHash().slice(0, 8);\n    }\n    getParentFingerprint() {\n        return this.parentFingerprint ? bytesToString(this.parentFingerprint) : null;\n    }\n    getDepth() {\n        return this.depth;\n    }\n    getPath() {\n        return this.derivation.getPath();\n    }\n    getIndex() {\n        return this.index;\n    }\n    getIndexes() {\n        return this.derivation.getIndexes();\n    }\n    getStrict() {\n        return this.strict ?? null;\n    }\n    getAddress(options = {\n        address: Bitcoin.ADDRESSES.P2PKH,\n        publicKeyAddressPrefix: Bitcoin.NETWORKS.MAINNET.PUBLIC_KEY_ADDRESS_PREFIX,\n        scriptAddressPrefix: Bitcoin.NETWORKS.MAINNET.SCRIPT_ADDRESS_PREFIX,\n        hrp: Bitcoin.NETWORKS.MAINNET.HRP,\n        witnessVersion: Bitcoin.NETWORKS.MAINNET.WITNESS_VERSIONS.P2WPKH\n    }) {\n        const address = options.address ?? Bitcoin.ADDRESSES.P2PKH;\n        const publicKeyAddressPrefix = options.publicKeyAddressPrefix ?? Bitcoin.NETWORKS.MAINNET.PUBLIC_KEY_ADDRESS_PREFIX;\n        const scriptAddressPrefix = options.scriptAddressPrefix ?? Bitcoin.NETWORKS.MAINNET.SCRIPT_ADDRESS_PREFIX;\n        const hrp = options.hrp ?? Bitcoin.NETWORKS.MAINNET.HRP;\n        const witnessVersion = options.witnessVersion ?? Bitcoin.NETWORKS.MAINNET.WITNESS_VERSIONS.P2WPKH;\n        if (address === P2PKHAddress.getName()) {\n            return P2PKHAddress.encode(this.publicKey, {\n                publicKeyAddressPrefix: publicKeyAddressPrefix,\n                publicKeyType: this.publicKeyType\n            });\n        }\n        else if (address === P2SHAddress.getName()) {\n            return P2SHAddress.encode(this.publicKey, {\n                scriptAddressPrefix: scriptAddressPrefix,\n                publicKeyType: this.publicKeyType\n            });\n        }\n        else if (address === P2TRAddress.getName()) {\n            return P2TRAddress.encode(this.publicKey, {\n                hrp: hrp,\n                witnessVersion: witnessVersion,\n                publicKeyType: this.publicKeyType\n            });\n        }\n        else if (address === P2WPKHAddress.getName()) {\n            return P2WPKHAddress.encode(this.publicKey, {\n                hrp: hrp,\n                witnessVersion: witnessVersion,\n                publicKeyType: this.publicKeyType\n            });\n        }\n        else if (address === P2WPKHInP2SHAddress.getName()) {\n            return P2WPKHInP2SHAddress.encode(this.publicKey, {\n                scriptAddressPrefix: scriptAddressPrefix,\n                publicKeyType: this.publicKeyType\n            });\n        }\n        else if (address === P2WSHAddress.getName()) {\n            return P2WSHAddress.encode(this.publicKey, {\n                hrp: hrp,\n                witnessVersion: witnessVersion,\n                publicKeyType: this.publicKeyType\n            });\n        }\n        else if (address === P2WSHInP2SHAddress.getName()) {\n            return P2WSHInP2SHAddress.encode(this.publicKey, {\n                scriptAddressPrefix: scriptAddressPrefix,\n                publicKeyType: this.publicKeyType\n            });\n        }\n        throw new AddressError(`Invalid ${this.getName()} address`, {\n            expected: [\n                P2PKHAddress.getName(),\n                P2SHAddress.getName(),\n                P2TRAddress.getName(),\n                P2WPKHAddress.getName(),\n                P2WPKHInP2SHAddress.getName(),\n                P2WSHAddress.getName(),\n                P2WSHInP2SHAddress.getName()\n            ],\n            got: address\n        });\n    }\n}\n//# sourceMappingURL=bip32.js.map","// SPDX-License-Identifier: MIT\nimport { BIP44Derivation, CHANGES } from '../derivations';\nimport { Bitcoin } from '../cryptocurrencies';\nimport { P2PKHAddress } from '../addresses';\nimport { BIP32HD } from './bip32';\nimport { PUBLIC_KEY_TYPES } from '../consts';\nimport { ensureTypeMatch } from '../utils';\nimport { DerivationError } from '../exceptions';\nexport class BIP44HD extends BIP32HD {\n    coinType;\n    constructor(options = {\n        publicKeyType: PUBLIC_KEY_TYPES.COMPRESSED\n    }) {\n        super(options);\n        this.coinType = options.coinType ?? Bitcoin.COIN_TYPE;\n        this.derivation = new BIP44Derivation({\n            coinType: this.coinType,\n            account: options.account ?? 0,\n            change: options.change ?? CHANGES.EXTERNAL_CHAIN,\n            address: options.account ?? 0\n        });\n    }\n    static getName() {\n        return 'BIP44';\n    }\n    fromCoinType(coinType) {\n        this.derivation.fromCoinType(coinType);\n        this.fromDerivation(this.derivation);\n        return this;\n    }\n    fromAccount(account) {\n        this.derivation.fromAccount(account);\n        this.fromDerivation(this.derivation);\n        return this;\n    }\n    fromChange(change) {\n        this.derivation.fromChange(change);\n        this.fromDerivation(this.derivation);\n        return this;\n    }\n    fromAddress(address) {\n        this.derivation.fromAddress(address);\n        this.fromDerivation(this.derivation);\n        return this;\n    }\n    fromDerivation(derivation) {\n        super.cleanDerivation();\n        this.derivation = ensureTypeMatch(derivation, BIP44Derivation, { errorClass: DerivationError });\n        for (const index of this.derivation.getIndexes()) {\n            this.drive(index);\n        }\n        return this;\n    }\n    updateDerivation(derivation) {\n        this.fromDerivation(derivation);\n        return this;\n    }\n    cleanDerivation() {\n        super.cleanDerivation();\n        for (const index of this.derivation.getIndexes()) {\n            this.drive(index);\n        }\n        return this;\n    }\n    getAddress(options = {\n        publicKeyAddressPrefix: Bitcoin.NETWORKS.MAINNET.PUBLIC_KEY_ADDRESS_PREFIX\n    }) {\n        return P2PKHAddress.encode(this.publicKey, {\n            publicKeyAddressPrefix: options.publicKeyAddressPrefix ?? Bitcoin.NETWORKS.MAINNET.PUBLIC_KEY_ADDRESS_PREFIX,\n            publicKeyType: this.publicKeyType\n        });\n    }\n}\n//# sourceMappingURL=bip44.js.map","// SPDX-License-Identifier: MIT\nimport { BIP49Derivation, CHANGES } from '../derivations';\nimport { Bitcoin } from '../cryptocurrencies';\nimport { P2WPKHInP2SHAddress } from '../addresses';\nimport { BIP44HD } from './bip44';\nimport { PUBLIC_KEY_TYPES } from '../consts';\nimport { serialize } from '../keys';\nimport { integerToBytes, ensureTypeMatch } from '../utils';\nimport { DerivationError } from '../exceptions';\nexport class BIP49HD extends BIP44HD {\n    constructor(options = {\n        publicKeyType: PUBLIC_KEY_TYPES.COMPRESSED\n    }) {\n        super(options);\n        this.coinType = options.coinType ?? Bitcoin.COIN_TYPE;\n        this.derivation = new BIP49Derivation({\n            coinType: this.coinType,\n            account: options.account ?? 0,\n            change: options.change ?? CHANGES.EXTERNAL_CHAIN,\n            address: options.account ?? 0\n        });\n    }\n    static getName() {\n        return 'BIP49';\n    }\n    fromDerivation(derivation) {\n        Object.getPrototypeOf(BIP44HD.prototype).cleanDerivation.call(this);\n        this.derivation = ensureTypeMatch(derivation, BIP49Derivation, { errorClass: DerivationError });\n        for (const index of this.derivation.getIndexes()) {\n            this.drive(index);\n        }\n        return this;\n    }\n    updateDerivation(derivation) {\n        this.fromDerivation(derivation);\n        return this;\n    }\n    cleanDerivation() {\n        Object.getPrototypeOf(BIP44HD.prototype).cleanDerivation.call(this);\n        for (const index of this.derivation.getIndexes()) {\n            this.drive(index);\n        }\n        return this;\n    }\n    getRootXPrivateKey(version = Bitcoin.NETWORKS.MAINNET.XPRIVATE_KEY_VERSIONS.P2WPKH_IN_P2SH, encoded = true) {\n        if (!this.getRootPrivateKey() || !this.getRootChainCode())\n            return null;\n        return serialize(typeof version === 'number' ? integerToBytes(version) : version, this.rootDepth, new Uint8Array(4), this.rootIndex, this.getRootChainCode(), '00' + this.getRootPrivateKey(), encoded);\n    }\n    getRootXPublicKey(version = Bitcoin.NETWORKS.MAINNET.XPUBLIC_KEY_VERSIONS.P2WPKH_IN_P2SH, encoded = true) {\n        if (!this.getRootChainCode())\n            return null;\n        return serialize(typeof version === 'number' ? integerToBytes(version) : version, this.rootDepth, new Uint8Array(4), this.rootIndex, this.getRootChainCode(), this.getRootPublicKey(PUBLIC_KEY_TYPES.COMPRESSED), encoded);\n    }\n    getXPrivateKey(version = Bitcoin.NETWORKS.MAINNET.XPRIVATE_KEY_VERSIONS.P2WPKH_IN_P2SH, encoded = true) {\n        if (!this.getPrivateKey() || !this.getChainCode())\n            return null;\n        return serialize(typeof version === 'number' ? integerToBytes(version) : version, this.depth, this.getParentFingerprint(), this.index, this.getChainCode(), '00' + this.getPrivateKey(), encoded);\n    }\n    getXPublicKey(version = Bitcoin.NETWORKS.MAINNET.XPUBLIC_KEY_VERSIONS.P2WPKH_IN_P2SH, encoded = true) {\n        if (!this.getChainCode())\n            return null;\n        return serialize(typeof version === 'number' ? integerToBytes(version) : version, this.depth, this.getParentFingerprint(), this.index, this.getChainCode(), this.getPublicKey(PUBLIC_KEY_TYPES.COMPRESSED), encoded);\n    }\n    getAddress(options = {\n        scriptAddressPrefix: Bitcoin.NETWORKS.MAINNET.SCRIPT_ADDRESS_PREFIX\n    }) {\n        return P2WPKHInP2SHAddress.encode(this.publicKey, {\n            scriptAddressPrefix: options.scriptAddressPrefix ?? Bitcoin.NETWORKS.MAINNET.SCRIPT_ADDRESS_PREFIX,\n            publicKeyType: this.publicKeyType\n        });\n    }\n}\n//# sourceMappingURL=bip49.js.map","// SPDX-License-Identifier: MIT\nimport { BIP84Derivation, CHANGES } from '../derivations';\nimport { Bitcoin } from '../cryptocurrencies';\nimport { P2WPKHAddress } from '../addresses';\nimport { BIP44HD } from './bip44';\nimport { PUBLIC_KEY_TYPES } from '../consts';\nimport { serialize } from '../keys';\nimport { integerToBytes, ensureTypeMatch } from '../utils';\nimport { DerivationError } from '../exceptions';\nexport class BIP84HD extends BIP44HD {\n    constructor(options = {\n        publicKeyType: PUBLIC_KEY_TYPES.COMPRESSED\n    }) {\n        super(options);\n        this.coinType = options.coinType ?? Bitcoin.COIN_TYPE;\n        this.derivation = new BIP84Derivation({\n            coinType: this.coinType,\n            account: options.account ?? 0,\n            change: options.change ?? CHANGES.EXTERNAL_CHAIN,\n            address: options.account ?? 0\n        });\n    }\n    static getName() {\n        return 'BIP84';\n    }\n    fromDerivation(derivation) {\n        Object.getPrototypeOf(BIP44HD.prototype).cleanDerivation.call(this);\n        this.derivation = ensureTypeMatch(derivation, BIP84Derivation, { errorClass: DerivationError });\n        for (const index of this.derivation.getIndexes()) {\n            this.drive(index);\n        }\n        return this;\n    }\n    updateDerivation(derivation) {\n        this.fromDerivation(derivation);\n        return this;\n    }\n    cleanDerivation() {\n        Object.getPrototypeOf(BIP44HD.prototype).cleanDerivation.call(this);\n        for (const index of this.derivation.getIndexes()) {\n            this.drive(index);\n        }\n        return this;\n    }\n    getRootXPrivateKey(version = Bitcoin.NETWORKS.MAINNET.XPRIVATE_KEY_VERSIONS.P2WPKH, encoded = true) {\n        if (!this.getRootPrivateKey() || !this.getRootChainCode())\n            return null;\n        return serialize(typeof version === 'number' ? integerToBytes(version) : version, this.rootDepth, new Uint8Array(4), this.rootIndex, this.getRootChainCode(), '00' + this.getRootPrivateKey(), encoded);\n    }\n    getRootXPublicKey(version = Bitcoin.NETWORKS.MAINNET.XPUBLIC_KEY_VERSIONS.P2WPKH, encoded = true) {\n        if (!this.getRootChainCode())\n            return null;\n        return serialize(typeof version === 'number' ? integerToBytes(version) : version, this.rootDepth, new Uint8Array(4), this.rootIndex, this.getRootChainCode(), this.getRootPublicKey(PUBLIC_KEY_TYPES.COMPRESSED), encoded);\n    }\n    getXPrivateKey(version = Bitcoin.NETWORKS.MAINNET.XPRIVATE_KEY_VERSIONS.P2WPKH, encoded = true) {\n        if (!this.getPrivateKey() || !this.getChainCode())\n            return null;\n        return serialize(typeof version === 'number' ? integerToBytes(version) : version, this.depth, this.getParentFingerprint(), this.index, this.getChainCode(), '00' + this.getPrivateKey(), encoded);\n    }\n    getXPublicKey(version = Bitcoin.NETWORKS.MAINNET.XPUBLIC_KEY_VERSIONS.P2WPKH, encoded = true) {\n        if (!this.getChainCode())\n            return null;\n        return serialize(typeof version === 'number' ? integerToBytes(version) : version, this.depth, this.getParentFingerprint(), this.index, this.getChainCode(), this.getPublicKey(PUBLIC_KEY_TYPES.COMPRESSED), encoded);\n    }\n    getAddress(options = {\n        hrp: Bitcoin.NETWORKS.MAINNET.HRP,\n        witnessVersion: Bitcoin.NETWORKS.MAINNET.WITNESS_VERSIONS.P2WPKH\n    }) {\n        return P2WPKHAddress.encode(this.publicKey, {\n            hrp: options.hrp ?? Bitcoin.NETWORKS.MAINNET.HRP,\n            witnessVersion: options.witnessVersion ?? Bitcoin.NETWORKS.MAINNET.WITNESS_VERSIONS.P2WPKH,\n            publicKeyType: this.publicKeyType\n        });\n    }\n}\n//# sourceMappingURL=bip84.js.map","// SPDX-License-Identifier: MIT\nimport { Bitcoin } from '../cryptocurrencies';\nimport { PUBLIC_KEY_TYPES, SEMANTICS } from '../consts';\nimport { P2WPKHAddress, P2WPKHInP2SHAddress, P2WSHAddress, P2WSHInP2SHAddress } from '../addresses';\nimport { AddressError, SemanticError } from '../exceptions';\nimport { BIP32HD } from './bip32';\nexport class BIP141HD extends BIP32HD {\n    address;\n    xprivateKeyVersion;\n    xpublicKeyVersion;\n    semantic;\n    constructor(options = {\n        publicKeyType: PUBLIC_KEY_TYPES.COMPRESSED\n    }) {\n        super(options);\n        if (!options.semantic) {\n            throw new SemanticError('Semantic is required');\n        }\n        this.fromSemantic(options.semantic, options);\n    }\n    static getName() {\n        return 'BIP141';\n    }\n    getSemantic() {\n        return this.semantic;\n    }\n    fromSemantic(semantic, options = {}) {\n        if (!SEMANTICS.getTypes().includes(semantic)) {\n            throw new SemanticError(`Invalid semantic type`, {\n                expected: SEMANTICS.getTypes(), got: semantic\n            });\n        }\n        this.semantic = semantic;\n        if (semantic === SEMANTICS.P2WPKH) {\n            this.address = P2WPKHAddress.getName();\n            this.xprivateKeyVersion = options.p2wpkhXPrivateKeyVersion ?? Bitcoin.NETWORKS.MAINNET.XPRIVATE_KEY_VERSIONS.P2WPKH;\n            this.xpublicKeyVersion = options.p2wpkhXPublicKeyVersion ?? Bitcoin.NETWORKS.MAINNET.XPUBLIC_KEY_VERSIONS.P2WPKH;\n        }\n        else if (semantic === SEMANTICS.P2WPKH_IN_P2SH) {\n            this.address = P2WPKHInP2SHAddress.getName();\n            this.xprivateKeyVersion = options.p2wpkhInP2SHXPrivateKeyVersion ?? Bitcoin.NETWORKS.MAINNET.XPRIVATE_KEY_VERSIONS.P2WPKH_IN_P2SH;\n            this.xpublicKeyVersion = options.p2wpkhInP2SHXPublicKeyVersion ?? Bitcoin.NETWORKS.MAINNET.XPUBLIC_KEY_VERSIONS.P2WPKH_IN_P2SH;\n        }\n        else if (semantic === SEMANTICS.P2WSH) {\n            this.address = P2WSHAddress.getName();\n            this.xprivateKeyVersion = options.p2wshXPrivateKeyVersion ?? Bitcoin.NETWORKS.MAINNET.XPRIVATE_KEY_VERSIONS.P2WSH;\n            this.xpublicKeyVersion = options.p2wshXPublicKeyVersion ?? Bitcoin.NETWORKS.MAINNET.XPUBLIC_KEY_VERSIONS.P2WSH;\n        }\n        else if (semantic === SEMANTICS.P2WSH_IN_P2SH) {\n            this.address = P2WSHInP2SHAddress.getName();\n            this.xprivateKeyVersion = options.p2wshInP2SHXPrivateKeyVersion ?? Bitcoin.NETWORKS.MAINNET.XPRIVATE_KEY_VERSIONS.P2WSH_IN_P2SH;\n            this.xpublicKeyVersion = options.p2wshInP2SHXPublicKeyVersion ?? Bitcoin.NETWORKS.MAINNET.XPUBLIC_KEY_VERSIONS.P2WSH_IN_P2SH;\n        }\n        return this;\n    }\n    getRootXPrivateKey(version, encoded = true) {\n        return super.getRootXPrivateKey(version ?? this.xprivateKeyVersion, encoded);\n    }\n    getRootXPublicKey(version, encoded = true) {\n        return super.getRootXPublicKey(version ?? this.xpublicKeyVersion, encoded);\n    }\n    getXPrivateKey(version, encoded = true) {\n        return super.getXPrivateKey(version ?? this.xprivateKeyVersion, encoded);\n    }\n    getXPublicKey(version, encoded = true) {\n        return super.getXPublicKey(version ?? this.xpublicKeyVersion, encoded);\n    }\n    getAddress(options = {\n        address: this.address,\n        scriptAddressPrefix: Bitcoin.NETWORKS.MAINNET.SCRIPT_ADDRESS_PREFIX,\n        hrp: Bitcoin.NETWORKS.MAINNET.HRP,\n        witnessVersion: Bitcoin.NETWORKS.MAINNET.WITNESS_VERSIONS.P2WPKH\n    }) {\n        const address = options?.address ?? this.address;\n        const scriptAddressPrefix = options.scriptAddressPrefix ?? Bitcoin.NETWORKS.MAINNET.SCRIPT_ADDRESS_PREFIX;\n        const hrp = options.hrp ?? Bitcoin.NETWORKS.MAINNET.HRP;\n        const witnessVersion = options.witnessVersion ?? Bitcoin.NETWORKS.MAINNET.WITNESS_VERSIONS.P2WPKH;\n        if (address === P2WPKHAddress.getName()) {\n            return P2WPKHAddress.encode(this.publicKey, {\n                hrp: hrp,\n                witnessVersion: witnessVersion,\n                publicKeyType: this.publicKeyType\n            });\n        }\n        else if (address === P2WPKHInP2SHAddress.getName()) {\n            return P2WPKHInP2SHAddress.encode(this.publicKey, {\n                scriptAddressPrefix: scriptAddressPrefix,\n                publicKeyType: this.publicKeyType\n            });\n        }\n        else if (address === P2WSHAddress.getName()) {\n            return P2WSHAddress.encode(this.publicKey, {\n                hrp: hrp,\n                witnessVersion: witnessVersion,\n                publicKeyType: this.publicKeyType\n            });\n        }\n        else if (address === P2WSHInP2SHAddress.getName()) {\n            return P2WSHInP2SHAddress.encode(this.publicKey, {\n                scriptAddressPrefix: scriptAddressPrefix,\n                publicKeyType: this.publicKeyType\n            });\n        }\n        throw new AddressError(`Invalid ${BIP141HD.getName()} address`, {\n            expected: [\n                P2WPKHAddress.getName(),\n                P2WPKHInP2SHAddress.getName(),\n                P2WSHAddress.getName(),\n                P2WSHInP2SHAddress.getName()\n            ],\n            got: address\n        });\n    }\n}\n//# sourceMappingURL=bip141.js.map","// SPDX-License-Identifier: MIT\nimport { BIP86Derivation, CHANGES } from '../derivations';\nimport { Bitcoin } from '../cryptocurrencies';\nimport { P2TRAddress } from '../addresses';\nimport { BIP44HD } from './bip44';\nimport { PUBLIC_KEY_TYPES } from '../consts';\nimport { serialize } from '../keys';\nimport { integerToBytes, ensureTypeMatch } from '../utils';\nimport { DerivationError } from '../exceptions';\nexport class BIP86HD extends BIP44HD {\n    constructor(options = {\n        publicKeyType: PUBLIC_KEY_TYPES.COMPRESSED\n    }) {\n        super(options);\n        this.coinType = options.coinType ?? Bitcoin.COIN_TYPE;\n        this.derivation = new BIP86Derivation({\n            coinType: this.coinType,\n            account: options.account ?? 0,\n            change: options.change ?? CHANGES.EXTERNAL_CHAIN,\n            address: options.account ?? 0\n        });\n    }\n    static getName() {\n        return 'BIP86';\n    }\n    fromDerivation(derivation) {\n        Object.getPrototypeOf(BIP44HD.prototype).cleanDerivation.call(this);\n        this.derivation = ensureTypeMatch(derivation, BIP86Derivation, { errorClass: DerivationError });\n        for (const index of this.derivation.getIndexes()) {\n            this.drive(index);\n        }\n        return this;\n    }\n    updateDerivation(derivation) {\n        this.fromDerivation(derivation);\n        return this;\n    }\n    cleanDerivation() {\n        Object.getPrototypeOf(BIP44HD.prototype).cleanDerivation.call(this);\n        for (const index of this.derivation.getIndexes()) {\n            this.drive(index);\n        }\n        return this;\n    }\n    getRootXPrivateKey(version = Bitcoin.NETWORKS.MAINNET.XPRIVATE_KEY_VERSIONS.P2TR, encoded = true) {\n        if (!this.getRootPrivateKey() || !this.getRootChainCode())\n            return null;\n        return serialize(typeof version === 'number' ? integerToBytes(version) : version, this.rootDepth, new Uint8Array(4), this.rootIndex, this.getRootChainCode(), '00' + this.getRootPrivateKey(), encoded);\n    }\n    getRootXPublicKey(version = Bitcoin.NETWORKS.MAINNET.XPUBLIC_KEY_VERSIONS.P2TR, encoded = true) {\n        if (!this.getRootChainCode())\n            return null;\n        return serialize(typeof version === 'number' ? integerToBytes(version) : version, this.rootDepth, new Uint8Array(4), this.rootIndex, this.getRootChainCode(), this.getRootPublicKey(PUBLIC_KEY_TYPES.COMPRESSED), encoded);\n    }\n    getXPrivateKey(version = Bitcoin.NETWORKS.MAINNET.XPRIVATE_KEY_VERSIONS.P2TR, encoded = true) {\n        if (!this.getPrivateKey() || !this.getChainCode())\n            return null;\n        return serialize(typeof version === 'number' ? integerToBytes(version) : version, this.depth, this.getParentFingerprint(), this.index, this.getChainCode(), '00' + this.getPrivateKey(), encoded);\n    }\n    getXPublicKey(version = Bitcoin.NETWORKS.MAINNET.XPUBLIC_KEY_VERSIONS.P2TR, encoded = true) {\n        if (!this.getChainCode())\n            return null;\n        return serialize(typeof version === 'number' ? integerToBytes(version) : version, this.depth, this.getParentFingerprint(), this.index, this.getChainCode(), this.getPublicKey(PUBLIC_KEY_TYPES.COMPRESSED), encoded);\n    }\n    getAddress(options = {\n        hrp: Bitcoin.NETWORKS.MAINNET.HRP,\n        witnessVersion: Bitcoin.NETWORKS.MAINNET.WITNESS_VERSIONS.P2TR\n    }) {\n        return P2TRAddress.encode(this.publicKey, {\n            hrp: options.hrp ?? Bitcoin.NETWORKS.MAINNET.HRP,\n            witnessVersion: options.witnessVersion ?? Bitcoin.NETWORKS.MAINNET.WITNESS_VERSIONS.P2TR,\n            publicKeyType: this.publicKeyType\n        });\n    }\n}\n//# sourceMappingURL=bip86.js.map","// SPDX-License-Identifier: MIT\nimport { encode } from 'cbor2';\nimport { BIP32HD } from './bip32';\nimport { Cardano } from '../cryptocurrencies';\nimport { KholawEd25519ECC, KholawEd25519PrivateKey } from '../eccs';\nimport { pbkdf2HmacSha512, hmacSha512, hmacSha256, sha512 } from '../crypto';\nimport { getBytes, bytesToString, resetBits, setBits, getHmac, areBitsSet, concatBytes, toBuffer, multiplyScalarNoCarry, integerToBytes, bytesToInteger, addNoCarry } from '../utils';\nimport { CardanoAddress } from '../addresses';\nimport { Seed } from '../seeds';\nimport { BaseError, AddressError, SeedError, PrivateKeyError, PublicKeyError, DerivationError } from '../exceptions';\nimport { PUBLIC_KEY_TYPES } from '../consts';\nexport class CardanoHD extends BIP32HD {\n    cardanoType;\n    constructor(options = {\n        publicKeyType: PUBLIC_KEY_TYPES.COMPRESSED\n    }) {\n        options.ecc = KholawEd25519ECC;\n        super(options);\n        if (!options.cardanoType || !Cardano.TYPES.getCardanoTypes().includes(options.cardanoType)) {\n            throw new BaseError('Invalid Cardano type', {\n                expected: Cardano.TYPES.getCardanoTypes(), got: options.cardanoType\n            });\n        }\n        this.cardanoType = options.cardanoType;\n    }\n    static getName() {\n        return 'Cardano';\n    }\n    fromSeed(seed, passphrase) {\n        try {\n            this.seed = toBuffer(seed instanceof Seed ? seed.getSeed() : seed);\n        }\n        catch {\n            throw new SeedError('Invalid seed data');\n        }\n        const digestSize = 64;\n        const hmacHalfLength = digestSize / 2;\n        const tweakMasterKeyBits = (data) => {\n            const d = new Uint8Array(data);\n            d[0] = resetBits(d[0], 0x07);\n            d[31] = resetBits(d[31], this.cardanoType === Cardano.TYPES.BYRON_ICARUS || this.cardanoType === Cardano.TYPES.SHELLEY_ICARUS ? 0xE0 : 0x80);\n            d[31] = setBits(d[31], 0x40);\n            return d;\n        };\n        if (this.cardanoType === Cardano.TYPES.BYRON_LEGACY) {\n            if (this.seed.length !== 32) {\n                throw new BaseError('Invalid seed length', {\n                    expected: 32,\n                    got: this.seed.length\n                });\n            }\n            const digestSize = 64;\n            const data = encode(this.seed);\n            let iteration = 1;\n            while (true) {\n                const label = toBuffer(`Root Seed Chain ${iteration}`);\n                const i = hmacSha512(data, label);\n                let il = sha512(i.slice(0, digestSize / 2));\n                const ir = i.slice(digestSize / 2);\n                il = toBuffer(tweakMasterKeyBits(il));\n                if (!areBitsSet(il[31], 0x20)) {\n                    this.rootPrivateKey = this.ecc.PRIVATE_KEY.fromBytes(il);\n                    this.rootChainCode = ir;\n                    break;\n                }\n                iteration++;\n            }\n        }\n        else if ([Cardano.TYPES.BYRON_ICARUS, Cardano.TYPES.SHELLEY_ICARUS].includes(this.cardanoType)) {\n            if (this.seed.length < 16) {\n                throw new BaseError('Invalid seed length', { expected: '>= 16', got: this.seed.length });\n            }\n            const k = tweakMasterKeyBits(pbkdf2HmacSha512(passphrase ?? '', this.seed, 4096, 96));\n            this.rootPrivateKey = this.ecc.PRIVATE_KEY.fromBytes(k.slice(0, KholawEd25519PrivateKey.getLength()));\n            this.rootChainCode = k.slice(KholawEd25519PrivateKey.getLength());\n        }\n        else if ([Cardano.TYPES.BYRON_LEDGER, Cardano.TYPES.SHELLEY_LEDGER].includes(this.cardanoType)) {\n            if (this.seed.length < 16) {\n                throw new BaseError('Invalid seed length', { expected: '>= 16', got: this.seed.length });\n            }\n            let hmacData = this.seed;\n            let hmac;\n            while (true) {\n                hmac = hmacSha512(getHmac(this.ecc.NAME), hmacData);\n                if ((hmac[31] & 0x20) === 0)\n                    break;\n                hmacData = hmac;\n            }\n            let kl = tweakMasterKeyBits(hmac.slice(0, hmacHalfLength));\n            const kr = hmac.slice(hmacHalfLength);\n            const chainCode = hmacSha256(getHmac(this.ecc.NAME), concatBytes(Buffer.from([0x01]), this.seed));\n            this.rootPrivateKey = this.ecc.PRIVATE_KEY.fromBytes(concatBytes(kl, kr));\n            this.rootChainCode = chainCode;\n        }\n        this.rootPublicKey = this.rootPrivateKey.getPublicKey();\n        this.privateKey = this.rootPrivateKey;\n        this.chainCode = this.rootChainCode;\n        this.parentFingerprint = new Uint8Array(4);\n        this.publicKey = this.privateKey.getPublicKey();\n        this.strict = true;\n        return this;\n    }\n    fromPrivateKey(privateKey) {\n        if ([Cardano.TYPES.BYRON_ICARUS, Cardano.TYPES.BYRON_LEGACY, Cardano.TYPES.BYRON_LEDGER].includes(this.cardanoType)) {\n            throw new BaseError(`From private key not supported for ${this.cardanoType}`);\n        }\n        try {\n            this.privateKey = this.ecc.PRIVATE_KEY.fromBytes(getBytes(privateKey));\n            this.publicKey = this.privateKey.getPublicKey();\n            this.strict = null;\n            return this;\n        }\n        catch {\n            throw new PrivateKeyError('Invalid private key data');\n        }\n    }\n    fromPublicKey(publicKey) {\n        if ([Cardano.TYPES.BYRON_ICARUS, Cardano.TYPES.BYRON_LEGACY, Cardano.TYPES.BYRON_LEDGER].includes(this.cardanoType)) {\n            throw new BaseError(`From public key not supported for ${this.cardanoType}`);\n        }\n        try {\n            this.publicKey = this.ecc.PUBLIC_KEY.fromBytes(getBytes(publicKey));\n            this.strict = null;\n            return this;\n        }\n        catch {\n            throw new PublicKeyError('Invalid public key data');\n        }\n    }\n    drive(index) {\n        const digestHalf = 32; // sha512().digest_size / 2\n        const isLegacy = this.cardanoType === Cardano.TYPES.BYRON_LEGACY;\n        const indexBytes = integerToBytes(index, 4, isLegacy ? 'big' : 'little');\n        if (this.privateKey) {\n            let zHmac, hmac;\n            if (index & 0x80000000) {\n                zHmac = hmacSha512(this.chainCode, concatBytes(Buffer.from([0x00]), this.privateKey.getRaw(), indexBytes));\n                hmac = hmacSha512(this.chainCode, concatBytes(Buffer.from([0x01]), this.privateKey.getRaw(), indexBytes));\n            }\n            else {\n                const pubRaw = this.publicKey.getRawCompressed().slice(1);\n                zHmac = hmacSha512(this.chainCode, concatBytes(Buffer.from([0x02]), pubRaw, indexBytes));\n                hmac = hmacSha512(this.chainCode, concatBytes(Buffer.from([0x03]), pubRaw, indexBytes));\n            }\n            const zl = zHmac.slice(0, digestHalf);\n            const zr = zHmac.slice(digestHalf);\n            const kl = this.privateKey.getRaw().slice(0, digestHalf);\n            const kr = this.privateKey.getRaw().slice(digestHalf);\n            const _hmacr = hmac.slice(digestHalf);\n            const left = isLegacy\n                ? integerToBytes((bytesToInteger(multiplyScalarNoCarry(toBuffer(zl), 8), true) + bytesToInteger(kl, true)) % this.ecc.ORDER, 32, 'little')\n                : (() => {\n                    const zlInt = bytesToInteger(zl.slice(0, 28), true);\n                    const klInt = bytesToInteger(kl, true);\n                    const leftInt = zlInt * BigInt(8) + klInt;\n                    if (leftInt % this.ecc.ORDER === BigInt(0))\n                        throw new BaseError('Invalid child private key');\n                    return integerToBytes(leftInt, KholawEd25519PrivateKey.getLength() / 2, 'little');\n                })();\n            const right = isLegacy\n                ? addNoCarry(toBuffer(zr), toBuffer(kr))\n                : (() => {\n                    const zrInt = bytesToInteger(zr, true);\n                    const krInt = bytesToInteger(kr, true);\n                    const sum = (zrInt + krInt) % (BigInt(1) << BigInt(256));\n                    return integerToBytes(sum, KholawEd25519PrivateKey.getLength() / 2, 'little');\n                })();\n            const newPrivateKey = this.ecc.PRIVATE_KEY.fromBytes(concatBytes(left, right));\n            this.privateKey = newPrivateKey;\n            this.chainCode = _hmacr;\n            this.publicKey = newPrivateKey.getPublicKey();\n        }\n        else {\n            if (index & 0x80000000) {\n                throw new DerivationError('Hardened derivation path is invalid for xpublic key');\n            }\n            const pubRaw = this.publicKey.getRawCompressed().slice(1);\n            const zHmac = hmacSha512(this.chainCode, concatBytes(Buffer.from([0x02]), pubRaw, indexBytes));\n            const hmac = hmacSha512(this.chainCode, concatBytes(Buffer.from([0x03]), pubRaw, indexBytes));\n            const zl = zHmac.slice(0, digestHalf);\n            const tweak = isLegacy\n                ? bytesToInteger(multiplyScalarNoCarry(zl, 8), true)\n                : bytesToInteger(zl.slice(0, 28), true) * BigInt(8);\n            const newPoint = this.publicKey.getPoint().add(this.ecc.GENERATOR.multiply(tweak));\n            if (newPoint.getX() === BigInt(0) && newPoint.getY() === BigInt(1)) {\n                throw new BaseError('Computed public child key is not valid, very unlucky index');\n            }\n            this.publicKey = this.ecc.PUBLIC_KEY.fromPoint(newPoint);\n            this.chainCode = hmac.slice(digestHalf);\n        }\n        this.parentFingerprint = getBytes(this.getFingerprint());\n        this.depth += 1;\n        this.index = index;\n        this.fingerprint = getBytes(this.getFingerprint());\n        return this;\n    }\n    getRootXPrivateKey(version = Cardano.NETWORKS.MAINNET.XPRIVATE_KEY_VERSIONS.P2PKH, encoded = true) {\n        return super.getRootXPrivateKey(version, encoded);\n    }\n    getXPrivateKey(version = Cardano.NETWORKS.MAINNET.XPRIVATE_KEY_VERSIONS.P2PKH, encoded = true) {\n        return super.getXPrivateKey(version, encoded);\n    }\n    getPathKey() {\n        if (this.cardanoType === Cardano.TYPES.BYRON_LEGACY) {\n            return bytesToString(pbkdf2HmacSha512(concatBytes(this.rootPublicKey.getRawCompressed().slice(1), this.rootChainCode), 'address-hashing', 500, 32));\n        }\n        return null;\n    }\n    getAddress(options = {\n        network: 'mainnet'\n    }) {\n        if (this.cardanoType === Cardano.TYPES.BYRON_LEGACY) {\n            return CardanoAddress.encodeByronLegacy(this.publicKey, this.getPath(), this.getPathKey(), this.chainCode, options.addressType ?? Cardano.ADDRESS_TYPES.PUBLIC_KEY);\n        }\n        else if ([Cardano.TYPES.BYRON_ICARUS, Cardano.TYPES.BYRON_LEDGER].includes(this.cardanoType)) {\n            return CardanoAddress.encodeByronIcarus(this.publicKey, this.chainCode, options.addressType ?? Cardano.ADDRESS_TYPES.PUBLIC_KEY);\n        }\n        else if ([Cardano.TYPES.SHELLEY_ICARUS, Cardano.TYPES.SHELLEY_LEDGER].includes(this.cardanoType)) {\n            const addressType = options.addressType ?? Cardano.ADDRESS_TYPES.PAYMENT;\n            if (addressType === Cardano.ADDRESS_TYPES.PAYMENT) {\n                if (!options.stakingPublicKey) {\n                    throw new BaseError('stakingPublicKey is required for Payment address type');\n                }\n                return CardanoAddress.encodeShelley(this.publicKey, options.stakingPublicKey, options.network ?? 'mainnet');\n            }\n            else if ([Cardano.ADDRESS_TYPES.STAKING, Cardano.ADDRESS_TYPES.REWARD].includes(addressType)) {\n                return CardanoAddress.encodeShelleyStaking(this.publicKey, options.network ?? 'mainnet');\n            }\n            throw new AddressError(`Invalid ${this.cardanoType} address type`, {\n                expected: [\n                    Cardano.ADDRESS_TYPES.PAYMENT,\n                    Cardano.ADDRESS_TYPES.STAKING,\n                    Cardano.ADDRESS_TYPES.REWARD\n                ],\n                got: addressType\n            });\n        }\n        throw new AddressError(`Invalid Cardano type`, {\n            expected: Cardano.TYPES.getCardanoTypes(), got: this.cardanoType\n        });\n    }\n}\n//# sourceMappingURL=cardano.js.map","// SPDX-License-Identifier: MIT\nimport { HD } from '../hd';\nimport { ElectrumDerivation } from '../../derivations';\nimport { Bitcoin } from '../../cryptocurrencies';\nimport { SLIP10Secp256k1ECC, SLIP10Secp256k1PrivateKey, SLIP10Secp256k1PublicKey } from '../../eccs';\nimport { getBytes, bytesToString, bytesToInteger, integerToBytes, ensureTypeMatch, concatBytes } from '../../utils';\nimport { doubleSha256 } from '../../crypto';\nimport { WIF_TYPES, PUBLIC_KEY_TYPES } from '../../consts';\nimport { privateKeyToWIF, wifToPrivateKey } from '../../wif';\nimport { P2PKHAddress } from '../../addresses';\nimport { SeedError, DerivationError, PrivateKeyError, PublicKeyError, WIFError, BaseError } from '../../exceptions';\nimport { Seed } from '../../seeds';\nexport class ElectrumV1HD extends HD {\n    seed;\n    masterPrivateKey;\n    masterPublicKey;\n    privateKey;\n    publicKey;\n    publicKeyType;\n    wifType;\n    wifPrefix;\n    constructor(options = {\n        publicKeyType: PUBLIC_KEY_TYPES.UNCOMPRESSED\n    }) {\n        super(options);\n        this.publicKeyType = options.publicKeyType ?? PUBLIC_KEY_TYPES.UNCOMPRESSED;\n        if (this.publicKeyType === PUBLIC_KEY_TYPES.UNCOMPRESSED) {\n            this.wifType = WIF_TYPES.WIF;\n        }\n        else if (this.publicKeyType === PUBLIC_KEY_TYPES.COMPRESSED) {\n            this.wifType = WIF_TYPES.WIF_COMPRESSED;\n        }\n        else {\n            throw new BaseError('Invalid public key type', {\n                expected: PUBLIC_KEY_TYPES.getTypes(), got: this.publicKeyType\n            });\n        }\n        this.wifPrefix = options.wifPrefix ?? Bitcoin.NETWORKS.MAINNET.WIF_PREFIX;\n        this.derivation = new ElectrumDerivation({\n            change: options.change, address: options.address\n        });\n    }\n    static getName() {\n        return 'Electrum-V1';\n    }\n    fromSeed(seed) {\n        try {\n            this.seed = getBytes(seed instanceof Seed ? seed.getSeed() : seed);\n            return this.fromPrivateKey(this.seed);\n        }\n        catch {\n            throw new SeedError('Invalid seed data');\n        }\n    }\n    fromPrivateKey(key) {\n        try {\n            this.masterPrivateKey = SLIP10Secp256k1PrivateKey.fromBytes(getBytes(key));\n            this.masterPublicKey = this.masterPrivateKey.getPublicKey();\n            this.fromDerivation(this.derivation);\n            return this;\n        }\n        catch {\n            throw new PrivateKeyError('Invalid private key data');\n        }\n    }\n    fromWIF(wif) {\n        if (this.wifPrefix == null)\n            throw new WIFError('WIF prefix is required');\n        return this.fromPrivateKey(wifToPrivateKey(wif, this.wifPrefix));\n    }\n    fromPublicKey(key) {\n        try {\n            this.masterPublicKey = SLIP10Secp256k1PublicKey.fromBytes(getBytes(key));\n            this.fromDerivation(this.derivation);\n            return this;\n        }\n        catch {\n            throw new PublicKeyError('Invalid public key error');\n        }\n    }\n    fromDerivation(derivation) {\n        this.derivation = ensureTypeMatch(derivation, ElectrumDerivation, { errorClass: DerivationError });\n        this.drive(derivation.getChange(), derivation.getAddress());\n        return this;\n    }\n    updateDerivation(derivation) {\n        return this.fromDerivation(derivation);\n    }\n    cleanDerivation() {\n        this.derivation.clean();\n        this.fromDerivation(this.derivation);\n        return this;\n    }\n    drive(changeIndex, addressIndex) {\n        const sequence = doubleSha256(concatBytes(new TextEncoder().encode(`${addressIndex}:${changeIndex}:`), this.masterPublicKey.getRawUncompressed().slice(1)));\n        if (this.masterPrivateKey) {\n            const privateKeyInt = (bytesToInteger(this.masterPrivateKey.getRaw()) + bytesToInteger(sequence)) % SLIP10Secp256k1ECC.ORDER;\n            this.privateKey = SLIP10Secp256k1PrivateKey.fromBytes(integerToBytes(privateKeyInt, SLIP10Secp256k1PrivateKey.getLength()));\n            this.publicKey = this.privateKey.getPublicKey();\n        }\n        else {\n            this.publicKey = SLIP10Secp256k1PublicKey.fromPoint(this.masterPublicKey.getPoint().add(SLIP10Secp256k1ECC.GENERATOR.multiply(bytesToInteger(sequence))));\n        }\n        return this;\n    }\n    getSeed() {\n        return this.seed ? bytesToString(this.seed) : null;\n    }\n    getMasterPrivateKey() {\n        return this.masterPrivateKey ? bytesToString(this.masterPrivateKey.getRaw()) : null;\n    }\n    getMasterWIF(wifType) {\n        if (!this.masterPrivateKey || this.wifPrefix == null)\n            return null;\n        const type = wifType ?? this.wifType;\n        return privateKeyToWIF(this.getMasterPrivateKey(), type, this.wifPrefix);\n    }\n    getMasterPublicKey(publicKeyType = this.publicKeyType) {\n        if (publicKeyType === PUBLIC_KEY_TYPES.UNCOMPRESSED) {\n            return bytesToString(this.masterPublicKey.getRawUncompressed());\n        }\n        else if (publicKeyType === PUBLIC_KEY_TYPES.COMPRESSED) {\n            return bytesToString(this.masterPublicKey.getRawCompressed());\n        }\n        throw new BaseError(`Invalid ${this.getName()} public key type`, {\n            expected: Object.values(PUBLIC_KEY_TYPES), got: publicKeyType\n        });\n    }\n    getPrivateKey() {\n        return this.privateKey ? bytesToString(this.privateKey.getRaw()) : null;\n    }\n    getWIF(wifType) {\n        if (!this.privateKey || this.wifPrefix == null)\n            return null;\n        const type = wifType ?? this.wifType;\n        return privateKeyToWIF(this.getPrivateKey(), type, this.wifPrefix);\n    }\n    getWIFType() {\n        return this.wifType;\n    }\n    getPublicKey(publicKeyType = this.publicKeyType) {\n        if (publicKeyType === PUBLIC_KEY_TYPES.UNCOMPRESSED) {\n            return bytesToString(this.publicKey.getRawUncompressed());\n        }\n        else if (publicKeyType === PUBLIC_KEY_TYPES.COMPRESSED) {\n            return bytesToString(this.publicKey.getRawCompressed());\n        }\n        throw new BaseError(`Invalid ${this.getName()} public key type`, {\n            expected: Object.values(PUBLIC_KEY_TYPES), got: publicKeyType\n        });\n    }\n    getPublicKeyType() {\n        return this.publicKeyType;\n    }\n    getCompressed() {\n        return bytesToString(this.publicKey.getRawCompressed());\n    }\n    getUncompressed() {\n        return bytesToString(this.publicKey.getRawUncompressed());\n    }\n    getAddress(options = {\n        publicKeyAddressPrefix: Bitcoin.NETWORKS.MAINNET.PUBLIC_KEY_ADDRESS_PREFIX\n    }) {\n        return P2PKHAddress.encode(this.publicKey, {\n            publicKeyAddressPrefix: options.publicKeyAddressPrefix ?? Bitcoin.NETWORKS.MAINNET.PUBLIC_KEY_ADDRESS_PREFIX,\n            publicKeyType: this.publicKeyType\n        });\n    }\n}\n//# sourceMappingURL=v1.js.map","// SPDX-License-Identifier: MIT\nimport { HD } from '../hd';\nimport { ElectrumDerivation, CustomDerivation } from '../../derivations';\nimport { PUBLIC_KEY_TYPES, MODES, WIF_TYPES } from '../../consts';\nimport { P2PKHAddress, P2WPKHAddress } from '../../addresses';\nimport { privateKeyToWIF } from '../../wif';\nimport { Bitcoin } from '../../cryptocurrencies';\nimport { BIP32HD } from '../bip32';\nimport { ensureTypeMatch } from '../../utils';\nimport { BaseError, AddressError, DerivationError } from '../../exceptions';\nexport class ElectrumV2HD extends HD {\n    mode;\n    wifType;\n    publicKeyType;\n    wifPrefix;\n    bip32HD;\n    constructor(options = {\n        publicKeyType: PUBLIC_KEY_TYPES.UNCOMPRESSED,\n        mode: MODES.STANDARD\n    }) {\n        super(options);\n        this.mode = options.mode ?? MODES.STANDARD;\n        if (!MODES.getTypes().includes(this.mode)) {\n            throw new BaseError(`Invalid ${this.getName()} mode`, {\n                expected: MODES.getTypes(),\n                got: this.mode\n            });\n        }\n        this.publicKeyType = options.publicKeyType ?? PUBLIC_KEY_TYPES.UNCOMPRESSED;\n        if (this.publicKeyType === PUBLIC_KEY_TYPES.UNCOMPRESSED) {\n            this.wifType = WIF_TYPES.WIF;\n        }\n        else if (this.publicKeyType === PUBLIC_KEY_TYPES.COMPRESSED) {\n            this.wifType = WIF_TYPES.WIF_COMPRESSED;\n        }\n        else {\n            throw new BaseError('Invalid public key type', {\n                expected: PUBLIC_KEY_TYPES.getTypes(), got: this.publicKeyType\n            });\n        }\n        this.wifPrefix = options.wifPrefix ?? Bitcoin.NETWORKS.MAINNET.WIF_PREFIX;\n        this.derivation = new ElectrumDerivation({\n            change: options.change, address: options.address\n        });\n        this.bip32HD = new BIP32HD({\n            ecc: Bitcoin.ECC, publicKeyType: this.publicKeyType\n        });\n    }\n    static getName() {\n        return 'Electrum-V2';\n    }\n    fromSeed(seed) {\n        this.bip32HD.fromSeed(seed);\n        this.fromDerivation(this.derivation);\n        return this;\n    }\n    fromDerivation(derivation) {\n        this.derivation = ensureTypeMatch(derivation, ElectrumDerivation, { errorClass: DerivationError });\n        this.drive(derivation.getChange(), derivation.getAddress());\n        return this;\n    }\n    updateDerivation(derivation) {\n        return this.fromDerivation(derivation);\n    }\n    cleanDerivation() {\n        this.derivation.clean();\n        this.fromDerivation(this.derivation);\n        return this;\n    }\n    drive(changeIndex, addressIndex) {\n        const custom = new CustomDerivation();\n        if (this.mode === MODES.SEGWIT) {\n            custom.fromIndex(0, true); // Hardened\n        }\n        custom.fromIndex(changeIndex);\n        custom.fromIndex(addressIndex);\n        this.bip32HD.updateDerivation(custom);\n        return this;\n    }\n    getMode() {\n        return this.mode;\n    }\n    getSeed() {\n        return this.bip32HD.getSeed();\n    }\n    getMasterPrivateKey() {\n        return this.bip32HD.getRootPrivateKey();\n    }\n    getMasterWIF(wifType) {\n        if (this.wifPrefix == null)\n            return null;\n        const type = wifType ?? this.wifType;\n        return privateKeyToWIF(this.getMasterPrivateKey(), type, this.wifPrefix);\n    }\n    getMasterPublicKey(publicKeyType) {\n        return this.bip32HD.getRootPublicKey(publicKeyType ?? this.publicKeyType);\n    }\n    getPrivateKey() {\n        return this.bip32HD.getPrivateKey();\n    }\n    getWIF(wifType) {\n        if (this.wifPrefix == null)\n            return null;\n        const type = wifType ?? this.wifType;\n        return privateKeyToWIF(this.getPrivateKey(), type, this.wifPrefix);\n    }\n    getWIFType() {\n        return this.wifType;\n    }\n    getPublicKey(publicKeyType) {\n        return this.bip32HD.getPublicKey(publicKeyType ?? this.publicKeyType);\n    }\n    getPublicKeyType() {\n        return this.publicKeyType;\n    }\n    getUncompressed() {\n        return this.bip32HD.getUncompressed();\n    }\n    getCompressed() {\n        return this.bip32HD.getCompressed();\n    }\n    getAddress(options = {\n        publicKeyAddressPrefix: Bitcoin.NETWORKS.MAINNET.PUBLIC_KEY_ADDRESS_PREFIX,\n        hrp: Bitcoin.NETWORKS.MAINNET.HRP,\n        witnessVersion: Bitcoin.NETWORKS.MAINNET.WITNESS_VERSIONS.P2WPKH\n    }) {\n        if (this.mode === MODES.STANDARD) {\n            return P2PKHAddress.encode(this.getPublicKey(), {\n                publicKeyAddressPrefix: options.publicKeyAddressPrefix ?? Bitcoin.NETWORKS.MAINNET.PUBLIC_KEY_ADDRESS_PREFIX,\n                publicKeyType: this.publicKeyType\n            });\n        }\n        else if (this.mode === MODES.SEGWIT) {\n            return P2WPKHAddress.encode(this.getPublicKey(), {\n                hrp: options.hrp ?? Bitcoin.NETWORKS.MAINNET.HRP,\n                witnessVersion: options.witnessVersion ?? Bitcoin.NETWORKS.MAINNET.WITNESS_VERSIONS.P2WPKH,\n                publicKeyType: this.publicKeyType\n            });\n        }\n        throw new AddressError(`Invalid ${this.getName()} mode`, {\n            expected: MODES.getTypes(), got: this.mode\n        });\n    }\n}\n//# sourceMappingURL=v2.js.map","// SPDX-License-Identifier: MIT\nimport { Seed } from '../seeds';\nimport { Monero } from '../cryptocurrencies';\nimport { scalarReduce, intDecode } from '../libs/ed25519-utils';\nimport { keccak256 } from '../crypto';\nimport { SLIP10Ed25519MoneroECC, SLIP10Ed25519MoneroPrivateKey, SLIP10Ed25519MoneroPublicKey } from '../eccs';\nimport { getBytes, bytesToString, integerToBytes, bytesToInteger, ensureTypeMatch, concatBytes } from '../utils';\nimport { MoneroDerivation } from '../derivations';\nimport { DerivationError, AddressError, NetworkError, PrivateKeyError, PublicKeyError, SeedError } from '../exceptions';\nimport { Network } from '../cryptocurrencies/cryptocurrency';\nimport { MoneroAddress } from '../addresses';\nimport { HD } from './hd';\nexport class MoneroHD extends HD {\n    network;\n    seed;\n    privateKeyRaw;\n    paymentID;\n    spendPrivateKey;\n    viewPrivateKey;\n    spendPublicKey;\n    viewPublicKey;\n    constructor(options = {\n        minor: 1, major: 0\n    }) {\n        super(options);\n        const network = ensureTypeMatch(options.network, Network, { otherTypes: ['string'] });\n        const networkType = network.isValid ? network.value.getName() : options.network;\n        if (!Monero.NETWORKS.isNetwork(networkType)) {\n            throw new NetworkError(`Wrong Monero network`, {\n                expected: Monero.NETWORKS.getNetworks(), got: options.network\n            });\n        }\n        this.paymentID = options.paymentID;\n        this.network = Monero.NETWORKS.getNetwork(networkType);\n        this.derivation = new MoneroDerivation({\n            minor: options.minor ?? 1,\n            major: options.major ?? 0\n        });\n    }\n    static getName() {\n        return 'Monero';\n    }\n    fromSeed(seed) {\n        try {\n            this.seed = getBytes(seed instanceof Seed ? seed.getSeed() : seed);\n            const spendPrivateKey = this.seed.length === SLIP10Ed25519MoneroPrivateKey.getLength()\n                ? this.seed : keccak256(this.seed);\n            return this.fromSpendPrivateKey(scalarReduce(spendPrivateKey));\n        }\n        catch {\n            throw new SeedError('Invalid seed data');\n        }\n    }\n    fromPrivateKey(privateKey) {\n        try {\n            this.privateKeyRaw = getBytes(privateKey);\n            return this.fromSpendPrivateKey(scalarReduce(keccak256(this.privateKeyRaw)));\n        }\n        catch {\n            throw new PrivateKeyError('Invalid private key data');\n        }\n    }\n    fromDerivation(derivation) {\n        this.derivation = ensureTypeMatch(derivation, MoneroDerivation, { errorClass: DerivationError });\n        return this;\n    }\n    updateDerivation(derivation) {\n        return this.fromDerivation(derivation);\n    }\n    cleanDerivation() {\n        this.derivation.clean();\n        return this.fromDerivation(this.derivation);\n    }\n    fromSpendPrivateKey(spendPrivateKey) {\n        const spendKey = SLIP10Ed25519MoneroPrivateKey.fromBytes(getBytes(spendPrivateKey));\n        const viewKey = SLIP10Ed25519MoneroPrivateKey.fromBytes(scalarReduce(keccak256(spendKey.getRaw())));\n        this.spendPrivateKey = spendKey;\n        this.viewPrivateKey = viewKey;\n        this.spendPublicKey = spendKey.getPublicKey();\n        this.viewPublicKey = viewKey.getPublicKey();\n        return this;\n    }\n    fromWatchOnly(viewPrivateKey, spendPublicKey) {\n        let viewKey;\n        let spendKey;\n        try {\n            viewKey = SLIP10Ed25519MoneroPrivateKey.fromBytes(getBytes(viewPrivateKey));\n        }\n        catch {\n            throw new PrivateKeyError('Invalid view private key data');\n        }\n        try {\n            spendKey = SLIP10Ed25519MoneroPublicKey.fromBytes(getBytes(spendPublicKey));\n        }\n        catch {\n            throw new PublicKeyError('Invalid spend public key data');\n        }\n        this.spendPrivateKey = null;\n        this.viewPrivateKey = viewKey;\n        this.spendPublicKey = spendKey;\n        this.viewPublicKey = viewKey.getPublicKey();\n        return this;\n    }\n    drive(minorIndex, majorIndex) {\n        const max = 2 ** 32 - 1;\n        if (minorIndex < 0 || minorIndex > max) {\n            throw new DerivationError(`Invalid minor index range`, {\n                expected: `0-${max}`, got: minorIndex\n            });\n        }\n        if (majorIndex < 0 || majorIndex > max) {\n            throw new DerivationError(`Invalid major index range`, {\n                expected: `0-${max}`, got: majorIndex\n            });\n        }\n        if (minorIndex === 0 && majorIndex === 0) {\n            return [this.spendPublicKey, this.viewPublicKey];\n        }\n        const m = intDecode(scalarReduce(keccak256(concatBytes(Buffer.from('SubAddr\\x00', 'utf-8'), this.viewPrivateKey.getRaw(), integerToBytes(majorIndex, 4, 'little'), integerToBytes(minorIndex, 4, 'little')))));\n        const subAddressSpendPoint = this.spendPublicKey.getPoint().add(SLIP10Ed25519MoneroECC.GENERATOR.multiply(m));\n        const subAddressViewPoint = subAddressSpendPoint.multiply(bytesToInteger(this.viewPrivateKey.getRaw(), true));\n        return [\n            SLIP10Ed25519MoneroPublicKey.fromPoint(subAddressSpendPoint),\n            SLIP10Ed25519MoneroPublicKey.fromPoint(subAddressViewPoint)\n        ];\n    }\n    getSeed() {\n        return this.seed ? bytesToString(this.seed) : null;\n    }\n    getPrivateKey() {\n        return this.privateKeyRaw ? bytesToString(this.privateKeyRaw) : null;\n    }\n    getSpendPrivateKey() {\n        return this.spendPrivateKey ? bytesToString(this.spendPrivateKey.getRaw()) : null;\n    }\n    getViewPrivateKey() {\n        return bytesToString(this.viewPrivateKey.getRaw());\n    }\n    getSpendPublicKey() {\n        return bytesToString(this.spendPublicKey.getRawCompressed());\n    }\n    getViewPublicKey() {\n        return bytesToString(this.viewPublicKey.getRawCompressed());\n    }\n    getPrimaryAddress() {\n        return MoneroAddress.encode({\n            spendPublicKey: this.spendPublicKey,\n            viewPublicKey: this.viewPublicKey\n        }, {\n            network: this.network.name.toLowerCase(),\n            addressType: Monero.ADDRESS_TYPES.STANDARD\n        });\n    }\n    getIntegratedAddress(paymentID) {\n        if (!paymentID && !this.paymentID)\n            return null;\n        return MoneroAddress.encode({\n            spendPublicKey: this.spendPublicKey,\n            viewPublicKey: this.viewPublicKey\n        }, {\n            network: this.network.name.toLowerCase(),\n            addressType: Monero.ADDRESS_TYPES.INTEGRATED,\n            paymentID: paymentID ?? this.paymentID\n        });\n    }\n    getSubAddress(minor = this.derivation.getMinor(), major = this.derivation.getMajor()) {\n        if (minor === 0 && major === 0) {\n            return this.getPrimaryAddress();\n        }\n        const [spendPublicKey, viewPublicKey] = this.drive(minor, major);\n        return MoneroAddress.encode({\n            spendPublicKey: spendPublicKey,\n            viewPublicKey: viewPublicKey\n        }, {\n            network: this.network.name.toLowerCase(),\n            addressType: Monero.ADDRESS_TYPES.SUB_ADDRESS\n        });\n    }\n    getAddress(options = {\n        addressType: Monero.ADDRESS_TYPES.STANDARD\n    }) {\n        if (options.addressType === Monero.ADDRESS_TYPES.STANDARD) {\n            return this.getPrimaryAddress();\n        }\n        else if (options.addressType === Monero.ADDRESS_TYPES.INTEGRATED) {\n            return this.getIntegratedAddress(options.paymentID);\n        }\n        else if (options.addressType === Monero.ADDRESS_TYPES.SUB_ADDRESS) {\n            return this.getSubAddress(options.minor ?? this.derivation.getMinor(), options.major ?? this.derivation.getMajor());\n        }\n        throw new AddressError(`Invalid ${this.getName()} address type`, {\n            expected: Monero.ADDRESS_TYPES.getAddressTypes(),\n            got: options.addressType\n        });\n    }\n}\n//# sourceMappingURL=monero.js.map","// SPDX-License-Identifier: MIT\nimport { HD } from './hd';\nimport { BaseError } from '../exceptions';\nimport { BIP32HD } from './bip32';\nimport { BIP44HD } from './bip44';\nimport { BIP49HD } from './bip49';\nimport { BIP84HD } from './bip84';\nimport { BIP141HD } from './bip141';\nimport { BIP86HD } from './bip86';\nimport { CardanoHD } from './cardano';\nimport { ElectrumV1HD } from './electrum/v1';\nimport { ElectrumV2HD } from './electrum/v2';\nimport { MoneroHD } from './monero';\nexport class HDS {\n    static dictionary = {\n        [BIP32HD.getName()]: BIP32HD,\n        [BIP44HD.getName()]: BIP44HD,\n        [BIP49HD.getName()]: BIP49HD,\n        [BIP84HD.getName()]: BIP84HD,\n        [BIP86HD.getName()]: BIP86HD,\n        [BIP141HD.getName()]: BIP141HD,\n        [CardanoHD.getName()]: CardanoHD,\n        [ElectrumV1HD.getName()]: ElectrumV1HD,\n        [ElectrumV2HD.getName()]: ElectrumV2HD,\n        [MoneroHD.getName()]: MoneroHD\n    };\n    static getNames() {\n        return Object.keys(this.dictionary);\n    }\n    static getClasses() {\n        return Object.values(this.dictionary);\n    }\n    static getHDClass(name) {\n        if (!this.isHD(name)) {\n            throw new BaseError('Invalid HD name', { expected: this.getNames(), got: name });\n        }\n        return this.dictionary[name];\n    }\n    static isHD(name) {\n        return this.getNames().includes(name);\n    }\n}\nexport { HD, BIP32HD, BIP44HD, BIP49HD, BIP84HD, BIP86HD, BIP141HD, CardanoHD, ElectrumV1HD, ElectrumV2HD, MoneroHD };\n//# sourceMappingURL=index.js.map","// SPDX-License-Identifier: MIT\nimport { ENTROPIES } from './entropies';\nimport { ElectrumV2Mnemonic, MoneroMnemonic, ELECTRUM_V2_MNEMONIC_TYPES, MNEMONICS } from './mnemonics';\nimport { BIP39Seed, CardanoSeed, ElectrumV2Seed, SEEDS } from './seeds';\nimport { HD, HDS } from './hds';\nimport { PUBLIC_KEY_TYPES, SEMANTICS, MODES } from './consts';\nimport { Cryptocurrency, Network } from './cryptocurrencies/cryptocurrency';\nimport { deserialize, isValidKey } from './keys';\nimport { excludeKeys, ensureTypeMatch, toCamelCase } from './utils';\nimport { NetworkError, AddressError, CryptocurrencyError, HDError, XPrivateKeyError, XPublicKeyError, PrivateKeyError, PublicKeyError, EntropyError, WIFError } from './exceptions';\nimport { DERIVATIONS } from './derivations';\nimport { Address, ADDRESSES } from './addresses';\nimport { checkDecode } from './libs/base58';\nimport { Cardano } from './cryptocurrencies';\nexport class HDWallet {\n    cryptocurrency;\n    network;\n    address;\n    hd;\n    addressType;\n    addressPrefix;\n    entropy;\n    language;\n    passphrase;\n    mnemonic;\n    seed;\n    derivation;\n    semantic;\n    mode;\n    mnemonicType;\n    publicKeyType;\n    cardanoType;\n    useDefaultPath = true;\n    checksum = true;\n    stakingPublicKey;\n    paymentID;\n    constructor(cryptocurrency, options = {}) {\n        this.cryptocurrency = ensureTypeMatch(cryptocurrency, Cryptocurrency, { errorClass: CryptocurrencyError });\n        const _hd = options.hd ?? this.cryptocurrency.DEFAULT_HD;\n        const resolvedHD = ensureTypeMatch(_hd, HD, { otherTypes: ['string'] });\n        const hdName = resolvedHD.isValid ? resolvedHD.value.getName() : _hd;\n        if (!this.cryptocurrency.HDS.isHD(hdName)) {\n            throw new HDError(`${this.cryptocurrency.NAME} doesn't support HD type`, {\n                expected: this.cryptocurrency.HDS.getHDS(), got: hdName\n            });\n        }\n        const hdClass = HDS.getHDClass(hdName);\n        const _network = options.network ?? this.cryptocurrency.DEFAULT_NETWORK.getName();\n        const resolvedNetwork = ensureTypeMatch(_network, Network, { otherTypes: ['string'] });\n        const networkName = resolvedNetwork.isValid ? resolvedNetwork.value.getName() : _network;\n        if (!this.cryptocurrency.NETWORKS.isNetwork(networkName)) {\n            throw new NetworkError(`${this.cryptocurrency.NAME} doesn't support network type`, {\n                expected: this.cryptocurrency.NETWORKS.getNetworks(), got: networkName\n            });\n        }\n        this.network = this.cryptocurrency.NETWORKS.getNetwork(networkName);\n        const _address = options.address ?? this.cryptocurrency.DEFAULT_ADDRESS;\n        const resolvedAddress = ensureTypeMatch(_address, Address, { otherTypes: ['string'] });\n        const addressName = resolvedAddress.isValid ? resolvedAddress.value.getName() : _address;\n        if (!this.cryptocurrency.ADDRESSES.isAddress(addressName)) {\n            throw new AddressError(`${this.cryptocurrency.NAME} doesn't support address type`, {\n                expected: this.cryptocurrency.ADDRESSES.getAddresses(), got: addressName\n            });\n        }\n        this.address = ADDRESSES.getAddressClass(addressName);\n        this.language = options.language ?? 'english';\n        this.passphrase = options.passphrase ?? null;\n        this.useDefaultPath = options.useDefaultPath ?? false;\n        this.stakingPublicKey = options.stakingPublicKey;\n        this.paymentID = options.paymentID;\n        if (['BIP32', 'BIP44', 'BIP49', 'BIP84', 'BIP86', 'BIP141', 'Electrum-V1'].includes(hdName)) {\n            this.publicKeyType = options.publicKeyType ?? (hdName === 'Electrum-V1' ? PUBLIC_KEY_TYPES.UNCOMPRESSED : PUBLIC_KEY_TYPES.COMPRESSED);\n        }\n        else if (hdName === 'Cardano') {\n            this.cardanoType = options.cardanoType;\n        }\n        else if (hdName === 'Electrum-V2') {\n            this.mode = options.mode ?? MODES.STANDARD;\n            this.mnemonicType = options.mnemonicType ?? ELECTRUM_V2_MNEMONIC_TYPES.STANDARD;\n            this.publicKeyType = options.publicKeyType ?? PUBLIC_KEY_TYPES.UNCOMPRESSED;\n        }\n        else if (hdName === 'Monero') {\n            this.checksum = options.checksum ?? false;\n        }\n        this.addressType = options.addressType ?? this.cryptocurrency.DEFAULT_ADDRESS_TYPE;\n        if (this.cryptocurrency.NAME === 'Tezos') {\n            this.addressPrefix = options.addressPrefix ?? this.cryptocurrency.DEFAULT_ADDRESS_PREFIX;\n        }\n        if (['BIP32', 'BIP44', 'BIP86', 'Cardano'].includes(hdName)) {\n            this.semantic = options.semantic ?? this.cryptocurrency.DEFAULT_SEMANTIC;\n        }\n        else if (hdName === 'BIP49') {\n            this.semantic = options.semantic ?? SEMANTICS.P2WPKH_IN_P2SH;\n        }\n        else if (['BIP84', 'BIP141'].includes(hdName)) {\n            this.semantic = options.semantic ?? SEMANTICS.P2WPKH;\n        }\n        else {\n            this.semantic = undefined;\n        }\n        this.hd = new hdClass({\n            ecc: this.cryptocurrency.ECC,\n            publicKeyType: this.publicKeyType,\n            semantic: this.semantic,\n            coinType: this.cryptocurrency.COIN_TYPE,\n            wifPrefix: this.network.WIF_PREFIX,\n            cardanoType: this.cardanoType,\n            mode: this.mode,\n            paymentID: this.paymentID,\n            network: this.network\n        });\n    }\n    fromEntropy(entropy) {\n        if (!this.cryptocurrency.ENTROPIES.isEntropy(entropy.getName())) {\n            throw new EntropyError(`${this.cryptocurrency.NAME} cryptocurrency doesn't support Entropy type`, {\n                expected: this.cryptocurrency.ENTROPIES.getEntropies(), got: entropy.getName()\n            });\n        }\n        this.entropy = entropy;\n        let mnemonic;\n        if (this.entropy.getName() === 'Electrum-V2') {\n            mnemonic = ElectrumV2Mnemonic.fromEntropy(this.entropy.getEntropy(), this.language, { mnemonicType: this.mnemonicType });\n        }\n        else if (this.entropy.getName() === 'Monero') {\n            mnemonic = MoneroMnemonic.fromEntropy(this.entropy.getEntropy(), this.language, { checksum: this.checksum });\n        }\n        else {\n            mnemonic = MNEMONICS.getMnemonicClass(this.entropy.getName()).fromEntropy(this.entropy.getEntropy(), this.language);\n        }\n        const mnemonicClass = MNEMONICS.getMnemonicClass(this.entropy.getName());\n        return this.fromMnemonic(this.entropy.getName() === 'Electrum-V2' ?\n            new mnemonicClass(mnemonic, { mnemonicType: this.mnemonicType }) :\n            new mnemonicClass(mnemonic));\n    }\n    fromMnemonic(mnemonic) {\n        if (!this.cryptocurrency.MNEMONICS.isMnemonic(mnemonic.getName())) {\n            throw new EntropyError(`${this.cryptocurrency.NAME} cryptocurrency doesn't support Mnemonic type`, {\n                expected: this.cryptocurrency.MNEMONICS.getMnemonics(), got: mnemonic.getName()\n            });\n        }\n        this.mnemonic = mnemonic;\n        if (this.mnemonic.getName() === 'Electrum-V2') {\n            const entropyBytes = MNEMONICS.getMnemonicClass(this.mnemonic.getName()).decode(this.mnemonic.getMnemonic(), { mnemonicType: this.mnemonicType });\n            const entropyClass = ENTROPIES.getEntropyClass(this.mnemonic.getName());\n            this.entropy = new entropyClass(entropyBytes);\n        }\n        else {\n            const entropyBytes = MNEMONICS.getMnemonicClass(this.mnemonic.getName()).decode(this.mnemonic.getMnemonic());\n            const entropyClass = ENTROPIES.getEntropyClass(this.mnemonic.getName());\n            this.entropy = new entropyClass(entropyBytes);\n        }\n        let seed;\n        if (this.mnemonic.getName() === 'BIP39' && this.hd.getName() === 'Cardano') {\n            seed = CardanoSeed.fromMnemonic(this.mnemonic.getMnemonic(), {\n                passphrase: this.passphrase,\n                cardanoType: this.cardanoType\n            });\n        }\n        else if (this.mnemonic.getName() === BIP39Seed.getName()) {\n            seed = BIP39Seed.fromMnemonic(this.mnemonic.getMnemonic(), {\n                passphrase: this.passphrase\n            });\n        }\n        else if (this.mnemonic.getName() === ElectrumV2Seed.getName()) {\n            seed = ElectrumV2Seed.fromMnemonic(this.mnemonic.getMnemonic(), {\n                passphrase: this.passphrase,\n                mnemonicType: this.mnemonicType\n            });\n        }\n        else {\n            seed = SEEDS.getSeedClass(this.mnemonic.getName()).fromMnemonic(this.mnemonic.getMnemonic());\n        }\n        const seedClass = SEEDS.getSeedClass(this.hd.getName() === 'Cardano' ? 'Cardano' : this.mnemonic.getName());\n        return this.fromSeed(new seedClass(seed));\n    }\n    fromSeed(seed) {\n        if (!this.cryptocurrency.SEEDS.isSeed(seed.getName())) {\n            throw new EntropyError(`${this.cryptocurrency.NAME} cryptocurrency doesn't support Seed type`, {\n                expected: this.cryptocurrency.SEEDS.getSeeds(), got: seed.getName()\n            });\n        }\n        this.seed = seed;\n        if (this.hd.getName() === 'Cardano') {\n            this.hd.fromSeed(seed.getSeed(), this.passphrase);\n        }\n        else {\n            this.hd.fromSeed(seed.getSeed());\n        }\n        this.derivation = this.hd.getDerivation();\n        return this;\n    }\n    fromXPrivateKey(xprivateKey, encoded = true, strict = false) {\n        if (['Electrum-V1', 'Monero'].includes(this.hd.getName())) {\n            throw new XPrivateKeyError(`Support for XPrivate-Key conversion is not implemented in ${this.hd.getName()} HD type`);\n        }\n        if (!isValidKey(xprivateKey, encoded)) {\n            throw new XPrivateKeyError('Invalid XPrivate-Key data');\n        }\n        const [version, , , , ,] = deserialize(xprivateKey, encoded);\n        const decodedLen = encoded ? checkDecode(xprivateKey).length : xprivateKey.length;\n        if (!this.network.XPRIVATE_KEY_VERSIONS.isVersion(version) || ![78, 110].includes(decodedLen)) {\n            throw new XPrivateKeyError(`Invalid XPrivate-Key for ${this.cryptocurrency.NAME}`);\n        }\n        this.hd.fromXPrivateKey(xprivateKey, encoded, strict);\n        return this;\n    }\n    fromXPublicKey(xpublicKey, encoded = true, strict = false) {\n        if (['Electrum-V1', 'Monero'].includes(this.hd.getName())) {\n            throw new XPublicKeyError(`Support for XPublic-Key conversion is not implemented in ${this.hd.getName()} HD type`);\n        }\n        else if (this.hd.getName() === 'Cardano' && this.cardanoType === 'byron-legacy') {\n            throw new XPublicKeyError(`Conversion from XPublic-Key is unavailable in ${this.cardanoType} mode for ${this.hd.getName()} HD type`);\n        }\n        if (!isValidKey(xpublicKey, encoded)) {\n            throw new XPublicKeyError(\"Invalid XPublic-Key data\");\n        }\n        const [version, , , , ,] = deserialize(xpublicKey, encoded);\n        const decodedLen = encoded ? checkDecode(xpublicKey).length : xpublicKey.length;\n        if (!this.network.XPUBLIC_KEY_VERSIONS.isVersion(version) || ![78, 110].includes(decodedLen)) {\n            throw new XPublicKeyError(`Invalid XPublic-Key for ${this.cryptocurrency.NAME}`);\n        }\n        this.hd.fromXPublicKey(xpublicKey, encoded, strict);\n        return this;\n    }\n    fromDerivation(derivation) {\n        this.hd.fromDerivation(derivation);\n        this.derivation = derivation;\n        return this;\n    }\n    updateDerivation(derivation) {\n        this.hd.updateDerivation(derivation);\n        this.derivation = derivation;\n        return this;\n    }\n    cleanDerivation() {\n        this.hd.cleanDerivation();\n        this.derivation?.clean();\n        return this;\n    }\n    fromPrivateKey(privateKey) {\n        this.hd.fromPrivateKey(privateKey);\n        return this;\n    }\n    fromWIF(wif) {\n        if (['Cardano', 'Monero'].includes(this.hd.getName())) {\n            throw new WIFError(`WIF is not supported by ${this.hd.getName()} HD type`);\n        }\n        if (this.network.WIF_PREFIX === null || this.network.WIF_PREFIX === null) {\n            throw new WIFError(`WIF is not supported by ${this.cryptocurrency.NAME} cryptocurrency`);\n        }\n        this.hd.fromWIF(wif);\n        return this;\n    }\n    fromPublicKey(publicKey) {\n        if (this.hd.getName() === 'Monero') {\n            throw new PublicKeyError(`From Public-Key is not supported by ${this.hd.getName()} HD type`);\n        }\n        this.hd.fromPublicKey(publicKey);\n        return this;\n    }\n    fromSpendPrivateKey(spendPrivateKey) {\n        if (this.hd.getName() !== 'Monero') {\n            throw new PrivateKeyError(`From Spend-Private-Key is only supported by ${this.hd.getName()} HD type`);\n        }\n        this.hd.fromSpendPrivateKey(spendPrivateKey);\n        return this;\n    }\n    fromWatchOnly(viewPrivateKey, spendPublicKey) {\n        if (this.hd.getName() !== 'Monero') {\n            throw new PublicKeyError(`From Watch-Only is only supported by ${this.hd.getName()} HD type`);\n        }\n        this.hd.fromWatchOnly(viewPrivateKey, spendPublicKey);\n        return this;\n    }\n    getCryptocurrency() {\n        return this.cryptocurrency.NAME;\n    }\n    getSymbol() {\n        return this.cryptocurrency.SYMBOL;\n    }\n    getCoinType() {\n        return this.cryptocurrency.COIN_TYPE;\n    }\n    getNetwork() {\n        return this.network.getName();\n    }\n    getEntropy() {\n        return this.entropy?.getEntropy() ?? null;\n    }\n    getStrength() {\n        return this.entropy?.getStrength() ?? null;\n    }\n    getMnemonic() {\n        return this.mnemonic?.getMnemonic() ?? null;\n    }\n    getMnemonicType() {\n        return this.mnemonicType ?? null;\n    }\n    getLanguage() {\n        return this.mnemonic?.getLanguage() ?? null;\n    }\n    getWords() {\n        return this.mnemonic?.getWords() ?? null;\n    }\n    getPassphrase() {\n        return this.passphrase;\n    }\n    getSeed() {\n        return this.hd.getSeed();\n    }\n    getECC() {\n        return this.cryptocurrency.ECC.NAME;\n    }\n    getHD() {\n        return this.hd.getName();\n    }\n    getSemantic() {\n        return this.semantic ?? null;\n    }\n    getCardanoType() {\n        return this.hd.getName() === 'Cardano' ? (this.cardanoType ?? null) : null;\n    }\n    getMode() {\n        if (this.hd.getName() !== 'Electrum-V2') {\n            throw new Error(`Get mode is only for Electrum-V2 HD type, not ${this.hd.getName()}`);\n        }\n        return this.hd.getMode();\n    }\n    getPathKey() {\n        return this.hd.getPathKey();\n    }\n    getRootXPrivateKey(semantic, encoded = true) {\n        const currentSemantic = semantic ?? this.semantic;\n        if (['Electrum-V1', 'Monero'].includes(this.hd.getName()) || !currentSemantic) {\n            return null;\n        }\n        return this.hd.getRootXPrivateKey(this.network.XPRIVATE_KEY_VERSIONS.getVersion(currentSemantic), encoded);\n    }\n    getRootXPublicKey(semantic, encoded = true) {\n        const currentSemantic = semantic ?? this.semantic;\n        if (['Electrum-V1', 'Monero'].includes(this.hd.getName()) || !currentSemantic) {\n            return null;\n        }\n        return this.hd.getRootXPublicKey(this.network.XPUBLIC_KEY_VERSIONS.getVersion(currentSemantic), encoded);\n    }\n    getMasterXPrivateKey(semantic, encoded = true) {\n        return this.getRootXPrivateKey(semantic, encoded);\n    }\n    getMasterXPublicKey(semantic, encoded = true) {\n        return this.getRootXPublicKey(semantic, encoded);\n    }\n    getRootPrivateKey() {\n        if (['Electrum-V1', 'Electrum-V2'].includes(this.hd.getName())) {\n            return this.hd.getMasterPrivateKey();\n        }\n        return this.hd.getRootPrivateKey();\n    }\n    getRootWIF(wifType) {\n        if (['Cardano', 'Monero'].includes(this.hd.getName())) {\n            return null;\n        }\n        if (['Electrum-V1', 'Electrum-V2'].includes(this.hd.getName())) {\n            return this.hd.getMasterWIF(wifType);\n        }\n        return this.hd.getRootWIF(wifType);\n    }\n    getRootChainCode() {\n        return this.hd.getRootChainCode();\n    }\n    getRootPublicKey(publicKeyType) {\n        if (['Electrum-V1', 'Electrum-V2'].includes(this.hd.getName())) {\n            return this.hd.getMasterPublicKey(publicKeyType);\n        }\n        return this.hd.getRootPublicKey(publicKeyType);\n    }\n    getMasterPrivateKey() {\n        if (['Electrum-V1', 'Electrum-V2'].includes(this.hd.getName())) {\n            return this.hd.getMasterPrivateKey();\n        }\n        return this.hd.getRootPrivateKey();\n    }\n    getMasterWIF(wifType) {\n        if (['Cardano', 'Monero'].includes(this.hd.getName())) {\n            return null;\n        }\n        if (['Electrum-V1', 'Electrum-V2'].includes(this.hd.getName())) {\n            return this.hd.getMasterWIF(wifType);\n        }\n        return this.hd.getRootWIF(wifType);\n    }\n    getMasterChainCode() {\n        return this.hd.getRootChainCode();\n    }\n    getMasterPublicKey(publicKeyType) {\n        if (['Electrum-V1', 'Electrum-V2'].includes(this.hd.getName())) {\n            return this.hd.getMasterPublicKey(publicKeyType);\n        }\n        return this.hd.getRootPublicKey(publicKeyType);\n    }\n    getXPrivateKey(semantic, encoded = true) {\n        const currentSemantic = semantic ?? this.semantic;\n        if (['Electrum-V1', 'Monero'].includes(this.hd.getName()) || !currentSemantic) {\n            return null;\n        }\n        return this.hd.getXPrivateKey(this.network.XPRIVATE_KEY_VERSIONS.getVersion(currentSemantic), encoded);\n    }\n    getXPublicKey(semantic, encoded = true) {\n        const currentSemantic = semantic ?? this.semantic;\n        if (['Electrum-V1', 'Monero'].includes(this.hd.getName()) || !currentSemantic) {\n            return null;\n        }\n        return this.hd.getXPublicKey(this.network.XPUBLIC_KEY_VERSIONS.getVersion(currentSemantic), encoded);\n    }\n    getPrivateKey() {\n        return this.hd.getPrivateKey();\n    }\n    getSpendPrivateKey() {\n        if (this.hd.getName() !== 'Monero') {\n            throw new Error('Get Spend-Private-Key is only supported by Monero HD type');\n        }\n        return this.hd.getSpendPrivateKey();\n    }\n    getViewPrivateKey() {\n        if (this.hd.getName() !== 'Monero') {\n            throw new Error('Get View-Private-Key is only supported by Monero HD type');\n        }\n        return this.hd.getViewPrivateKey();\n    }\n    getWIF(wifType) {\n        if (['Cardano', 'Monero'].includes(this.hd.getName())) {\n            return null;\n        }\n        return this.hd.getWIF(wifType);\n    }\n    getWIFType() {\n        return this.getWIF() ? this.hd.getWIFType() : null;\n    }\n    getChainCode() {\n        return this.hd.getChainCode();\n    }\n    getPublicKey(publicKeyType) {\n        return this.hd.getPublicKey(publicKeyType);\n    }\n    getPublicKeyType() {\n        return this.hd.getPublicKeyType();\n    }\n    getUncompressed() {\n        return this.hd.getUncompressed();\n    }\n    getCompressed() {\n        return this.hd.getCompressed();\n    }\n    getSpendPublicKey() {\n        if (this.hd.getName() !== 'Monero') {\n            throw new Error('Get Spend-Public-Key is only supported by Monero HD type');\n        }\n        return this.hd.getSpendPublicKey();\n    }\n    getViewPublicKey() {\n        if (this.hd.getName() !== 'Monero') {\n            throw new Error('Get View-Public-Key is only supported by Monero HD type');\n        }\n        return this.hd.getViewPublicKey();\n    }\n    getHash() {\n        return this.hd.getHash();\n    }\n    getDepth() {\n        return this.hd.getDepth();\n    }\n    getFingerprint() {\n        return this.hd.getFingerprint();\n    }\n    getParentFingerprint() {\n        return this.hd.getParentFingerprint();\n    }\n    getPath() {\n        return this.hd.getPath();\n    }\n    getIndex() {\n        return this.hd.getIndex();\n    }\n    getIndexes() {\n        return this.hd.getIndexes();\n    }\n    getStrict() {\n        return ['Electrum-V1', 'Monero'].includes(this.hd.getName()) ? null : this.hd.getStrict();\n    }\n    getPrimaryAddress() {\n        return this.hd.getName() === 'Monero' ? this.hd.getPrimaryAddress() : null;\n    }\n    getIntegratedAddress(paymentID) {\n        return this.hd.getName() === 'Monero' ? this.hd.getIntegratedAddress(paymentID) : null;\n    }\n    getSubAddress(minor, major) {\n        return this.hd.getName() === 'Monero' ? this.hd.getSubAddress(minor, major) : null;\n    }\n    getAddress(options = {}) {\n        const _address = options.address ?? this.address;\n        const resolvedAddress = ensureTypeMatch(_address, Address, { otherTypes: ['string'] });\n        const addressName = resolvedAddress.isValid ? resolvedAddress.value.getName() : _address;\n        if (!this.cryptocurrency.ADDRESSES.isAddress(addressName)) {\n            throw new AddressError(`${this.cryptocurrency.NAME} doesn't support address type`, {\n                expected: this.cryptocurrency.ADDRESSES.getAddresses(), got: addressName\n            });\n        }\n        if (this.network.WITNESS_VERSIONS) {\n            options.witnessVersion = this.network.WITNESS_VERSIONS.getWitnessVersion(addressName);\n        }\n        const hdName = this.hd.getName();\n        if (hdName === 'Cardano') {\n            options.network = options.network ?? this.network.getName();\n            options.addressType = options.addressType ?? this.addressType;\n            options.stakingPublicKey = options.stakingPublicKey ?? this.stakingPublicKey;\n            return this.hd.getAddress(options);\n        }\n        else if (hdName === 'Electrum-V1') {\n            return this.hd.getAddress({\n                publicKeyAddressPrefix: this.network.PUBLIC_KEY_ADDRESS_PREFIX\n            });\n        }\n        else if (hdName === 'Electrum-V2') {\n            return this.hd.getAddress({\n                publicKeyAddressPrefix: this.network.PUBLIC_KEY_ADDRESS_PREFIX,\n                hrp: this.network.HRP,\n                witnessVersion: this.network.WITNESS_VERSIONS?.getWitnessVersion('P2WPKH')\n            });\n        }\n        else if (hdName === 'Monero') {\n            const versionType = options.versionType;\n            if (versionType === 'standard') {\n                return this.getPrimaryAddress();\n            }\n            else if (versionType === 'integrated') {\n                return this.getIntegratedAddress(options.paymentID);\n            }\n            else if (versionType === 'sub-address') {\n                return this.getSubAddress(options.minor, options.major);\n            }\n        }\n        else {\n            const addressClass = ADDRESSES.getAddressClass(addressName);\n            if (['Bitcoin-Cash', 'Bitcoin-Cash-SLP', 'eCash'].includes(this.cryptocurrency.NAME)) {\n                const addressType = options.addressType ?? this.addressType;\n                return addressClass.encode(this.getPublicKey(), {\n                    publicKeyAddressPrefix: this.network[`${addressType?.toUpperCase()}_PUBLIC_KEY_ADDRESS_PREFIX`],\n                    scriptAddressPrefix: this.network[`${addressType?.toUpperCase()}_SCRIPT_ADDRESS_PREFIX`],\n                    networkType: this.network.getName(),\n                    publicKeyType: this.getPublicKeyType(),\n                    hrp: this.network.HRP\n                });\n            }\n            else {\n                return addressClass.encode(this.getPublicKey(), {\n                    publicKeyAddressPrefix: this.network.PUBLIC_KEY_ADDRESS_PREFIX,\n                    scriptAddressPrefix: this.network.SCRIPT_ADDRESS_PREFIX,\n                    networkType: this.network.getName(),\n                    publicKeyType: this.getPublicKeyType(),\n                    hrp: this.network.HRP,\n                    addressType: options.addressType ?? this.addressType,\n                    addressPrefix: options.addressPrefix ?? this.addressPrefix\n                });\n            }\n        }\n        throw new AddressError(`Could not resolve address for ${hdName} HD type`);\n    }\n    getDump(exclude = []) {\n        const derivationDump = {};\n        const hdName = this.hd.getName();\n        if (this.derivation) {\n            let at = {};\n            switch (this.derivation.getName()) {\n                case 'BIP44':\n                case 'BIP49':\n                case 'BIP84':\n                case 'BIP86':\n                    at = {\n                        'path': this.derivation.getPath(),\n                        'indexes': this.derivation.getIndexes(),\n                        'depth': this.getDepth(),\n                        'purpose': this.derivation.getPurpose(),\n                        'coin-type': this.derivation.getCoinType(),\n                        'account': this.derivation.getAccount(),\n                        'change': this.derivation.getChange(),\n                        'address': this.derivation.getAddress()\n                    };\n                    break;\n                case 'CIP1852':\n                    at = {\n                        'path': this.derivation.getPath(),\n                        'indexes': this.derivation.getIndexes(),\n                        'depth': this.getDepth(),\n                        'purpose': this.derivation.getPurpose(),\n                        'coin-type': this.derivation.getCoinType(),\n                        'account': this.derivation.getAccount(),\n                        'role': this.derivation.getRole(),\n                        'address': this.derivation.getAddress()\n                    };\n                    break;\n                case 'Electrum':\n                    at = {\n                        'change': this.derivation.getChange(),\n                        'address': this.derivation.getAddress()\n                    };\n                    break;\n                case 'Monero':\n                    at = {\n                        'minor': this.derivation.getMinor(),\n                        'major': this.derivation.getMajor()\n                    };\n                    break;\n                default:\n                    at = {\n                        'path': this.derivation.getPath(),\n                        'indexes': this.derivation.getIndexes(),\n                        'depth': this.getDepth(),\n                        'index': this.getIndex()\n                    };\n            }\n            derivationDump['at'] = at;\n        }\n        if ([\n            'BIP32', 'BIP44', 'BIP49', 'BIP84', 'BIP86', 'BIP141', 'Cardano'\n        ].includes(hdName)) {\n            Object.assign(derivationDump, {\n                'xprivate-key': this.getXPrivateKey(),\n                'xpublic-key': this.getXPublicKey(),\n                'private-key': this.getPrivateKey(),\n                'wif': this.getWIF(),\n                'chain-code': this.getChainCode(),\n                'public-key': this.getPublicKey(),\n                'uncompressed': this.getUncompressed(),\n                'compressed': this.getCompressed(),\n                'fingerprint': this.getFingerprint(),\n                'parent-fingerprint': this.getParentFingerprint(),\n                'hash': this.getHash()\n            });\n            if (hdName === 'Cardano') {\n                delete derivationDump.wif;\n                delete derivationDump.uncompressed;\n                delete derivationDump.compressed;\n            }\n            if (this.cryptocurrency.ADDRESSES.length() > 1 || this.cryptocurrency.NAME === 'Tezos') {\n                const addresses = {};\n                if (this.cryptocurrency.NAME === 'Avalanche' && this.cryptocurrency.ADDRESS_TYPES) {\n                    addresses[toCamelCase(this.cryptocurrency.ADDRESS_TYPES.C_CHAIN)] = this.getAddress({ address: 'Ethereum' });\n                    addresses[toCamelCase(this.cryptocurrency.ADDRESS_TYPES.P_CHAIN)] = this.getAddress({\n                        address: 'Avalanche', addressType: this.cryptocurrency.ADDRESS_TYPES.P_CHAIN\n                    });\n                    addresses[toCamelCase(this.cryptocurrency.ADDRESS_TYPES.X_CHAIN)] = this.getAddress({\n                        address: 'Avalanche', addressType: this.cryptocurrency.ADDRESS_TYPES.X_CHAIN\n                    });\n                }\n                else if (this.cryptocurrency.NAME === 'Binance' && this.cryptocurrency.ADDRESS_TYPES) {\n                    addresses[toCamelCase(this.cryptocurrency.ADDRESS_TYPES.CHAIN)] = this.getAddress({ address: 'Cosmos' });\n                    addresses[toCamelCase(this.cryptocurrency.ADDRESS_TYPES.SMART_CHAIN)] = this.getAddress({ address: 'Ethereum' });\n                }\n                else if ((this.cryptocurrency.NAME === 'Bitcoin-Cash' ||\n                    this.cryptocurrency.NAME === 'Bitcoin-Cash-SLP' ||\n                    this.cryptocurrency.NAME === 'eCash') &&\n                    this.cryptocurrency.ADDRESS_TYPES) {\n                    for (const addressType of this.cryptocurrency.ADDRESS_TYPES.getAddressTypes()) {\n                        for (const address of this.cryptocurrency.ADDRESSES.getAddresses()) {\n                            addresses[`${addressType}${address.split('-').join('')}`] = ADDRESSES.getAddressClass(address).encode(this.getPublicKey(), {\n                                publicKeyAddressPrefix: this.network[`${addressType?.toUpperCase()}_PUBLIC_KEY_ADDRESS_PREFIX`],\n                                scriptAddressPrefix: this.network[`${addressType?.toUpperCase()}_SCRIPT_ADDRESS_PREFIX`],\n                                publicKeyType: this.getPublicKeyType(),\n                                hrp: this.network.HRP,\n                            });\n                        }\n                    }\n                }\n                else if (this.cryptocurrency.NAME === 'Tezos' && this.cryptocurrency.ADDRESS_PREFIXES) {\n                    addresses[this.cryptocurrency.ADDRESS_PREFIXES.TZ1] = this.getAddress({\n                        addressPrefix: this.cryptocurrency.ADDRESS_PREFIXES.TZ1\n                    });\n                    addresses[this.cryptocurrency.ADDRESS_PREFIXES.TZ2] = this.getAddress({\n                        addressPrefix: this.cryptocurrency.ADDRESS_PREFIXES.TZ2\n                    });\n                    addresses[this.cryptocurrency.ADDRESS_PREFIXES.TZ3] = this.getAddress({\n                        addressPrefix: this.cryptocurrency.ADDRESS_PREFIXES.TZ3\n                    });\n                }\n                else if (this.hd.getName() === 'BIP44') {\n                    derivationDump['address'] = this.getAddress({ address: 'P2PKH' });\n                }\n                else if (this.hd.getName() === 'BIP49') {\n                    derivationDump['address'] = this.getAddress({ address: 'P2WPKH-In-P2SH' });\n                }\n                else if (this.hd.getName() === 'BIP84') {\n                    derivationDump['address'] = this.getAddress({ address: 'P2WPKH' });\n                }\n                else if (this.hd.getName() === 'BIP86') {\n                    derivationDump['address'] = this.getAddress({ address: 'P2TR' });\n                }\n                else if (this.hd.getName() === 'BIP141') {\n                    if (this.semantic === SEMANTICS.P2WPKH) {\n                        derivationDump['address'] = this.getAddress({ address: 'P2WPKH' });\n                    }\n                    else if (this.semantic === SEMANTICS.P2WPKH_IN_P2SH) {\n                        derivationDump['address'] = this.getAddress({ address: 'P2WPKH-In-P2SH' });\n                    }\n                    else if (this.semantic === SEMANTICS.P2WSH) {\n                        derivationDump['address'] = this.getAddress({ address: 'P2WSH' });\n                    }\n                    else if (this.semantic === SEMANTICS.P2WSH_IN_P2SH) {\n                        derivationDump['address'] = this.getAddress({ address: 'P2WSH-In-P2SH' });\n                    }\n                }\n                else {\n                    for (const address of this.cryptocurrency.ADDRESSES.getAddresses()) {\n                        addresses[address.toLowerCase()] = this.getAddress({ address: address });\n                    }\n                }\n                if (Object.keys(addresses).length !== 0) {\n                    derivationDump['addresses'] = addresses;\n                }\n            }\n            else {\n                if (this.cryptocurrency.NAME === 'Cardano' && [\n                    Cardano.TYPES.SHELLEY_ICARUS, Cardano.TYPES.SHELLEY_LEDGER\n                ].includes(this.cardanoType)) {\n                    derivationDump['address'] = this.getAddress({\n                        network: this.network.getName(),\n                        addressType: this.addressType,\n                        stakingPublicKey: this.stakingPublicKey\n                    });\n                }\n                else {\n                    derivationDump['address'] = this.getAddress();\n                }\n            }\n        }\n        else if (['Electrum-V1', 'Electrum-V2'].includes(hdName)) {\n            Object.assign(derivationDump, {\n                'private-key': this.getPrivateKey(),\n                'wif': this.getWIF(),\n                'public-key': this.getPublicKey(),\n                'uncompressed': this.getUncompressed(),\n                'compressed': this.getCompressed(),\n                'address': this.getAddress()\n            });\n        }\n        else if (hdName === 'Monero') {\n            derivationDump['sub-address'] = this.getSubAddress();\n        }\n        if (exclude.includes('at')) {\n            delete derivationDump['at'];\n        }\n        if (exclude.includes('root')) {\n            return excludeKeys(derivationDump, exclude);\n        }\n        const root = {\n            'cryptocurrency': this.getCryptocurrency(),\n            'symbol': this.getSymbol(),\n            'network': this.getNetwork(),\n            'coin-type': this.getCoinType(),\n            'entropy': this.getEntropy(),\n            'strength': this.getStrength(),\n            'mnemonic': this.getMnemonic(),\n            'passphrase': this.getPassphrase(),\n            'language': this.getLanguage(),\n            'seed': this.getSeed(),\n            'ecc': this.getECC(),\n            'hd': this.getHD()\n        };\n        if (['Electrum-V1', 'Electrum-V2', 'Monero'].includes(hdName)) {\n            delete root['passphrase'];\n        }\n        if (['BIP32', 'BIP44', 'BIP49', 'BIP84', 'BIP86', 'BIP141', 'Cardano'].includes(hdName)) {\n            if (hdName === 'Cardano') {\n                root['cardano-type'] = this.getCardanoType();\n            }\n            Object.assign(root, {\n                'semantic': this.getSemantic(),\n                'root-xprivate-key': this.getRootXPrivateKey(),\n                'root-xpublic-key': this.getRootXPublicKey(),\n                'root-private-key': this.getRootPrivateKey(),\n                'root-wif': this.getRootWIF(),\n                'root-chain-code': this.getRootChainCode(),\n                'root-public-key': this.getRootPublicKey(),\n                'path-key': this.getPathKey(),\n                'strict': this.getStrict(),\n                'public-key-type': this.getPublicKeyType(),\n                'wif-type': this.getWIFType()\n            });\n            if (hdName === 'Cardano') {\n                delete root['root-wif'];\n                delete root['root-type'];\n                if (this.cardanoType !== Cardano.TYPES.BYRON_LEGACY) {\n                    delete root['path-key'];\n                }\n            }\n            else {\n                delete root['path-key'];\n            }\n        }\n        else if (hdName === 'Electrum-V1' || hdName === 'Electrum-V2') {\n            if (hdName === 'Electrum-V2') {\n                root['mode'] = this.getMode();\n                root['mnemonic-type'] = this.getMnemonicType();\n            }\n            Object.assign(root, {\n                'master-private-key': this.getMasterPrivateKey(),\n                'master-wif': this.getMasterWIF(),\n                'master-public-key': this.getMasterPublicKey(),\n                'public-key-type': this.getPublicKeyType(),\n                'wif-type': this.getWIFType()\n            });\n        }\n        else if (hdName === 'Monero') {\n            Object.assign(root, {\n                'private-key': this.getPrivateKey(),\n                'spend-private-key': this.getSpendPrivateKey(),\n                'view-private-key': this.getViewPrivateKey(),\n                'spend-public-key': this.getSpendPublicKey(),\n                'view-public-key': this.getViewPublicKey(),\n                'primary-address': this.getPrimaryAddress()\n            });\n            if (this.paymentID) {\n                root['integrated-address'] = this.getIntegratedAddress(this.paymentID);\n            }\n        }\n        if (!exclude.includes('derivation')) {\n            root['derivation'] = derivationDump;\n        }\n        return excludeKeys(root, exclude);\n    }\n    getDumps(exclude = []) {\n        if (!this.derivation)\n            return null;\n        const derivationsList = [];\n        const isRangeTuple = (tuple) => {\n            return tuple.length === 3;\n        };\n        const drive = (...args) => {\n            const driveHelper = (derivations, current = []) => {\n                if (derivations.length === 0) {\n                    const derivationName = this.derivation.getName();\n                    const derivationClass = DERIVATIONS.getDerivationClass(derivationName);\n                    let derivation;\n                    if (['BIP44', 'BIP49', 'BIP84', 'BIP86'].includes(derivationName)) {\n                        derivation = new derivationClass({\n                            coinType: current[1][0],\n                            account: current[2][0],\n                            change: current[3][0],\n                            address: current[4][0]\n                        });\n                    }\n                    else if (derivationName === 'CIP1852') {\n                        derivation = new derivationClass({\n                            coinType: current[1][0],\n                            account: current[2][0],\n                            role: current[3][0],\n                            address: current[4][0]\n                        });\n                    }\n                    else if (derivationName === 'Electrum') {\n                        derivation = new derivationClass({\n                            change: current[0][0],\n                            address: current[1][0]\n                        });\n                    }\n                    else if (derivationName === 'Monero') {\n                        derivation = new derivationClass({\n                            minor: current[0][0],\n                            major: current[1][0]\n                        });\n                    }\n                    else if (derivationName === 'HDW') {\n                        derivation = new derivationClass({\n                            account: current[0][0],\n                            ecc: current[1][0],\n                            address: current[2][0]\n                        });\n                    }\n                    else {\n                        const path = 'm/' + current.map(([v, h]) => `${v}${h ? \"'\" : ''}`).join('/');\n                        derivation = new derivationClass({ path });\n                    }\n                    this.updateDerivation(derivation);\n                    derivationsList.push(this.getDump(['root', ...exclude]));\n                    return [derivation.getPath()];\n                }\n                const [head, ...rest] = derivations;\n                const result = [];\n                if (isRangeTuple(head)) {\n                    const [start, end, hardened] = head;\n                    for (let i = start; i <= end; i++) {\n                        result.push(...driveHelper(rest, [...current, [i, hardened]]));\n                    }\n                }\n                else {\n                    result.push(...driveHelper(rest, [...current, head]));\n                }\n                return result;\n            };\n            return driveHelper(args);\n        };\n        drive(...this.derivation.getDerivations());\n        if (exclude.includes('root')) {\n            return derivationsList;\n        }\n        const rootDump = this.getDump(['derivation', ...exclude]);\n        if (!exclude.includes('derivations')) {\n            rootDump['derivations'] = derivationsList;\n        }\n        return excludeKeys(rootDump, exclude);\n    }\n}\n//# sourceMappingURL=hdwallet.js.map","// SPDX-License-Identifier: MIT\nimport * as info from './info';\nimport * as consts from './consts';\nimport * as crypto from './crypto';\nimport * as utils from './utils';\nimport * as cryptocurrencies from './cryptocurrencies';\nimport * as entropies from './entropies';\nimport * as mnemonics from './mnemonics';\nimport * as seeds from './seeds';\nimport * as eccs from './eccs';\nimport * as derivations from './derivations';\nimport * as hds from './hds';\nimport * as addresses from './addresses';\nimport { HDWallet } from './hdwallet';\nconst hdwallet = {\n    info,\n    consts,\n    crypto,\n    utils,\n    cryptocurrencies,\n    entropies,\n    mnemonics,\n    seeds,\n    eccs,\n    derivations,\n    hds,\n    addresses,\n    HDWallet\n};\nexport { hdwallet, info, consts, crypto, utils, cryptocurrencies, entropies, mnemonics, seeds, eccs, derivations, hds, addresses, HDWallet };\n//# sourceMappingURL=index.js.map"],"names":["TypeError","crypto","bytesToHex","hexToBytes","concatBytes","randomBytes","nobleRandomBytes","convertBits","x","E","u64.split","u64.rotrSH","u64.shrSH","u64.rotrSL","u64.shrSL","u64.rotrBH","u64.rotrBL","u64.add4L","u64.add4H","u64.add5L","u64.add5H","u64.add","u64.add3L","u64.add3H","sha256","sha512","sha512_256","_0n","_1n","_2n","sha3_256","u64.rotr32H","u64.rotr32L","u64.fromBig","blake2b","K","ripemd160","nobleSha256","nobleSha512","nobleBlake2b","nobleSha512_256","nobleKeccak256","nobleSha3_256","nobleRipemd160","crc32Hex","crc16xmodemHex","bytesToHex_","abytes_","hexToBytes_","isBytes_","concatBytes_","_3n","_4n","_5n","_8n","_SLIP10Ed25519Point","_SLIP10Ed25519PublicKey","_SLIP10Ed25519PrivateKey","require$$0","require","nacl.sign","_SLIP10Ed25519Blake2bPoint","_SLIP10Ed25519Blake2bPublicKey","_SLIP10Ed25519Blake2bPrivateKey","L","_SLIP10Ed25519MoneroPoint","_SLIP10Ed25519MoneroPublicKey","_SLIP10Ed25519MoneroPrivateKey","p256","p256n","_SLIP10Nist256p1Point","_SLIP10Nist256p1PublicKey","_SLIP10Nist256p1PrivateKey","_SLIP10Secp256k1Point","_SLIP10Secp256k1PublicKey","_SLIP10Secp256k1PrivateKey","_KholawEd25519Point","_KholawEd25519PublicKey","_KholawEd25519PrivateKey","_KholawEd25519ECC","_SLIP10Ed25519ECC","_SLIP10Ed25519Blake2bECC","_SLIP10Ed25519MoneroECC","_SLIP10Nist256p1ECC","_SLIP10Secp256k1ECC","Mainnet","Testnet","Regtest","WORDLIST","ALGORAND_ENGLISH_WORDLIST","BIP39_CHINESE_SIMPLIFIED_WORDLIST","BIP39_CHINESE_TRADITIONAL_WORDLIST","BIP39_CZECH_WORDLIST","BIP39_ENGLISH_WORDLIST","BIP39_FRENCH_WORDLIST","BIP39_ITALIAN_WORDLIST","BIP39_JAPANESE_WORDLIST","BIP39_KOREAN_WORDLIST","BIP39_PORTUGUESE_WORDLIST","BIP39_RUSSIAN_WORDLIST","BIP39_SPANISH_WORDLIST","BIP39_TURKISH_WORDLIST","ELECTRUM_V1_ENGLISH_WORDLIST","ELECTRUM_V2_CHINESE_SIMPLIFIED_WORDLIST","ELECTRUM_V2_ENGLISH_WORDLIST","ELECTRUM_V2_PORTUGUESE_WORDLIST","ELECTRUM_V2_SPANISH_WORDLIST","MONERO_CHINESE_SIMPLIFIED_WORDLIST","MONERO_DUTCH_WORDLIST","MONERO_ENGLISH_WORDLIST","MONERO_FRENCH_WORDLIST","MONERO_GERMAN_WORDLIST","MONERO_ITALIAN_WORDLIST","MONERO_JAPANESE_WORDLIST","MONERO_PORTUGUESE_WORDLIST","MONERO_RUSSIAN_WORDLIST","MONERO_SPANISH_WORDLIST","f","o","T","N","S","i","s","d","g","c","l","R","b","A","y","p","h","U","$","q","M","k","O","_","H","a","m","W","D","C","e","n","u","t","w","I","j","B","P","V","v","F","encode","decode","pad","CHARSET","CHARSET_REV","bech32Polymod","bech32HrpExpand","bech32CreateChecksum","bech32VerifyChecksum","baseBech32Encode","baseBech32Decode","base32.Encoder","base32.Decoder","Tag","base58Encode","base58Decode","base32Decode"],"mappings":"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AAK,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAACD,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAACA,GAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAACA,GAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACA,GAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,OAAOA,GAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAACA,GAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAACA,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAACA,GAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,OAAM,CAACA,GAAC,CAAC,CAAC,CAAC,CAAC,UAAU,IAAI,CAAC;;ACApm3E;AACA;AACA;AACA;AAEA;AACO,SAAS,YAAY,CAAC,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,IAAI,EAAE;AAC5D,IAAI,IAAI,OAAO,IAAI,CAAC,YAAY,KAAK,UAAU;AAC/C,QAAQ,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;AAC1D,IAAI,MAAM,IAAI,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;AAC5B,IAAI,MAAM,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;AACxC,IAAI,MAAM,EAAE,GAAG,MAAM,CAAC,CAAC,KAAK,IAAI,IAAI,IAAI,QAAQ,CAAC,CAAC;AAClD,IAAI,MAAM,EAAE,GAAG,MAAM,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAC;AACxC,IAAI,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;AAC3B,IAAI,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;AAC3B,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;AAC7C,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;AAC7C,CAAC;AACD;AACO,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;AAC7B,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAC9B,CAAC;AACD;AACO,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;AAC7B,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AACvC,CAAC;AACD;AACA;AACA;AACA;AACO,MAAM,MAAM,SAAS,IAAI,CAAC;AACjC,IAAI,WAAW,CAAC,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE;AACtD,QAAQ,KAAK,EAAE,CAAC;AAChB,QAAQ,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AAC9B,QAAQ,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AACxB,QAAQ,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;AACrB,QAAQ,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AAC/B,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACjC,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AACnC,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AACnC,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACzB,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,UAAU,CAAC,QAAQ,CAAC,CAAC;AAC/C,QAAQ,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC5C,KAAK;AACL,IAAI,MAAM,CAAC,IAAI,EAAE;AACjB,QAAQ,OAAO,CAAC,IAAI,CAAC,CAAC;AACtB,QAAQ,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AAC7B,QAAQ,MAAM,CAAC,IAAI,CAAC,CAAC;AACrB,QAAQ,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;AAChD,QAAQ,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;AAChC,QAAQ,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG;AACtC,YAAY,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC;AAClE;AACA,YAAY,IAAI,IAAI,KAAK,QAAQ,EAAE;AACnC,gBAAgB,MAAM,QAAQ,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;AAClD,gBAAgB,OAAO,QAAQ,IAAI,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,QAAQ;AAC7D,oBAAoB,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;AAChD,gBAAgB,SAAS;AACzB,aAAa;AACb,YAAY,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;AACjE,YAAY,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC;AAC7B,YAAY,GAAG,IAAI,IAAI,CAAC;AACxB,YAAY,IAAI,IAAI,CAAC,GAAG,KAAK,QAAQ,EAAE;AACvC,gBAAgB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;AACtC,gBAAgB,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;AAC7B,aAAa;AACb,SAAS;AACT,QAAQ,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC;AACnC,QAAQ,IAAI,CAAC,UAAU,EAAE,CAAC;AAC1B,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL,IAAI,UAAU,CAAC,GAAG,EAAE;AACpB,QAAQ,OAAO,CAAC,IAAI,CAAC,CAAC;AACtB,QAAQ,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AAC3B,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC7B;AACA;AACA;AACA,QAAQ,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;AACtD,QAAQ,IAAI,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;AAC3B;AACA,QAAQ,MAAM,CAAC,GAAG,EAAE,CAAC,GAAG,UAAU,CAAC;AACnC,QAAQ,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;AACzC;AACA;AACA,QAAQ,IAAI,IAAI,CAAC,SAAS,GAAG,QAAQ,GAAG,GAAG,EAAE;AAC7C,YAAY,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;AAClC,YAAY,GAAG,GAAG,CAAC,CAAC;AACpB,SAAS;AACT;AACA,QAAQ,KAAK,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE;AAC3C,YAAY,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAC1B;AACA;AACA;AACA,QAAQ,YAAY,CAAC,IAAI,EAAE,QAAQ,GAAG,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;AACxE,QAAQ,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;AAC9B,QAAQ,MAAM,KAAK,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;AACtC,QAAQ,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC;AACnC;AACA,QAAQ,IAAI,GAAG,GAAG,CAAC;AACnB,YAAY,MAAM,IAAI,KAAK,CAAC,6CAA6C,CAAC,CAAC;AAC3E,QAAQ,MAAM,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC;AAC/B,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AACjC,QAAQ,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM;AACjC,YAAY,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;AAClE,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE;AACvC,YAAY,KAAK,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;AACnD,KAAK;AACL,IAAI,MAAM,GAAG;AACb,QAAQ,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC;AAC3C,QAAQ,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AAChC,QAAQ,MAAM,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;AAC/C,QAAQ,IAAI,CAAC,OAAO,EAAE,CAAC;AACvB,QAAQ,OAAO,GAAG,CAAC;AACnB,KAAK;AACL,IAAI,UAAU,CAAC,EAAE,EAAE;AACnB,QAAQ,EAAE,KAAK,EAAE,GAAG,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;AAC5C,QAAQ,EAAE,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;AAC9B,QAAQ,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;AAC5E,QAAQ,EAAE,CAAC,SAAS,GAAG,SAAS,CAAC;AACjC,QAAQ,EAAE,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC/B,QAAQ,EAAE,CAAC,MAAM,GAAG,MAAM,CAAC;AAC3B,QAAQ,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC;AACrB,QAAQ,IAAI,MAAM,GAAG,QAAQ;AAC7B,YAAY,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAClC,QAAQ,OAAO,EAAE,CAAC;AAClB,KAAK;AACL,IAAI,KAAK,GAAG;AACZ,QAAQ,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC;AACjC,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACO,MAAM,SAAS,mBAAmB,WAAW,CAAC,IAAI,CAAC;AAC1D,IAAI,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAClG,CAAC,CAAC,CAAC;AAKH;AACO,MAAM,SAAS,mBAAmB,WAAW,CAAC,IAAI,CAAC;AAC1D,IAAI,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAClG,IAAI,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAClG,CAAC,CAAC,CAAC;AACH;AACO,MAAM,SAAS,mBAAmB,WAAW,CAAC,IAAI,CAAC;AAC1D,IAAI,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAClG,IAAI,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAClG,CAAC,CAAC;;ACzJF;AACA;AACA;AACA;AACA;AACA,MAAM,UAAU,mBAAmB,MAAM,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;AACvD,MAAM,IAAI,mBAAmB,MAAM,CAAC,EAAE,CAAC,CAAC;AACxC,SAAS,OAAO,CAAC,CAAC,EAAE,EAAE,GAAG,KAAK,EAAE;AAChC,IAAI,IAAI,EAAE;AACV,QAAQ,OAAO,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,UAAU,CAAC,EAAE,CAAC;AAClF,IAAI,OAAO,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC;AACtF,CAAC;AACD,SAAS,KAAK,CAAC,GAAG,EAAE,EAAE,GAAG,KAAK,EAAE;AAChC,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;AAC3B,IAAI,IAAI,EAAE,GAAG,IAAI,WAAW,CAAC,GAAG,CAAC,CAAC;AAClC,IAAI,IAAI,EAAE,GAAG,IAAI,WAAW,CAAC,GAAG,CAAC,CAAC;AAClC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AAClC,QAAQ,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAC7C,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAChC,KAAK;AACL,IAAI,OAAO,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AACpB,CAAC;AAED;AACA,MAAM,KAAK,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACpC,MAAM,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;AACvD;AACA,MAAM,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AACxD,MAAM,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;AACxD;AACA,MAAM,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AAC/D,MAAM,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AAC/D;AACA,MAAM,OAAO,GAAG,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;AAC7B,MAAM,OAAO,GAAG,CAAC,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;AAC7B;AACA,MAAM,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AACxD,MAAM,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AACxD;AACA,MAAM,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AAC/D,MAAM,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AAC/D;AACA;AACA,SAAS,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AAC7B,IAAI,MAAM,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;AACtC,IAAI,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC;AAChE,CAAC;AACD;AACA,MAAM,KAAK,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;AACnE,MAAM,KAAK,GAAG,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;AAC9E,MAAM,KAAK,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;AACpF,MAAM,KAAK,GAAG,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;AACvF,MAAM,KAAK,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;AACrG,MAAM,KAAK,GAAG,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC;;ACrD/F;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA,MAAM,QAAQ,mBAAmB,WAAW,CAAC,IAAI,CAAC;AAClD,IAAI,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAClG,IAAI,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAClG,IAAI,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAClG,IAAI,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAClG,IAAI,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAClG,IAAI,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAClG,IAAI,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAClG,IAAI,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAClG,CAAC,CAAC,CAAC;AACH;AACA,MAAM,QAAQ,mBAAmB,IAAI,WAAW,CAAC,EAAE,CAAC,CAAC;AAC9C,MAAM,MAAM,SAAS,MAAM,CAAC;AACnC,IAAI,WAAW,CAAC,SAAS,GAAG,EAAE,EAAE;AAChC,QAAQ,KAAK,CAAC,EAAE,EAAE,SAAS,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;AACvC;AACA;AACA,QAAQ,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAClC,QAAQ,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAClC,QAAQ,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAClC,QAAQ,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAClC,QAAQ,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAClC,QAAQ,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAClC,QAAQ,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAClC,QAAQ,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAClC,KAAK;AACL,IAAI,GAAG,GAAG;AACV,QAAQ,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC;AAChD,QAAQ,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACxC,KAAK;AACL;AACA,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;AAChC,QAAQ,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACvB,QAAQ,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACvB,QAAQ,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACvB,QAAQ,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACvB,QAAQ,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACvB,QAAQ,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACvB,QAAQ,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACvB,QAAQ,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACvB,KAAK;AACL,IAAI,OAAO,CAAC,IAAI,EAAE,MAAM,EAAE;AAC1B;AACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,MAAM,IAAI,CAAC;AAChD,YAAY,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AACxD,QAAQ,KAAK,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;AACtC,YAAY,MAAM,GAAG,GAAG,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;AACzC,YAAY,MAAM,EAAE,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACvC,YAAY,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC;AAClE,YAAY,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;AACjE,YAAY,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;AAC7E,SAAS;AACT;AACA,QAAQ,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC;AAC9C,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;AACrC,YAAY,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAClE,YAAY,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AACnF,YAAY,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAClE,YAAY,MAAM,EAAE,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;AACnD,YAAY,CAAC,GAAG,CAAC,CAAC;AAClB,YAAY,CAAC,GAAG,CAAC,CAAC;AAClB,YAAY,CAAC,GAAG,CAAC,CAAC;AAClB,YAAY,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AAC7B,YAAY,CAAC,GAAG,CAAC,CAAC;AAClB,YAAY,CAAC,GAAG,CAAC,CAAC;AAClB,YAAY,CAAC,GAAG,CAAC,CAAC;AAClB,YAAY,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;AAC9B,SAAS;AACT;AACA,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;AAC7B,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;AAC7B,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;AAC7B,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;AAC7B,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;AAC7B,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;AAC7B,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;AAC7B,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;AAC7B,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACzC,KAAK;AACL,IAAI,UAAU,GAAG;AACjB,QAAQ,KAAK,CAAC,QAAQ,CAAC,CAAC;AACxB,KAAK;AACL,IAAI,OAAO,GAAG;AACd,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACzC,QAAQ,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC3B,KAAK;AACL,CAAC;AAcD;AACA;AACA;AACA;AACA,MAAM,IAAI,mBAAmB,CAAC,MAAMC,KAAS,CAAC;AAC9C,IAAI,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB;AAC1F,IAAI,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB;AAC1F,IAAI,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB;AAC1F,IAAI,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB;AAC1F,IAAI,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB;AAC1F,IAAI,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB;AAC1F,IAAI,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB;AAC1F,IAAI,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB;AAC1F,IAAI,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB;AAC1F,IAAI,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB;AAC1F,IAAI,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB;AAC1F,IAAI,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB;AAC1F,IAAI,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB;AAC1F,IAAI,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB;AAC1F,IAAI,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB;AAC1F,IAAI,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB;AAC1F,IAAI,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB;AAC1F,IAAI,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB;AAC1F,IAAI,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB;AAC1F,IAAI,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB;AAC1F,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;AAC1B,MAAM,SAAS,mBAAmB,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC;AACpD,MAAM,SAAS,mBAAmB,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC;AACpD;AACA,MAAM,UAAU,mBAAmB,IAAI,WAAW,CAAC,EAAE,CAAC,CAAC;AACvD,MAAM,UAAU,mBAAmB,IAAI,WAAW,CAAC,EAAE,CAAC,CAAC;AAChD,MAAM,MAAM,SAAS,MAAM,CAAC;AACnC,IAAI,WAAW,CAAC,SAAS,GAAG,EAAE,EAAE;AAChC,QAAQ,KAAK,CAAC,GAAG,EAAE,SAAS,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;AACzC;AACA;AACA;AACA,QAAQ,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACnC,QAAQ,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACnC,QAAQ,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACnC,QAAQ,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACnC,QAAQ,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACnC,QAAQ,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACnC,QAAQ,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACnC,QAAQ,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACnC,QAAQ,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACnC,QAAQ,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACnC,QAAQ,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AACpC,QAAQ,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AACpC,QAAQ,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AACpC,QAAQ,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AACpC,QAAQ,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AACpC,QAAQ,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AACpC,KAAK;AACL;AACA,IAAI,GAAG,GAAG;AACV,QAAQ,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC;AACxF,QAAQ,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AAChF,KAAK;AACL;AACA,IAAI,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AACxE,QAAQ,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACzB,QAAQ,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACzB,QAAQ,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACzB,QAAQ,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACzB,QAAQ,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACzB,QAAQ,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACzB,QAAQ,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACzB,QAAQ,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACzB,QAAQ,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACzB,QAAQ,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACzB,QAAQ,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACzB,QAAQ,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACzB,QAAQ,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACzB,QAAQ,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACzB,QAAQ,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACzB,QAAQ,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACzB,KAAK;AACL,IAAI,OAAO,CAAC,IAAI,EAAE,MAAM,EAAE;AAC1B;AACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,MAAM,IAAI,CAAC,EAAE;AAClD,YAAY,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AACnD,YAAY,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,MAAM,IAAI,CAAC,EAAE,CAAC;AAC1D,SAAS;AACT,QAAQ,KAAK,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;AACtC;AACA,YAAY,MAAM,IAAI,GAAG,UAAU,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;AAChD,YAAY,MAAM,IAAI,GAAG,UAAU,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;AAChD,YAAY,MAAM,GAAG,GAAGC,MAAU,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,GAAGA,MAAU,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,GAAGC,KAAS,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AACzG,YAAY,MAAM,GAAG,GAAGC,MAAU,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,GAAGA,MAAU,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,GAAGC,KAAS,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AACzG;AACA,YAAY,MAAM,GAAG,GAAG,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AAC9C,YAAY,MAAM,GAAG,GAAG,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AAC9C,YAAY,MAAM,GAAG,GAAGH,MAAU,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,GAAGI,MAAU,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,GAAGH,KAAS,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACrG,YAAY,MAAM,GAAG,GAAGC,MAAU,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,GAAGG,MAAU,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,GAAGF,KAAS,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACrG;AACA,YAAY,MAAM,IAAI,GAAGG,KAAS,CAAC,GAAG,EAAE,GAAG,EAAE,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AACpF,YAAY,MAAM,IAAI,GAAGC,KAAS,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AAC1F,YAAY,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;AACrC,YAAY,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;AACrC,SAAS;AACT,QAAQ,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC;AACtF;AACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;AACrC;AACA,YAAY,MAAM,OAAO,GAAGP,MAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAGA,MAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAGI,MAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AACrG,YAAY,MAAM,OAAO,GAAGF,MAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAGA,MAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAGG,MAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AACrG;AACA,YAAY,MAAM,IAAI,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;AAChD,YAAY,MAAM,IAAI,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;AAChD;AACA;AACA,YAAY,MAAM,IAAI,GAAGG,KAAS,CAAC,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;AACnF,YAAY,MAAM,GAAG,GAAGC,KAAS,CAAC,IAAI,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;AACxF,YAAY,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC;AACjC;AACA,YAAY,MAAM,OAAO,GAAGT,MAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAGI,MAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAGA,MAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AACrG,YAAY,MAAM,OAAO,GAAGF,MAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAGG,MAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAGA,MAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AACrG,YAAY,MAAM,IAAI,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC;AAC3D,YAAY,MAAM,IAAI,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC;AAC3D,YAAY,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACxB,YAAY,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACxB,YAAY,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACxB,YAAY,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACxB,YAAY,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACxB,YAAY,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACxB,YAAY,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAGK,GAAO,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE;AAC3E,YAAY,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACxB,YAAY,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACxB,YAAY,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACxB,YAAY,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACxB,YAAY,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACxB,YAAY,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACxB,YAAY,MAAM,GAAG,GAAGC,KAAS,CAAC,GAAG,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;AACtD,YAAY,EAAE,GAAGC,KAAS,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;AACpD,YAAY,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC;AACzB,SAAS;AACT;AACA,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAGF,GAAO,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE;AAC/E,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAGA,GAAO,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE;AAC/E,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAGA,GAAO,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE;AAC/E,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAGA,GAAO,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE;AAC/E,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAGA,GAAO,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE;AAC/E,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAGA,GAAO,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE;AAC/E,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAGA,GAAO,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE;AAC/E,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAGA,GAAO,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE;AAC/E,QAAQ,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AACjF,KAAK;AACL,IAAI,UAAU,GAAG;AACjB,QAAQ,KAAK,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;AACtC,KAAK;AACL,IAAI,OAAO,GAAG;AACd,QAAQ,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC3B,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACjE,KAAK;AACL,CAAC;AACM,MAAM,MAAM,SAAS,MAAM,CAAC;AACnC,IAAI,WAAW,GAAG;AAClB,QAAQ,KAAK,CAAC,EAAE,CAAC,CAAC;AAClB,QAAQ,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACnC,QAAQ,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACnC,QAAQ,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACnC,QAAQ,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACnC,QAAQ,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACnC,QAAQ,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACnC,QAAQ,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACnC,QAAQ,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACnC,QAAQ,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACnC,QAAQ,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACnC,QAAQ,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AACpC,QAAQ,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AACpC,QAAQ,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AACpC,QAAQ,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AACpC,QAAQ,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AACpC,QAAQ,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AACpC,KAAK;AACL,CAAC;AAYD;AACA,MAAM,OAAO,mBAAmB,WAAW,CAAC,IAAI,CAAC;AACjD,IAAI,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAClG,IAAI,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAClG,CAAC,CAAC,CAAC;AAsBI,MAAM,UAAU,SAAS,MAAM,CAAC;AACvC,IAAI,WAAW,GAAG;AAClB,QAAQ,KAAK,CAAC,EAAE,CAAC,CAAC;AAClB,QAAQ,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACjC,QAAQ,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACjC,QAAQ,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACjC,QAAQ,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACjC,QAAQ,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACjC,QAAQ,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACjC,QAAQ,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACjC,QAAQ,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACjC,QAAQ,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACjC,QAAQ,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACjC,QAAQ,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AAClC,QAAQ,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AAClC,QAAQ,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AAClC,QAAQ,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AAClC,QAAQ,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AAClC,QAAQ,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AAClC,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMG,QAAM,mBAAmB,YAAY,CAAC,MAAM,IAAI,MAAM,EAAE,CAAC,CAAC;AAGvE;AACO,MAAMC,QAAM,mBAAmB,YAAY,CAAC,MAAM,IAAI,MAAM,EAAE,CAAC,CAAC;AACvE;AACO,MAAM,MAAM,mBAAmB,YAAY,CAAC,MAAM,IAAI,MAAM,EAAE,CAAC,CAAC;AACvE;AACA;AACA;AACA;AACO,MAAMC,YAAU,mBAAmB,YAAY,CAAC,MAAM,IAAI,UAAU,EAAE,CAAC;;AChX9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA,MAAMC,KAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AACtB,MAAMC,KAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AACtB,MAAMC,KAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AACtB,MAAM,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AACtB,MAAM,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AAC1B,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;AAC5B,MAAM,OAAO,GAAG,EAAE,CAAC;AACnB,MAAM,SAAS,GAAG,EAAE,CAAC;AACrB,MAAM,UAAU,GAAG,EAAE,CAAC;AACtB,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,CAAC,GAAGD,KAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,KAAK,GAAG,EAAE,EAAE,KAAK,EAAE,EAAE;AAChE;AACA,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;AACtC,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAClC;AACA,IAAI,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;AAC3D;AACA,IAAI,IAAI,CAAC,GAAGD,KAAG,CAAC;AAChB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAChC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,IAAIC,KAAG,KAAK,CAAC,CAAC,IAAI,GAAG,IAAI,MAAM,CAAC,IAAI,KAAK,CAAC;AACzD,QAAQ,IAAI,CAAC,GAAGC,KAAG;AACnB,YAAY,CAAC,IAAID,KAAG,KAAK,CAACA,KAAG,oBAAoB,MAAM,CAAC,CAAC,CAAC,IAAIA,KAAG,CAAC,CAAC;AACnE,KAAK;AACL,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC;AACD,MAAM,KAAK,GAAG,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;AACtC,MAAM,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AAC7B,MAAM,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AAC7B;AACA,MAAM,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACxE,MAAM,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACxE;AACO,SAAS,OAAO,CAAC,CAAC,EAAE,MAAM,GAAG,EAAE,EAAE;AACxC,IAAI,MAAM,CAAC,GAAG,IAAI,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACrC;AACA,IAAI,KAAK,IAAI,KAAK,GAAG,EAAE,GAAG,MAAM,EAAE,KAAK,GAAG,EAAE,EAAE,KAAK,EAAE,EAAE;AACvD;AACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE;AACnC,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;AACxE,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE;AACxC,YAAY,MAAM,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;AACtC,YAAY,MAAM,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;AACtC,YAAY,MAAM,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;AAC/B,YAAY,MAAM,EAAE,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;AACnC,YAAY,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;AAClD,YAAY,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;AACtD,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE;AAC7C,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;AAC/B,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;AACnC,aAAa;AACb,SAAS;AACT;AACA,QAAQ,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,QAAQ,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;AACrC,YAAY,MAAM,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AACvC,YAAY,MAAM,EAAE,GAAG,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;AAChD,YAAY,MAAM,EAAE,GAAG,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;AAChD,YAAY,MAAM,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;AAClC,YAAY,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AACzB,YAAY,IAAI,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;AAC7B,YAAY,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;AACvB,YAAY,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;AAC3B,SAAS;AACT;AACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE;AACzC,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE;AACvC,gBAAgB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAChC,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE;AACvC,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;AAC/D,SAAS;AACT;AACA,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,KAAK,CAAC,CAAC;AACnC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,KAAK,CAAC,CAAC;AACnC,KAAK;AACL,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;AACb,CAAC;AACD;AACO,MAAM,MAAM,SAAS,IAAI,CAAC;AACjC;AACA,IAAI,WAAW,CAAC,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,GAAG,KAAK,EAAE,MAAM,GAAG,EAAE,EAAE;AAC7E,QAAQ,KAAK,EAAE,CAAC;AAChB,QAAQ,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;AACrB,QAAQ,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AACxB,QAAQ,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AAC9B,QAAQ,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AAC/B,QAAQ,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AAC/B,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACjC,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AAC7B,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AACnC,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AACnC,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AAC7B;AACA,QAAQ,OAAO,CAAC,SAAS,CAAC,CAAC;AAC3B;AACA;AACA,QAAQ,IAAI,EAAE,CAAC,GAAG,QAAQ,IAAI,QAAQ,GAAG,GAAG,CAAC;AAC7C,YAAY,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC;AACvE,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,CAAC;AACzC,QAAQ,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACvC,KAAK;AACL,IAAI,KAAK,GAAG;AACZ,QAAQ,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC;AACjC,KAAK;AACL,IAAI,MAAM,GAAG;AACb,QAAQ,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACjC,QAAQ,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACjC,QAAQ,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AACxB,QAAQ,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;AACrB,KAAK;AACL,IAAI,MAAM,CAAC,IAAI,EAAE;AACjB,QAAQ,OAAO,CAAC,IAAI,CAAC,CAAC;AACtB,QAAQ,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AAC7B,QAAQ,MAAM,CAAC,IAAI,CAAC,CAAC;AACrB,QAAQ,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;AACzC,QAAQ,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;AAChC,QAAQ,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG;AACtC,YAAY,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC;AAClE,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE;AACzC,gBAAgB,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;AACjD,YAAY,IAAI,IAAI,CAAC,GAAG,KAAK,QAAQ;AACrC,gBAAgB,IAAI,CAAC,MAAM,EAAE,CAAC;AAC9B,SAAS;AACT,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL,IAAI,MAAM,GAAG;AACb,QAAQ,IAAI,IAAI,CAAC,QAAQ;AACzB,YAAY,OAAO;AACnB,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC7B,QAAQ,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;AACtD;AACA,QAAQ,KAAK,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC;AAC7B,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,GAAG,KAAK,QAAQ,GAAG,CAAC;AACzD,YAAY,IAAI,CAAC,MAAM,EAAE,CAAC;AAC1B,QAAQ,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC;AACpC,QAAQ,IAAI,CAAC,MAAM,EAAE,CAAC;AACtB,KAAK;AACL,IAAI,SAAS,CAAC,GAAG,EAAE;AACnB,QAAQ,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AAC7B,QAAQ,MAAM,CAAC,GAAG,CAAC,CAAC;AACpB,QAAQ,IAAI,CAAC,MAAM,EAAE,CAAC;AACtB,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;AACrC,QAAQ,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;AAClC,QAAQ,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,GAAG;AACxD,YAAY,IAAI,IAAI,CAAC,MAAM,IAAI,QAAQ;AACvC,gBAAgB,IAAI,CAAC,MAAM,EAAE,CAAC;AAC9B,YAAY,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC;AACrE,YAAY,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;AAC9E,YAAY,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC;AAChC,YAAY,GAAG,IAAI,IAAI,CAAC;AACxB,SAAS;AACT,QAAQ,OAAO,GAAG,CAAC;AACnB,KAAK;AACL,IAAI,OAAO,CAAC,GAAG,EAAE;AACjB;AACA,QAAQ,IAAI,CAAC,IAAI,CAAC,SAAS;AAC3B,YAAY,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;AACrE,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;AACnC,KAAK;AACL,IAAI,GAAG,CAAC,KAAK,EAAE;AACf,QAAQ,OAAO,CAAC,KAAK,CAAC,CAAC;AACvB,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;AACnD,KAAK;AACL,IAAI,UAAU,CAAC,GAAG,EAAE;AACpB,QAAQ,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AAC3B,QAAQ,IAAI,IAAI,CAAC,QAAQ;AACzB,YAAY,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;AAC3D,QAAQ,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;AAC5B,QAAQ,IAAI,CAAC,OAAO,EAAE,CAAC;AACvB,QAAQ,OAAO,GAAG,CAAC;AACnB,KAAK;AACL,IAAI,MAAM,GAAG;AACb,QAAQ,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;AAC/D,KAAK;AACL,IAAI,OAAO,GAAG;AACd,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AAC9B,QAAQ,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC1B,KAAK;AACL,IAAI,UAAU,CAAC,EAAE,EAAE;AACnB,QAAQ,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC;AACxE,QAAQ,EAAE,KAAK,EAAE,GAAG,IAAI,MAAM,CAAC,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC;AAChF,QAAQ,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACrC,QAAQ,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;AAC1B,QAAQ,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAChC,QAAQ,EAAE,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;AACpC,QAAQ,EAAE,CAAC,MAAM,GAAG,MAAM,CAAC;AAC3B;AACA,QAAQ,EAAE,CAAC,MAAM,GAAG,MAAM,CAAC;AAC3B,QAAQ,EAAE,CAAC,SAAS,GAAG,SAAS,CAAC;AACjC,QAAQ,EAAE,CAAC,SAAS,GAAG,SAAS,CAAC;AACjC,QAAQ,EAAE,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;AACtC,QAAQ,OAAO,EAAE,CAAC;AAClB,KAAK;AACL,CAAC;AACD,MAAM,GAAG,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,SAAS,KAAK,YAAY,CAAC,MAAM,IAAI,MAAM,CAAC,QAAQ,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC;AAGzG;AACO,MAAME,UAAQ,mBAAmB,CAAC,MAAM,GAAG,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC;AAO1E;AACO,MAAM,UAAU,mBAAmB,CAAC,MAAM,GAAG,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC,GAAG;;AC/N3E;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACO,MAAM,MAAM,mBAAmB,UAAU,CAAC,IAAI,CAAC;AACtD,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AACxD,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;AACxD,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;AACxD,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;AACxD,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;AACxD,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;AACxD,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;AACxD,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;AACxD,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;AACxD,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACxD,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,C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AE,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACxD,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACxD,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACxD,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACxD,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACxD,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACxD,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACvD,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACvD,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACvD,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACvD,SAAS;AACT,QAAQ,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;AACvC,QAAQ,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;AACvC,QAAQ,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;AACvC,QAAQ,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;AACvC,QAAQ,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;AACvC,QAAQ,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;AACvC,QAAQ,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;AACvC,QAAQ,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;AACvC,QAAQ,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;AACvC,QAAQ,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;AACvC,QAAQ,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;AACxC,QAAQ,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;AACxC,QAAQ,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;AACxC,QAAQ,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;AACxC,QAAQ,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAA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AAI,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;AACtE,IAAI,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;AACtE,IAAI,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;AACxE,IAAI,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;AAC1E,IAAI,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;AAC1E,IAAI,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;AAC1E,IAAI,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;AAC3E,IAAI,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI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AC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;AAC3C,QAAQ,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;AAC3C,QAAQ,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;AAC3C,QAAQ,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;AAC3C,QAAQ,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;AAC3C,QAAQ,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;AAC3C,QAAQ,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;AAC3C,QAAQ,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;AAC3C,QAAQ,GAAG,CAAC,MAAM,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;AAC5C,QAAQ,GAAG,CAAC,MAAM,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;AAC5C,QAAQ,GAAG,CAAC,MAAM,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;AAC5C,QAAQ,GAAG,CAAC,MAAM,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;AAC5C,QAAQ,GAAG,CAAC,MAAM,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;AAC5C,QAAQ,GAAG,CAAC,MAAM,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC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,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,QAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,QAAM,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,QAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,QAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,QAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,QAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,QAAM,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,QAAM,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,QAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,QAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,QAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,QAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CA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ExB,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAA;IACxB,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAA;IACxB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAA;IACxB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAA;;IAExB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAA;IACxB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAA;IACxB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAA;IACxB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAA;;IAExB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAA;IACxB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAA;IACxB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAA;IACxB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAA;;IAExB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAA;IACxB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAA;IACxB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAA;IACxB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAA;;IAExB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAA;IACxB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAA;IACxB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAA;IACxB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAA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CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,QAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,QAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,QAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,QAAM,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,QAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,QAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,QAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,QAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,QAAM,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,QAAM,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,QAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,QAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,QAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,QAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,QAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,CAAA;;AAEtF,IAAE,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE;QACtE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG;AAC7E,QAAM,GAAG,GAAG,GAAG,EAAE,CAAC,CAAA;;AAElB,IAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE;AAClC,MAAI,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,CAAA;MAChB,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAA;AAC3B,MAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAA;MACf,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAA;AAC3B,MAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAA;MACf,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAA;AAC9B,MAAI,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,CAAC,CAAA;MAChB,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAA;;AAE7B,MAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAA;MACf,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAA;AAC3B,MAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAA;MACf,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAA;AAC5B,MAAI,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,CAAC,CAAA;MAChB,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAA;AAC7B,MAAI,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,CAAA;MAChB,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAA;;AAE7B,MAAI,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,CAAC,CAAA;MAChB,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAA;AAC5B,MAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAA;MACjB,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAA;AAC3B,MAAI,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,CAAA;MAChB,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAA;AAC7B,MAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAA;MACf,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAA;;AAE9B,MAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAA;MACjB,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAA;AAC3B,MAAI,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,CAAA;MAChB,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAA;AAC3B,MAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAA;MACf,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAA;AAC9B,MAAI,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,CAAC,CAAA;MAChB,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAA;;AAE9B,MAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAA;MACf,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAA;AAC3B,MAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAA;MACf,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAA;AAC3B,MAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAA;MACf,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAA;AAC7B,MAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAA;MACf,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAA;;AAE7B,MAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAA;MACf,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAA;AAC3B,MAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAA;MACf,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAA;AAC3B,MAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAA;MACf,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAA;AAC7B,MAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAA;MACf,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAA;;AAE7B,MAAI,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,CAAC,CAAA;MAChB,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAA;AAC5B,MAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAA;MACjB,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAA;AAC3B,MAAI,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,CAAA;MAChB,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAA;AAC7B,MAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAA;MACf,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAA;;AAE9B,MAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAA;MACjB,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAA;AAC5B,MAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAA;MACjB,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAA;AAC5B,MAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAA;MACjB,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAA;AAC9B,MAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAA;MACjB,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAA;AAC9B,KAAA;;IAEE,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAA;IACxB,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAA;IACxB,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAA;IACxB,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAA;;IAExB,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAA;IACxB,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAA;IACxB,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAA;IACxB,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAA;;IAExB,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,IAAI,CAAA;IACzB,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,IAAI,CAAA;IACzB,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,KAAK,EAAE,GAAG,IAAI,CAAA;IACzB,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,KAAK,EAAE,GAAG,IAAI,CAAA;;IAEzB,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,IAAI,CAAA;IACzB,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,IAAI,CAAA;IACzB,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,KAAK,EAAE,GAAG,IAAI,CAAA;IACzB,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,KAAK,EAAE,GAAG,IAAI,CAAA;;IAEzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAA;IACxB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAA;IACxB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAA;IACxB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAA;;IAExB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAA;IACxB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAA;IACxB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAA;IACxB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAA;;IAExB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAA;IACxB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAA;IACxB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAA;IACxB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAA;;IAExB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAA;IACxB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAA;IACxB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAA;IACxB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAA;AAC1B,GAAA;;EAEA,SAAS,mBAAmB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;IACxC,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;AAC3B,GAAA;;EAEA,SAAS,oBAAoB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;IACzC,aAAa,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;AAC5B,GAAA;;AAEA,EAAA,IAAI,KAAK,GAAG,IAAI,UAAU,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,CAAA;AACrG;;AAEA,EAAA,SAAS,yBAAyB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AACxD,IAAE,IAAI,CAAC,GAAG,IAAI,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,IAAI,UAAU,CAAC,EAAE,CAAC,CAAA;IAClD,IAAI,CAAC,EAAE,CAAC,CAAA;AACV,IAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;IACjC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;AACrC,IAAE,OAAO,CAAC,IAAI,EAAE,EAAE;MACd,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAA;AACpC,MAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;MACrD,CAAC,GAAG,CAAC,CAAA;MACL,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;AAC7B,QAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAA;AAC/B,QAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAA;QACf,CAAC,MAAM,CAAC,CAAA;AACd,OAAA;MACI,CAAC,IAAI,EAAE,CAAA;MACP,IAAI,IAAI,EAAE,CAAA;MACV,IAAI,IAAI,EAAE,CAAA;AACd,KAAA;AACA,IAAE,IAAI,CAAC,GAAG,CAAC,EAAE;MACT,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAA;AACpC,MAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;AACxD,KAAA;AACA,IAAE,OAAO,CAAC,CAAA;AACV,GAAA;;EAEA,SAAS,qBAAqB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AAC7C,IAAE,IAAI,CAAC,GAAG,IAAI,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,IAAI,UAAU,CAAC,EAAE,CAAC,CAAA;IAClD,IAAI,CAAC,EAAE,CAAC,CAAA;AACV,IAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;IACjC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;AACrC,IAAE,OAAO,CAAC,IAAI,EAAE,EAAE;MACd,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAA;MAChC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;MACzC,CAAC,GAAG,CAAC,CAAA;MACL,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;AAC7B,QAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAA;AAC/B,QAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAA;QACf,CAAC,MAAM,CAAC,CAAA;AACd,OAAA;MACI,CAAC,IAAI,EAAE,CAAA;MACP,IAAI,IAAI,EAAE,CAAA;AACd,KAAA;AACA,IAAE,IAAI,CAAC,GAAG,CAAC,EAAE;MACT,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAA;MAChC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;AAC5C,KAAA;AACA,IAAE,OAAO,CAAC,CAAA;AACV,GAAA;;EAEA,SAAS,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AACrC,IAAE,IAAI,CAAC,GAAG,IAAI,UAAU,CAAC,EAAE,CAAC,CAAA;IAC1B,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAA;AACnC,IAAE,IAAI,EAAE,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC,CAAA;IAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAA;AAC7C,IAAE,OAAO,qBAAqB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;AAC7C,GAAA;;AAEA,EAAA,SAAS,iBAAiB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AAChD,IAAE,IAAI,CAAC,GAAG,IAAI,UAAU,CAAC,EAAE,CAAC,CAAA;IAC1B,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAA;AACnC,IAAE,IAAI,EAAE,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC,CAAA;IAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAA;AAC7C,IAAE,OAAO,yBAAyB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;AACxD,GAAA;;AAEA;AACA;AACA;AACA;;AAEA,EAAA,IAAI,QAAQ,GAAG,SAAS,GAAG,EAAE;IAC3B,IAAI,CAAC,MAAM,GAAG,IAAI,UAAU,CAAC,EAAE,CAAC,CAAA;IAChC,IAAI,CAAC,CAAC,GAAG,IAAI,WAAW,CAAC,EAAE,CAAC,CAAA;IAC5B,IAAI,CAAC,CAAC,GAAG,IAAI,WAAW,CAAC,EAAE,CAAC,CAAA;IAC5B,IAAI,CAAC,GAAG,GAAG,IAAI,WAAW,CAAC,CAAC,CAAC,CAAA;AAC/B,IAAE,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAA;AACnB,IAAE,IAAI,CAAC,GAAG,GAAG,CAAC,CAAA;;AAEd,IAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAA;;AAEpC,IAAE,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,yBAAyB,MAAM,CAAA;AAC9F,IAAE,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,IAAI,MAAM,CAAA;AAC9F,IAAE,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,IAAI,MAAM,CAAA;AAC9F,IAAE,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,IAAI,MAAM,CAAA;AAC9F,IAAE,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,IAAI,MAAM,CAAA;AAC9F,IAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,MAAM,CAAC,KAAK,MAAM,CAAA;AACpC,IAAE,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,IAAI,MAAM,CAAA;AAC9F,IAAE,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,IAAI,MAAM,CAAA;AAC9F,IAAE,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,IAAI,MAAM,CAAA;AAC9F,IAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,MAAM,CAAC,KAAK,MAAM,CAAA;;IAElC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,KAAK,CAAC,CAAA;IACpD,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,KAAK,CAAC,CAAA;IACpD,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,KAAK,CAAC,CAAA;IACpD,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,KAAK,CAAC,CAAA;IACpD,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,KAAK,CAAC,CAAA;IACpD,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,KAAK,CAAC,CAAA;IACpD,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,KAAK,CAAC,CAAA;IACpD,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,KAAK,CAAC,CAAA;GACrD,CAAA;;EAED,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE;AACrD,IAAE,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAA;AACtC,IAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAA;AACvC,IAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAA;;IAE1C,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,QAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,QAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,QAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,QAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,QAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,QAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,QAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,QAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,QAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;;IAElB,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,QAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,QAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,QAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,QAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,QAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,QAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,QAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,QAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,QAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;;AAEpB,IAAE,OAAO,KAAK,IAAI,EAAE,EAAE;AACtB,MAAI,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,yBAAyB,MAAM,CAAA;AAChG,MAAI,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,IAAI,MAAM,CAAA;AAChG,MAAI,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,IAAI,MAAM,CAAA;AAChG,MAAI,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,IAAI,MAAM,CAAA;AAChG,MAAI,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,IAAI,MAAM,CAAA;AAChG,MAAI,EAAE,IAAI,EAAE,EAAE,MAAM,CAAC,KAAK,MAAM,CAAA;AAChC,MAAI,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,IAAI,MAAM,CAAA;AAChG,MAAI,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,IAAI,MAAM,CAAA;AAChG,MAAI,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,IAAI,MAAM,CAAA;AAChG,MAAI,EAAE,IAAI,EAAE,EAAE,KAAK,CAAC,KAAK,KAAK,CAAA;;MAE1B,CAAC,GAAG,CAAC,CAAA;;MAEL,EAAE,GAAG,CAAC,CAAA;AACV,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;AACvB,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;AACvB,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;AACvB,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;MACnB,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,MAAM,CAAA;AACjC,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;AACvB,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;AACvB,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;AACvB,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;AACvB,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;MACnB,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,MAAM,CAAA;;MAE9B,EAAE,GAAG,CAAC,CAAA;AACV,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;AACvB,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;AACvB,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;MACnB,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,MAAM,CAAA;AACjC,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;AACvB,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;AACvB,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;AACvB,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;AACvB,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;MACnB,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,MAAM,CAAA;;MAE9B,EAAE,GAAG,CAAC,CAAA;AACV,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;AACvB,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;MACnB,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,MAAM,CAAA;AACjC,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;AACvB,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;AACvB,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;AACvB,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;AACvB,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;MACnB,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,MAAM,CAAA;;MAE9B,EAAE,GAAG,CAAC,CAAA;AACV,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;MACnB,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,MAAM,CAAA;AACjC,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;AACvB,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;AACvB,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;AACvB,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;AACvB,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;MACnB,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,MAAM,CAAA;;MAE9B,EAAE,GAAG,CAAC,CAAA;AACV,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;MACb,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,MAAM,CAAA;AACjC,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;AACvB,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;AACvB,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;AACvB,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;AACvB,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;MACnB,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,MAAM,CAAA;;MAE9B,EAAE,GAAG,CAAC,CAAA;AACV,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;MACb,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,MAAM,CAAA;AACjC,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;AACvB,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;AACvB,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;AACvB,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;MACnB,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,MAAM,CAAA;;MAE9B,EAAE,GAAG,CAAC,CAAA;AACV,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;MACb,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,MAAM,CAAA;AACjC,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;AACvB,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;AACvB,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;MACnB,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,MAAM,CAAA;;MAE9B,EAAE,GAAG,CAAC,CAAA;AACV,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;MACb,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,MAAM,CAAA;AACjC,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;AACvB,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;MACnB,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,MAAM,CAAA;;MAE9B,EAAE,GAAG,CAAC,CAAA;AACV,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;MACb,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,MAAM,CAAA;AACjC,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;MACnB,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,MAAM,CAAA;;MAE9B,EAAE,GAAG,CAAC,CAAA;AACV,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;MACb,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,MAAM,CAAA;AACjC,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;MACb,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,MAAM,CAAA;;MAE9B,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;AAC5B,MAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAA;AACpB,MAAI,EAAE,GAAG,CAAC,GAAG,MAAM,CAAA;AACnB,MAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAA;MACd,EAAE,IAAI,CAAC,CAAA;;MAEP,EAAE,GAAG,EAAE,CAAA;MACP,EAAE,GAAG,EAAE,CAAA;MACP,EAAE,GAAG,EAAE,CAAA;MACP,EAAE,GAAG,EAAE,CAAA;MACP,EAAE,GAAG,EAAE,CAAA;MACP,EAAE,GAAG,EAAE,CAAA;MACP,EAAE,GAAG,EAAE,CAAA;MACP,EAAE,GAAG,EAAE,CAAA;MACP,EAAE,GAAG,EAAE,CAAA;MACP,EAAE,GAAG,EAAE,CAAA;;MAEP,IAAI,IAAI,EAAE,CAAA;MACV,KAAK,IAAI,EAAE,CAAA;AACf,KAAA;AACA,IAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAA;AAChB,IAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAA;AAChB,IAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAA;AAChB,IAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAA;AAChB,IAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAA;AAChB,IAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAA;AAChB,IAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAA;AAChB,IAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAA;AAChB,IAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAA;AAChB,IAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAA;GACf,CAAA;;EAED,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,GAAG,EAAE,MAAM,EAAE;AAClD,IAAE,IAAI,CAAC,GAAG,IAAI,WAAW,CAAC,EAAE,CAAC,CAAA;AAC7B,IAAE,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAA;;AAEnB,IAAE,IAAI,IAAI,CAAC,QAAQ,EAAE;AACrB,MAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAA;MACjB,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAA;AACxB,MAAI,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;AAC1C,MAAI,IAAI,CAAC,GAAG,GAAG,CAAC,CAAA;MACZ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,CAAA;AACnC,KAAA;;IAEE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAA;AACtB,IAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAA;IACnB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;AAC3B,MAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAA;MACd,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAA;AACxB,MAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAA;AACvB,KAAA;IACE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAA;IACpB,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAA;AACtB,IAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAA;AACrB,IAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAA;IACd,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAA;AACtB,IAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAA;AACrB,IAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAA;;AAEhB,IAAE,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;AACtB,IAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAA;AACjB,IAAE,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAA;IACd,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;AAC3B,MAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;AACxB,MAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAA;AACnB,MAAI,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAA;AAClB,KAAA;IACE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAA;;AAEnB,IAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;AACpB,IAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAA;IACrC,IAAI,GAAG,CAAC,IAAI,CAAA;AACd,IAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA;;IAE9D,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,wBAAwB,MAAM,CAAA;AACnF,IAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,wBAAwB,MAAM,CAAA;AACnF,IAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,wBAAwB,MAAM,CAAA;AACnF,IAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,wBAAwB,MAAM,CAAA;AACnF,IAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,MAAM,CAAA;AACnF,IAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,wBAAwB,MAAM,CAAA;AACnF,IAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,wBAAwB,MAAM,CAAA;AACnF,IAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,wBAAwB,MAAM,CAAA;;AAEnF,IAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;IAC3B,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,MAAM,CAAA;IACtB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;MACtB,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,CAAA;MACtD,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,MAAM,CAAA;AAC1B,KAAA;;AAEA,IAAE,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAA;AAC3C,IAAE,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAA;AAC3C,IAAE,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAA;AAC3C,IAAE,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAA;AAC3C,IAAE,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAA;AAC3C,IAAE,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAA;AAC3C,IAAE,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAA;AAC3C,IAAE,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAA;AAC3C,IAAE,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAA;AAC3C,IAAE,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAA;AAC3C,IAAE,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAA;AAC3C,IAAE,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAA;AAC3C,IAAE,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAA;AAC3C,IAAE,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAA;AAC3C,IAAE,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAA;AAC3C,IAAE,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAA;GAC1C,CAAA;;EAED,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE;IACnD,IAAI,CAAC,EAAE,IAAI,CAAA;;AAEb,IAAE,IAAI,IAAI,CAAC,QAAQ,EAAE;AACrB,MAAI,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAA;MAC3B,IAAI,IAAI,GAAG,KAAK;QACd,IAAI,GAAG,KAAK,CAAA;MACd,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE;AAC7B,QAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;MAC5C,KAAK,IAAI,IAAI,CAAA;MACb,IAAI,IAAI,IAAI,CAAA;AAChB,MAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAA;AACzB,MAAI,IAAI,IAAI,CAAC,QAAQ,GAAG,EAAE;QACpB,OAAA;MACF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,CAAA;AACnC,MAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAA;AACrB,KAAA;;AAEA,IAAE,IAAI,KAAK,IAAI,EAAE,EAAE;AACnB,MAAI,IAAI,GAAG,KAAK,IAAI,KAAK,GAAG,EAAE,CAAC,CAAA;MAC3B,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAA;MAC1B,IAAI,IAAI,IAAI,CAAA;MACZ,KAAK,IAAI,IAAI,CAAA;AACjB,KAAA;;IAEE,IAAI,KAAK,EAAE;MACT,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE;AAC9B,QAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;AAChD,MAAI,IAAI,CAAC,QAAQ,IAAI,KAAK,CAAA;AAC1B,KAAA;GACC,CAAA;;AAED,EAAA,SAAS,kBAAkB,CAAC,GAAG,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE;AACxD,IAAE,IAAI,CAAC,GAAG,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAA;IACvB,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAA;AACtB,IAAE,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,CAAA;AACvB,IAAE,OAAO,CAAC,CAAA;AACV,GAAA;;AAEA,EAAA,SAAS,yBAAyB,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE;AAC3D,IAAE,IAAI,CAAC,GAAG,IAAI,UAAU,CAAC,EAAE,CAAC,CAAA;AAC5B,IAAE,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;IAClC,OAAO,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;AACrC,GAAA;;EAEA,SAAS,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AACrC,IAAE,IAAI,CAAC,CAAA;AACP,IAAE,IAAI,CAAC,GAAG,EAAE,EAAE,OAAO,CAAC,CAAC,CAAA;AACvB,IAAE,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;AAClC,IAAE,kBAAkB,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAA;AAC7C,IAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;AACnC,IAAE,OAAO,CAAC,CAAA;AACV,GAAA;;EAEA,SAAS,qBAAqB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AAC1C,IAAE,IAAI,CAAC,CAAA;AACP,IAAE,IAAI,CAAC,GAAG,IAAI,UAAU,CAAC,EAAE,CAAC,CAAA;AAC5B,IAAE,IAAI,CAAC,GAAG,EAAE,EAAE,OAAO,CAAC,CAAC,CAAA;IACrB,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;IACzB,IAAI,yBAAyB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,CAAC,CAAA;AACtE,IAAE,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;AAClC,IAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;AACnC,IAAE,OAAO,CAAC,CAAA;AACV,GAAA;;AAEA,EAAA,SAAS,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE;AACxB,IAAE,IAAI,CAAC,CAAA;IACL,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;AACxC,GAAA;;EAEA,SAAS,QAAQ,CAAC,CAAC,EAAE;AACrB,IAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAA;IACf,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;MACvB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;MACpB,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAA;MACzB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;AACxB,KAAA;AACA,IAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA;AAC1B,GAAA;;AAEA,EAAA,SAAS,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACzB,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA;AACnB,IAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;AAC/B,MAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;AACzB,MAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAA;AACb,MAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAA;AACb,KAAA;AACA,GAAA;;AAEA,EAAA,SAAS,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE;AACzB,IAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA;IACX,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,CAAA;IACtB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;IACpC,QAAQ,CAAC,CAAC,CAAC,CAAA;IACX,QAAQ,CAAC,CAAC,CAAC,CAAA;IACX,QAAQ,CAAC,CAAC,CAAC,CAAA;IACX,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;MACtB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAA;MACpB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;QACvB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAA;AAC/C,QAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAA;AACtB,OAAA;MACI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAA;MAC1C,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,CAAA;AACvB,MAAI,CAAC,CAAC,EAAE,CAAC,IAAI,MAAM,CAAA;MACf,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA;AACvB,KAAA;IACE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;AAC3B,MAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAA;AACxB,MAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAA;AACtB,KAAA;AACA,GAAA;;AAEA,EAAA,SAAS,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE;AACxB,IAAE,IAAI,CAAC,GAAG,IAAI,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,IAAI,UAAU,CAAC,EAAE,CAAC,CAAA;AACpD,IAAE,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;AACjB,IAAE,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;IACf,OAAO,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;AACrC,GAAA;;EAEA,SAAS,QAAQ,CAAC,CAAC,EAAE;AACrB,IAAE,IAAI,CAAC,GAAG,IAAI,UAAU,CAAC,EAAE,CAAC,CAAA;AAC5B,IAAE,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;AACjB,IAAE,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;AACjB,GAAA;;AAEA,EAAA,SAAS,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE;AAC3B,IAAE,IAAI,CAAC,CAAA;AACP,IAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAA;AAC1D,IAAE,CAAC,CAAC,EAAE,CAAC,IAAI,MAAM,CAAA;AACjB,GAAA;;AAEA,EAAA,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;AACjD,GAAA;;AAEA,EAAA,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;AACjD,GAAA;;AAEA,EAAA,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IAClB,IAAI,CAAC,EAAE,CAAC;AACV,OAAK,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;AAC1E,OAAK,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC;AAC1E,MAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC;MACtE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC;AACjE,MAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AACb,MAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AACb,MAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AACb,MAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AACb,MAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AACb,MAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AACb,MAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AACb,MAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AACb,MAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AACb,MAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AACb,MAAI,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC;AACf,MAAI,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC;AACf,MAAI,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC;AACf,MAAI,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC;AACf,MAAI,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC;AACf,MAAI,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;;AAEf,IAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;AACV,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;AACV,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;AACV,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;AACV,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;AACV,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;AACV,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;AACV,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;AACV,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;AACV,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;AACV,IAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAA;AACd,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;AACX,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;AACX,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;AACX,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;AACX,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;AACX,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;AACX,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACf,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;AAChB,IAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAA;;AAEhB,IAAE,EAAE,KAAK,EAAE,GAAG,GAAG,CAAA;AACjB,IAAE,EAAE,KAAK,EAAE,GAAG,GAAG,CAAA;AACjB,IAAE,EAAE,KAAK,EAAE,GAAG,GAAG,CAAA;AACjB,IAAE,EAAE,KAAK,EAAE,GAAG,GAAG,CAAA;AACjB,IAAE,EAAE,KAAK,EAAE,GAAG,GAAG,CAAA;AACjB,IAAE,EAAE,KAAK,EAAE,GAAG,GAAG,CAAA;AACjB,IAAE,EAAE,KAAK,EAAE,GAAG,GAAG,CAAA;AACjB,IAAE,EAAE,KAAK,EAAE,GAAG,GAAG,CAAA;AACjB,IAAE,EAAE,KAAK,EAAE,GAAG,GAAG,CAAA;AACjB,IAAE,EAAE,KAAK,EAAE,GAAG,GAAG,CAAA;AACjB,IAAE,GAAG,IAAI,EAAE,GAAG,GAAG,CAAA;AACjB,IAAE,GAAG,IAAI,EAAE,GAAG,GAAG,CAAA;AACjB,IAAE,GAAG,IAAI,EAAE,GAAG,GAAG,CAAA;AACjB,IAAE,GAAG,IAAI,EAAE,GAAG,GAAG,CAAA;AACjB,IAAE,GAAG,IAAI,EAAE,GAAG,GAAG,CAAA;AACjB;;AAEA;IACE,CAAC,GAAG,CAAC,CAAA;IACL,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;IACnE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;IACnE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;IACnE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;IACnE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;IACnE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;IACnE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;IACnE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;IACnE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;IACnE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;IACnE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;IACnE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;IACnE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;IACnE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;IACnE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;IACnE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;IACnE,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA;;AAExB;IACE,CAAC,GAAG,CAAC,CAAA;IACL,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;IACnE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;IACnE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;IACnE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;IACnE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;IACnE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;IACnE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;IACnE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;IACnE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;IACnE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;IACnE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;IACnE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;IACnE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;IACnE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;IACnE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;IACnE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,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EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC;AACzD,YAAY,IAAI,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AACpC,YAAY,IAAI,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AACpC,YAAY,IAAI,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AACpC,YAAY,IAAI,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AACpC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAC/B,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAC/B,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAA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C;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAC/B,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAC/B,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAC/B,YAAY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IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,GAAG;AACP,CAAC;;AClgED;AACO,MAAMA,UAAQ,GAAG;AACxB,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,SAAS;AACb,IAAI,MAAM;AACV,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,MAAM;AACV,IAAI,SAAS;AACb,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,MAAM;AACV,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,MAAM;AACV,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,UAAU;AACd,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,UAAU;AACd,IAAI,MAAM;AACV,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,MAAM;AACV,IAAI,UAAU;AACd,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,MAAM;AACV,IAAI,UAAU;AACd,IAAI,MAAM;AACV,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,MAAM;AACV,IAAI,UAAU;AACd,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,MAAM;AACV,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,MAAM;AACV,IAAI,UAAU;AACd,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,MAAM;AACV,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,MAAM;AACV,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,MAAM;AACV,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,MAAM;AACV,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,MAAM;AACV,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,MAAM;AACV,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,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UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,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AU;AACd,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,UA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X,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,QAAQ;AACZ,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,SAAS;AACb,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,SAAS;AACb,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,QAAQ;AACZ,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AAC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V,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,SAAS;AACb,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,QAAQ;AACZ,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AAC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T,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AAC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Z,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,QAAQ;AAC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T,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AAC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ACb,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,aAAa;AACjB,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,WAAW;AACf,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,WAAW;AACf,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,WAAW;AACf,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,WAAW;AACf,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,WAAW;AACf,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,WAAW;AACf,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;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,UAAU;AACd,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI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,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI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;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO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AQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,MAAM;AACV,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,MAAM;AACV,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,SAAS;AACb,IAAI,OA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ACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,QAAQ;AACZ,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,QAAQ;AACZ,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,QAAQ;AACZ,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,QAAQ;AACZ,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,QAAQ;AACZ,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,QAAQ;AACZ,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,SAAS;AACb,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,SAAS;AACb,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,SAAS;AACb,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,QAAQ;AACZ,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;A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;AACX,IAAI,MAAM;AACV,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,QAAQ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;AACZ,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,QAAQ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"}